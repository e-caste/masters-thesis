WEBVTT

00:00:25.000 --> 00:00:30.000
All right.
Good morning.

00:00:30.000 --> 00:00:35.000
Let's get started.
So the last lecture we showed

00:00:35.000 --> 00:00:40.000
you how to go digital.
The fact that going digital had

00:00:40.000 --> 00:00:46.000
some key benefits for us.
And what we'll do today is go

00:00:46.000 --> 00:00:50.000
inside the digital gate.

00:01:06.000 --> 00:01:11.000
Let's do a quick review.
We began life by observing

00:01:11.000 --> 00:01:14.000
nature.
We said those Maxwell's

00:01:14.000 --> 00:01:19.000
equations are tough.
Let's simplify our lives by

00:01:19.000 --> 00:01:25.000
discretizing or lumping matter.
So we got the lumped circuit

00:01:25.000 --> 00:01:30.000
abstraction.
Then we had this noise problem

00:01:30.000 --> 00:01:35.000
here.
In order to be able to handle

00:01:35.000 --> 00:01:39.000
that let's do some more
discretization,

00:01:39.000 --> 00:01:43.000
some more lumping.
So we said let's discretize

00:01:43.000 --> 00:01:49.000
values and deal with two levels,
a high and a low.

00:01:49.000 --> 00:01:53.000
That's where the binary voltage
levels come up,

00:01:53.000 --> 00:01:59.000
a high level and a low level.
And then we said that in

00:01:59.000 --> 00:02:03.000
discretizing it we have to make
some assumptions.

00:02:03.000 --> 00:02:06.000
We have to impose some
constraints on ourselves.

00:02:06.000 --> 00:02:10.000
Just as with the lumped matter
discipline, we imposed a couple

00:02:10.000 --> 00:02:14.000
of constraints in going from the
continuous matter world to a

00:02:14.000 --> 00:02:18.000
lumped matter world.
Similarly, we have to impose

00:02:18.000 --> 00:02:22.000
some discipline on ourselves,
some constraints on ourselves

00:02:22.000 --> 00:02:26.000
in going from the continuous
value regime to the digital

00:02:26.000 --> 00:02:29.000
value regime.
And that discipline is called

00:02:29.000 --> 00:02:32.000
the static discipline.

00:02:38.000 --> 00:02:44.000
And what the static discipline
says is that if you have senders

00:02:44.000 --> 00:02:50.000
and receivers in a digital
system then they all need to

00:02:50.000 --> 00:02:55.000
adhere to some standard.
If I was a sender I had to

00:02:55.000 --> 00:03:00.000
adhere to some tough output
standards.

00:03:00.000 --> 00:03:05.000
I had to be sure to shift
values that exceeded some high

00:03:05.000 --> 00:03:10.000
voltage threshold.
And if I was sending a low

00:03:10.000 --> 00:03:16.000
value I had to make sure my
values were lower than some

00:03:16.000 --> 00:03:22.000
output low voltage threshold.
Similarly, if I was the

00:03:22.000 --> 00:03:28.000
receiver then I had to guarantee
to recognize as a one all

00:03:28.000 --> 00:03:36.000
voltages that where above some
input high voltage threshold.

00:03:36.000 --> 00:03:40.000
And similarly I had to
guarantee to recognize as a zero

00:03:40.000 --> 00:03:46.000
voltages that were below some
input low voltage threshold.

00:03:46.000 --> 00:03:51.000
So provided senders and
receivers in a system adhere to

00:03:51.000 --> 00:03:55.000
these voltage levels,
to this discipline then they

00:03:55.000 --> 00:04:02.000
would all very comfortably work
correctly in a digital system.

00:04:02.000 --> 00:04:06.000
Then we also said that once you
deal with such values,

00:04:06.000 --> 00:04:10.000
one you deal with digital
values we can now postulate a

00:04:10.000 --> 00:04:15.000
bunch of digital elements that
process these values in a manner

00:04:15.000 --> 00:04:20.000
very reminiscent of our analog
circuits where we get analog

00:04:20.000 --> 00:04:23.000
signals.
And you've already learned how

00:04:23.000 --> 00:04:27.000
to process analog signals.
You've learned about resistor

00:04:27.000 --> 00:04:33.000
dividers and so on and so forth.
You feed in an analog signal

00:04:33.000 --> 00:04:37.000
and you get an output analog
signal as well.

00:04:37.000 --> 00:04:41.000
Now, here the resistor in the
analog domain,

00:04:41.000 --> 00:04:46.000
elements like resistors and
voltage sources were the symbols

00:04:46.000 --> 00:04:51.000
that you dealt with.
Here, in the digital domain,

00:04:51.000 --> 00:04:58.000
the primitive elements that we
will be using are called gates.

00:04:58.000 --> 00:05:02.000
As one example,
this is called the NAND gate.

00:05:02.000 --> 00:05:08.000
So we looked at the AND gate in
the previous lecture.

00:05:08.000 --> 00:05:13.000
This is an example of another
gate called the NAND gate.

00:05:13.000 --> 00:05:18.000
The NAND gate has the following
truth table.

00:05:18.000 --> 00:05:22.000
Our two inputs A and B and this
output C.

00:05:22.000 --> 00:05:26.000
And the NAND gate works as
follows.

00:05:26.000 --> 00:05:31.000
The output --
In English I can describe its

00:05:31.000 --> 00:05:37.000
properties as the output is a
high at all times when at least

00:05:37.000 --> 00:05:40.000
one of these inputs is a low
value.

00:05:40.000 --> 00:05:45.000
So it's high whenever at least
one input is a low.

00:05:45.000 --> 00:05:48.000
So it's high here.
It's high here.

00:05:48.000 --> 00:05:51.000
Oops, it's high here,
high here.

00:05:51.000 --> 00:05:55.000
And when, oops.
And when both inputs are a high

00:05:55.000 --> 00:06:00.000
the output is a low.
This is a NAND gate.

00:06:00.000 --> 00:06:05.000
Notice that these are exactly
complimentary to the AND gate.

00:06:05.000 --> 00:06:08.000
The AND gate outputs were
0-0-0-1.

00:06:08.000 --> 00:06:11.000
And the AND gate symbol looked
like this.

00:06:11.000 --> 00:06:15.000
In general, notice that this
little bubble here,

00:06:15.000 --> 00:06:20.000
it's called a bubble.
That bubble implies a negation,

00:06:20.000 --> 00:06:23.000
an inversion.
So we take the AND gate,

00:06:23.000 --> 00:06:28.000
invert the output and negate
the output and you get the NAND

00:06:28.000 --> 00:06:32.000
gate.
So these elements are

00:06:32.000 --> 00:06:37.000
combinational gates.
And in combinational gates they

00:06:37.000 --> 00:06:42.000
adhere to two properties.
One is that they must satisfy

00:06:42.000 --> 00:06:45.000
the static discipline.

00:06:50.000 --> 00:06:52.000
All the systems,
all the elements in our

00:06:52.000 --> 00:06:56.000
repertoire in the digital domain
need to satisfy the static

00:06:56.000 --> 00:06:58.000
discipline.
And the properties of a

00:06:58.000 --> 00:07:03.000
combinational gate are that its
outputs are a function of inputs

00:07:03.000 --> 00:07:04.000
alone.

00:07:13.000 --> 00:07:16.000
In other words,
it doesn't store any state or

00:07:16.000 --> 00:07:18.000
doesn't store any history inside
it.

00:07:18.000 --> 00:07:23.000
You can figure out its output
just by looking at the inputs at

00:07:23.000 --> 00:07:26.000
that instant.
Think of it as a completely

00:07:26.000 --> 00:07:30.000
transparent entity where its
output reflects some function of

00:07:30.000 --> 00:07:34.000
the inputs at every instant of
time.

00:07:44.000 --> 00:07:48.000
So I'll show you an example of
a digital circuit.

00:07:53.000 --> 00:07:56.000
So much as I could interconnect
resistors and voltage sources

00:07:56.000 --> 00:07:58.000
and current sources to build
analog circuits,

00:07:58.000 --> 00:08:01.000
I can now build digital
circuits using primitive

00:08:01.000 --> 00:08:04.000
elements such as these.
So, for example,

00:08:04.000 --> 00:08:11.000
I could build a simple circuit
that looked like this,

00:08:11.000 --> 00:08:16.000
two inputs A and B here,
I get an output.

00:08:16.000 --> 00:08:23.000
And I feed that to another NAND
gate with another input C.

00:08:23.000 --> 00:08:28.000
This device is called an
inverter.

00:08:28.000 --> 00:08:31.000
The inverter simply flips the
sense of the input.

00:08:31.000 --> 00:08:36.000
So if C is a 1 the output is a
0, if C is a 0 the output

00:08:36.000 --> 00:08:38.000
becomes a 1.
It's an inverter.

00:08:38.000 --> 00:08:42.000
It simply inverts its input.
Yet another primitive device.

00:08:42.000 --> 00:08:46.000
And this is my output D.
So there are three gates in

00:08:46.000 --> 00:08:50.000
this design.
And I can quickly write down

00:08:50.000 --> 00:08:55.000
what the output looks like using
some very simple Boolean algebra

00:08:55.000 --> 00:08:59.000
or dealing with Boolean values
here.

00:08:59.000 --> 00:09:03.000
So for AND gate the output is A
and B.

00:09:03.000 --> 00:09:07.000
Remember dot is a short form
for and.

00:09:07.000 --> 00:09:12.000
But there's a negation,
inversion, so represent

00:09:12.000 --> 00:09:17.000
inversions with a bar.
So my output is A dot B bar.

00:09:17.000 --> 00:09:22.000
There is a C here.
So this is my output C bar.

00:09:22.000 --> 00:09:30.000
And this is a NAND gate.
So it takes one input A dot B.

00:09:30.000 --> 00:09:36.000
It takes the second input C bar
and ANDs those and inverts them.

00:09:36.000 --> 00:09:40.000
So that's the output.
So there are three gates in

00:09:40.000 --> 00:09:44.000
this example.
So you can think of building

00:09:44.000 --> 00:09:49.000
very complicated circuits
containing large numbers of

00:09:49.000 --> 00:09:53.000
gates.
In fact, the microprocessors

00:09:53.000 --> 00:10:00.000
that you use in your laptop
contain a large number of gates.

00:10:00.000 --> 00:10:08.000
Can someone guess how many
gates are in the Pentium IV,

00:10:08.000 --> 00:10:11.000
roughly?
Approximate,

00:10:11.000 --> 00:10:17.000
how many?
How many gates in a Pentium IV?

00:10:17.000 --> 00:10:21.000
40 million.
100 million.

00:10:21.000 --> 00:10:32.000
In the Pentium IV you have on
the order of 20 million gates.

00:10:32.000 --> 00:10:35.000
20 million gates in the Pentium
IV.

00:10:35.000 --> 00:10:41.000
And life begins in 002.
Here you learn about onsies and

00:10:41.000 --> 00:10:47.000
twosies, and in the real world
you will be dealing with tens of

00:10:47.000 --> 00:10:52.000
millions of gates.
But this is for the Pentium IV.

00:10:52.000 --> 00:10:58.000
My research group at Laboratory
for Computer Science built a

00:10:58.000 --> 00:11:04.000
chip called the Raw chip.
And this chip has 3 million

00:11:04.000 --> 00:11:07.000
gates.
And so there are several

00:11:07.000 --> 00:11:12.000
undergraduate students involved
in this project in their third

00:11:12.000 --> 00:11:17.000
year, and they're beginning to
deal with millions of gates.

00:11:17.000 --> 00:11:22.000
So the key thing to remember is
that 002 provides the

00:11:22.000 --> 00:11:27.000
foundations where you make the
switch from the analog signal to

00:11:27.000 --> 00:11:32.000
the digital signal or from
continuous matter to lumped

00:11:32.000 --> 00:11:36.000
matter.
And learn about the foundations

00:11:36.000 --> 00:11:40.000
of these primitive elements.
And by the end of this course

00:11:40.000 --> 00:11:43.000
you will begin dealing with
small systems,

00:11:43.000 --> 00:11:48.000
analog systems that contain on
the order of 10 to 20 primitive

00:11:48.000 --> 00:11:51.000
elements.
You will also begin dealing

00:11:51.000 --> 00:11:55.000
with small digital systems that
contain tens of gates.

00:11:55.000 --> 00:11:59.000
In your final project you will
build a mixed signal circuit

00:11:59.000 --> 00:12:03.000
involving an audio playback
system.

00:12:03.000 --> 00:12:06.000
You will have digital data
stored in a memory chip and you

00:12:06.000 --> 00:12:10.000
will build a circuit to extract
that data, filter it and then

00:12:10.000 --> 00:12:14.000
convert it to the analog domain
and then play it on a set of

00:12:14.000 --> 00:12:17.000
speakers.
And that has on the order of

00:12:17.000 --> 00:12:19.000
about 50 to 100 primitive
elements.

00:12:19.000 --> 00:12:23.000
So by the end of 002 you will
have learned to deal with

00:12:23.000 --> 00:12:26.000
hundreds of elements.
And then you will take other

00:12:26.000 --> 00:12:30.000
courses like 004 and so on where
you will then make the leap to

00:12:30.000 --> 00:12:34.000
learn further abstractions that
will take you from subsystems to

00:12:34.000 --> 00:12:39.000
systems with millions of gates.
So the key is to manage the

00:12:39.000 --> 00:12:43.000
complexity of dealing with
millions of gates it's all about

00:12:43.000 --> 00:12:47.000
abstractions.
You have to build abstractions

00:12:47.000 --> 00:12:50.000
and double abstractions so you
can deal with complexity.

00:12:50.000 --> 00:12:54.000
So the rest of EECS will take
you from three gates to 20

00:12:54.000 --> 00:12:58.000
million gates and software
systems that operate on 20

00:12:58.000 --> 00:13:03.000
million gates or whatever.
So there is still a ways to go.

00:13:03.000 --> 00:13:09.000
Lorenzo, our friend has gone to
bring a demonstration that we

00:13:09.000 --> 00:13:14.000
forgot to bring today.
That will show you that little

00:13:14.000 --> 00:13:17.000
digital circuit in a mock up
form.

00:13:17.000 --> 00:13:20.000
So what's today's lecture
about?

00:13:20.000 --> 00:13:27.000
Today's lecture is going to be
about what's inside a gate?

00:13:35.000 --> 00:13:38.000
How to build a gate.
Once you build a gate you can

00:13:38.000 --> 00:13:42.000
then put millions of them into
computer systems or analog

00:13:42.000 --> 00:13:44.000
systems or other sorts of
systems.

00:13:44.000 --> 00:13:48.000
And what we'll do here is
understand what's inside this

00:13:48.000 --> 00:13:51.000
abstraction.
This is an abstract element

00:13:51.000 --> 00:13:55.000
that looks like a little circle
and a line with some stuff

00:13:55.000 --> 00:13:59.000
inside it, with some properties.
But someone's got to build

00:13:59.000 --> 00:14:02.000
that.
It doesn't come from nature.

00:14:02.000 --> 00:14:06.000
You don't go and harvest gates
from trees, you got to go build

00:14:06.000 --> 00:14:08.000
that, and someone has got to do
that.

00:14:08.000 --> 00:14:12.000
So what to learn here is how do
we go about building a gate?

00:14:12.000 --> 00:14:15.000
And here you will see
practically how do you deal with

00:14:15.000 --> 00:14:18.000
voltage thresholds that satisfy
a given static discipline?

00:14:18.000 --> 00:14:22.000
So before I jump into building
a gate, let me try to build up

00:14:22.000 --> 00:14:24.000
some intuition.
As is my usual practice,

00:14:24.000 --> 00:14:28.000
I'd love to get you to build
some intuition as to how to

00:14:28.000 --> 00:14:33.000
build a gate.
And then we'll go through the

00:14:33.000 --> 00:14:38.000
mechanics of doing it.
So to build intuition,

00:14:38.000 --> 00:14:44.000
let me show you an analogous
situation in fluids.

00:14:44.000 --> 00:14:48.000
So let's say I have a cauldron
of water.

00:14:48.000 --> 00:14:55.000
This is like a power supply.
And I need to feed this fluid

00:14:55.000 --> 00:15:03.000
down at some output source.
And what I do in the middle is

00:15:03.000 --> 00:15:09.000
put in a couple of taps,
faucets, all right?

00:15:09.000 --> 00:15:16.000
And so what do these guys do?
Under what condition do you

00:15:16.000 --> 00:15:23.000
have fluid flow out of the tube
at the other end?

00:15:23.000 --> 00:15:35.000
You will have fluid flow if --
So let me call this A and B.

00:15:35.000 --> 00:15:45.000
If A is on and B is on then C
has water.

00:15:45.000 --> 00:16:02.000
Otherwise, if both A and B are
not on then C has no water.

00:16:02.000 --> 00:16:06.000
So this is already beginning to
sound like a AND gate,

00:16:06.000 --> 00:16:11.000
correct, where you get water
only if A and B are both turned

00:16:11.000 --> 00:16:14.000
on.
So we're going to use this

00:16:14.000 --> 00:16:19.000
insight, a stream of some flow
and I put things to obstruct the

00:16:19.000 --> 00:16:22.000
flow.
And when both the obstructions

00:16:22.000 --> 00:16:27.000
are lifted I get the output.
I want to use that intuition to

00:16:27.000 --> 00:16:33.000
build an AND gate.
Similarly, I could build a

00:16:33.000 --> 00:16:42.000
system that allows me to build
the following structure --

00:16:58.000 --> 00:17:01.000
So in this scenario let me call
this --

00:17:07.000 --> 00:17:11.000
-- the signal of A and B here.
And in this situation under

00:17:11.000 --> 00:17:14.000
what conditions,
provided the power supply has

00:17:14.000 --> 00:17:17.000
water, under what conditions do
I get water out?

00:17:17.000 --> 00:17:21.000
In this situation,
it is I get water if A or B are

00:17:21.000 --> 00:17:24.000
turned on.
So I don't need to turn both A

00:17:24.000 --> 00:17:26.000
and B on.
If either one of them is on,

00:17:26.000 --> 00:17:30.000
I'm going to get fluid flow
here.

00:17:30.000 --> 00:17:36.000
So this will help us build the
inside to build the OR gate.

00:17:36.000 --> 00:17:43.000
So that's an analogy involving
items we see in everyday life.

00:17:43.000 --> 00:17:48.000
Let me now move into the
electrical domain.

00:17:48.000 --> 00:17:55.000
In the electrical domain my
analogy would be something like

00:17:55.000 --> 00:17:59.000
this.
Let's say I have a power supply

00:17:59.000 --> 00:18:06.000
and I have two switches A and B.
And I build a little circuit

00:18:06.000 --> 00:18:10.000
that connects this voltage
source across the bulb using a

00:18:10.000 --> 00:18:13.000
couple of switches.
In this case,

00:18:13.000 --> 00:18:17.000
the bulb is on if both switches
A and B are on.

00:18:17.000 --> 00:18:20.000
My bulb turns on.
If I switch either one of them

00:18:20.000 --> 00:18:24.000
off my bulb turns off.
So notice that I can begin

00:18:24.000 --> 00:18:30.000
implementing things like this if
I had this element.

00:18:30.000 --> 00:18:33.000
I had sources already.
I know how to deal with bulbs.

00:18:33.000 --> 00:18:38.000
I model them as resistors.
So I need to do something about

00:18:38.000 --> 00:18:40.000
this new element called a
"switch".

00:18:40.000 --> 00:18:43.000
So let me build an abstract
device.

00:18:43.000 --> 00:18:47.000
I'll tell you how to do that in
real life in a second.

00:18:47.000 --> 00:18:51.000
So if I had the switch I could
build things like this.

00:18:51.000 --> 00:18:55.000
I could put switches in series
in a circuit and get myself

00:18:55.000 --> 00:19:00.000
something that looks like a AND
function.

00:19:00.000 --> 00:19:07.000
So let me go ahead and build an
equivalent circuit for a switch.

00:19:07.000 --> 00:19:13.000
So the switch has a couple of
terminals here and I have a

00:19:13.000 --> 00:19:17.000
control.
Switches have a control and

00:19:17.000 --> 00:19:24.000
they have a pair of terminals.
And the equivalent circuit for

00:19:24.000 --> 00:19:30.000
this looks like this.
This is for my switch.

00:19:30.000 --> 00:19:37.000
So when control is a 0.
Then my switch is open to give

00:19:37.000 --> 00:19:44.000
me an open circuit in the
circuit that I've shown you

00:19:44.000 --> 00:19:48.000
here.
And, by the same token,

00:19:48.000 --> 00:19:53.000
if my control is a 1 then --

00:20:03.000 --> 00:20:06.000
-- I have a connection between
in and out.

00:20:06.000 --> 00:20:09.000
And this is a short circuit.
So, in other words,

00:20:09.000 --> 00:20:13.000
if my switch has 0 at its
control, I'll talk about how to

00:20:13.000 --> 00:20:17.000
get that, I have an open
circuit, and if it's a 1 then I

00:20:17.000 --> 00:20:21.000
have a short circuit.
This is a switch going on and

00:20:21.000 --> 00:20:23.000
off.
Now, in traditional switches

00:20:23.000 --> 00:20:26.000
mechanical pressure is my
control signal.

00:20:26.000 --> 00:20:32.000
If I apply mechanical pressure
my switch could turn on.

00:20:32.000 --> 00:20:36.000
And if I take away the
mechanical pressure then I could

00:20:36.000 --> 00:20:41.000
get an off situation.
So let's for now imagine that

00:20:41.000 --> 00:20:45.000
we have a switch.
I still haven't told you how I

00:20:45.000 --> 00:20:48.000
am going to get a switch in real
life.

00:20:48.000 --> 00:20:51.000
Let's imagine you have a
switch.

00:20:51.000 --> 00:20:57.000
It's a three terminal device.
There's a control thingamajig

00:20:57.000 --> 00:21:02.000
coming in.
Input and an output.

00:21:02.000 --> 00:21:10.000
So let's build the following
little circuit containing a

00:21:10.000 --> 00:21:15.000
switch.
So what I'm going to do,

00:21:15.000 --> 00:21:23.000
I will take a resistance RL and
plug it in here.

00:21:30.000 --> 00:21:33.000
And connect my power supply
like so.

00:21:33.000 --> 00:21:37.000
So the little circuit that I
build has a resistor.

00:21:37.000 --> 00:21:42.000
And I connect the switch in
this pattern and I get a VS.

00:21:42.000 --> 00:21:47.000
Lorenzo, you can set that up
there if you'd like.

00:21:47.000 --> 00:21:49.000
No problem.
So I get a VS here.

00:21:49.000 --> 00:21:54.000
Now, a couple of lectures ago I
told you that 6.002,

00:21:54.000 --> 00:21:58.000
and for that matter,
004 and many of our other

00:21:58.000 --> 00:22:04.000
courses deal with combinations
of elements.

00:22:04.000 --> 00:22:08.000
And we often deal with the same
kinds of combinations again and

00:22:08.000 --> 00:22:11.000
again and again.
We see the same sorts of

00:22:11.000 --> 00:22:14.000
patterns happening,
and we need to begin to learn

00:22:14.000 --> 00:22:18.000
to identify these patterns.
This is an incredibly common

00:22:18.000 --> 00:22:21.000
pattern.
You'll see this pattern more

00:22:21.000 --> 00:22:24.000
times in 6.002 than any other
pattern, I promise you.

00:22:24.000 --> 00:22:28.000
A power supply connected to a
resistor and connected to a

00:22:28.000 --> 00:22:33.000
couple of terminals of some
interesting device.

00:22:33.000 --> 00:22:36.000
I promise there will be at
least one such pattern on the

00:22:36.000 --> 00:22:39.000
quiz, for example.
These patterns are incredibly

00:22:39.000 --> 00:22:41.000
common.
So let's take a look at the

00:22:41.000 --> 00:22:43.000
interesting properties of this
pattern.

00:22:43.000 --> 00:22:47.000
Since this pattern occurs so
commonly, I am going to create a

00:22:47.000 --> 00:22:50.000
short form.
I have already created a short

00:22:50.000 --> 00:22:52.000
form which is this ground node
here.

00:22:52.000 --> 00:22:56.000
By putting ground 0 all I'm
really saying is that there is a

00:22:56.000 --> 00:23:00.000
wire connecting these two and
that's my ground.

00:23:00.000 --> 00:23:02.000
So I already have a short form
here.

00:23:02.000 --> 00:23:06.000
My second short form is when I
connect a power supply to a

00:23:06.000 --> 00:23:09.000
node.
Then what I'm going to do is

00:23:09.000 --> 00:23:13.000
come up with yet another short
form that looks like this,

00:23:13.000 --> 00:23:16.000
an up arrow with the voltage
written there.

00:23:16.000 --> 00:23:20.000
This symbol simply says that
this node is connected to a

00:23:20.000 --> 00:23:24.000
power supply with voltage,
or a voltage source voltage VS.

00:23:24.000 --> 00:23:29.000
So I just have come up with a
slightly simpler representation

00:23:29.000 --> 00:23:33.000
for the little pattern that I
have.

00:23:33.000 --> 00:23:37.000
Now let's take a look at the
properties of this little

00:23:37.000 --> 00:23:40.000
system.
Let's first look at what

00:23:40.000 --> 00:23:42.000
happens when C is 0.
When C is 0,

00:23:42.000 --> 00:23:47.000
let me draw the equivalent
circuit for this using the open

00:23:47.000 --> 00:23:50.000
circuit out there.

00:24:00.000 --> 00:24:02.000
That's what I get,
OK?

00:24:02.000 --> 00:24:06.000
So when C is 0,
if VS is a high voltage,

00:24:06.000 --> 00:24:11.000
let's say 5 volts,
what do you expect at the

00:24:11.000 --> 00:24:16.000
output if C is a 0?
This voltage VS appears at V

00:24:16.000 --> 00:24:21.000
out because this is an open
circuit here.

00:24:21.000 --> 00:24:29.000
Remember, RL and this little
device form a voltage divider.

00:24:29.000 --> 00:24:34.000
But since it's an open circuit
its resistance is infinity.

00:24:34.000 --> 00:24:40.000
And so therefore in this
resistor divider all the voltage

00:24:40.000 --> 00:24:44.000
falls across this open circuit.
So, in this case,

00:24:44.000 --> 00:24:50.000
v out is a 1 or a high voltage.
But let's take a look at what

00:24:50.000 --> 00:24:54.000
happens when C is a 1.
In this situation,

00:24:54.000 --> 00:24:59.000
I have my RL,
that's what I have.

00:24:59.000 --> 00:25:03.000
It's a short circuit at the
switch and C is a 1.

00:25:03.000 --> 00:25:07.000
So what's the voltage v out in
this case?

00:25:07.000 --> 00:25:12.000
Not surprisingly,
since I've shorted this node to

00:25:12.000 --> 00:25:16.000
ground the voltage at this point
is 0.

00:25:16.000 --> 00:25:23.000
So if I have low voltage that's
corresponding to logical 0s that

00:25:23.000 --> 00:25:29.000
corresponds to a 0.
So I can build a simple truth

00:25:29.000 --> 00:25:34.000
table for C and use logical
symbols here.

00:25:34.000 --> 00:25:42.000
So when C is a 0 I get a high
at the output and when C is 1 I

00:25:42.000 --> 00:25:49.000
get a low at the output.
Have you seen a device that

00:25:49.000 --> 00:25:55.000
behaves like this so far?
That's a little inverter.

00:25:55.000 --> 00:26:02.000
That's the exact behavior of an
inverter.

00:26:02.000 --> 00:26:06.000
So this thing I've written here
is a truth table for an

00:26:06.000 --> 00:26:09.000
inverter.
So notice with just a simple

00:26:09.000 --> 00:26:13.000
little switch and a resistor,
I have managed to build an

00:26:13.000 --> 00:26:15.000
inverter.
Before I go on,

00:26:15.000 --> 00:26:18.000
I guess we have some things to
show you.

00:26:18.000 --> 00:26:23.000
And let me pause for a couple
of seconds and do that.

00:26:23.000 --> 00:26:26.000
First of all,
what I want to show you is the

00:26:26.000 --> 00:26:30.000
following idea.
So as I was preparing for this

00:26:30.000 --> 00:26:34.000
lecture last night I said,
now here I am telling the 6.002

00:26:34.000 --> 00:26:38.000
gang that you need to learn
about analog circuits and

00:26:38.000 --> 00:26:41.000
resistors and all of that stuff,
and you also need to learn

00:26:41.000 --> 00:26:44.000
about digital systems and all of
that stuff.

00:26:44.000 --> 00:26:48.000
And I said, because these two
are very commonplace and often

00:26:48.000 --> 00:26:51.000
times they occur together.
So I said well,

00:26:51.000 --> 00:26:54.000
if I really believe in my own
BS then there should be

00:26:54.000 --> 00:26:57.000
something around me where I can
find both of them

00:26:57.000 --> 00:27:01.000
instantaneously.
So I said let me do the

00:27:01.000 --> 00:27:05.000
following experiment.
Let me close my eyes and reach

00:27:05.000 --> 00:27:09.000
out and see what I touch.
So I closed my eyes,

00:27:09.000 --> 00:27:11.000
reached out,
and guess what?

00:27:11.000 --> 00:27:14.000
I touched the lonely mouse.
The mouse.

00:27:14.000 --> 00:27:17.000
So I said let me see what is in
side the mouse.

00:27:17.000 --> 00:27:21.000
And if I believe in my BS we
should find analog,

00:27:21.000 --> 00:27:25.000
little components and digital
components in there,

00:27:25.000 --> 00:27:28.000
right?
So let's see what is inside the

00:27:28.000 --> 00:27:31.000
mouse.
All right.

00:27:31.000 --> 00:27:34.000
There we go.
Don't try this at home,

00:27:34.000 --> 00:27:40.000
as with many other things we do
in lecture.

00:27:52.000 --> 00:27:56.000
Come on.
Show me what I want to see.

00:27:56.000 --> 00:28:00.000
OK, here we go.
Not bad.

00:28:00.000 --> 00:28:06.000
Let me show you what we have
here in this poor shattered

00:28:06.000 --> 00:28:09.000
mouse.
That's my finger,

00:28:09.000 --> 00:28:12.000
silly.
You should recognize this

00:28:12.000 --> 00:28:18.000
little resistor here.
That thing with the little

00:28:18.000 --> 00:28:22.000
bands, oh, here we go.
We'll use this.

00:28:22.000 --> 00:28:27.000
That's a resistor.
And you'll see capacitors in

00:28:27.000 --> 00:28:32.000
about four weeks.
That's a capacitor.

00:28:32.000 --> 00:28:36.000
And there is a digital IC here.
That's a digital IC.

00:28:36.000 --> 00:28:39.000
That contains a bunch of gates
inside it.

00:28:39.000 --> 00:28:42.000
So this mouse has not made a
liar out of me.

00:28:42.000 --> 00:28:47.000
So what I just showed you was a
little device that we use in

00:28:47.000 --> 00:28:51.000
everyday life that has both
analog components and digital

00:28:51.000 --> 00:28:55.000
components.
A large number of devices that

00:28:55.000 --> 00:28:57.000
we use in daily life are this
way.

00:28:57.000 --> 00:29:02.000
You can do the same thing to
your laptop.

00:29:02.000 --> 00:29:06.000
You could go try it out.
And you will find a bunch of

00:29:06.000 --> 00:29:10.000
analog components and a bunch of
digital components.

00:29:10.000 --> 00:29:13.000
And you really,
really need to understand the

00:29:13.000 --> 00:29:17.000
whole caboodle here.
Let me show you a fun little

00:29:17.000 --> 00:29:21.000
demo involving gates.
Now, I want you to be very

00:29:21.000 --> 00:29:23.000
careful here.
Lots of caveats here.

00:29:23.000 --> 00:29:28.000
If your grandmother asks you
how big is a gate don't say this

00:29:28.000 --> 00:29:32.000
big.
This is how big gates used to

00:29:32.000 --> 00:29:35.000
be, I would say,
when they were first invented.

00:29:35.000 --> 00:29:40.000
When they built gates out of
discrete vacuum tubes and so on,

00:29:40.000 --> 00:29:43.000
this is how big a gate used to
be.

00:29:43.000 --> 00:29:46.000
This is roughly that big.
Today in a chip,

00:29:46.000 --> 00:29:49.000
in a small VLSI,
very large scaled integrated

00:29:49.000 --> 00:29:53.000
circuit in a chip,
which is about 1 cm on the

00:29:53.000 --> 00:29:57.000
side, how many gates do you
think I can fit in a thumbnail

00:29:57.000 --> 00:30:01.000
sized chip?
Any guesses?

00:30:01.000 --> 00:30:05.000
With today's technology,
how many gates can I fit on a

00:30:05.000 --> 00:30:07.000
chip?
It has to be more than a

00:30:07.000 --> 00:30:13.000
million because I just told you
that Pentium IV was 20 million

00:30:13.000 --> 00:30:15.000
and that was a year ago.
How many?

00:30:15.000 --> 00:30:20.000
40 million is a good guess.
So on the order of 40 to 80

00:30:20.000 --> 00:30:23.000
million gates in a 1 square
centimeter.

00:30:23.000 --> 00:30:28.000
Intel just announced that they
will be shipping a chip

00:30:28.000 --> 00:30:34.000
containing 1 billion switches.
Remember, this whole thing is a

00:30:34.000 --> 00:30:36.000
gate, right?
Inverter, a resistor and a

00:30:36.000 --> 00:30:39.000
switch.
This thing is a switch.

00:30:39.000 --> 00:30:43.000
So Intel is going to be
shipping something containing a

00:30:43.000 --> 00:30:45.000
billion of those little
elements.

00:30:45.000 --> 00:30:48.000
Just keep those large numbers
in mind.

00:30:48.000 --> 00:30:51.000
So here is a little circuit
that I showed you here,

00:30:51.000 --> 00:30:55.000
A, B, the NAND gate,
the NAND gate at the output and

00:30:55.000 --> 00:30:58.000
the inverter.
So this output A is going to be

00:30:58.000 --> 00:31:04.000
1 whenever either A or B is off.
So the output is a 1 in this

00:31:04.000 --> 00:31:07.000
case when both A and B are off.
I turn A to 1,

00:31:07.000 --> 00:31:11.000
output is still a 1.
So the moment I turn both of

00:31:11.000 --> 00:31:13.000
these inputs into a 1,
these are 1s,

00:31:13.000 --> 00:31:17.000
the output goes to 0.
That's behavior for NAND gate.

00:31:17.000 --> 00:31:21.000
If I switch any one of the
inputs to a 0 the output should

00:31:21.000 --> 00:31:24.000
go to a 1.
Similarly, for the inverter

00:31:24.000 --> 00:31:29.000
here, when the input is a 0 the
output is a 1.

00:31:29.000 --> 00:31:32.000
And when I switch it so should
the output.

00:31:32.000 --> 00:31:35.000
Now imagine a circuit,
a little chip containing

00:31:35.000 --> 00:31:39.000
billions of these devices.
And just imagine all of these

00:31:39.000 --> 00:31:43.000
1s and 0s flying around.
So one simple switch in the

00:31:43.000 --> 00:31:47.000
input, like a click of a
keystroke could actually cause a

00:31:47.000 --> 00:31:51.000
billion signals in your circuit
to be flipping around.

00:31:51.000 --> 00:31:56.000
And that causes some fun stuff
to happen, which we will learn

00:31:56.000 --> 00:32:00.000
about a few months from now.
But for now that's a quick show

00:32:00.000 --> 00:32:05.000
of a little circuit that looks
like that.

00:32:05.000 --> 00:32:12.000
Let me go back to talking about
building other types of gates.

00:32:22.000 --> 00:32:25.000
So that was an inverter.
So now you know.

00:32:25.000 --> 00:32:30.000
You're almost halfway to being
able to build a Pentium IV.

00:32:30.000 --> 00:32:35.000
You've come all the way from
nature to gates.

00:32:35.000 --> 00:32:39.000
And Pentium IV contains 20
million of them so you now know

00:32:39.000 --> 00:32:42.000
how gates are built.
So that's an inverter.

00:32:42.000 --> 00:32:45.000
Let's look at how we can build
other forms of gates.

00:32:45.000 --> 00:32:49.000
To build another gate let me do
this.

00:32:59.000 --> 00:33:04.000
How about this pattern?
If I build a pattern like this

00:33:04.000 --> 00:33:11.000
with A and B coming in here and
I put two switches with their

00:33:11.000 --> 00:33:16.000
inputs in and out,
so two switches in series.

00:33:16.000 --> 00:33:22.000
Let's write down the truth
table for what this looks like.

00:33:22.000 --> 00:33:26.000
Let's see.
When A and B are both 0,

00:33:26.000 --> 00:33:31.000
what should the output be?
These are both off so the

00:33:31.000 --> 00:33:34.000
output is directly VS which is a
high.

00:33:34.000 --> 00:33:38.000
When either of these switches
is off 0-1 or 1-0.

00:33:38.000 --> 00:33:42.000
If either switch is off then
this node is cut off from

00:33:42.000 --> 00:33:44.000
ground.
There is no current flowing

00:33:44.000 --> 00:33:47.000
here.
So this entire voltage drops

00:33:47.000 --> 00:33:51.000
across this infinite resistance
here, and so I get 1s at the

00:33:51.000 --> 00:33:55.000
output as well.
If both switches are on what

00:33:55.000 --> 00:33:57.000
happens?
If both A and B are on then I

00:33:57.000 --> 00:34:03.000
get a short circuit to ground
and my output is a 0.

00:34:03.000 --> 00:34:06.000
So can someone tell me what
gate this is?

00:34:06.000 --> 00:34:09.000
Awesome.
We just build a NAND gate.

00:34:09.000 --> 00:34:12.000
This is unbelievable.
Five lectures and you've

00:34:12.000 --> 00:34:18.000
already come all the way from
nature to the primitive building

00:34:18.000 --> 00:34:21.000
blocks of microprocessors.
It's pretty amazing.

00:34:21.000 --> 00:34:25.000
So what about this one here?

00:34:34.000 --> 00:34:38.000
What's this?
I haven't told you this before

00:34:38.000 --> 00:34:45.000
but if an AND gate becomes a
NAND gate, this is kind of an OR

00:34:45.000 --> 00:34:49.000
arrangement, what should an OR
become?

00:34:49.000 --> 00:34:53.000
NOR.
It's all completely logical.

00:34:53.000 --> 00:35:00.000
So you can go home and practice
a truth table for this.

00:35:00.000 --> 00:35:03.000
A, B and C.
I'll just fill in one of the

00:35:03.000 --> 00:35:05.000
rows.
So in this particular

00:35:05.000 --> 00:35:09.000
situation, if both A and B are
0, if A is 0 and B is 0,

00:35:09.000 --> 00:35:13.000
both the switches are off,
so it's as if this little

00:35:13.000 --> 00:35:17.000
sucker here is cut off from
ground and VS falls across from

00:35:17.000 --> 00:35:22.000
C to ground here and the output
is a 1, so on and so forth.

00:35:22.000 --> 00:35:25.000
So I can build other
interesting forms of gates.

00:35:25.000 --> 00:35:31.000
So let's say I build something
that looks like this.

00:35:41.000 --> 00:35:43.000
I build something like this.

00:35:48.000 --> 00:35:53.000
You can write the truth table
for this or you can look at this

00:35:53.000 --> 00:35:57.000
and write down the function that
this one supports.

00:35:57.000 --> 00:36:02.000
Notice that this output here is
going to be a high only when

00:36:02.000 --> 00:36:07.000
both of these are not connected
to ground.

00:36:07.000 --> 00:36:11.000
And if you stare at it some
more the function this one

00:36:11.000 --> 00:36:14.000
presents, this is my AND
function.

00:36:14.000 --> 00:36:19.000
Suppose this one didn't exist,
that would be my AND function.

00:36:19.000 --> 00:36:24.000
But because this one exists
that's in an OR configuration

00:36:24.000 --> 00:36:28.000
and so I get a C.
And so because of that I get

00:36:28.000 --> 00:36:33.000
something that looks like this.
So this is my A dot B,

00:36:33.000 --> 00:36:36.000
this is my plus because of a
parallel here,

00:36:36.000 --> 00:36:40.000
and ultimately this caused an
inversion in this gate.

00:36:40.000 --> 00:36:45.000
So the primitive pattern has a
generic inversion built into the

00:36:45.000 --> 00:36:47.000
output.
That is why they commonly end

00:36:47.000 --> 00:36:52.000
up building NAND gates and NOR
gates and so on as the simplest

00:36:52.000 --> 00:36:54.000
gates.
We don't build AND gates and OR

00:36:54.000 --> 00:36:57.000
gates.
How can I convert this one to

00:36:57.000 --> 00:37:00.000
an AND gate?
Anybody?

00:37:00.000 --> 00:37:04.000
Put an inverter on the output.
So what I can do is take this

00:37:04.000 --> 00:37:07.000
little sucker here,
put an inverter here and I get

00:37:07.000 --> 00:37:10.000
an AND gate.
So the real primitives in

00:37:10.000 --> 00:37:13.000
circuits tend to be NANDs and
NORs.

00:37:18.000 --> 00:37:21.000
OK.
So the real practical among you

00:37:21.000 --> 00:37:25.000
should be saying at this point
all right, all right,

00:37:25.000 --> 00:37:28.000
I buy this, if there existed a
switch.

00:37:28.000 --> 00:37:34.000
I know exactly how to go from
nature to building Pentium IVs

00:37:34.000 --> 00:37:39.000
if there exists a switch.
So that the obvious next step

00:37:39.000 --> 00:37:43.000
for me is to show you a switch,
a physical switch device.

00:37:43.000 --> 00:37:47.000
And to introduce a switch
device, let me show you a three

00:37:47.000 --> 00:37:51.000
terminal element.
Remember, the switch has three

00:37:51.000 --> 00:37:55.000
terminals, an input,
output and something called the

00:37:55.000 --> 00:37:58.000
control, C.
So I'm going to introduce a new

00:37:58.000 --> 00:38:03.000
primitive element called "The
MOSFET Device".

00:38:03.000 --> 00:38:08.000
MOSFET stands for metal-oxide
semiconductor field-effect

00:38:08.000 --> 00:38:12.000
transistor.
This is shortened to FET or

00:38:12.000 --> 00:38:16.000
transistor.
Now I'm going to show you that

00:38:16.000 --> 00:38:21.000
this works like a switch.
And before I do that,

00:38:21.000 --> 00:38:27.000
in fact, let me do that first.
Then I'll show you something

00:38:27.000 --> 00:38:30.000
else.
So this device has the

00:38:30.000 --> 00:38:35.000
following symbol.
It has a terminal called a

00:38:35.000 --> 00:38:41.000
gate, the drain and the source.
Gate, drain and source.

00:38:41.000 --> 00:38:46.000
Three terminals.
This is the primitive element

00:38:46.000 --> 00:38:52.000
that forms virtually every
electronic component built

00:38:52.000 --> 00:38:56.000
today.
This is the foundation of the

00:38:56.000 --> 00:39:00.000
universe.
So this little MOSFET device,

00:39:00.000 --> 00:39:06.000
we can look at how it behaves.
I'll show you this thing on the

00:39:06.000 --> 00:39:11.000
screen in a second,
but this guy behaves very much

00:39:11.000 --> 00:39:16.000
like this device I was
postulating earlier.

00:39:16.000 --> 00:39:20.000
Let's take a look at this
device on the scope.

00:39:20.000 --> 00:39:25.000
To do so let me label some
voltages and currents.

00:39:25.000 --> 00:39:30.000
So let me label this voltage as
vDS.

00:39:30.000 --> 00:39:34.000
Let me label this voltage as
vGS between the gate and the

00:39:34.000 --> 00:39:38.000
source.
And let me label the current

00:39:38.000 --> 00:39:41.000
coming into this node iG.
In this device,

00:39:41.000 --> 00:39:45.000
the physical device that I'm
going to show you,

00:39:45.000 --> 00:39:49.000
the current going into the gate
is always 0.

00:39:49.000 --> 00:39:52.000
So iG is always going to be 0
for 6.002.

00:39:52.000 --> 00:39:58.000
In real life there is some
leakage and so on.

00:39:58.000 --> 00:40:02.000
But in 6.002 for now we deal
with a very simple abstract

00:40:02.000 --> 00:40:06.000
model, iG is 0.
And let me label the current

00:40:06.000 --> 00:40:09.000
here as iDS.
To be correct with the

00:40:09.000 --> 00:40:13.000
nomenclation,
the current into node D should

00:40:13.000 --> 00:40:16.000
be labeled iD,
but because iG is 0 iD flows

00:40:16.000 --> 00:40:21.000
out through the source as well,
so I would simply call it iDS

00:40:21.000 --> 00:40:27.000
just so that I can show that vDS
and iDS are the two voltages and

00:40:27.000 --> 00:40:32.000
currents that I am going to deal
with.

00:40:32.000 --> 00:40:34.000
So that's my little device
here.

00:40:34.000 --> 00:40:38.000
And notice that the source
terminal is common.

00:40:38.000 --> 00:40:42.000
I use the source both for the
control GS and I use the source

00:40:42.000 --> 00:40:47.000
for the drain as well.
So you can view this as input,

00:40:47.000 --> 00:40:50.000
view this as out,
and you can view this,

00:40:50.000 --> 00:40:53.000
if you like,
as the control abstractly.

00:40:53.000 --> 00:40:58.000
So let me show you a plot of
how this behaves.

00:40:58.000 --> 00:41:03.000
To understand how it behaves,
I can draw an equivalent

00:41:03.000 --> 00:41:06.000
circuit for it.
So in this particular

00:41:06.000 --> 00:41:12.000
situation, if its behavior is
characterized by the voltage

00:41:12.000 --> 00:41:16.000
applied to vGS.
Much like the control on the

00:41:16.000 --> 00:41:20.000
switch, vGS is my control.
So if vGS is 0,

00:41:20.000 --> 00:41:24.000
oh, I'm sorry.
If vGS is greater than or equal

00:41:24.000 --> 00:41:31.000
to some threshold voltage VT --
So vGS, the voltage applied

00:41:31.000 --> 00:41:34.000
here is greater than some
voltage, VT, a threshold

00:41:34.000 --> 00:41:39.000
voltage, or the pressure of the
switch is greater than some

00:41:39.000 --> 00:41:44.000
threshold pressure then this guy
behaves like a short circuit.

00:41:44.000 --> 00:41:47.000
This is iDS,
this is my drain and this is my

00:41:47.000 --> 00:41:50.000
source.
So if the voltage applied

00:41:50.000 --> 00:41:54.000
between the gate and the source
is higher than some threshold

00:41:54.000 --> 00:41:59.000
then this behaves like a short
circuit.

00:41:59.000 --> 00:42:04.000
Similarly, if the voltage vGS
is less than some threshold VT

00:42:04.000 --> 00:42:07.000
then in that situation --

00:42:13.000 --> 00:42:17.000
-- I get an open circuit.
And when I have an open circuit

00:42:17.000 --> 00:42:21.000
between D and S then the current
iDS is going to be 0.

00:42:21.000 --> 00:42:26.000
So this is the idealized model.
And this idealized model is

00:42:26.000 --> 00:42:30.000
called "the switch model of the
MOSFET".

00:42:30.000 --> 00:42:34.000
The switch model or the S model
of the MOSFET.

00:42:34.000 --> 00:42:39.000
Well, if you want to see the
internals of the MOSFET,

00:42:39.000 --> 00:42:43.000
I won't cover that in lecture
or recitation.

00:42:43.000 --> 00:42:49.000
You can look at the section,
I believe Section 6.7 of the

00:42:49.000 --> 00:42:53.000
course notes.
That has the internal structure

00:42:53.000 --> 00:42:59.000
of the MOSFET and how you
physically construct such a

00:42:59.000 --> 00:43:02.000
device.
So what I can do here is step

00:43:02.000 --> 00:43:06.000
back and stare at the device for
a second or two.

00:43:06.000 --> 00:43:09.000
And what it says is that if I
apply a lot of pressure,

00:43:09.000 --> 00:43:13.000
if vGS is greater than a
threshold VT then I get a short

00:43:13.000 --> 00:43:15.000
circuit here just like my
switch.

00:43:15.000 --> 00:43:18.000
When in doubt think faucet.
If you put pressure on the

00:43:18.000 --> 00:43:21.000
faucet, think of this as
closing, and when I open it,

00:43:21.000 --> 00:43:25.000
when vGS goes less than VD,
less than a threshold,

00:43:25.000 --> 00:43:30.000
I take off the pressure and
then it becomes an open circuit.

00:43:30.000 --> 00:43:34.000
So I can plot the following.

00:43:39.000 --> 00:43:43.000
Much like I plotted the iV
characteristics of two terminal

00:43:43.000 --> 00:43:47.000
elements, I can plot the iV
characteristics of this three

00:43:47.000 --> 00:43:50.000
terminal element in the
following way.

00:43:50.000 --> 00:43:55.000
I can focus on two terminals
and look at vDS and iDS for that

00:43:55.000 --> 00:44:00.000
terminal pair and draw the
curves for how it will behave as

00:44:00.000 --> 00:44:05.000
I change vGS that I applied.
So what I'm going to show you

00:44:05.000 --> 00:44:10.000
is that if vGS is less than a
threshold then this behaves like

00:44:10.000 --> 00:44:13.000
a open circuit.
So no matter what the voltage

00:44:13.000 --> 00:44:17.000
is the current is 0.
Similarly, if vGS greater than

00:44:17.000 --> 00:44:23.000
equal to some threshold voltage
then I get the behavior iV curve

00:44:23.000 --> 00:44:27.000
of a short circuit where the
current can be anything and

00:44:27.000 --> 00:44:33.000
controlled by external forces
like in any short circuit.

00:44:33.000 --> 00:44:35.000
So let me show you on the
screen.

00:44:35.000 --> 00:44:38.000
Lorenzo has kindly put the
graph up already.

00:44:38.000 --> 00:44:41.000
So I'm showing the iV curve of
a switch.

00:44:41.000 --> 00:44:45.000
Notice that when vGS is greater
than VT, greater than a

00:44:45.000 --> 00:44:50.000
threshold I get the vertical
line corresponding to a short

00:44:50.000 --> 00:44:52.000
circuit.
Is it this one?

00:44:52.000 --> 00:44:53.000
This one.
There we go.

00:44:53.000 --> 00:44:58.000
So what I'm going to do here is
I'm going to reduce vGS to below

00:44:58.000 --> 00:45:02.000
VT.
What should you see happening?

00:45:02.000 --> 00:45:05.000
The curve, from being a short
circuit, should hammer down to

00:45:05.000 --> 00:45:09.000
becoming an open circuit.
That's the curve for an open

00:45:09.000 --> 00:45:11.000
circuit as I drew out there for
you.

00:45:11.000 --> 00:45:14.000
VGS pressure ain't enough.
Lots of pressure,

00:45:14.000 --> 00:45:18.000
boom, it's a short circuit.
I really like to think of this

00:45:18.000 --> 00:45:22.000
pressure analogy if I get
confused whenever I look at a

00:45:22.000 --> 00:45:26.000
MOS transistor and I need to
look at vGS and so on I always

00:45:26.000 --> 00:45:30.000
think vGS is greater than VT.
Lots of pressure on the switch

00:45:30.000 --> 00:45:32.000
it turns on.
Just remember that,

00:45:32.000 --> 00:45:35.000
and then you won't forget this
vGS thing here.

00:45:35.000 --> 00:45:37.000
So that's the behavior of a
switch.

00:45:37.000 --> 00:45:40.000
And so viola,
there's our switch.

00:45:45.000 --> 00:45:48.000
So I've given you a three
terminal element that is a

00:45:48.000 --> 00:45:51.000
switch that is controlled like a
mechanical switch.

00:45:51.000 --> 00:45:54.000
So I can build a,
if I replace --

00:46:02.000 --> 00:46:07.000
This was my switch earlier.
And what I can do is replace

00:46:07.000 --> 00:46:11.000
this with my MOSFET and that's
what I get.

00:46:11.000 --> 00:46:16.000
And I won't bother showing you
this is your inverter.

00:46:16.000 --> 00:46:22.000
All of that has replaced the
abstract switch with a physical

00:46:22.000 --> 00:46:28.000
switch which behaves as shown in
the graph up there.

00:46:28.000 --> 00:46:35.000
And so I apply an input here
and I take the output here.

00:46:35.000 --> 00:46:42.000
So as 6.002 you could look at
this and say ah-ha,

00:46:42.000 --> 00:46:48.000
that is an inverter.
When you go to 004 what you

00:46:48.000 --> 00:46:57.000
will do is build this triangle
and a circle around it and you

00:46:57.000 --> 00:47:05.000
will ignore what's inside and
just look at that.

00:47:05.000 --> 00:47:08.000
So in 002 we showed you that
the internals look like a

00:47:08.000 --> 00:47:12.000
pattern with a MOSFET and a
resistor, but it's really the

00:47:12.000 --> 00:47:16.000
abstract inverter looking in
from the outside.

00:47:16.000 --> 00:47:20.000
I'm just going to close the
loop inside the digital gate,

00:47:20.000 --> 00:47:24.000
and this was inside your little
inverter with a resistor and a

00:47:24.000 --> 00:47:27.000
switch.
Let me continue with this for a

00:47:27.000 --> 00:47:30.000
little longer here --

00:47:41.000 --> 00:47:45.000
-- and do something that we
like to do a lot,

00:47:45.000 --> 00:47:50.000
which is plot what are called
input / output curves.

00:47:50.000 --> 00:47:56.000
So let's say the voltage
applied here is v in and let's

00:47:56.000 --> 00:48:00.000
call this v out.
For fun let's plot a v in

00:48:00.000 --> 00:48:07.000
versus v out for this inverter.
So when input is a 0,

00:48:07.000 --> 00:48:11.000
let's say VT is 1 volt for the
inverter.

00:48:11.000 --> 00:48:14.000
The threshold voltage is 1
volt.

00:48:14.000 --> 00:48:18.000
The threshold pressure is 1
volt.

00:48:18.000 --> 00:48:23.000
So when input is a 0,
and let's say VS is 5 volts.

00:48:23.000 --> 00:48:30.000
So when the input is a 0,
this guy is turned off.

00:48:30.000 --> 00:48:34.000
So what's the output?
What's the output voltage?

00:48:34.000 --> 00:48:38.000
If this is turned off,
what's the output voltage?

00:48:38.000 --> 00:48:42.000
It's the supply.
The supply directly shows up

00:48:42.000 --> 00:48:45.000
here.
And so as long as the input is

00:48:45.000 --> 00:48:49.000
0 the output is at 5 volts.
And this is true until the

00:48:49.000 --> 00:48:54.000
input reaches 1 volt.
As long as the input is less

00:48:54.000 --> 00:48:58.000
than 1 volt my output stays
high.

00:48:58.000 --> 00:49:03.000
And then when my input exceeds
or hits 1 volt then at that

00:49:03.000 --> 00:49:09.000
point the switch turns on and
the MOSFET turns on and shorts

00:49:09.000 --> 00:49:15.000
the output to ground in which
case boom, this is what I get.

00:49:15.000 --> 00:49:19.000
And then, no matter how much I
increase the input,

00:49:19.000 --> 00:49:25.000
my switch stays on and the
output follows a zero volts at

00:49:25.000 --> 00:49:29.000
the output.
So this is my v in versus v out

00:49:29.000 --> 00:49:36.000
curve for the inverter.
One of the interesting things

00:49:36.000 --> 00:49:42.000
that we do a lot is see whether
this satisfies some voltage

00:49:42.000 --> 00:49:46.000
threshold.
So let's say I have a VOL of

00:49:46.000 --> 00:49:51.000
0.5 volts, VOH of 4.5,
VIL of 0.9 and VIH of 4.1

00:49:51.000 --> 00:49:55.000
volts.
So VOL says in its low value is

00:49:55.000 --> 00:50:01.000
the output less than 0.5?
Yup, output less than 0.5.

00:50:01.000 --> 00:50:03.000
In its high is it more than
4.5?

00:50:03.000 --> 00:50:08.000
Yup, it's more than 4.5.
Does it recognize all values

00:50:08.000 --> 00:50:10.000
below VIL as a low input?
Yup.

00:50:10.000 --> 00:50:15.000
So anything below 0.9 or 1 for
that matter is viewed as a low.

00:50:15.000 --> 00:50:18.000
That's good.
So these pass.

00:50:18.000 --> 00:50:22.000
And high, anything above 4.1,
is that treated as a high?

00:50:22.000 --> 00:50:25.000
Yes.
So anything above 4.1 is

00:50:25.000 --> 00:50:30.000
treated as a high and the output
goes low.

00:50:30.000 --> 00:50:34.000
So therefore this inverter that
I've designed for you here

00:50:34.000 --> 00:50:39.000
satisfies the static discipline
and this inverter can be used in

00:50:39.000 --> 00:50:44.000
circuits or other devices that
conform to this value here.

00:50:44.000 --> 00:50:48.000
In your recitation,
you will look at a slightly

00:50:48.000 --> 00:50:53.000
more detailed model of the
switch where the switch behaves

00:50:53.000 --> 00:50:56.000
like a resistor.