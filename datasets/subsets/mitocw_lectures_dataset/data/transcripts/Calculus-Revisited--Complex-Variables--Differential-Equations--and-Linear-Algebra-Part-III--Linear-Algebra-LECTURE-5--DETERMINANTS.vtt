WEBVTT

00:00:00.090 --> 00:00:02.490
The following content is
provided under a Creative

00:00:02.490 --> 00:00:04.030
Commons license.

00:00:04.030 --> 00:00:06.330
Your support will help
MIT OpenCourseWare

00:00:06.330 --> 00:00:10.690
continue to offer high-quality
educational resources for free.

00:00:10.690 --> 00:00:13.320
To make a donation or
view additional materials

00:00:13.320 --> 00:00:17.270
from hundreds of MIT courses,
visit MIT OpenCourseWare

00:00:17.270 --> 00:00:18.200
at ocw.mit.edu.

00:00:32.082 --> 00:00:33.070
HERBERT GROSS: Hi.

00:00:33.070 --> 00:00:35.740
As I was getting myself
prepared for the lecture,

00:00:35.740 --> 00:00:38.320
an old shaggy dog
science story came

00:00:38.320 --> 00:00:41.380
to mind that's usually
told as a tribute

00:00:41.380 --> 00:00:44.110
to the German
scientist's thoroughness.

00:00:44.110 --> 00:00:47.110
This was the story of when all
the scientists of the world

00:00:47.110 --> 00:00:49.840
got together and decided
for an annual project.

00:00:49.840 --> 00:00:53.650
Each country would study
exhaustively a different animal

00:00:53.650 --> 00:00:56.140
and report at the
end of the year

00:00:56.140 --> 00:00:57.490
as to what they had found out.

00:00:57.490 --> 00:01:00.430
And at the end of the year,
every country but Germany

00:01:00.430 --> 00:01:01.810
had been heard from.

00:01:01.810 --> 00:01:04.330
No one knew what had happened
to the German scientists.

00:01:04.330 --> 00:01:09.250
And five years later, the German
report came in, a huge epitome,

00:01:09.250 --> 00:01:13.860
and it was entitled, "Handbook
of the Elephant, Volume 1."

00:01:13.860 --> 00:01:16.820
And the reason that this story
comes to mind is twofold.

00:01:16.820 --> 00:01:19.750
First of all, the
study of vector spaces

00:01:19.750 --> 00:01:25.390
has so many ramifications, that
to study the subject thoroughly

00:01:25.390 --> 00:01:28.210
should be a full year's
course by itself.

00:01:28.210 --> 00:01:32.170
And secondly, with respect to
the particular topic of basis

00:01:32.170 --> 00:01:35.800
vectors and spanning vectors,
and whether subelements

00:01:35.800 --> 00:01:38.050
are linearly independent,
whereas we've

00:01:38.050 --> 00:01:41.950
invented a rather nice row
reduced matrix technique

00:01:41.950 --> 00:01:47.330
for finding out what space is
spanned by a set of vectors

00:01:47.330 --> 00:01:49.550
and what a basis
for that space is,

00:01:49.550 --> 00:01:52.830
frequently we don't want
that much information.

00:01:52.830 --> 00:01:55.760
And what I'm leading up to
is a topic which you've all

00:01:55.760 --> 00:01:57.560
had in a previous context.

00:01:57.560 --> 00:01:59.000
It's called determinants.

00:01:59.000 --> 00:02:00.830
And today, what I
would like to do

00:02:00.830 --> 00:02:06.470
is to study determinants within
the framework of vector spaces.

00:02:06.470 --> 00:02:09.000
And the way it comes
up is as follows.

00:02:09.000 --> 00:02:12.020
Suppose we have an
n-dimensional vector space, v,

00:02:12.020 --> 00:02:14.730
and suppose that we
pick a particular basis,

00:02:14.730 --> 00:02:18.270
u1 up to un, for v itself.

00:02:18.270 --> 00:02:20.010
Now, the idea is this.

00:02:20.010 --> 00:02:22.080
Knowing that the
dimension of v is n,

00:02:22.080 --> 00:02:25.140
we immediately know
that more than n vectors

00:02:25.140 --> 00:02:27.210
can't be a basis
for v, because they

00:02:27.210 --> 00:02:29.370
will be linearly dependent
rather than linearly

00:02:29.370 --> 00:02:31.080
independent.

00:02:31.080 --> 00:02:35.700
Fewer than n vectors
of v cannot be a basis,

00:02:35.700 --> 00:02:39.180
because fewer than n vectors,
since the dimension is n,

00:02:39.180 --> 00:02:43.950
cannot span v. Consequently, the
only point of interest is what

00:02:43.950 --> 00:02:48.030
happens when we're given a set
of n vectors and v. Namely,

00:02:48.030 --> 00:02:52.620
given the n vectors, alpha
1 up to alpha n and v,

00:02:52.620 --> 00:02:55.770
is this set a basis or isn't it?

00:02:55.770 --> 00:02:59.610
And rather than to use the row
reduced matrix technique, here

00:02:59.610 --> 00:03:02.080
what we're saying
is we don't want,

00:03:02.080 --> 00:03:05.190
for example, in many cases,
to know what the betas look

00:03:05.190 --> 00:03:06.900
like that we talked
about in our lecture

00:03:06.900 --> 00:03:08.670
on spanning vectors
and the like.

00:03:08.670 --> 00:03:11.280
All we want to know is,
are these vectors linearly

00:03:11.280 --> 00:03:13.560
independent or aren't they?

00:03:13.560 --> 00:03:16.440
And so what we do
is we essentially

00:03:16.440 --> 00:03:18.247
invent a function machine.

00:03:18.247 --> 00:03:19.830
In other words, what
we're going to do

00:03:19.830 --> 00:03:22.350
is to construct a
function in which,

00:03:22.350 --> 00:03:26.010
given that the dimension of
our space is n-dimensional,

00:03:26.010 --> 00:03:29.730
the input of our
function machine

00:03:29.730 --> 00:03:33.420
will be any set of n
vectors from that space.

00:03:33.420 --> 00:03:36.630
And the machine will
be programmed to give 0

00:03:36.630 --> 00:03:40.030
as an output if the vectors
are linearly dependent,

00:03:40.030 --> 00:03:43.730
in other words, if they are
not a basis, and non-zero--

00:03:43.730 --> 00:03:46.000
and I'll explain in more
detail what non-zero--

00:03:46.000 --> 00:03:49.650
why I picked non-zero rather
than a specific non-zero

00:03:49.650 --> 00:03:51.900
number--

00:03:51.900 --> 00:03:54.160
if the n vectors
do form a basis.

00:03:54.160 --> 00:03:56.550
In other words, I
am going to invent

00:03:56.550 --> 00:04:00.180
a function, D, capital D, to
indicate the word determinant

00:04:00.180 --> 00:04:06.360
here, such that D of the n
vectors, alpha 1 up to alpha n,

00:04:06.360 --> 00:04:10.770
will be 0 if and only
if the set of n vectors

00:04:10.770 --> 00:04:12.990
are linearly dependent.

00:04:12.990 --> 00:04:14.880
Now, obviously, a
function machine

00:04:14.880 --> 00:04:16.649
can do nothing by itself.

00:04:16.649 --> 00:04:17.839
We have to give--

00:04:17.839 --> 00:04:21.160
and I hope this is well-known
by now in our course--

00:04:21.160 --> 00:04:24.390
we have to endow
anything that we're

00:04:24.390 --> 00:04:27.190
working with with a
particular structure

00:04:27.190 --> 00:04:31.140
so that is feels free to
work logically for us.

00:04:31.140 --> 00:04:33.000
Well, among other
things, what do we

00:04:33.000 --> 00:04:35.970
know for sure is
a set of n vectors

00:04:35.970 --> 00:04:38.550
which are a basis for v?

00:04:38.550 --> 00:04:43.740
Since we were given that the
specific basis that v is being

00:04:43.740 --> 00:04:48.296
referred to with respect
to are u1 up tp un,

00:04:48.296 --> 00:04:53.550
then certainly, if u1 up to un
is the input of the D machine,

00:04:53.550 --> 00:04:55.740
we want a non-zero output.

00:04:55.740 --> 00:04:59.340
For the sake of just
normalizing things,

00:04:59.340 --> 00:05:03.160
let's program the machine
so that D of u1 up to un

00:05:03.160 --> 00:05:05.750
will be 1.

00:05:05.750 --> 00:05:08.290
Now, notice, by
the way, this only

00:05:08.290 --> 00:05:10.480
tells us one special basis.

00:05:10.480 --> 00:05:13.450
There are many bases that
I could have chosen for v,

00:05:13.450 --> 00:05:15.760
and certainly
condition one by itself

00:05:15.760 --> 00:05:19.210
isn't going to tell me any--
has no information programmed

00:05:19.210 --> 00:05:21.550
in it to tell me
anything other than what

00:05:21.550 --> 00:05:24.220
it does to u1 up to un.

00:05:24.220 --> 00:05:28.360
As a second input to my D
machine for programming it,

00:05:28.360 --> 00:05:31.450
I certainly know that
given the n vectors,

00:05:31.450 --> 00:05:34.600
if any two of the vectors
happen to be equal, then

00:05:34.600 --> 00:05:37.210
those vectors are
linearly dependent.

00:05:37.210 --> 00:05:40.330
Consequently, I
instruct my D machine,

00:05:40.330 --> 00:05:45.030
that if the input is a set of
vectors alpha 1 up to alpha n,

00:05:45.030 --> 00:05:47.830
and at least two of
the alphas are equal--

00:05:47.830 --> 00:05:49.750
and the way we say
that mathematically

00:05:49.750 --> 00:05:55.060
is that alpha i equals alpha
j for a sum i unequal to j--

00:05:55.060 --> 00:05:57.520
that if two of the vectors
in the set are equal,

00:05:57.520 --> 00:06:00.580
we tell the machine to
grind out 0 as an output.

00:06:00.580 --> 00:06:02.470
And by the way, at
this stage we should

00:06:02.470 --> 00:06:05.590
be very careful to
recognize that this is not

00:06:05.590 --> 00:06:07.720
the only way in which
a set of vectors

00:06:07.720 --> 00:06:09.170
can be linearly dependent.

00:06:09.170 --> 00:06:11.230
There are many ways in
which a set of vectors

00:06:11.230 --> 00:06:14.290
can be linearly dependent,
even if no two of the vectors

00:06:14.290 --> 00:06:15.560
are equal.

00:06:15.560 --> 00:06:18.490
So consequently, given
a linearly dependent set

00:06:18.490 --> 00:06:21.230
of vectors in which
no two are equal,

00:06:21.230 --> 00:06:25.720
notice that condition two
here will not work or do

00:06:25.720 --> 00:06:26.660
anything for me.

00:06:26.660 --> 00:06:30.160
So all I have done by
conditions one and two

00:06:30.160 --> 00:06:33.700
is I have endowed my D
machine with two standards.

00:06:33.700 --> 00:06:37.150
One particular case in which
the output of the D machine

00:06:37.150 --> 00:06:40.780
will be the number 1, and
a particular situation

00:06:40.780 --> 00:06:43.990
in which the output of
the D machine will be 0.

00:06:43.990 --> 00:06:45.850
But I have not
solved the problem

00:06:45.850 --> 00:06:49.630
that I wanted so far,
namely, to make sure

00:06:49.630 --> 00:06:53.740
that D grinds out 0 if and
only if the set of n vectors

00:06:53.740 --> 00:06:56.320
are linearly dependent.

00:06:56.320 --> 00:07:01.020
Let me now endow D
with a third property.

00:07:01.020 --> 00:07:04.360
It is a property that will
suggest linearity to you,

00:07:04.360 --> 00:07:07.540
and it's one which is
amazingly powerful.

00:07:07.540 --> 00:07:10.420
And what I mean by
amazingly powerful hopefully

00:07:10.420 --> 00:07:12.580
will become clear
in a few moments.

00:07:12.580 --> 00:07:14.920
But the third property is this.

00:07:14.920 --> 00:07:16.840
And rather than
work with n-tuples

00:07:16.840 --> 00:07:19.060
here, to make things
easier to read,

00:07:19.060 --> 00:07:21.350
let me just take a
3-tuple over here.

00:07:21.350 --> 00:07:24.040
Suppose I have a
three-dimensional vector space,

00:07:24.040 --> 00:07:26.530
and I pick three
vectors in that space.

00:07:26.530 --> 00:07:28.240
Suppose one of those
vectors-- the way

00:07:28.240 --> 00:07:29.770
I've written that
here, it happens

00:07:29.770 --> 00:07:31.090
to be the second vector.

00:07:31.090 --> 00:07:34.240
Suppose one of those
vectors is itself written

00:07:34.240 --> 00:07:37.180
as a sum of two other
vectors in the space.

00:07:37.180 --> 00:07:41.500
Then I tell the D machine
to compute this as follows.

00:07:41.500 --> 00:07:44.800
Linearize this, in other
words, compute this

00:07:44.800 --> 00:07:49.810
as if it were the sum of two
separate determinants, one

00:07:49.810 --> 00:07:53.080
of which had the alpha 2
missing, and the other of which

00:07:53.080 --> 00:07:54.670
had the beta 2 missing.

00:07:54.670 --> 00:07:56.650
In other words,
what I do is is I

00:07:56.650 --> 00:07:58.660
endow the machine
with the property

00:07:58.660 --> 00:08:04.210
that D of alpha 1 comma, alpha
2 plus beta 2 comma, alpha 3

00:08:04.210 --> 00:08:09.850
will be D of alpha 1,
alpha 2, alpha 3 plus D

00:08:09.850 --> 00:08:13.410
of alpha 1, beta 2, alpha 3.

00:08:16.420 --> 00:08:18.875
And thirdly-- well, thirdly.

00:08:18.875 --> 00:08:19.750
I don't mean thirdly.

00:08:19.750 --> 00:08:21.790
I mean the other
lineal property.

00:08:21.790 --> 00:08:27.880
If one of the input vectors
is multiplied by a scalar,

00:08:27.880 --> 00:08:29.690
I can factor the scalar out.

00:08:29.690 --> 00:08:33.190
In other words, if the three
vectors that are being tested

00:08:33.190 --> 00:08:36.790
in my three-dimensional
space have the form alpha 1,

00:08:36.790 --> 00:08:42.549
c alpha 2, and alpha 3, D of
alpha 1 comma, c alpha 2 comma,

00:08:42.549 --> 00:08:44.340
alpha 3 will be--

00:08:44.340 --> 00:08:45.970
see, factor of the c out.

00:08:45.970 --> 00:08:50.200
c times D of alpha
1, alpha 2, alpha 3.

00:08:50.200 --> 00:08:53.950
And it's extremely important
to notice that the c does not

00:08:53.950 --> 00:08:58.360
have to be a scalar multiple of
all three vectors in the input.

00:08:58.360 --> 00:09:00.610
Notice, that the
fact that the c was

00:09:00.610 --> 00:09:05.230
multiplying one of the vectors
is enough to factor the c out.

00:09:05.230 --> 00:09:07.660
Without belaboring this
point, all I wanted to say

00:09:07.660 --> 00:09:10.950
was, that if the c were
multiplying each of the alphas,

00:09:10.950 --> 00:09:14.230
in other words, if this
were D of c alpha 1 comma,

00:09:14.230 --> 00:09:19.900
c alpha 2 comma, c alpha 3, this
would equal c cubed D alpha 1,

00:09:19.900 --> 00:09:21.880
alpha 2, alpha 3,
because we would

00:09:21.880 --> 00:09:24.490
fact about the c each time--

00:09:24.490 --> 00:09:26.860
one for each vector.

00:09:26.860 --> 00:09:30.270
But let me illustrate this
in terms of a 2 by 2--

00:09:30.270 --> 00:09:32.770
a two-dimensional
example for you.

00:09:32.770 --> 00:09:35.170
Suppose I'm dealing in
two-dimensional space,

00:09:35.170 --> 00:09:39.170
and I'm dealing with respect to
a particular basis, u1 and u2.

00:09:39.170 --> 00:09:42.460
And let's suppose that relative
to that basis, u1 and u2,

00:09:42.460 --> 00:09:45.040
alpha 1 is the
vector 3 comma, 1,

00:09:45.040 --> 00:09:49.570
beta 1 is the vector
6 comma, 7, and beta 2

00:09:49.570 --> 00:09:53.930
is the vector 4 common, 5.

00:09:53.930 --> 00:09:57.460
Let's recall the fact
that, one way or another,

00:09:57.460 --> 00:10:00.190
we already know how to
expand 2 by 2 determinants,

00:10:00.190 --> 00:10:02.350
even though we may
not know rigorously

00:10:02.350 --> 00:10:04.000
why the rules were chosen.

00:10:04.000 --> 00:10:07.510
The idea is, what would
alpha 1 plus beta 1 be?

00:10:07.510 --> 00:10:11.950
It would be the 2-tuple whose
first entry was 3 plus 6

00:10:11.950 --> 00:10:15.190
and whose second
entry was 1 plus 7.

00:10:15.190 --> 00:10:18.985
In other words, the first
row of the determinant

00:10:18.985 --> 00:10:22.170
that I'm going to be talking
about has as its entries

00:10:22.170 --> 00:10:24.940
3 plus 6 and 1 plus 7.

00:10:24.940 --> 00:10:28.960
Beta 2, which will make up the
second row with my determinant,

00:10:28.960 --> 00:10:31.580
has as its components 4 and 5.

00:10:31.580 --> 00:10:34.840
So the second row of
my determinant is 4, 5.

00:10:34.840 --> 00:10:37.720
And using the usual rule for
multiplying determinants,

00:10:37.720 --> 00:10:43.300
this is 5 times 9 minus
4 times 8, which is 13.

00:10:43.300 --> 00:10:45.790
And by the way, just to
refresh your memories here,

00:10:45.790 --> 00:10:49.840
what if I computed in terms of
my D language and the alpha 1,

00:10:49.840 --> 00:10:52.090
alpha 2, and beta
2 is used here?

00:10:52.090 --> 00:11:00.370
This is D of alpha 1 plus
beta 1 comma, beta 2.

00:11:00.370 --> 00:11:05.140
On the other hand, what would
D of alpha 1, beta 2 be?

00:11:05.140 --> 00:11:07.960
D of alpha 1 beta
2 would be the 2

00:11:07.960 --> 00:11:11.800
by 2 determinant, whose
first row was 3, 1,

00:11:11.800 --> 00:11:14.970
and whose second row was 4, 5.

00:11:14.970 --> 00:11:20.320
D of alpha 1, beta 2
would be the determinant

00:11:20.320 --> 00:11:23.670
whose first row--

00:11:23.670 --> 00:11:24.230
I'm sorry.

00:11:24.230 --> 00:11:27.960
D of beta 1 comma, beta 2,
would be the determinant

00:11:27.960 --> 00:11:32.590
whose first row was 6, 7 and
whose second row was 4, 5.

00:11:32.590 --> 00:11:36.240
In other words, these matrices
here, what is this again?

00:11:36.240 --> 00:11:42.510
This is D of alpha 1, beta 2.

00:11:42.510 --> 00:11:50.300
And this one here is
D of beta 1, beta 2.

00:11:50.300 --> 00:11:51.830
And notice, that
this determinant

00:11:51.830 --> 00:11:54.440
by the traditional way
of expanding is 11.

00:11:54.440 --> 00:11:57.380
This determinant is 30
minus 28, which is 2.

00:11:57.380 --> 00:11:59.300
11 plus 2 is 13.

00:11:59.300 --> 00:12:02.300
And we see that, at least
in this case, D of alpha 1

00:12:02.300 --> 00:12:05.380
plus beta 1 comma, beta
2, is the same as D

00:12:05.380 --> 00:12:10.070
of alpha 1 comma, beta 2 plus
D of beta 1 comma, beta 2.

00:12:10.070 --> 00:12:13.640
So at least the first
part of property three

00:12:13.640 --> 00:12:16.460
is obeyed in this
particular example.

00:12:16.460 --> 00:12:18.710
And to show what the
second property is,

00:12:18.710 --> 00:12:20.540
let's suppose alpha 1 now--

00:12:20.540 --> 00:12:21.590
I pick a new alpha 1.

00:12:21.590 --> 00:12:23.570
We'll call that 2 comma, 6.

00:12:23.570 --> 00:12:26.300
Suppose alpha 2 is 3 comma, 4.

00:12:26.300 --> 00:12:30.650
Then the determinant of alpha
1 and alpha 2 would be what?

00:12:30.650 --> 00:12:33.583
2, 6, 3, 4.

00:12:33.583 --> 00:12:34.250
And that's what?

00:12:34.250 --> 00:12:37.130
8 minus 18, which is minus 10.

00:12:37.130 --> 00:12:40.580
On the other hand,
notice that a common--

00:12:40.580 --> 00:12:42.680
that this vector
here could have been

00:12:42.680 --> 00:12:45.890
written as twice 1 comma, 3.

00:12:45.890 --> 00:12:47.900
I can, therefore,
factor out the 2.

00:12:47.900 --> 00:12:49.670
See, notice this very carefully.

00:12:49.670 --> 00:12:54.950
Notice that the alphas, which
are written in a row here--

00:12:54.950 --> 00:12:56.450
one row this way--

00:12:56.450 --> 00:13:01.080
each alpha forms a row when I
use the matrix interpretation.

00:13:01.080 --> 00:13:06.930
So what I'm saying is, that
2 comma, 6 is one vector.

00:13:06.930 --> 00:13:10.070
It's a 2-tuple with respect
to the basis u1 and u2.

00:13:10.070 --> 00:13:13.490
All I'm saying is factor out
the 2 from the first row,

00:13:13.490 --> 00:13:14.750
from the first vector.

00:13:14.750 --> 00:13:19.670
That leaves me with 2
outside, 1, 3, 3, 4 inside.

00:13:19.670 --> 00:13:21.880
And notice, that 4 times--

00:13:21.880 --> 00:13:26.220
4 minus 9 is minus 5
times 2 is also minus 10.

00:13:26.220 --> 00:13:29.090
Notice that these, indeed,
are equal, and notice

00:13:29.090 --> 00:13:33.140
that I could factor out the 2
simply by virtue of the fact

00:13:33.140 --> 00:13:35.600
that it was a common
factor in one row.

00:13:35.600 --> 00:13:39.020
It did not have to be a
common factor in both rows.

00:13:39.020 --> 00:13:41.810
In fact, if it had been a
common factor in both rows,

00:13:41.810 --> 00:13:44.540
I would have had to
factor out a 2 twice,

00:13:44.540 --> 00:13:47.240
in other words, a 4 over here.

00:13:47.240 --> 00:13:49.740
Now, I can go on with
things like this,

00:13:49.740 --> 00:13:52.790
but, again, I want to
stress the overview.

00:13:52.790 --> 00:13:56.480
And the key point is that these
three simple properties, which

00:13:56.480 --> 00:13:59.210
I've just called simply one,
two, and three, those three

00:13:59.210 --> 00:14:03.740
properties that I've
programmed the D machine with

00:14:03.740 --> 00:14:06.650
are enough to
completely determine

00:14:06.650 --> 00:14:09.980
D. In other words, if I wanted
to be dramatic over here,

00:14:09.980 --> 00:14:14.660
the key point is that one, two,
and three completely determine

00:14:14.660 --> 00:14:17.240
D. I'll put an exclamation
point down there.

00:14:17.240 --> 00:14:20.480
Because what I claim is, that
once these three properties are

00:14:20.480 --> 00:14:23.690
obeyed, there is no
possible way for D

00:14:23.690 --> 00:14:28.450
to behave other than in a
very unique well-defined way.

00:14:28.450 --> 00:14:31.580
That D now has a perfectly
well-defined structure.

00:14:31.580 --> 00:14:34.130
Let me give you some
examples of that structure.

00:14:34.130 --> 00:14:35.990
I'll just prove a
couple of theorems.

00:14:35.990 --> 00:14:38.120
I'll prove them in
two-dimensional space,

00:14:38.120 --> 00:14:40.580
leaving it for the
exercises to work

00:14:40.580 --> 00:14:44.120
on higher dimensional space, but
this doesn't get too cluttered.

00:14:44.120 --> 00:14:46.760
First of all, what I claim
is that the D machine

00:14:46.760 --> 00:14:49.190
is so finicky, that
if you interchange

00:14:49.190 --> 00:14:53.780
the order in which the
two vectors are given,

00:14:53.780 --> 00:14:58.700
you change the
sign of the output.

00:14:58.700 --> 00:15:01.820
In other words, D of alpha
1, alpha 2, in that order,

00:15:01.820 --> 00:15:05.360
is the negative of D
of alpha 2, alpha 1.

00:15:05.360 --> 00:15:07.910
And the proof, again,
follows very nicely

00:15:07.910 --> 00:15:10.040
in terms of our game structure.

00:15:10.040 --> 00:15:13.190
The gimmick to begin with is
that we must be clever enough

00:15:13.190 --> 00:15:16.610
to decide that we'll compute
the determinant of alpha 1

00:15:16.610 --> 00:15:20.210
plus alpha 2 comma,
alpha 1 plus alpha 2.

00:15:20.210 --> 00:15:22.380
On the one hand, by
our second property,

00:15:22.380 --> 00:15:26.390
since two of the vectors
making up the set being tested

00:15:26.390 --> 00:15:29.960
are equal, it means that
that determinant must be 0.

00:15:29.960 --> 00:15:31.820
On the other hand,
by property three,

00:15:31.820 --> 00:15:35.780
by linearity, splitting
this up as two terms,

00:15:35.780 --> 00:15:40.730
notice that this is D of alpha
1 comma, alpha 1 plus alpha 2

00:15:40.730 --> 00:15:45.420
plus D of alpha 2 comma,
alpha 1 plus alpha 2.

00:15:45.420 --> 00:15:47.390
In other words,
this result here.

00:15:47.390 --> 00:15:51.470
Now, in turn, noticing
that these form a sum,

00:15:51.470 --> 00:15:54.080
I can rewrite this one as what?

00:15:54.080 --> 00:16:00.620
D of alpha 1 comma, alpha 1 plus
D of alpha 1 comma, alpha 2.

00:16:00.620 --> 00:16:04.310
This one is D of
alpha 2 comma, alpha 1

00:16:04.310 --> 00:16:08.090
plus D of alpha
2 comma, alpha 2.

00:16:08.090 --> 00:16:10.850
I've just written this whole
thing out on this next line.

00:16:10.850 --> 00:16:16.500
By property two, D of alpha
1 comma, alpha 1 must be 0.

00:16:16.500 --> 00:16:19.130
D of alpha 2 comma,
alpha 2 must be 0,

00:16:19.130 --> 00:16:24.380
because after all, you see,
two vectors are equal in this.

00:16:24.380 --> 00:16:25.850
So what do I have left?

00:16:25.850 --> 00:16:30.950
Comparing this with this, I have
the D of alpha 1 comma, alpha 2

00:16:30.950 --> 00:16:34.520
plus D of alpha 2
comma, alpha 1 is 0.

00:16:34.520 --> 00:16:37.130
And that means that the
number-- and keep that in mind,

00:16:37.130 --> 00:16:38.510
the determinant is a number.

00:16:38.510 --> 00:16:40.790
It maps the n vectors
into a number, which

00:16:40.790 --> 00:16:42.380
is either 0 or non-zero.

00:16:42.380 --> 00:16:45.260
But the determinant of
alpha 1 comma, alpha 2,

00:16:45.260 --> 00:16:48.890
therefore, must be the negative
of the term of alpha 2,

00:16:48.890 --> 00:16:52.010
alpha 1, because their sum is 0.

00:16:52.010 --> 00:16:54.170
The second theorem--
and this is the one

00:16:54.170 --> 00:16:58.280
that relates determinants to
matrices, a very fantastic

00:16:58.280 --> 00:17:01.850
result, one that has tremendous
practical application that

00:17:01.850 --> 00:17:04.319
will also talk about
later in the lecture.

00:17:04.319 --> 00:17:08.359
And that is, that if I take
any one of my input vectors

00:17:08.359 --> 00:17:13.490
and replace it by itself, plus
a scalar multiple of another,

00:17:13.490 --> 00:17:15.740
I do not change the determinant.

00:17:15.740 --> 00:17:19.910
In other words, for example,
if I replace alpha 1 by alpha 1

00:17:19.910 --> 00:17:24.550
plus a scalar multiple of alpha
2, and I leave alpha 2 alone,

00:17:24.550 --> 00:17:27.530
the determinant of
alpha 1 and alpha 2

00:17:27.530 --> 00:17:30.170
will be the same as the
determinant of alpha 1

00:17:30.170 --> 00:17:33.140
plus c alpha 2 comma, alpha 2.

00:17:33.140 --> 00:17:35.570
And again, the
proof is very easy,

00:17:35.570 --> 00:17:38.870
namely, look at the
expression D of alpha 1

00:17:38.870 --> 00:17:41.390
plus c alpha 2 comma, alpha 2.

00:17:41.390 --> 00:17:44.120
Use the linearity
property that this

00:17:44.120 --> 00:17:51.050
is D of alpha 1 comma, alpha
2 plus D of c alpha 2 comma,

00:17:51.050 --> 00:17:51.770
alpha 2.

00:17:54.390 --> 00:17:57.530
Then use the second part
of the linearity property

00:17:57.530 --> 00:18:00.780
that the constant factor, c,
can be taken outside here.

00:18:00.780 --> 00:18:03.410
So this becomes D
of alpha 1, alpha 2

00:18:03.410 --> 00:18:07.520
plus c times D of
alpha 2 comma, alpha 2.

00:18:07.520 --> 00:18:11.780
And notice, that since
alpha 2 is repeated here,

00:18:11.780 --> 00:18:13.310
this determinant is 0.

00:18:13.310 --> 00:18:14.930
And consequently,
what we've proven

00:18:14.930 --> 00:18:18.302
is that this is equal to this.

00:18:18.302 --> 00:18:20.010
Now, I've just proven
those two theorems,

00:18:20.010 --> 00:18:21.620
because that's about all I need.

00:18:21.620 --> 00:18:23.780
Let me show you now,
that if I had never

00:18:23.780 --> 00:18:27.140
seen that shortcut
method of expanding a 2

00:18:27.140 --> 00:18:29.780
by 2 determinant, as
learned in high school,

00:18:29.780 --> 00:18:32.630
how these three
properties uniquely

00:18:32.630 --> 00:18:34.265
determine what D has to mean.

00:18:34.265 --> 00:18:36.890
In other words, why I said that
these three properties uniquely

00:18:36.890 --> 00:18:38.630
determine D.

00:18:38.630 --> 00:18:42.020
As an example, let me take a
two-dimensional vector space

00:18:42.020 --> 00:18:42.950
again.

00:18:42.950 --> 00:18:47.150
Let me pick u1 and u2
as a specific basis,

00:18:47.150 --> 00:18:48.260
and that's important.

00:18:48.260 --> 00:18:51.200
I've picked a specific
basis, u1, u2.

00:18:51.200 --> 00:18:53.000
Now, I pick any two vectors.

00:18:53.000 --> 00:18:56.990
Since v is a two-dimensional
space, I pick any two vectors--

00:18:56.990 --> 00:18:59.210
alpha 1 and alpha 2.

00:18:59.210 --> 00:19:01.790
And because of
this notation, this

00:19:01.790 --> 00:19:05.360
means that alpha 1 and alpha
2 are both linear combinations

00:19:05.360 --> 00:19:06.830
of u1 and u2.

00:19:06.830 --> 00:19:10.130
Say alpha 1 is this,
and alpha 2 is this.

00:19:10.130 --> 00:19:13.520
Therefore, what is D of
alpha 1 comma, alpha 2?

00:19:13.520 --> 00:19:20.460
Well, by direct substitution,
D of alpha 1, alpha 2, just

00:19:20.460 --> 00:19:23.430
replace alpha 1 by what
it's equal to here, alpha 2

00:19:23.430 --> 00:19:25.020
by what it's equal to here.

00:19:25.020 --> 00:19:29.290
And we get that D of alpha 1,
alpha 2 is this expression.

00:19:29.290 --> 00:19:31.800
Now, we use the
linearity property.

00:19:31.800 --> 00:19:34.230
We treat this as one
number for the time being

00:19:34.230 --> 00:19:36.090
and split this up as a sum.

00:19:36.090 --> 00:19:38.040
In other words,
it's going to be D

00:19:38.040 --> 00:19:44.940
of this term comma, this
whole term plus D of this term

00:19:44.940 --> 00:19:47.020
comma, this whole term.

00:19:47.020 --> 00:19:51.150
In other words, if I do that,
this breaks down to this.

00:19:51.150 --> 00:19:54.300
Now, I notice that
each of these two

00:19:54.300 --> 00:19:59.760
is a 2-tuple in which the second
entry is a sum of two terms.

00:19:59.760 --> 00:20:02.730
So I now split
this up into what?

00:20:02.730 --> 00:20:09.456
D of this comma, this plus
d of this comma, this.

00:20:09.456 --> 00:20:15.180
This term becomes D of this
comma, this term plus D

00:20:15.180 --> 00:20:17.940
of this comma, this term.

00:20:17.940 --> 00:20:20.130
And I hope it
doesn't sound boorish

00:20:20.130 --> 00:20:23.370
on my part to keep saying
"D of this comma, this."

00:20:23.370 --> 00:20:25.800
I prefer to say that
for you so that you

00:20:25.800 --> 00:20:27.600
can watch what I'm
doing, and then

00:20:27.600 --> 00:20:33.000
have you just be able afterwards
to read what these things mean.

00:20:33.000 --> 00:20:35.250
Now, when I'm down
to here, notice

00:20:35.250 --> 00:20:37.740
that by my second
part of linearity

00:20:37.740 --> 00:20:41.520
I can factor out
the a11 from here.

00:20:41.520 --> 00:20:44.340
I can factor out the
a21, because it's

00:20:44.340 --> 00:20:46.060
a common factor of this term.

00:20:46.060 --> 00:20:48.510
In other words, I
can write this term

00:20:48.510 --> 00:20:53.220
as a11, a21, D of u1 comma, u2.

00:20:53.220 --> 00:20:55.540
And again, sparing
you the details,

00:20:55.540 --> 00:21:00.870
notice I can factor out an
a11, a22 from this term.

00:21:00.870 --> 00:21:06.210
I can factor out an a12,
a21 from this term, an a12,

00:21:06.210 --> 00:21:08.460
a22 from this term.

00:21:08.460 --> 00:21:12.870
And that this now can be
written in this particular way.

00:21:12.870 --> 00:21:16.560
Now, what properties do I
know that D is endowed with?

00:21:16.560 --> 00:21:18.480
I know, first of
all, that whenever

00:21:18.480 --> 00:21:22.050
D operates on a set of vectors
where at least two of them

00:21:22.050 --> 00:21:25.360
are equal, D must
give 0 as an output.

00:21:25.360 --> 00:21:28.620
So D of u1 comma, u1 is 0 again.

00:21:28.620 --> 00:21:32.640
u1 comma, u2 is the
particular basis with respect

00:21:32.640 --> 00:21:35.400
to which I define v, you see.

00:21:35.400 --> 00:21:41.280
Therefore, by property one,
D of u1 comma, u2 must be 1.

00:21:41.280 --> 00:21:46.860
D of u2 comma, u1 is just the
permuted order of u1 and u2.

00:21:46.860 --> 00:21:52.800
Therefore, by our first theorem,
that must be minus D of u1, u2.

00:21:52.800 --> 00:21:54.930
Therefore, it must be minus 1.

00:21:54.930 --> 00:21:58.260
And finally, D of
u2 comma, u2 is 0.

00:21:58.260 --> 00:22:00.210
And if I now collect
everything that I

00:22:00.210 --> 00:22:02.200
have left here, what do I have?

00:22:02.200 --> 00:22:08.020
I have the D of alpha 1 comma,
alpha 2 is equal to what?

00:22:08.020 --> 00:22:15.460
It's equal to a11, a22, see,
times 1, minus a12, a21.

00:22:15.460 --> 00:22:17.700
In other words, this
is the determinant

00:22:17.700 --> 00:22:20.310
of alpha 1 comma, alpha 2.

00:22:20.310 --> 00:22:24.210
And let me, again, put an
exclamation point here.

00:22:24.210 --> 00:22:26.400
Because if you now go
back to the high school

00:22:26.400 --> 00:22:29.010
way of computing
this determinant--

00:22:29.010 --> 00:22:30.510
remember how we did it?

00:22:30.510 --> 00:22:32.060
What would we have obtained?

00:22:32.060 --> 00:22:34.050
And, again, let me just come
back to this board for a second

00:22:34.050 --> 00:22:34.580
here.

00:22:34.580 --> 00:22:36.835
Remember how you used the
matrix of coefficients?

00:22:36.835 --> 00:22:38.460
So take the determinant,
would be what?

00:22:38.460 --> 00:22:44.690
a11, a22 minus a12, a21.

00:22:44.690 --> 00:22:47.820
So, again, notice two
things that happen here.

00:22:47.820 --> 00:22:49.860
First of all, I
get the same answer

00:22:49.860 --> 00:22:51.570
as I would have got
the traditional way.

00:22:51.570 --> 00:22:53.750
And second, just
as a minor aside

00:22:53.750 --> 00:22:56.170
that I'll emphasize more
later in the lecture

00:22:56.170 --> 00:22:58.650
and also in the
exercises, notice

00:22:58.650 --> 00:23:01.980
that you can begin to
suspect that the actual value

00:23:01.980 --> 00:23:04.440
of the determinant of
alpha 1 and alpha 2

00:23:04.440 --> 00:23:07.410
should depend on what
basis was chosen.

00:23:07.410 --> 00:23:09.870
Because relative to
a different basis,

00:23:09.870 --> 00:23:12.570
notice that the
coefficients might very well

00:23:12.570 --> 00:23:15.300
be different for
alpha 1 and alpha 2.

00:23:15.300 --> 00:23:18.090
But I don't want to
mention that right now.

00:23:18.090 --> 00:23:20.190
I think, as I say,
what the amazing result

00:23:20.190 --> 00:23:22.590
is, that what I meant by
saying that these three

00:23:22.590 --> 00:23:26.250
properties completely
determine D, is the fact

00:23:26.250 --> 00:23:27.900
that with these
three properties it

00:23:27.900 --> 00:23:32.410
turns out that the high school
definition was ironclad.

00:23:32.410 --> 00:23:35.350
Meaning, there was
no other possible way

00:23:35.350 --> 00:23:37.660
to define what the
determinant should

00:23:37.660 --> 00:23:41.800
be if you wanted these three
properties to be obeyed.

00:23:41.800 --> 00:23:43.690
By the way, I have
some quick checks.

00:23:43.690 --> 00:23:45.400
Notice that relative
to the basis

00:23:45.400 --> 00:23:48.850
u1, u2, u1 can be
written this way,

00:23:48.850 --> 00:23:50.770
u2 can be written this way.

00:23:50.770 --> 00:23:53.890
We know that D of
u1, u2 should be 1.

00:23:53.890 --> 00:23:57.310
And using the old fashioned
way for checking this,

00:23:57.310 --> 00:23:58.690
what would the determinant be?

00:23:58.690 --> 00:24:03.880
It would be 1 times 1 minus
0 times 0, which is 1.

00:24:03.880 --> 00:24:08.170
Secondly, we also know that
property two should yield 0

00:24:08.170 --> 00:24:12.220
as a determinant if these two
vectors that were making up

00:24:12.220 --> 00:24:13.750
the input were equal.

00:24:13.750 --> 00:24:17.230
Let's call the vectors au1, bu2.

00:24:17.230 --> 00:24:19.930
So the 2 by 2 determinant
I would get in this case

00:24:19.930 --> 00:24:21.580
is ab, ab.

00:24:21.580 --> 00:24:23.890
And if I expand that
determinant, it's what?

00:24:23.890 --> 00:24:28.970
a times b minus a
times b, which is 0.

00:24:28.970 --> 00:24:33.450
And now, let me come
back to that idea of what

00:24:33.450 --> 00:24:35.460
motivated the whole
block of material

00:24:35.460 --> 00:24:39.490
here, the trouble with
writing vectors as n-tuples.

00:24:39.490 --> 00:24:42.870
That there really is something
that requires great care.

00:24:42.870 --> 00:24:46.690
In advanced applications, one
must always be wary of this.

00:24:46.690 --> 00:24:49.410
I am not going to give you the
advanced applications here.

00:24:49.410 --> 00:24:52.500
All I want you to do
is to become prepared

00:24:52.500 --> 00:24:54.480
against the pitfalls.

00:24:54.480 --> 00:24:57.120
And the thing is, that in
dealing with determinants,

00:24:57.120 --> 00:25:00.900
as I said before, you must be
very, very careful about what

00:25:00.900 --> 00:25:04.380
basis you're referring to
for a given vector space.

00:25:04.380 --> 00:25:07.500
Obviously, the vectors do
not depend on the basis,

00:25:07.500 --> 00:25:09.420
but their representation does.

00:25:09.420 --> 00:25:11.190
Let me give you a for instance.

00:25:11.190 --> 00:25:17.250
Using v and u1 and u2
as an example number 1,

00:25:17.250 --> 00:25:21.220
suppose we let alpha 1 be
the 2-tuple, 3 comma, 4.

00:25:21.220 --> 00:25:23.650
In other words, 3u1 plus 4u2.

00:25:23.650 --> 00:25:26.370
And let alpha 2 be 2 comma, 5.

00:25:26.370 --> 00:25:28.950
Then by what we've just
proven, the determinant

00:25:28.950 --> 00:25:31.920
of alpha 1 comma,
alpha 2 must be

00:25:31.920 --> 00:25:34.110
the determinant of what matrix?

00:25:34.110 --> 00:25:36.810
The one whose first row
is 3 comma, 4, and whose

00:25:36.810 --> 00:25:38.940
second row is 2 comma, 5.

00:25:38.940 --> 00:25:41.730
If I compute that determinant--
and by the way, notice,

00:25:41.730 --> 00:25:43.290
now that I know
that the shortcut

00:25:43.290 --> 00:25:45.582
way has to be the
right answer, I

00:25:45.582 --> 00:25:47.040
don't do this the
long way anymore.

00:25:47.040 --> 00:25:51.630
I just say, OK, it's 3 times
5 minus 2 times 4 15 minus 8,

00:25:51.630 --> 00:25:52.590
which is 7.

00:25:52.590 --> 00:25:56.670
So the determinant of
alpha 1, alpha 2 is 7.

00:25:56.670 --> 00:25:57.930
So far so good.

00:25:57.930 --> 00:26:00.450
But let me point out
the following thing.

00:26:00.450 --> 00:26:04.320
Notice, that alpha 1 and alpha
2 are also linearly independent.

00:26:04.320 --> 00:26:09.750
Namely, 3 common, 4 is not a
scalar multiple of 2 comma, 5.

00:26:09.750 --> 00:26:12.480
Consequently, since alpha
1 and alpha 2 our linearly

00:26:12.480 --> 00:26:16.260
independent, and since v
is a two-dimensional space,

00:26:16.260 --> 00:26:20.430
it means that alpha 1 and alpha
2 are themselves a basis for v.

00:26:20.430 --> 00:26:24.570
In other words, v is equal to
the space spanned by alpha 1

00:26:24.570 --> 00:26:26.400
and alpha 2 as a basis.

00:26:26.400 --> 00:26:28.590
Notice, that relative
to this new basis,

00:26:28.590 --> 00:26:34.140
alpha 1 comma, alpha 2, alpha
1 is 1 alpha 1 plus 0 alpha 2,

00:26:34.140 --> 00:26:37.740
alpha 2 is 0 alpha
1 plus alpha 2.

00:26:37.740 --> 00:26:40.560
And therefore, using
the traditional method

00:26:40.560 --> 00:26:42.780
of computing the
determinant, notice

00:26:42.780 --> 00:26:45.900
that the determinant of
alpha 1 comma, alpha 2

00:26:45.900 --> 00:26:48.990
relative to the basis
alpha 1 and alpha 2

00:26:48.990 --> 00:26:50.120
would be what determinant?

00:26:50.120 --> 00:26:51.953
It would be to the
determinant of the matrix

00:26:51.953 --> 00:26:55.980
whose first row was 1, 0, and
whose second role was 0, 1.

00:26:55.980 --> 00:26:57.750
And that is 1.

00:26:57.750 --> 00:26:59.190
This looks like a contradiction.

00:26:59.190 --> 00:27:01.830
You see, on the one hand,
we have the D of alpha 1

00:27:01.830 --> 00:27:03.420
and alpha 2 is 1.

00:27:03.420 --> 00:27:09.210
But down here, we just saw that
D of alpha 1 and alpha 2 was 7.

00:27:09.210 --> 00:27:11.870
Which is correct?

00:27:11.870 --> 00:27:14.420
Well, the answer is,
they're both correct.

00:27:14.420 --> 00:27:17.630
That the first observation
is, that if the determinant

00:27:17.630 --> 00:27:21.800
of alpha 1 and alpha
2 is not 0, the value

00:27:21.800 --> 00:27:24.090
depends on the particular basis.

00:27:24.090 --> 00:27:26.870
In other words, if
the determinant is 0,

00:27:26.870 --> 00:27:29.030
it turns out that
no matter what basis

00:27:29.030 --> 00:27:32.150
you use to represent the
determinant of alpha 1

00:27:32.150 --> 00:27:36.005
and alpha 2, you will get
0 once the terminator is

00:27:36.005 --> 00:27:37.340
0 in one basis.

00:27:37.340 --> 00:27:40.160
And if the determinant
is not 0 with respect

00:27:40.160 --> 00:27:43.880
to a particular basis, it
will be non-zero with respect

00:27:43.880 --> 00:27:45.200
to all bases.

00:27:45.200 --> 00:27:49.620
But what non-zero number it will
be does depend on the basis.

00:27:49.620 --> 00:27:51.950
And that was why way
back at the beginning

00:27:51.950 --> 00:27:57.080
we told the D machine simply
to give a non-zero output

00:27:57.080 --> 00:28:01.670
if the input was a set of n
linearly-independent vectors.

00:28:01.670 --> 00:28:05.960
In summary, when one says that
the determinant of alpha 1

00:28:05.960 --> 00:28:09.350
and alpha 2 is 7,
it's tacitly assumed

00:28:09.350 --> 00:28:14.330
that D is being referred to with
respect to the particular basis

00:28:14.330 --> 00:28:15.770
u1, u2.

00:28:15.770 --> 00:28:19.010
On the other hand, when one says
that D of alpha 1 and alpha 2

00:28:19.010 --> 00:28:22.130
is 1, it's tacitly
assumed that the basis

00:28:22.130 --> 00:28:26.810
that we're using to express
v is alpha 1 and alpha 2.

00:28:26.810 --> 00:28:30.440
Again, I'll drill that
more in the exercises.

00:28:30.440 --> 00:28:32.810
Let me go on now
to generalize what

00:28:32.810 --> 00:28:35.510
happens in n-dimensional
space, keeping in mind

00:28:35.510 --> 00:28:37.370
the fact that when
we generalize what

00:28:37.370 --> 00:28:41.210
happens in n-dimensional
space, the actual proofs become

00:28:41.210 --> 00:28:44.690
messier, but the theory
remains very much the same.

00:28:44.690 --> 00:28:49.040
I prefer to leave the messy
details to the exercises,

00:28:49.040 --> 00:28:51.080
either optional or
required, depending

00:28:51.080 --> 00:28:53.490
on how hard the
exercises may be.

00:28:53.490 --> 00:28:55.790
But let me summarize
what the results are

00:28:55.790 --> 00:28:58.010
for any n-dimensional
space, keeping

00:28:58.010 --> 00:29:00.440
in mind we've proven
the results rigorously

00:29:00.440 --> 00:29:02.780
for the case n equals 2.

00:29:02.780 --> 00:29:04.490
The generalization is this.

00:29:04.490 --> 00:29:06.470
If I have an n-dimensional
vector space,

00:29:06.470 --> 00:29:11.000
v, with respect to a
particular basis, u1 up to un,

00:29:11.000 --> 00:29:16.010
and if alpha 1 up to alpha n
are n vectors chosen from v so

00:29:16.010 --> 00:29:19.490
that they are linear
combinations of the us,

00:29:19.490 --> 00:29:22.040
say, in the traditional
way that we've written this

00:29:22.040 --> 00:29:24.860
all the time, it turns
out the following.

00:29:24.860 --> 00:29:28.820
That the determinant of
alpha 1 up to alpha n--

00:29:28.820 --> 00:29:31.940
first of all, it's conventional
and convenient to write

00:29:31.940 --> 00:29:34.550
the determinant as if
it were a matrix, only

00:29:34.550 --> 00:29:37.850
replacing the square brackets
by sort of absolute value

00:29:37.850 --> 00:29:39.560
signs-- vertical lines.

00:29:39.560 --> 00:29:44.650
What we do is, notice that alpha
1 is written as an n-tuple,

00:29:44.650 --> 00:29:47.060
a11 up to a1n.

00:29:47.060 --> 00:29:49.460
In other words, the first
rule of the determinant

00:29:49.460 --> 00:29:54.470
represents alpha 1 as an n-tuple
vector relative to the basis

00:29:54.470 --> 00:29:55.820
u1 up to un.

00:29:55.820 --> 00:29:59.450
And a similar thing holds
for alpha 2 through alpha n.

00:29:59.450 --> 00:30:01.880
And you may remember, I
told you what the recipe

00:30:01.880 --> 00:30:04.442
was when we were dealing with--

00:30:04.442 --> 00:30:05.900
I told you what
the recipe was when

00:30:05.900 --> 00:30:08.300
we were dealing with cross
products and the like.

00:30:08.300 --> 00:30:10.130
And the idea is simply this.

00:30:10.130 --> 00:30:12.650
What you do is is you start
in the upper left-hand corner

00:30:12.650 --> 00:30:14.250
writing a plus sign.

00:30:14.250 --> 00:30:18.110
Then you alternate going
along rows and columns

00:30:18.110 --> 00:30:21.170
in any order you want writing
plus, minus, plus, minus,

00:30:21.170 --> 00:30:23.690
et cetera, plus, minus,
plus, minus, et cetera.

00:30:23.690 --> 00:30:26.150
Pick any row or
column that you want.

00:30:26.150 --> 00:30:29.090
And then you go down that
row or column factoring

00:30:29.090 --> 00:30:32.960
out a particular term, the plus
sign telling you to take out

00:30:32.960 --> 00:30:37.280
the term as it is, the minus
sign telling you to take out

00:30:37.280 --> 00:30:40.910
the term and change its sign,
and you multiply that term

00:30:40.910 --> 00:30:44.030
by the n minus 1 by n
minus 1 matrix that's

00:30:44.030 --> 00:30:47.390
left when you strike out the row
and column in which that term

00:30:47.390 --> 00:30:48.210
occurs.

00:30:48.210 --> 00:30:50.360
Now, if that still sounds
like a tongue-twister,

00:30:50.360 --> 00:30:54.050
let's do this in terms of
a specific semi-abstract,

00:30:54.050 --> 00:30:56.960
semi-concrete,
four-dimensional case.

00:30:56.960 --> 00:31:00.380
Namely, let's suppose v is a
four-dimensional vector space

00:31:00.380 --> 00:31:04.520
relative to a particular
basis, u1, u2, u3, and u4.

00:31:04.520 --> 00:31:09.670
Suppose alpha 1, alpha
2, alpha 3, and alpha 4

00:31:09.670 --> 00:31:14.360
are these four specific
vectors of v. And again--

00:31:14.360 --> 00:31:16.190
I can't keep emphasizing
this too much,

00:31:16.190 --> 00:31:18.800
even though I hope some of you
are bored because you know it

00:31:18.800 --> 00:31:19.610
so well--

00:31:19.610 --> 00:31:21.860
it's always understood
when I write this

00:31:21.860 --> 00:31:25.820
that the components are
relative to u1, u2, u3, u4.

00:31:25.820 --> 00:31:31.340
For example, this is 3u1
plus 5u2 plus 7u3 plus 2u4.

00:31:31.340 --> 00:31:34.670
Now, the traditional way of
expanding this determinant

00:31:34.670 --> 00:31:38.640
is you write down the
rows as the n-tuples.

00:31:38.640 --> 00:31:41.610
See, you write down-- this is
your first row, second row,

00:31:41.610 --> 00:31:43.140
third row, fourth row.

00:31:43.140 --> 00:31:46.910
So you notice that
the determinant

00:31:46.910 --> 00:31:52.520
is an n by an array of numbers
that you have four vectors.

00:31:52.520 --> 00:31:55.432
Each vector is a
4-tuple, and this is

00:31:55.432 --> 00:31:56.640
how you get this determinant.

00:31:56.640 --> 00:31:57.780
Now, what do we do next?

00:31:57.780 --> 00:31:59.360
Let's say, for the
sake of argument,

00:31:59.360 --> 00:32:03.560
I elect to expand this
determinant along the top row.

00:32:03.560 --> 00:32:05.970
I first take the 1 out.

00:32:05.970 --> 00:32:08.540
Because it has a plus
sign, that comes out as 1.

00:32:08.540 --> 00:32:11.040
I multiply that by
the 3 by 3 determinant

00:32:11.040 --> 00:32:14.790
that's left when I strike out
the row and column in which 1

00:32:14.790 --> 00:32:16.320
appears.

00:32:16.320 --> 00:32:19.650
I take out 2, but make it a
minus, because of the signature

00:32:19.650 --> 00:32:23.160
here, and multiply that by
the 3 by 3 determinant that's

00:32:23.160 --> 00:32:26.730
left when I strike out the row
and column in which 2 appears.

00:32:26.730 --> 00:32:30.330
I factor out 1 as it is,
and multiply that by the 3

00:32:30.330 --> 00:32:32.280
by 3 determinant
that's left when

00:32:32.280 --> 00:32:36.670
I strike out the row and
column in which this 1 appears.

00:32:36.670 --> 00:32:38.475
And finally, I take
out this minus 1

00:32:38.475 --> 00:32:41.800
and change its sign, because
of this minus code over here.

00:32:41.800 --> 00:32:44.580
In other words, this comes out
as a plus 1 multiplied by the 3

00:32:44.580 --> 00:32:47.160
by 3 determinant that's
left when I strike out

00:32:47.160 --> 00:32:50.130
the row and column in
which minus 1 appears in.

00:32:50.130 --> 00:32:52.650
And to make a long story
short, all we're saying

00:32:52.650 --> 00:32:55.800
is that this 4 by
4 determinant can

00:32:55.800 --> 00:33:00.330
be written as a sum of
four 3 by 3 determinants,

00:33:00.330 --> 00:33:04.770
namely, this, which is
precisely what I was

00:33:04.770 --> 00:33:06.960
saying the long way up here.

00:33:06.960 --> 00:33:10.350
Now, what we say is,
each of these 3 by 3s

00:33:10.350 --> 00:33:12.960
can be written as three 2 by 2s.

00:33:12.960 --> 00:33:14.670
Namely, I can factor out--

00:33:14.670 --> 00:33:16.530
say again, I'm going
across the top row.

00:33:16.530 --> 00:33:18.150
I can pick any
row or any column,

00:33:18.150 --> 00:33:20.370
but let me stick to the top
row, like we did in i, j,

00:33:20.370 --> 00:33:21.900
and k, for the time being.

00:33:21.900 --> 00:33:22.950
But this becomes what?

00:33:22.950 --> 00:33:28.410
5 times this 2 by 2
matrix, minus 3 times

00:33:28.410 --> 00:33:34.330
this 2 by 2 matrix, plus 1
times this 2 by 2 matrix.

00:33:34.330 --> 00:33:36.960
In other words, this
expression here.

00:33:36.960 --> 00:33:39.190
I can now do that
for each of these.

00:33:39.190 --> 00:33:43.680
So each of the 3 by 3s
gives me three 2 by 2s.

00:33:43.680 --> 00:33:46.710
So altogether, I
would have 12 2 by 2s

00:33:46.710 --> 00:33:49.320
and go through this whole
mess to compute this thing.

00:33:49.320 --> 00:33:52.290
And this can be very,
very difficult, sure.

00:33:52.290 --> 00:33:54.270
This was only a
four-dimensional case.

00:33:54.270 --> 00:33:56.610
Imagine trying to
apply this technique

00:33:56.610 --> 00:33:59.340
for a 10-dimensional
vector space,

00:33:59.340 --> 00:34:00.810
for the sake of argument.

00:34:00.810 --> 00:34:06.460
It turns out that that
recipe that we called

00:34:06.460 --> 00:34:11.270
theorem two gives us
a tie-in between row

00:34:11.270 --> 00:34:15.780
reduced matrices and a quick
way to compute determinants.

00:34:15.780 --> 00:34:17.578
For example, let's
suppose we still

00:34:17.578 --> 00:34:19.620
wanted to compute the same
determinant that we've

00:34:19.620 --> 00:34:21.370
written down over here.

00:34:21.370 --> 00:34:24.556
Let's call that-- let's
write it again over here.

00:34:24.556 --> 00:34:26.909
What we already
know is, if I were

00:34:26.909 --> 00:34:30.989
to replace the second vector
by the second minus twice

00:34:30.989 --> 00:34:33.840
the first, the determinant
does not change.

00:34:33.840 --> 00:34:35.100
That's what theorem two said.

00:34:35.100 --> 00:34:37.350
If you replace one
vector by itself

00:34:37.350 --> 00:34:38.790
plus a scalar
multiple of another,

00:34:38.790 --> 00:34:40.590
you don't change
the determinant.

00:34:40.590 --> 00:34:43.380
Similarly, if I were
to replace this vector

00:34:43.380 --> 00:34:46.260
by three times the
first vector, I

00:34:46.260 --> 00:34:48.239
would still have the
same determinant.

00:34:48.239 --> 00:34:50.730
And finally, if I were
to replace this vector

00:34:50.730 --> 00:34:52.920
by three times the
first vector, I

00:34:52.920 --> 00:34:55.825
would still have the
same determinant.

00:34:55.825 --> 00:34:58.200
I don't know if you've noticed
what I've been driving at.

00:34:58.200 --> 00:35:01.380
But wasn't what I was saying
here the same computational

00:35:01.380 --> 00:35:05.050
steps that one goes through
in row reducing a matrix?

00:35:05.050 --> 00:35:08.050
In other words, let me
row reduce this matrix

00:35:08.050 --> 00:35:12.720
so I get 0s every place,
say, in my first column,

00:35:12.720 --> 00:35:14.130
except in the upper column.

00:35:14.130 --> 00:35:16.440
By the way, notice
over here I always

00:35:16.440 --> 00:35:20.730
have the habit of putting a 1
in the upper left-hand corner.

00:35:20.730 --> 00:35:24.250
That's simply to
facilitate the arithmetic.

00:35:24.250 --> 00:35:26.460
I hope by this stage of
the game you realize,

00:35:26.460 --> 00:35:29.730
if this weren't a 1, I can
always divide through by it,

00:35:29.730 --> 00:35:32.388
or what have you, and do
the arithmetic another way.

00:35:32.388 --> 00:35:33.930
I just do this thing
for convenience.

00:35:33.930 --> 00:35:37.680
But the important point is
that this determinant is now

00:35:37.680 --> 00:35:39.780
equal to this determinant.

00:35:39.780 --> 00:35:41.070
And be very careful.

00:35:41.070 --> 00:35:43.430
Notice, if these had been
matrices-- in other words,

00:35:43.430 --> 00:35:46.440
if I had put square brackets
here and had made these

00:35:46.440 --> 00:35:47.710
matrices--

00:35:47.710 --> 00:35:53.160
we would call the two matrices
row equivalent but different

00:35:53.160 --> 00:35:54.020
matrices.

00:35:54.020 --> 00:35:56.340
Notice, the determinant
is a number.

00:35:56.340 --> 00:35:59.130
And what we're saying
is that the number named

00:35:59.130 --> 00:36:03.330
by this determinant is
equal to the number named

00:36:03.330 --> 00:36:06.300
by this determinant--

00:36:06.300 --> 00:36:08.190
equal.

00:36:08.190 --> 00:36:10.110
Here's the key point.

00:36:10.110 --> 00:36:13.980
I now notice that I have
three 0s in the first column.

00:36:13.980 --> 00:36:17.610
I, therefore, elect to
expand this determinant

00:36:17.610 --> 00:36:19.440
along the first column.

00:36:19.440 --> 00:36:20.510
Why do I do this?

00:36:20.510 --> 00:36:21.510
Well, let's take a look.

00:36:21.510 --> 00:36:24.870
First of all, I get a
1 multiplied by this 3

00:36:24.870 --> 00:36:27.630
by 3 determinant that's left
when I strike out the row

00:36:27.630 --> 00:36:29.790
and column in which 1 appears.

00:36:29.790 --> 00:36:33.900
The beauty is that when I form
the other three determinants, 3

00:36:33.900 --> 00:36:37.870
by 3 determinants, they're all
going to be multiplied by 0.

00:36:37.870 --> 00:36:39.870
For example, over here,
I factor out-- well

00:36:39.870 --> 00:36:41.910
minus 0, which is still 0.

00:36:41.910 --> 00:36:43.710
What do I multiply that by?

00:36:43.710 --> 00:36:46.240
I multiply that by
the 3 by 3 determinant

00:36:46.240 --> 00:36:48.090
that's left when I
strike out the row

00:36:48.090 --> 00:36:50.670
and column that this
0 appears in, namely,

00:36:50.670 --> 00:36:53.610
the 3 by 3 determinant,
2, 1, minus 1,

00:36:53.610 --> 00:36:56.490
minus 1, 4, 5, 2, 3, 4.

00:36:56.490 --> 00:36:58.980
But since that's
being multiplied by 0,

00:36:58.980 --> 00:37:00.510
the product will be 0.

00:37:00.510 --> 00:37:04.620
To make a long story short,
to evaluate this determinant,

00:37:04.620 --> 00:37:05.930
it's simply what?

00:37:05.930 --> 00:37:09.920
Plus 1 times this
3 by 3 determinant.

00:37:09.920 --> 00:37:13.190
I put the 1 in parentheses
here to indicate that I really

00:37:13.190 --> 00:37:14.570
factored that 1 out.

00:37:14.570 --> 00:37:18.470
But really what we're saying
is that this 4 by 4 determinant

00:37:18.470 --> 00:37:21.860
has the same value as
this 3 by 3 determinant.

00:37:21.860 --> 00:37:24.860
And now, I row reduce
this 3 by 3 determinant.

00:37:24.860 --> 00:37:29.000
I replace the second row, in
other words, the second vector,

00:37:29.000 --> 00:37:32.630
by the second plus the first,
the third by the third minus

00:37:32.630 --> 00:37:33.800
twice the first.

00:37:33.800 --> 00:37:37.010
I now wind up with this
3 by 3 determinant.

00:37:37.010 --> 00:37:39.590
Since I don't change the
value of the determinant

00:37:39.590 --> 00:37:41.540
when I replace one
vector by itself

00:37:41.540 --> 00:37:43.430
plus a scalar
multiple of another,

00:37:43.430 --> 00:37:46.550
then notice very quickly
that what happens over here

00:37:46.550 --> 00:37:49.100
is that these two
determinants are equal.

00:37:49.100 --> 00:37:54.830
Again, I elect to expand along
the first column factoring out

00:37:54.830 --> 00:37:59.780
the plus 1 being left with the
determinant whose entries are

00:37:59.780 --> 00:38:01.730
5, 8, 1, 1.

00:38:01.730 --> 00:38:04.610
And the other two terms
contribute nothing,

00:38:04.610 --> 00:38:07.690
because the coefficient is 0.

00:38:07.690 --> 00:38:09.770
But I already know
how to expand--

00:38:09.770 --> 00:38:13.422
I've proven that-- how to expand
the 2 by 2 matrix, determinant.

00:38:13.422 --> 00:38:14.630
That's just going to be what?

00:38:14.630 --> 00:38:17.630
5 minus 8 or minus 3.

00:38:17.630 --> 00:38:20.240
And that's how this shortcut
row reduction works--

00:38:20.240 --> 00:38:24.410
much, much more elegantly than
the brute force technique.

00:38:24.410 --> 00:38:26.510
And by the way, this
is the technique

00:38:26.510 --> 00:38:28.940
used in most, if
not all, computers

00:38:28.940 --> 00:38:33.050
in determining the determinant
of a set of n vectors

00:38:33.050 --> 00:38:35.240
in an n-dimensional
vector space.

00:38:35.240 --> 00:38:38.040
Well, as I say, this was
meant as an overview.

00:38:38.040 --> 00:38:40.880
I hope you now see the overall
picture of what determinants

00:38:40.880 --> 00:38:41.870
are all about.

00:38:41.870 --> 00:38:44.660
And in the exercises,
I will try to give you

00:38:44.660 --> 00:38:48.560
some more sophisticated
and elaborate details.

00:38:48.560 --> 00:38:51.410
Next time what we
will do is talk

00:38:51.410 --> 00:38:54.710
about an application
of how determinants

00:38:54.710 --> 00:38:58.477
are used in certain
aspects of vector spaces.

00:38:58.477 --> 00:39:00.560
In particular, we're going
to talk about something

00:39:00.560 --> 00:39:04.220
called eigenvalues or
eigenvectors, but more

00:39:04.220 --> 00:39:05.780
about that next time.

00:39:05.780 --> 00:39:09.790
Until next time, goodbye.

00:39:09.790 --> 00:39:12.190
Funding for the
publication of this video

00:39:12.190 --> 00:39:17.050
was provided by the Gabriella
and Paul Rosenbaum Foundation.

00:39:17.050 --> 00:39:21.220
Help OCW continue to provide
free and open access to MIT

00:39:21.220 --> 00:39:26.655
courses by making a donation
at ocw.mit.edu/donate.