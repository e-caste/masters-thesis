WEBVTT

00:00:00.000 --> 00:00:01.950
The following
content is provided

00:00:01.950 --> 00:00:06.100
by MIT OpenCourseWare under
a Creative Commons license.

00:00:06.100 --> 00:00:08.200
Additional information
about our license

00:00:08.200 --> 00:00:10.520
and MIT OpenCourseWare
in general

00:00:10.520 --> 00:00:11.930
is available at ocw.mit.edu.

00:00:17.920 --> 00:00:19.190
PROFESSOR: OK.

00:00:19.190 --> 00:00:20.410
Good.

00:00:20.410 --> 00:00:26.440
So I decided to make today's
lecture the one on linear

00:00:26.440 --> 00:00:31.230
programming and duality,
which I'd planned for Friday,

00:00:31.230 --> 00:00:36.680
and give myself two more
days to learn about ill-posed

00:00:36.680 --> 00:00:42.250
and inverse problems, and
then come back to that Friday,

00:00:42.250 --> 00:00:47.180
so that -- we've studied
the limits in those problems

00:00:47.180 --> 00:00:54.670
of alpha going to infinity or
0, but the scientific question

00:00:54.670 --> 00:00:57.370
when there's noise in the
system is finite alpha,

00:00:57.370 --> 00:01:01.950
and I want to learn more about
applications and examples.

00:01:01.950 --> 00:01:09.180
Can I also say I'm very happy to
have had volunteers for Monday

00:01:09.180 --> 00:01:11.780
and Wednesday of
next week to present,

00:01:11.780 --> 00:01:14.090
and if a couple of
people might maybe

00:01:14.090 --> 00:01:19.620
volunteer for Friday, to share
Friday, I'll be very grateful.

00:01:19.620 --> 00:01:24.570
So you could see me after
class, put a hand up now,

00:01:24.570 --> 00:01:29.140
send me an email -- all
those would be very good.

00:01:29.140 --> 00:01:33.610
And again, I would
be thinking --

00:01:33.610 --> 00:01:36.510
since it's just next
week I'm talking about --

00:01:36.510 --> 00:01:42.210
that it would be essentially a
report on your Project One that

00:01:42.210 --> 00:01:47.270
you would use the
overhead projector maybe,

00:01:47.270 --> 00:01:49.890
if that's preferable.

00:01:49.890 --> 00:01:50.670
OK.

00:01:50.670 --> 00:01:55.550
So I think you'll
like this topic.

00:01:55.550 --> 00:02:02.620
It's kind of specific but widely
used -- linear programming --

00:02:02.620 --> 00:02:11.170
used in business to maximize
profits, to minimize costs.

00:02:11.170 --> 00:02:17.180
And linear means that the
cost function is linear.

00:02:17.180 --> 00:02:20.250
That's an inner product -- c*x.

00:02:20.250 --> 00:02:22.890
c is a row vector, x
is a column vector,

00:02:22.890 --> 00:02:25.720
so that I'm following the
conventions of this subject

00:02:25.720 --> 00:02:29.210
here to take these
different shapes,

00:02:29.210 --> 00:02:32.750
so let me indicate
what the shapes are.

00:02:32.750 --> 00:02:44.600
But the inputs are -- the data
of the problem are -- c and A,

00:02:44.600 --> 00:02:47.080
an m by n matrix, and b.

00:02:47.080 --> 00:02:55.000
So A is m by n, b is m by
1 -- right-hand side --

00:02:55.000 --> 00:02:58.400
and c is 1 by n.

00:02:58.400 --> 00:03:04.730
And then the unknown -- this is
the thing that we're to find --

00:03:04.730 --> 00:03:10.150
it's a column vector, n by 1.

00:03:10.150 --> 00:03:11.250
OK.

00:03:11.250 --> 00:03:16.710
And the point is
there are constraints

00:03:16.710 --> 00:03:19.240
and those are linear too.

00:03:19.240 --> 00:03:22.200
So it's rather unusual to
have a linear cost function.

00:03:22.200 --> 00:03:23.540
Right?

00:03:23.540 --> 00:03:29.770
Because when you maximize or
minimize some linear function,

00:03:29.770 --> 00:03:34.010
well, the thing is just going
up or it's going down --

00:03:34.010 --> 00:03:39.570
or in higher dimensions the
same -- and if it's going down,

00:03:39.570 --> 00:03:42.740
then the minimum is going
to be at the right-hand end.

00:03:42.740 --> 00:03:46.670
Or if it's going up, the minimum
will be at the left-hand end.

00:03:46.670 --> 00:03:49.670
And if I'm in more
variables, this idea

00:03:49.670 --> 00:03:53.850
will still be true that
the minimum or maximum

00:03:53.850 --> 00:03:58.720
will happen at the edges, at
the ends of the allowed region.

00:03:58.720 --> 00:04:02.490
And this allowed region,
called the feasible set --

00:04:02.490 --> 00:04:07.480
so let me give the name to this
-- these are the allowed x's.

00:04:07.480 --> 00:04:09.470
These are the constraints.

00:04:09.470 --> 00:04:16.490
And that set is called the
feasible set, feasible meaning

00:04:16.490 --> 00:04:19.060
doable.

00:04:19.060 --> 00:04:22.830
So those constraints
include inequalities,

00:04:22.830 --> 00:04:29.200
because we want finite
intervals, finite regions in n

00:04:29.200 --> 00:04:30.550
dimensions.

00:04:30.550 --> 00:04:35.460
And I drew a sort
of quick picture

00:04:35.460 --> 00:04:38.400
so that you have
a model of this.

00:04:38.400 --> 00:04:45.170
So this is a picture with
n equals 3 -- 3 dimensions,

00:04:45.170 --> 00:04:49.850
and so the constraints
x greater or equal 0,

00:04:49.850 --> 00:04:53.790
x_1 greater or equal 0,
x_2 greater or equal 0,

00:04:53.790 --> 00:04:58.550
x_3 greater or equal 0 --
that's what x greater or equal 0

00:04:58.550 --> 00:04:59.950
means.

00:04:59.950 --> 00:05:02.130
It means all components.

00:05:02.130 --> 00:05:04.220
So we're in the quadrant right?

00:05:04.220 --> 00:05:08.040
We're in a quarter -- 1/8
sorry -- we're in an octant --

00:05:08.040 --> 00:05:12.680
1/8 of three-dimensional
space, the positive octant.

00:05:12.680 --> 00:05:18.870
And then if I draw maybe just
one, just put in one equation,

00:05:18.870 --> 00:05:25.340
one plane, would cut off
a piece of that octant,

00:05:25.340 --> 00:05:32.140
so that A*x greater or equal
b, depending on the signs,

00:05:32.140 --> 00:05:39.320
but the feasible set could
well be the tetrahedron,

00:05:39.320 --> 00:05:44.950
the little piece of the octant
that's cut out by this plane.

00:05:44.950 --> 00:05:48.480
Or if our constraint
was an equality,

00:05:48.480 --> 00:05:51.370
the feasible set
would be the triangle.

00:05:51.370 --> 00:05:57.120
So A*x equal to b would
lead to the triangle,

00:05:57.120 --> 00:06:01.400
and A*x greater or equal b, if
we pick the signs correctly,

00:06:01.400 --> 00:06:05.880
would be the pyramid, would
include also this corner,

00:06:05.880 --> 00:06:10.160
because there'd be some volume.

00:06:10.160 --> 00:06:10.740
OK.

00:06:10.740 --> 00:06:18.080
So the feasible set
is a polyhedron.

00:06:18.080 --> 00:06:23.030
It's like a polygon, only
up into n dimensions,

00:06:23.030 --> 00:06:25.320
so we use the word polyhedron.

00:06:25.320 --> 00:06:34.130
And it's got corners, and the
whole point of the linear cost,

00:06:34.130 --> 00:06:37.220
the linear objective
function c*x --

00:06:37.220 --> 00:06:40.540
so this is just c_1*x_1 plus...

00:06:40.540 --> 00:06:46.850
plus c_n*x_n; that's
what that means.

00:06:46.850 --> 00:06:50.070
If I take derivatives,
I get constants.

00:06:50.070 --> 00:06:54.090
I don't set derivatives to
0 in this type of problem.

00:06:54.090 --> 00:06:58.480
I look at the endpoints,
at the corners.

00:06:58.480 --> 00:07:02.010
And that's where the minimum
and maximum will occur.

00:07:02.010 --> 00:07:05.540
So it's just a question of
finding the right corner.

00:07:05.540 --> 00:07:09.320
That's the problem: how to
find the winning corner.

00:07:16.020 --> 00:07:21.670
It's an interesting competition
between two quite different

00:07:21.670 --> 00:07:27.350
approaches: the famous approach
-- so let me write these two.

00:07:27.350 --> 00:07:36.200
The simplex method is the
best established, best known

00:07:36.200 --> 00:07:39.680
approach for solving
these problems.

00:07:39.680 --> 00:07:42.490
What's the idea of
the simplex method?

00:07:42.490 --> 00:07:44.570
The simplex method
finds a corner.

00:07:47.220 --> 00:07:53.210
A corner is a case where we
have some equality signs.

00:07:53.210 --> 00:08:00.090
A corner is the edge, the limit
where maybe this one still

00:08:00.090 --> 00:08:05.090
has x_1 positive but
it's down in this plane

00:08:05.090 --> 00:08:09.380
so it has maybe x_3
is 0 for this guy.

00:08:09.380 --> 00:08:14.710
So that corner has x_3 equals
0 and it also lies right

00:08:14.710 --> 00:08:19.390
on the plane, so it
has A*x equal to b.

00:08:19.390 --> 00:08:24.040
This corner -- well, I guess
that corner has all these guys

00:08:24.040 --> 00:08:27.790
equal 0: x_1 equals 0, x_2
equals 0, x_3 equals 0,

00:08:27.790 --> 00:08:31.770
but A*x -- inequality's
holding here for this corner

00:08:31.770 --> 00:08:35.170
that's hiding behind the face.

00:08:35.170 --> 00:08:40.860
Anyway, corners are points
where some of the constraints

00:08:40.860 --> 00:08:47.990
are tight or active
and others are not.

00:08:47.990 --> 00:08:52.010
Well, you might say:
just check them all,

00:08:52.010 --> 00:08:56.340
but the trouble is there
are lots of corners.

00:08:56.340 --> 00:09:03.680
If we're in n dimensions and
we have m constraint equations,

00:09:03.680 --> 00:09:08.580
then the number of corners
goes up exponentially.

00:09:08.580 --> 00:09:11.890
So no way to check all of them.

00:09:11.890 --> 00:09:16.240
So the simplex method
had a better idea.

00:09:16.240 --> 00:09:18.150
The simplex method
found one of them --

00:09:18.150 --> 00:09:21.940
and already that's a little
bit of a job, to find a corner,

00:09:21.940 --> 00:09:24.370
but finds one.

00:09:24.370 --> 00:09:26.170
And then what the
simplex method does,

00:09:26.170 --> 00:09:31.110
it stays entirely, it
moves along the edges.

00:09:31.110 --> 00:09:35.190
So from here, it
will look to see in

00:09:35.190 --> 00:09:41.540
which direction would the
cost go down, because we're

00:09:41.540 --> 00:09:43.550
trying to minimize the cost.

00:09:43.550 --> 00:09:45.130
So it would check
these directions.

00:09:47.950 --> 00:09:55.000
Each of those directions
we're releasing one equality.

00:09:55.000 --> 00:10:00.060
We're allowing one equality
to be an inequality,

00:10:00.060 --> 00:10:02.080
and that moves us along.

00:10:02.080 --> 00:10:05.440
So the simplex
method has two steps.

00:10:05.440 --> 00:10:07.800
It checks each of
these directions

00:10:07.800 --> 00:10:13.150
to find out which way will
the cost drop fastest.

00:10:13.150 --> 00:10:18.260
It chooses the direction in
which the cost -- the gradient,

00:10:18.260 --> 00:10:20.880
the component of the
gradient, you could say,

00:10:20.880 --> 00:10:26.290
along that edge is the biggest,
or maybe the most negative.

00:10:26.290 --> 00:10:31.820
And then, once it decides
which way to go, it goes --

00:10:31.820 --> 00:10:34.660
maybe it takes this direction
-- it goes, goes, goes, goes,

00:10:34.660 --> 00:10:38.580
goes until it hits
another corner.

00:10:38.580 --> 00:10:41.870
So that's the end
of the simplex step,

00:10:41.870 --> 00:10:43.750
when it reaches another corner.

00:10:43.750 --> 00:10:46.560
That completes one simplex step.

00:10:46.560 --> 00:10:50.100
Then, from this corner, it
will look the three ways

00:10:50.100 --> 00:10:52.120
it could go here.

00:10:52.120 --> 00:10:55.960
Well, it's not going to
pick this way, we know,

00:10:55.960 --> 00:11:00.760
because in this direction
the cost was decreasing

00:11:00.760 --> 00:11:03.180
or we wouldn't have taken it.

00:11:03.180 --> 00:11:04.860
We wouldn't have
taken that direction

00:11:04.860 --> 00:11:06.290
except that the cost went down.

00:11:06.290 --> 00:11:08.530
So if we came back,
the cost would go up.

00:11:08.530 --> 00:11:09.680
No good.

00:11:09.680 --> 00:11:13.760
So going down would be
one of these two ways.

00:11:13.760 --> 00:11:18.340
Maybe it goes down
in this direction,

00:11:18.340 --> 00:11:20.860
so we decide on that direction.

00:11:20.860 --> 00:11:24.420
We follow it until
we hit a new corner,

00:11:24.420 --> 00:11:28.690
and eventually we're going
to get to the winning corner

00:11:28.690 --> 00:11:33.060
because there are only a
finite number of corners.

00:11:33.060 --> 00:11:35.890
And how will we know
it's the winning corner?

00:11:35.890 --> 00:11:37.870
Well, we'll know that
corner is a winner

00:11:37.870 --> 00:11:42.340
if, in every direction,
the cost goes up.

00:11:42.340 --> 00:11:45.900
If the cost goes up
in all directions,

00:11:45.900 --> 00:11:49.210
along all the edges
out of that corner,

00:11:49.210 --> 00:11:50.470
then that corner has won.

00:11:50.470 --> 00:11:52.150
It's the minimum.

00:11:52.150 --> 00:11:58.230
I'm using linearity here -- the
fact that you know everything

00:11:58.230 --> 00:12:01.540
by traveling along, by
looking along those edges.

00:12:01.540 --> 00:12:05.090
So the simplex method
is a big success.

00:12:05.090 --> 00:12:08.930
Because in reality,
in practice, it

00:12:08.930 --> 00:12:10.860
turns out that the
number of edges

00:12:10.860 --> 00:12:16.020
that you have to travel
to get to the winner

00:12:16.020 --> 00:12:18.130
doesn't grow exponentially.

00:12:18.130 --> 00:12:20.480
I mean in principle it could.

00:12:20.480 --> 00:12:27.640
People have dreamt up really
desperate examples in which

00:12:27.640 --> 00:12:31.260
following the simplex method
you could take a long time,

00:12:31.260 --> 00:12:35.470
but on average you don't,
and in practice you don't.

00:12:35.470 --> 00:12:39.600
So it's a very
good method and was

00:12:39.600 --> 00:12:43.280
totally the method of choice.

00:12:43.280 --> 00:12:48.680
But a competitor has arrived.

00:12:48.680 --> 00:12:54.260
And that competitor goes under
the name of interior point

00:12:54.260 --> 00:13:06.020
method, and you can
guess what that method is

00:13:06.020 --> 00:13:10.010
doing quite different,
totally different system.

00:13:10.010 --> 00:13:14.830
That method is inside
the feasible set.

00:13:14.830 --> 00:13:18.010
It finds a point somewhere
near the middle maybe.

00:13:18.010 --> 00:13:30.010
And then it does normal,
gradient-type approach

00:13:30.010 --> 00:13:32.260
from your point.

00:13:32.260 --> 00:13:35.450
It figures out
which way to move.

00:13:35.450 --> 00:13:38.830
It moves, but it
doesn't go outside.

00:13:38.830 --> 00:13:41.250
It doesn't even reach the
boundary of the feasible

00:13:41.250 --> 00:13:43.820
set, because if you reach the
boundary of the feasible set,

00:13:43.820 --> 00:13:47.550
you're out of the interior
and the method is not

00:13:47.550 --> 00:13:50.420
going to operate.

00:13:50.420 --> 00:13:53.300
Well, that crudest method
would be follow the gradient,

00:13:53.300 --> 00:14:01.430
but we know from
several situations

00:14:01.430 --> 00:14:08.990
that gradient descent
can be less than optimal.

00:14:08.990 --> 00:14:10.650
So this is more subtle.

00:14:10.650 --> 00:14:14.400
Well, Newton's method
actually -- I'll explain.

00:14:14.400 --> 00:14:18.140
So this is actually the
content of my lecture --

00:14:18.140 --> 00:14:20.700
this interior point method.

00:14:20.700 --> 00:14:26.770
And let me just
mention a few names.

00:14:26.770 --> 00:14:30.090
People thought of interior
point methods long ago,

00:14:30.090 --> 00:14:37.910
but a big splash
came when Karmarkar

00:14:37.910 --> 00:14:40.760
proposed an interior
point method

00:14:40.760 --> 00:14:49.800
and proved that it converged
faster than simplex

00:14:49.800 --> 00:14:51.440
method in some problems.

00:14:51.440 --> 00:14:53.250
Well, he said all
problems, actually.

00:14:53.250 --> 00:15:00.370
His advertising of the
message was pretty generous.

00:15:00.370 --> 00:15:02.600
The sort of claim
that was around

00:15:02.600 --> 00:15:07.170
was, you know, ten times as
fast as the simplex method,

00:15:07.170 --> 00:15:10.670
generally, and it was on the
front page of the New York

00:15:10.670 --> 00:15:16.230
Times, and I remember going
to a lecture in Boston

00:15:16.230 --> 00:15:20.590
with lights, TV lights
on and everything.

00:15:20.590 --> 00:15:28.610
Well, maybe his exact method
now isn't so much used,

00:15:28.610 --> 00:15:35.330
but you have to give him credit
for stirring up the whole world

00:15:35.330 --> 00:15:42.110
of optimization because the
result of Karmarkar's method --

00:15:42.110 --> 00:15:49.190
and there were others -- and
I'll say barrier methods,

00:15:49.190 --> 00:15:52.080
and that's what
I'll try to explain.

00:15:55.700 --> 00:15:58.480
He stirred up the whole
world so that the experts

00:15:58.480 --> 00:16:02.400
in optimization began looking
again at interior point

00:16:02.400 --> 00:16:05.240
methods, seeing that
they did have some merit,

00:16:05.240 --> 00:16:06.510
improving them.

00:16:06.510 --> 00:16:11.010
And now for, I would
say particularly

00:16:11.010 --> 00:16:19.270
for large, sparse problems,
these are a way to go.

00:16:19.270 --> 00:16:20.550
These are preferred now.

00:16:20.550 --> 00:16:25.260
So this is the normal situation
in scientific computing:

00:16:25.260 --> 00:16:30.010
that any method
that's good, it's

00:16:30.010 --> 00:16:32.310
still not good for everything.

00:16:32.310 --> 00:16:37.350
It's got a range of problems
where it's successful

00:16:37.350 --> 00:16:40.560
and a range of problems
where some competitor wins.

00:16:40.560 --> 00:16:43.850
So that's the situation now.

00:16:43.850 --> 00:16:44.640
These are methods.

00:16:44.640 --> 00:16:48.350
This is certainly
not out of date,

00:16:48.350 --> 00:16:51.330
and I'm sure it's
the method of choice

00:16:51.330 --> 00:16:54.560
and it's carefully coded
and well understood,

00:16:54.560 --> 00:16:59.530
but these are quite effective.

00:16:59.530 --> 00:17:00.250
OK.

00:17:00.250 --> 00:17:03.390
So my job then is
to say something

00:17:03.390 --> 00:17:06.270
about these interior
point methods.

00:17:06.270 --> 00:17:13.980
And the beauty of these
is that the primal --

00:17:13.980 --> 00:17:16.885
this is called the
primal problem.

00:17:16.885 --> 00:17:17.510
Primal problem.

00:17:17.510 --> 00:17:20.260
And often you write
a P for primal.

00:17:20.260 --> 00:17:22.690
It means the given problem.

00:17:22.690 --> 00:17:25.250
And over here is
the dual problem.

00:17:25.250 --> 00:17:34.810
So you put a D, dual problem.
[UNINTELLIGIBLE PHRASE]

00:17:34.810 --> 00:17:40.590
It involves the same
data: the same b,

00:17:40.590 --> 00:17:47.280
the same A, and the same
c, but a new variable y.

00:17:47.280 --> 00:18:03.420
And [UNINTELLIGIBLE PHRASE]
is really

00:18:03.420 --> 00:18:06.590
the Lagrange multiplier
in the original problem

00:18:06.590 --> 00:18:08.360
for the constraints.

00:18:12.950 --> 00:18:19.190
So I won't go at the dual
problem exactly that way.

00:18:19.190 --> 00:18:30.320
I'm going to ask you just
to consider this problem

00:18:30.320 --> 00:18:32.940
and show you the
relation between the two.

00:18:32.940 --> 00:18:36.050
So what I want to say is
that these two problems --

00:18:36.050 --> 00:18:43.910
the primal and the dual, which
use the same data A, b, c,

00:18:43.910 --> 00:18:49.351
are intimately related, and sort
of solving one solves the other

00:18:49.351 --> 00:18:49.850
one.

00:18:49.850 --> 00:18:51.510
Actually is this it?

00:18:51.510 --> 00:18:53.200
That applies to
the simplex method.

00:18:53.200 --> 00:18:57.270
When the simplex method
finds the best corner,

00:18:57.270 --> 00:18:59.700
we could read off the
Lagrange multipliers,

00:18:59.700 --> 00:19:01.360
we could read off y.

00:19:01.360 --> 00:19:04.790
We could read off the optimal y.

00:19:04.790 --> 00:19:07.630
So my picture was
in the primal case,

00:19:07.630 --> 00:19:11.870
but there's a dual
picture in the dual case.

00:19:11.870 --> 00:19:12.680
OK.

00:19:12.680 --> 00:19:18.010
So we have a minimum problem
and a maximum problem,

00:19:18.010 --> 00:19:21.770
and I'm using this word duality.

00:19:21.770 --> 00:19:25.740
So what I want to
do is tell you how

00:19:25.740 --> 00:19:30.110
do we recognize the winning
corner in the primal problem,

00:19:30.110 --> 00:19:33.810
and it's beautiful.

00:19:33.810 --> 00:19:40.380
So at the best --
so the optimal x,

00:19:40.380 --> 00:19:45.580
let me call it x
star and y star,

00:19:45.580 --> 00:19:52.880
have min over there
equal the max here.

00:19:52.880 --> 00:20:01.170
Min of all the c*x's,
which is c x star,

00:20:01.170 --> 00:20:08.370
equal to a maximum over all of
the y's of the y*b's, which is

00:20:08.370 --> 00:20:10.600
y star b.

00:20:10.600 --> 00:20:12.850
So these are equal
at the winner.

00:20:15.420 --> 00:20:21.450
That's the essence
of this duality.

00:20:21.450 --> 00:20:25.850
Duality is about two problems
that use the same data

00:20:25.850 --> 00:20:27.585
but they look quite different.

00:20:27.585 --> 00:20:29.710
You know, they're using
the data in different ways.

00:20:29.710 --> 00:20:34.660
The cost function there showed
up in the constraint here.

00:20:34.660 --> 00:20:38.470
The constraint b there showed
up in the cost function here.

00:20:38.470 --> 00:20:45.620
And even A got flipped, because
if I use my usual column vector

00:20:45.620 --> 00:20:48.920
notation -- if I just
transpose this --

00:20:48.920 --> 00:20:56.430
this would be A transpose y
transpose less or equal to c

00:20:56.430 --> 00:20:57.130
transpose.

00:20:57.130 --> 00:21:00.980
If I wanted to stay with column
vectors y transpose and c

00:21:00.980 --> 00:21:04.700
transpose, then it would
be the transpose of A

00:21:04.700 --> 00:21:06.470
that would appear.

00:21:06.470 --> 00:21:12.150
So I'll just put transpose
with two exclamation marks.

00:21:12.150 --> 00:21:15.350
That's typical.

00:21:15.350 --> 00:21:20.030
And you often see
the word adjoint.

00:21:20.030 --> 00:21:24.710
So there are methods in
differential equations,

00:21:24.710 --> 00:21:27.380
in optimization,
called adjoint methods.

00:21:27.380 --> 00:21:31.630
Adjoint is just, really,
another word for transpose.

00:21:31.630 --> 00:21:36.260
It's a word that applies in
differential equations as well

00:21:36.260 --> 00:21:41.960
as matrices, so it's kind of
a better word, you could say,

00:21:41.960 --> 00:21:45.040
where transpose we
usually apply to matrices,

00:21:45.040 --> 00:21:48.640
but totally the same
idea, identical idea.

00:21:48.640 --> 00:21:49.510
OK.

00:21:49.510 --> 00:21:59.220
So the wonderful thing is
that at the moment of success,

00:21:59.220 --> 00:22:03.140
at the moment of
optimality, these are equal.

00:22:03.140 --> 00:22:05.750
A minimum equals a maximum.

00:22:05.750 --> 00:22:12.090
And that's one way to recognize
that you've succeeded,

00:22:12.090 --> 00:22:15.510
and that's one way to
measure how far you have

00:22:15.510 --> 00:22:18.430
to go, with the duality gap.

00:22:18.430 --> 00:22:23.780
So the duality gap
would be the difference.

00:22:23.780 --> 00:22:29.150
If you had a particular
y that wasn't the winner,

00:22:29.150 --> 00:22:32.270
a particular x that
wasn't the winner,

00:22:32.270 --> 00:22:38.790
the duality gap would be the
difference between c*x and y*b.

00:22:38.790 --> 00:22:44.920
And what I'm saying is that when
that duality gap narrows to 0,

00:22:44.920 --> 00:22:47.790
you've got it.

00:22:47.790 --> 00:22:51.610
When this narrows to 0, you've
brought c*x down as far as you

00:22:51.610 --> 00:22:56.070
could, you've raised y*b
up as far as you could.

00:22:56.070 --> 00:23:02.240
And if you did it right, if
you've got to the optimum,

00:23:02.240 --> 00:23:06.400
then the duality gap
disappeared -- became 0.

00:23:06.400 --> 00:23:10.440
So that's a measure
of am I at the answer,

00:23:10.440 --> 00:23:14.620
am I close, you know, if we're
going to do an iterative method

00:23:14.620 --> 00:23:15.710
as I'm planning.

00:23:15.710 --> 00:23:18.950
So that's the point, of course.

00:23:18.950 --> 00:23:23.910
These interior point
methods will be iterative.

00:23:26.870 --> 00:23:29.900
We step, we never
actually allow them

00:23:29.900 --> 00:23:36.660
to get to the absolute corner
until maybe at the last minute.

00:23:36.660 --> 00:23:40.350
So here, let me draw a
picture of how interior point

00:23:40.350 --> 00:23:41.620
methods might work.

00:23:41.620 --> 00:23:47.250
So here is the feasible set
-- some kind of a polyhedron,

00:23:47.250 --> 00:23:48.780
whatever.

00:23:48.780 --> 00:23:54.030
So think of that as a kind of
a diamond, a twenty-four carat

00:23:54.030 --> 00:23:54.530
diamond.

00:23:54.530 --> 00:23:55.940
OK?

00:23:55.940 --> 00:24:00.730
And start at a point inside.

00:24:00.730 --> 00:24:05.030
And somehow find the gradient,
decide which way to move,

00:24:05.030 --> 00:24:07.790
dot dot dot dot.

00:24:07.790 --> 00:24:10.920
And there'll be
some barrier here

00:24:10.920 --> 00:24:13.760
which is going to prevent
us from reaching it,

00:24:13.760 --> 00:24:15.180
so we'll stop.

00:24:15.180 --> 00:24:18.560
So that will be one
step, and from here we

00:24:18.560 --> 00:24:21.990
will do the same
thing, whatever it is.

00:24:21.990 --> 00:24:23.590
It'll be Newton's
method, actually.

00:24:23.590 --> 00:24:24.220
You'll see.

00:24:24.220 --> 00:24:26.710
It's just Newton's method.

00:24:26.710 --> 00:24:30.160
The most fundamental way to
solve non-linear equations

00:24:30.160 --> 00:24:31.900
is Newton's method.

00:24:31.900 --> 00:24:34.950
And it'll take
another direction.

00:24:34.950 --> 00:24:38.700
Again it'll stop, and the
thing will follow some path.

00:24:38.700 --> 00:24:46.370
And then maybe at this point
the duality gap is very small.

00:24:46.370 --> 00:24:49.270
We'll realize that
this is the winner.

00:24:49.270 --> 00:24:54.780
So we could, at the last minute,
say: OK, jump to the winner.

00:24:54.780 --> 00:24:58.890
But it's this path
through the interior

00:24:58.890 --> 00:25:01.710
that we're really interested in.

00:25:01.710 --> 00:25:06.070
OK, so I'm giving a sort
of general picture of it.

00:25:06.070 --> 00:25:09.840
And now I'm ready
to do two things.

00:25:09.840 --> 00:25:12.870
One is the nice
little bit of algebra

00:25:12.870 --> 00:25:19.560
that says that this duality gap
is always greater or equal 0.

00:25:19.560 --> 00:25:20.600
OK.

00:25:20.600 --> 00:25:23.840
So that's called weak duality.

00:25:23.840 --> 00:25:32.250
Weak duality, which is easy to
prove, says that, always, c*x,

00:25:32.250 --> 00:25:38.860
for any feasible x, is greater
or equal to y*b for any

00:25:38.860 --> 00:25:40.410
feasible y.

00:25:40.410 --> 00:25:47.380
So any x and y that
satisfy the constraints.

00:25:51.740 --> 00:25:58.350
I should say satisfying
the constraints.

00:25:58.350 --> 00:26:01.640
So weak duality I'll
now prove in one second.

00:26:05.210 --> 00:26:16.540
And the point is that, as
I push to bring c*x down --

00:26:16.540 --> 00:26:22.380
minimize -- as I push to
move y*b up -- maximize --

00:26:22.380 --> 00:26:25.760
they will meet, at the winner.

00:26:25.760 --> 00:26:29.080
OK, now how do I prove
c*x greater or equal y*b?

00:26:29.080 --> 00:26:30.980
Let me try to prove that.

00:26:30.980 --> 00:26:34.300
Proof.

00:26:34.300 --> 00:26:36.950
OK, so look at y*b.

00:26:36.950 --> 00:26:38.020
OK.

00:26:38.020 --> 00:26:41.370
Now, so I know something
about the constraints.

00:26:41.370 --> 00:26:45.600
A*x is greater or equal to b.

00:26:45.600 --> 00:26:51.600
So this b -- I want to say that
this is less or equal to y*A*x.

00:26:51.600 --> 00:26:54.730
Now am I allowed to say that?

00:26:54.730 --> 00:26:58.580
First of all, y is
feasible; x is feasible.

00:26:58.580 --> 00:27:00.550
So they satisfy.

00:27:00.550 --> 00:27:04.550
Feasible means that
these are satisfied

00:27:04.550 --> 00:27:06.440
and these are satisfied.

00:27:09.420 --> 00:27:10.940
OK.

00:27:10.940 --> 00:27:14.520
And do you see that
that's really all right?

00:27:14.520 --> 00:27:17.550
Well you might say no problem.

00:27:17.550 --> 00:27:19.080
A*x is greater or b.

00:27:19.080 --> 00:27:20.490
It's obvious.

00:27:20.490 --> 00:27:25.100
But I have actually used one
more point here, haven't I?

00:27:25.100 --> 00:27:29.400
If I have an inequality,
then I'm multiplying it by y,

00:27:29.400 --> 00:27:32.240
and it didn't change the
direction of the inequality

00:27:32.240 --> 00:27:37.850
sign, and that was because
y is greater or equal 0.

00:27:37.850 --> 00:27:41.050
That's where that paid off.

00:27:41.050 --> 00:27:44.760
So this used the fact that --
this came from the fact that y

00:27:44.760 --> 00:27:48.780
was greater or equal 0 and
A*x was greater or equal b.

00:27:51.980 --> 00:27:56.900
Those two facts meant that I
could multiply and preserve

00:27:56.900 --> 00:27:58.330
the inequality sign.

00:27:58.330 --> 00:28:01.390
And now I'm going to
go to the next step:

00:28:01.390 --> 00:28:06.450
y*A is less or equal
c, and there is x.

00:28:06.450 --> 00:28:12.420
OK, so you see that I
finally got what I want:

00:28:12.420 --> 00:28:14.750
y*b less or equal to c*x.

00:28:14.750 --> 00:28:19.030
But what went into that step?

00:28:19.030 --> 00:28:25.960
Well, looking here, I had
y*A less or equal to c,

00:28:25.960 --> 00:28:31.490
and I also had x greater or
equal 0 by the feasibility

00:28:31.490 --> 00:28:32.570
of x.

00:28:32.570 --> 00:28:37.820
So that inequality I
was allowed to multiply

00:28:37.820 --> 00:28:41.990
by x because x is not negative.

00:28:41.990 --> 00:28:45.370
If x had been minus 1,
then when you -- right,

00:28:45.370 --> 00:28:49.750
if I have an inequality
like 4 less or equal 7,

00:28:49.750 --> 00:28:53.810
if I multiply by minus 1,
I get minus 4 and minus 7,

00:28:53.810 --> 00:28:58.350
and the inequality switches:
minus 7 is below minus 4.

00:28:58.350 --> 00:29:00.300
But that's not what's
happening here,

00:29:00.300 --> 00:29:03.940
because the x is not negative.

00:29:03.940 --> 00:29:10.650
So this is not what's
happening, and I'm OK.

00:29:10.650 --> 00:29:15.200
So the conclusion was
exactly what I wanted --

00:29:15.200 --> 00:29:18.430
that y*b was less
or equal to c*x.

00:29:18.430 --> 00:29:24.310
And you see how perfectly
it used the four inequality

00:29:24.310 --> 00:29:25.970
constraints.

00:29:25.970 --> 00:29:26.650
OK.

00:29:26.650 --> 00:29:33.280
So that's the weak duality
where the proof is easy.

00:29:33.280 --> 00:29:36.280
Just use what's given.

00:29:36.280 --> 00:29:40.710
The duality, without
the word weak,

00:29:40.710 --> 00:29:47.990
is the fact that at the
optimum, the gap is 0,

00:29:47.990 --> 00:29:51.780
and actually we can see --
that will tell us a lot.

00:29:51.780 --> 00:29:53.430
That will tell us a lot.

00:29:53.430 --> 00:29:56.420
When could this gap be 0?

00:29:56.420 --> 00:30:01.910
So at the optimum, y star,
equality is holding throughout.

00:30:01.910 --> 00:30:06.110
So if equality is
holding, how can that be?

00:30:06.110 --> 00:30:10.440
How can I take these --
of course the inequality,

00:30:10.440 --> 00:30:13.100
the x star and y
star are feasible.

00:30:13.100 --> 00:30:16.810
So if I just put stars
on all these things,

00:30:16.810 --> 00:30:21.310
then I would have -- everything
would still be totally true.

00:30:21.310 --> 00:30:24.915
But when I put stars on them --
so I'm picking the optimal guys

00:30:24.915 --> 00:30:28.900
-- then equality is holding.

00:30:28.900 --> 00:30:33.700
I still have these inequalities,
so what I want to find

00:30:33.700 --> 00:30:36.490
is the optimality conditions.

00:30:36.490 --> 00:30:39.490
How are they related?

00:30:39.490 --> 00:30:43.580
If I have y greater or equal
0 and A*x greater or equal b

00:30:43.580 --> 00:30:53.471
and I multiply, how
could I get equality?

00:30:53.471 --> 00:30:53.970
Right?

00:30:53.970 --> 00:30:59.620
For example, if I have 3 greater
than 0 and 5 greater than 2,

00:30:59.620 --> 00:31:04.790
if I multiply those, I get
15 greater than 0, I guess,

00:31:04.790 --> 00:31:08.900
and that's far from
equality, right?

00:31:08.900 --> 00:31:12.100
So how could equality happen?

00:31:12.100 --> 00:31:17.890
Well, the only way is if one or
the other of these, if equality

00:31:17.890 --> 00:31:26.850
holds in one or the
other, then I would be OK.

00:31:26.850 --> 00:31:28.500
Yes, do you see that?

00:31:28.500 --> 00:31:35.550
If equality held -- these
are vector inequalities,

00:31:35.550 --> 00:31:38.010
so I'm going really
component by component.

00:31:38.010 --> 00:31:39.990
Let me write down
the my conclusion

00:31:39.990 --> 00:31:41.670
and then you'll see what I mean.

00:31:41.670 --> 00:31:47.100
So these are called the
Kuhn-Tucker conditions.

00:31:47.100 --> 00:31:48.960
You've seen their names before.

00:31:48.960 --> 00:31:52.340
And they're also called
-- well, long words --

00:31:52.340 --> 00:31:55.960
complementary slackness.

00:31:55.960 --> 00:32:02.200
I'm using words that, if you
haven't seen the subject,

00:32:02.200 --> 00:32:05.350
you think OK, who
needs the long words.

00:32:05.350 --> 00:32:08.160
But the idea of
slack variable --

00:32:08.160 --> 00:32:16.950
slack is the difference in the
-- the slack is c minus y*A,

00:32:16.950 --> 00:32:21.840
or over here the
slack is A*x minus b.

00:32:21.840 --> 00:32:28.670
These are the slack variables.
w, let's say, is A*x minus b.

00:32:28.670 --> 00:32:30.510
And of course it's
greater or equal 0;

00:32:30.510 --> 00:32:32.970
that's the nice thing
about slack variables.

00:32:32.970 --> 00:32:36.070
You know, you've fixed it
so it's greater or equal 0.

00:32:36.070 --> 00:32:40.660
Here, the slack variable s,
for slack, would be what?

00:32:40.660 --> 00:32:46.440
c minus y*A, greater or equal 0.

00:32:46.440 --> 00:32:49.770
And there's no
slack when s is 0.

00:32:49.770 --> 00:32:53.530
OK, so that's where the
word slackness comes in.

00:32:53.530 --> 00:32:57.000
Slack is just the amount
of give in the inequality.

00:32:57.000 --> 00:32:58.790
So what's the point here?

00:32:58.790 --> 00:33:02.290
I was looking at this
guy, and the only way

00:33:02.290 --> 00:33:08.380
that I could have equality here,
when I have inequalities there,

00:33:08.380 --> 00:33:16.180
is for each component, I'm
going to have to have equality.

00:33:16.180 --> 00:33:19.380
And how can I have
equality on a component?

00:33:19.380 --> 00:33:24.130
Well, I would have it
for example, if y was 0.

00:33:26.810 --> 00:33:30.520
Then when I multiply,
I have equality.

00:33:30.520 --> 00:33:31.020
Right?

00:33:33.570 --> 00:33:34.940
OK.

00:33:34.940 --> 00:33:45.130
Or I could have equality
if I had -- let's see,

00:33:45.130 --> 00:33:47.770
so this is what I want to say.

00:33:47.770 --> 00:33:59.240
So I want to say either
y_i is 0 or (A*x)_i is b_i.

00:33:59.240 --> 00:34:03.940
Equality holds in one or
other of the two inequalities,

00:34:03.940 --> 00:34:09.710
because then, if I multiply
them together, I have equality.

00:34:09.710 --> 00:34:11.270
Right?

00:34:11.270 --> 00:34:14.360
You see that.

00:34:14.360 --> 00:34:18.950
If one of those holds, say
this one holds, if y_i i is 0,

00:34:18.950 --> 00:34:24.010
then I certainly can
multiply the inequality by y

00:34:24.010 --> 00:34:26.010
and I get 0 equals 0.

00:34:26.010 --> 00:34:33.160
Or, if A*x is exactly b, then
multiplying by y won't change.

00:34:33.160 --> 00:34:34.130
OK.

00:34:34.130 --> 00:34:40.520
So this is the complementary
slackness, one or the other,

00:34:40.520 --> 00:34:43.010
that has to hold
to get equality.

00:34:43.010 --> 00:34:46.010
Now what about this guy?

00:34:46.010 --> 00:34:48.820
Equality, same idea here.

00:34:48.820 --> 00:34:52.700
I got the inequality by
multiplying these together.

00:34:52.700 --> 00:34:54.730
When will I get equality?

00:34:54.730 --> 00:35:08.750
Only if either x_j is 0 or the
j-th component of y*A equals

00:35:08.750 --> 00:35:10.390
the j-th component of c.

00:35:13.070 --> 00:35:18.160
Again, the same reasoning: that
when I multiply two things,

00:35:18.160 --> 00:35:21.730
if I get an equality
out of two inequalities,

00:35:21.730 --> 00:35:25.300
then one of those two at
least must have been actually

00:35:25.300 --> 00:35:29.140
an equals; otherwise
I'd still have a gap.

00:35:29.140 --> 00:35:32.210
OK, so this is pretty important.

00:35:35.220 --> 00:35:38.850
These are the conditions
-- these are our equations.

00:35:45.780 --> 00:35:48.230
That tells us when we've won.

00:35:48.230 --> 00:35:52.220
So this actually
holds for the winners.

00:35:52.220 --> 00:35:59.950
It doesn't hold for all the
other guys, but at the winner,

00:35:59.950 --> 00:36:04.280
because things are
equal here, they

00:36:04.280 --> 00:36:07.310
had to be equal at every
step, and therefore

00:36:07.310 --> 00:36:10.080
the Kuhn-Tucker conditions
had hold at the winner.

00:36:10.080 --> 00:36:16.590
So they hold at this winning
corner when we find it.

00:36:16.590 --> 00:36:21.220
So the simplex method
chases corners, finally

00:36:21.220 --> 00:36:24.120
gets to a corner,
and it would know

00:36:24.120 --> 00:36:26.450
it had got there
by the fact that it

00:36:26.450 --> 00:36:29.940
couldn't decrease any more.

00:36:29.940 --> 00:36:31.930
And if you look at
the algebra, you

00:36:31.930 --> 00:36:36.460
would see that that tells you
that the Kuhn-Tucker conditions

00:36:36.460 --> 00:36:37.710
are satisfied.

00:36:37.710 --> 00:36:44.610
OK, so the only proof I
gave was the weak proof,

00:36:44.610 --> 00:36:47.600
that c*x is greater or equal
to y*b because that's the nice

00:36:47.600 --> 00:36:50.250
one.

00:36:50.250 --> 00:36:53.250
I've proved that for
equality we'd need these.

00:36:53.250 --> 00:36:58.570
OK, now I guess I'm
ready for the method.

00:36:58.570 --> 00:37:05.050
I'm ready for the interior
point barrier method

00:37:05.050 --> 00:37:07.570
that tells me how to compute.

00:37:07.570 --> 00:37:10.010
OK, so I'm at an interior point.

00:37:10.010 --> 00:37:11.280
What do I do?

00:37:11.280 --> 00:37:15.720
OK, so here's the method;
here's the barrier --

00:37:15.720 --> 00:37:17.820
I'll call it a log barrier.

00:37:22.960 --> 00:37:28.380
I'll solve the problem
of minimizing c*x.

00:37:28.380 --> 00:37:30.000
I won't solve the exact problem.

00:37:30.000 --> 00:37:34.580
I'm going to minimize
c*x minus, I think,

00:37:34.580 --> 00:37:37.660
some little number
times a barrier,

00:37:37.660 --> 00:37:45.320
which is going to be a sum
of the logarithms of the x's.

00:37:45.320 --> 00:37:50.990
This alpha is going to
be a little bit positive.

00:37:50.990 --> 00:37:56.760
I'll take it smaller and smaller
because this part is really --

00:37:56.760 --> 00:37:58.580
it's that that I really
want to minimize.

00:37:58.580 --> 00:37:59.080
Right?

00:37:59.080 --> 00:38:00.400
That's the original problem.

00:38:00.400 --> 00:38:01.500
This is the cost.

00:38:01.500 --> 00:38:04.010
I'm adding something to the
cost but I'd better just

00:38:04.010 --> 00:38:08.090
be sure that I've chosen
the sign of alpha correctly.

00:38:08.090 --> 00:38:11.820
By the way, this
is discussed now

00:38:11.820 --> 00:38:17.670
in the latest version
of my Linear Algebra

00:38:17.670 --> 00:38:21.360
and its Applications
textbook, the fourth edition.

00:38:23.960 --> 00:38:27.920
Editions one to three
of that book and others

00:38:27.920 --> 00:38:30.400
have described the
simplex method,

00:38:30.400 --> 00:38:36.250
and now it was just natural
to include the interior point

00:38:36.250 --> 00:38:37.190
barrier method.

00:38:37.190 --> 00:38:40.190
OK, so why do I
call this a barrier?

00:38:40.190 --> 00:38:46.240
Because if x_i gets to
0, the log blows up.

00:38:49.620 --> 00:38:52.320
The log blows down
I should say --

00:38:52.320 --> 00:38:54.140
blows down to minus infinity.

00:38:54.140 --> 00:38:58.980
I'm multiplying by minus
alpha, so I get positive.

00:38:58.980 --> 00:39:00.880
The combination blows up.

00:39:00.880 --> 00:39:04.140
It couldn't be the
minimum, so you see,

00:39:04.140 --> 00:39:07.630
the minimum is never going
to make it to x equals 0,

00:39:07.630 --> 00:39:13.980
because at x equals 0, the thing
I have here is plus infinity.

00:39:13.980 --> 00:39:17.370
So now, I'm just going
to use gradient method.

00:39:20.020 --> 00:39:24.460
I'm going to solve this
problem with the constraints,

00:39:24.460 --> 00:39:30.200
of course, with the constraints,
and set derivatives to 0.

00:39:30.200 --> 00:39:33.310
Now I have -- you know,
it's not linear anymore --

00:39:33.310 --> 00:39:35.582
the winner is not
at a corner anymore.

00:39:35.582 --> 00:39:36.790
It's somewhere in the middle.

00:39:36.790 --> 00:39:38.310
Calculus operates.

00:39:38.310 --> 00:39:40.450
I can set derivative to 0.

00:39:40.450 --> 00:39:42.470
OK, so I want to do that.

00:39:42.470 --> 00:39:46.420
And of course, I'm still
inside this feasible set,

00:39:46.420 --> 00:39:51.590
so let me see if I can
put down the equations

00:39:51.590 --> 00:39:52.830
and the constraints.

00:39:52.830 --> 00:39:55.880
OK, so I still have
the constraints.

00:39:55.880 --> 00:40:04.960
Now, forgive me, but I've
made a change to A*x equals b.

00:40:04.960 --> 00:40:09.070
I could have started with
that as the constraint.

00:40:09.070 --> 00:40:12.380
I've made that change
to A*x equals b.

00:40:15.530 --> 00:40:19.140
How have I done such a thing?

00:40:19.140 --> 00:40:22.030
I'm given the problem with
A*x greater or equal b,

00:40:22.030 --> 00:40:27.350
but I'm also given the slack
variable w greater or equal 0.

00:40:30.220 --> 00:40:33.980
So I just -- it's just a little
trick that's not worth --

00:40:33.980 --> 00:40:36.700
you could just take my word
for it, a little trick.

00:40:36.700 --> 00:40:41.870
My new variable is
the x's and the w's.

00:40:41.870 --> 00:40:47.400
m plus n variables: the
n x's and the m w's.

00:40:47.400 --> 00:40:53.750
And now, put that together --
so can I just maybe do this over

00:40:53.750 --> 00:40:56.460
in the corner here?

00:40:56.460 --> 00:41:02.680
Before I start on this, I
changed to a new variable that

00:41:02.680 --> 00:41:05.610
that'll be x's and w's.

00:41:05.610 --> 00:41:08.730
And that will be greater
or equal 0, right?

00:41:08.730 --> 00:41:10.610
Because the x was always
greater or equal 0,

00:41:10.610 --> 00:41:15.620
and the slack says A*x greater
or equal b is turned into slack

00:41:15.620 --> 00:41:16.860
greater or equal 0.

00:41:16.860 --> 00:41:24.540
And now that multiplies
A, minus I to give b,

00:41:24.540 --> 00:41:31.820
because A*x minus the
slack variable is b,

00:41:31.820 --> 00:41:37.550
which says that A*x minus b
is the slack variable w --

00:41:37.550 --> 00:41:40.640
bring that over and that over
-- and that's what we said was

00:41:40.640 --> 00:41:41.920
greater or equal 0.

00:41:41.920 --> 00:41:45.240
Do you see that I've
changed to an equation

00:41:45.240 --> 00:41:49.230
by introducing more variables?

00:41:49.230 --> 00:41:54.470
Putting the x's and the slacks
all together in a big variable

00:41:54.470 --> 00:41:55.870
that I'm now going to call x.

00:41:55.870 --> 00:42:00.002
So this is now the sum of --
there's are m plus n of these

00:42:00.002 --> 00:42:11.130
x's now, because -- this is the
new x and this is the new A.

00:42:11.130 --> 00:42:14.890
You might say: why didn't I just
start with equality constraint?

00:42:14.890 --> 00:42:16.840
And I certainly could have done.

00:42:16.840 --> 00:42:21.580
But just to see that
inequalities have their place

00:42:21.580 --> 00:42:25.040
too, and to see that we can
get between one and the other.

00:42:25.040 --> 00:42:31.310
OK, so now this is the problem
with equality constraint.

00:42:31.310 --> 00:42:38.770
So my new constraints are A*x
equals b and x greater or equal

00:42:38.770 --> 00:42:39.780
0.

00:42:39.780 --> 00:42:41.770
That's the primal constraint.

00:42:41.770 --> 00:42:44.940
And what's the dual constraint?

00:42:44.940 --> 00:42:48.740
So the dual constraint
is y greater or equals 0.

00:42:48.740 --> 00:42:50.660
Right?

00:42:50.660 --> 00:42:57.330
And, OK I have to get this right
because we're right at the end.

00:42:57.330 --> 00:43:05.240
And the slack, let me
just write the slack one.

00:43:05.240 --> 00:43:08.930
The slack one -- s is the slack.

00:43:08.930 --> 00:43:10.010
This is s.

00:43:10.010 --> 00:43:14.170
I'm going to transpose so that
I have consistently column

00:43:14.170 --> 00:43:14.980
vectors.

00:43:14.980 --> 00:43:24.560
So that, when I transpose, it
says that A transpose y plus s

00:43:24.560 --> 00:43:26.180
is c.

00:43:26.180 --> 00:43:27.600
Right?

00:43:27.600 --> 00:43:31.110
I put that over there
with the s and transpose

00:43:31.110 --> 00:43:32.970
to get column vectors.

00:43:32.970 --> 00:43:35.040
I like to have column vectors.

00:43:35.040 --> 00:43:39.570
OK, so those are the
constraints, but now,

00:43:39.570 --> 00:43:44.730
what's the derivative
equals 0 equation?

00:43:44.730 --> 00:43:50.380
Derivative equals 0 is the
derivative of this equals 0.

00:43:50.380 --> 00:43:52.260
So what does that say?

00:43:52.260 --> 00:43:56.440
That says that if I set
the derivative as 0,

00:43:56.440 --> 00:44:01.760
that says that c_i
-- x, remember, is --

00:44:01.760 --> 00:44:04.380
well x has got all
these components.

00:44:04.380 --> 00:44:11.540
c_i is alpha and the derivative
of log x_i, of course,

00:44:11.540 --> 00:44:14.810
is 1 over x_i.

00:44:14.810 --> 00:44:20.440
So that's the equation
for derivative equals 0.

00:44:20.440 --> 00:44:23.090
So this is what I'm solving.

00:44:23.090 --> 00:44:23.590
OK.

00:44:26.690 --> 00:44:29.890
Equality is here,
equality is here,

00:44:29.890 --> 00:44:32.294
equality is here, but nonlinear.

00:44:32.294 --> 00:44:33.460
This is of course nonlinear.

00:44:43.570 --> 00:44:50.680
So Newton's method
just says linearize.

00:44:50.680 --> 00:44:55.590
Newton's method is just
linearize at the point,

00:44:55.590 --> 00:45:00.420
and that gives you
the direction to move.

00:45:00.420 --> 00:45:04.570
And you move that direction
because you've linearized.

00:45:04.570 --> 00:45:10.440
As you move, you're wandering
a little away from precision,

00:45:10.440 --> 00:45:16.430
from perfection, but if you
don't take too big a step,

00:45:16.430 --> 00:45:18.430
Newton is safe.

00:45:18.430 --> 00:45:21.130
Maybe, since this is a course
in scientific computing,

00:45:21.130 --> 00:45:24.630
I should've written on the
very first day in big letters

00:45:24.630 --> 00:45:31.620
Newton, because that idea
of following the gradient

00:45:31.620 --> 00:45:36.400
is the central method of
solving non-linear equations.

00:45:36.400 --> 00:45:39.160
And then on the board
beneath, I would

00:45:39.160 --> 00:45:41.600
have written in big
letters "carefully,"

00:45:41.600 --> 00:45:46.610
because the derivative
is a local thing.

00:45:46.610 --> 00:45:51.590
And if you follow the
derivative a long distance,

00:45:51.590 --> 00:45:55.780
follow the derivative here
a long distance out to here,

00:45:55.780 --> 00:46:03.130
who knows what -- you've lost
the safety of Newton's method.

00:46:03.130 --> 00:46:08.100
So Newton's method
always comes in reality

00:46:08.100 --> 00:46:11.760
with some kind of a trust
region, some region where

00:46:11.760 --> 00:46:17.150
you can rely on the
derivative being

00:46:17.150 --> 00:46:21.840
a reasonable approximation of
the way the function is moving.

00:46:21.840 --> 00:46:25.130
OK, so we do that here too.

00:46:25.130 --> 00:46:26.520
OK.

00:46:26.520 --> 00:46:36.800
Maybe I won't write
out in full notation --

00:46:36.800 --> 00:46:39.500
what does Newton's
method do, actually?

00:46:39.500 --> 00:46:47.370
So Newton's method, we're
at a particular x, y, s,

00:46:47.370 --> 00:46:51.450
and we've got to move.

00:46:51.450 --> 00:46:54.550
So the unknowns are ---
the components of x,

00:46:54.550 --> 00:46:58.130
the components of y,
and the components of s.

00:46:58.130 --> 00:47:03.350
So Newton's method takes
steps: a delta x, a delta y,

00:47:03.350 --> 00:47:11.500
and a delta s, computes
what those should be,

00:47:11.500 --> 00:47:15.780
and then that gives
the direction,

00:47:15.780 --> 00:47:19.210
and if you take them exactly,
that's the full Newton

00:47:19.210 --> 00:47:22.660
step, which you would be very
happy to do because that gives

00:47:22.660 --> 00:47:27.030
terrific convergence, but
if it's too big a step,

00:47:27.030 --> 00:47:28.800
then you have to cut back.

00:47:28.800 --> 00:47:32.660
So the equations for
these are what you need,

00:47:32.660 --> 00:47:37.310
so there'll be an A
delta x will be 0.

00:47:37.310 --> 00:47:39.640
Because b isn't changing.

00:47:39.640 --> 00:47:50.690
There will be an A transpose
delta y; A transposed delta y

00:47:50.690 --> 00:47:55.900
plus delta s will be 0
because the c isn't changing.

00:47:55.900 --> 00:47:58.570
And then we'll get
an equation out

00:47:58.570 --> 00:48:04.490
of this, which is a really
significant one that maybe

00:48:04.490 --> 00:48:08.700
time is running out on and I'm
not going to do justice to.

00:48:08.700 --> 00:48:14.400
But that's the nonlinear
term, where, you see,

00:48:14.400 --> 00:48:20.790
if I keep A delta x zero, then
my new x is exactly feasible

00:48:20.790 --> 00:48:21.290
right?

00:48:21.290 --> 00:48:25.590
If I'm at an A*x equals b
and I move it by a delta x

00:48:25.590 --> 00:48:30.570
that's in the null space,
then I still have --

00:48:30.570 --> 00:48:35.820
all I'm saying is that when I
take that step I will have A x

00:48:35.820 --> 00:48:38.350
plus delta x still equal to b.

00:48:38.350 --> 00:48:39.130
Good.

00:48:39.130 --> 00:48:40.910
Constraints still satisfied.

00:48:40.910 --> 00:48:46.070
When I take this step, since
that's linear, the constraint,

00:48:46.070 --> 00:48:50.260
when I add on the delta y
and the delta s and the 0,

00:48:50.260 --> 00:48:53.980
I still have -- my new
point still satisfies that

00:48:53.980 --> 00:48:54.890
constraint.

00:48:54.890 --> 00:48:58.980
But this is of course
not exactly satisfied.

00:48:58.980 --> 00:49:02.580
If I had the solution
to this, I'd be done.

00:49:02.580 --> 00:49:03.900
That's my problem.

00:49:03.900 --> 00:49:07.390
Anyway, so it's not
exactly satisfied.

00:49:07.390 --> 00:49:14.520
Newton would tell you
a linearization of it,

00:49:14.520 --> 00:49:19.050
and you would move in that
gradient direction to try

00:49:19.050 --> 00:49:24.030
to make the thing -- to
try to make equality hold,

00:49:24.030 --> 00:49:30.370
because our current x doesn't
have equality holding.

00:49:30.370 --> 00:49:35.060
And of course the c is
A transpose y plus s.

00:49:35.060 --> 00:49:41.210
So that equation -- you
see what's going on here?

00:49:41.210 --> 00:49:46.000
This is A transpose y plus s,
and the x is multiplying those,

00:49:46.000 --> 00:49:47.830
so there's a product there.

00:49:47.830 --> 00:49:50.930
And when I take the derivative,
it's a product rule,

00:49:50.930 --> 00:49:52.390
I get two terms.

00:49:52.390 --> 00:50:00.200
Anyway, I get a third
equation from here

00:50:00.200 --> 00:50:03.460
that connects delta x,
delta y, and delta s.

00:50:03.460 --> 00:50:09.420
I take that step and that's
my interior point method.

00:50:09.420 --> 00:50:13.400
That's my Newton step.

00:50:13.400 --> 00:50:18.790
So maybe I just end by
reporting the results,

00:50:18.790 --> 00:50:20.940
so I'll end with
just two comments.

00:50:20.940 --> 00:50:23.280
First is, is the
method any good?

00:50:23.280 --> 00:50:26.120
And of course you
only know by trying.

00:50:26.120 --> 00:50:29.460
And the answer is
yeah, in -- typically,

00:50:29.460 --> 00:50:34.920
you get the duality gap down
below 10 to the minus 8,

00:50:34.920 --> 00:50:38.160
which is usually
very satisfactory,

00:50:38.160 --> 00:50:45.410
in 20 to 80 steps.

00:50:45.410 --> 00:50:48.340
You can never prove a
statement like that,

00:50:48.340 --> 00:50:51.170
because you can always
create some awful example,

00:50:51.170 --> 00:50:55.830
but this is the typical
performance of the method.

00:50:55.830 --> 00:51:01.620
Which is pretty good,
regardless of m and n.

00:51:01.620 --> 00:51:06.270
That's what's wonderful --
that the number of steps

00:51:06.270 --> 00:51:09.910
doesn't increase with
the size of the problem.

00:51:09.910 --> 00:51:12.400
Of course, the cost
per step does increase

00:51:12.400 --> 00:51:13.740
with the size of the problem.

00:51:13.740 --> 00:51:16.660
OK so that's the
results, and that's

00:51:16.660 --> 00:51:20.090
why the method is popular.

00:51:20.090 --> 00:51:23.840
And now I just wanted
to not leave duality,

00:51:23.840 --> 00:51:28.470
which is such a key
idea, without going back

00:51:28.470 --> 00:51:34.270
to our much more familiar
problem of quadratics, where

00:51:34.270 --> 00:51:36.050
there are quadratic terms.

00:51:36.050 --> 00:51:39.720
And the best model you
remember was projection.

00:51:39.720 --> 00:51:46.160
You remember that we had a
vector b and we have the line,

00:51:46.160 --> 00:51:52.420
the null space of A. No, this
was the column space of A.

00:51:52.420 --> 00:51:56.580
This was all A*x's.

00:51:56.580 --> 00:52:03.830
And perpendicular to it was
the null space of A transpose.

00:52:03.830 --> 00:52:10.010
All A transpose
y's that equaled 0.

00:52:10.010 --> 00:52:11.060
Do you remember this?

00:52:11.060 --> 00:52:17.280
This was the model problem
for understanding the --

00:52:17.280 --> 00:52:22.590
so that the projection of
this solved one problem.

00:52:22.590 --> 00:52:27.070
The projection in the other
direction -- we called that P.

00:52:27.070 --> 00:52:31.570
This was the projection P
equal A times the best x.

00:52:31.570 --> 00:52:34.720
The projection in the
opposite direction

00:52:34.720 --> 00:52:39.870
found the e, the error,
but it was the solution

00:52:39.870 --> 00:52:41.890
to the dual problem.

00:52:41.890 --> 00:52:47.050
And now I want to say where
was duality in this picture?

00:52:47.050 --> 00:52:51.770
Well, duality was -- let me
call it e hat, the winning,

00:52:51.770 --> 00:52:54.650
the projection, the
right guy over here.

00:52:54.650 --> 00:52:57.700
Or maybe y hat.

00:52:57.700 --> 00:52:59.500
OK, where was duality?

00:52:59.500 --> 00:53:02.640
Duality came, in this
case, in the fact

00:53:02.640 --> 00:53:05.250
that it was Pythagoras.

00:53:05.250 --> 00:53:09.100
Duality in this simple,
beautiful problem

00:53:09.100 --> 00:53:15.220
was simply the fact that p
squared, this winner squared,

00:53:15.220 --> 00:53:21.300
plus e squared was b squared.

00:53:21.300 --> 00:53:25.880
The winners were the
orthogonal projections.

00:53:25.880 --> 00:53:28.120
And now where is weak duality?

00:53:28.120 --> 00:53:30.460
It's the last second
of the lecture.

00:53:30.460 --> 00:53:33.840
Weak duality says take
something that's allowed,

00:53:33.840 --> 00:53:38.650
like that, and take something
that's allowed here, like that.

00:53:44.650 --> 00:53:47.080
Those are not the winners.

00:53:47.080 --> 00:53:50.140
Those don't deserve
stars or hats.

00:53:50.140 --> 00:53:51.650
They're not the winners.

00:53:51.650 --> 00:53:57.640
And compute that squared
plus that squared.

00:53:57.640 --> 00:53:59.350
So this is any A*x.

00:53:59.350 --> 00:54:09.630
So any A*x squared and any y --
let's call that y -- squared.

00:54:09.630 --> 00:54:19.060
And what is the inequality
that is satisfied by any A*x,

00:54:19.060 --> 00:54:24.220
like the wrong one here, and
any y, like the wrong one there,

00:54:24.220 --> 00:54:27.250
will satisfy?

00:54:27.250 --> 00:54:31.260
Pythagoras won't be quite right.

00:54:31.260 --> 00:54:35.960
It'll be A*x squared
plus y squared.

00:54:35.960 --> 00:54:38.530
What do we know about the
sum of those two squares?

00:54:41.100 --> 00:54:45.080
It's greater than or
equal to b squared.

00:54:48.440 --> 00:54:51.720
The only way we get
this thing split

00:54:51.720 --> 00:54:58.580
into two orthogonal parts whose
squares add up to b squared

00:54:58.580 --> 00:55:02.680
is right triangle.

00:55:02.680 --> 00:55:09.390
If I replace this by something
longer and I replace this --

00:55:09.390 --> 00:55:10.980
I should take that error really.

00:55:13.850 --> 00:55:17.500
e is really b minus the A*x.

00:55:17.500 --> 00:55:19.420
That's what I should
be putting here.

00:55:19.420 --> 00:55:25.860
This thing should be
b minus A*x squared.

00:55:28.450 --> 00:55:32.700
Anyway, the duality
is in the fact

00:55:32.700 --> 00:55:36.570
of getting an equal sign
there and weak duality

00:55:36.570 --> 00:55:40.390
is the easy inequality
that no matter what you do,

00:55:40.390 --> 00:55:41.960
you get greater than or equal.

00:55:41.960 --> 00:55:46.810
So the duality gap is
somehow the gap there,

00:55:46.810 --> 00:55:51.640
and the whole subject
of optimization

00:55:51.640 --> 00:55:53.790
is to bring that gap to 0.

00:55:53.790 --> 00:55:58.430
So this is the gap in
quadratic problems,

00:55:58.430 --> 00:56:01.830
of which this is a neat
model, and this was

00:56:01.830 --> 00:56:04.660
all about linear programming.

00:56:04.660 --> 00:56:09.300
And duality is present for both.

00:56:09.300 --> 00:56:16.430
OK, so Friday is the promised
lecture on ill-posed problems.

00:56:16.430 --> 00:56:21.100
And meanwhile, if two
people are willing to put up

00:56:21.100 --> 00:56:25.710
a hand now or email me
later and say: sure,

00:56:25.710 --> 00:56:31.271
I'll take my turn Friday of next
week, that would be terrific.

00:56:31.271 --> 00:56:31.770
OK.

00:56:31.770 --> 00:56:32.710
Thanks.

00:56:32.710 --> 00:56:33.780
I see one hand.

00:56:33.780 --> 00:56:35.030
OK.