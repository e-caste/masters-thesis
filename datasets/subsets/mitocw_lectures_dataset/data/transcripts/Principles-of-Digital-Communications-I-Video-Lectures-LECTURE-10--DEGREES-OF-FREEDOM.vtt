WEBVTT

00:00:00.000 --> 00:00:02.360
The following content is
provided under a Creative

00:00:02.360 --> 00:00:03.630
Commons license.

00:00:03.630 --> 00:00:06.540
Your support will help MIT
OpenCourseWare continue to

00:00:06.540 --> 00:00:09.515
offer high quality educational
resources for free.

00:00:09.515 --> 00:00:12.810
To make a donation or to view
additional materials from

00:00:12.810 --> 00:00:16.780
hundreds of MIT courses, visit
MIT OpenCourseWare at

00:00:16.780 --> 00:00:19.260
ocw.mit.edu.

00:00:19.260 --> 00:00:23.510
PROFESSOR: We started to talk
about the discrete time

00:00:23.510 --> 00:00:27.080
Fourier transform last time.

00:00:27.080 --> 00:00:31.120
This is probably something
you've been exposed to before,

00:00:31.120 --> 00:00:35.270
and as in many cases, we're
looking at it in a very

00:00:35.270 --> 00:00:38.830
different way than what you
probably looked at it before.

00:00:38.830 --> 00:00:42.900
The discrete time Fourier
transform is simply the time

00:00:42.900 --> 00:00:46.900
frequency dual of the
Fourier series.

00:00:46.900 --> 00:00:49.420
Nothing more than that.

00:00:49.420 --> 00:00:51.450
For any L2 function --

00:00:54.070 --> 00:00:56.290
now we're talking about a
function of frequency, but a

00:00:56.290 --> 00:00:57.660
function is a function.

00:00:57.660 --> 00:01:02.690
So this is a complex valued
function of frequency.

00:01:02.690 --> 00:01:09.710
If it's limited, if it's
truncated to the band from

00:01:09.710 --> 00:01:17.480
minus w to plus w, then, in
fact, it's inverse Fourier

00:01:17.480 --> 00:01:21.460
transform is given by this limit
in the mean of the sum

00:01:21.460 --> 00:01:24.520
of the coefficients times
v sub k of f.

00:01:24.520 --> 00:01:27.640
This is exactly the same as
the Fourier transform

00:01:27.640 --> 00:01:34.210
replacing times with
frequencies, replacing w for t

00:01:34.210 --> 00:01:48.340
over 2, and in the complex
frequency you're replacing a

00:01:48.340 --> 00:01:53.910
to the plus 2 pi i here with e
to the minus 2 pi i in the

00:01:53.910 --> 00:01:54.940
Fourier series.

00:01:54.940 --> 00:01:57.420
So those are the only
differences, it's just

00:01:57.420 --> 00:02:00.900
notational differences, and
aside from that, it works

00:02:00.900 --> 00:02:02.300
exactly the same way.

00:02:02.300 --> 00:02:05.380
The coefficients are
given by this.

00:02:05.380 --> 00:02:07.560
We showed, when we were talking
about the Fourier

00:02:07.560 --> 00:02:11.980
series, that these coefficients
exist as complex

00:02:11.980 --> 00:02:14.670
numbers, they're
always finite.

00:02:14.670 --> 00:02:17.900
You can calculate them
if you want to.

00:02:17.900 --> 00:02:21.900
This quantity here can
be rather fishy.

00:02:21.900 --> 00:02:25.730
This is this limit in the mean
which says that you have to

00:02:25.730 --> 00:02:30.060
calculate this by looking at
the sum here over a finite

00:02:30.060 --> 00:02:33.600
sum, over a finite sum this
is well-defined and

00:02:33.600 --> 00:02:35.140
behaves very nicely.

00:02:35.140 --> 00:02:38.860
As you go to the limit funny
things can happen, but the

00:02:38.860 --> 00:02:41.940
thing that we showed is in terms
of energy, nothing funny

00:02:41.940 --> 00:02:43.760
can happen.

00:02:43.760 --> 00:02:46.170
I'm going to give you an example
of this kind of funny

00:02:46.170 --> 00:02:50.340
business as we talk about the
sampling theorem in just a

00:02:50.340 --> 00:02:52.410
couple of minutes.

00:02:52.410 --> 00:02:57.080
So the u hat of f has
to be L1 since it is

00:02:57.080 --> 00:02:59.030
limited in this way.

00:02:59.030 --> 00:03:02.280
It has a continuous inverse
transform, which is this.

00:03:02.280 --> 00:03:08.430
OK, so you can go from --

00:03:08.430 --> 00:03:10.080
blah blah blah blah blah.

00:03:10.080 --> 00:03:13.500
The discrete Fourier transform
is simply a transform between

00:03:13.500 --> 00:03:17.260
a function and a sequence
of terms.

00:03:17.260 --> 00:03:20.940
Now this bit here is something
we haven't

00:03:20.940 --> 00:03:23.690
talked about before.

00:03:23.690 --> 00:03:27.560
Because now we've talked about
Fourier transforms also, and

00:03:27.560 --> 00:03:31.900
if you have an L2 function, u
hat of f, that L2 function has

00:03:31.900 --> 00:03:36.700
a Fourier transform and an
inverse Fourier transform in

00:03:36.700 --> 00:03:41.320
this case, which is u of t,
which is given by this

00:03:41.320 --> 00:03:43.270
expression here, the
usual expression

00:03:43.270 --> 00:03:45.050
for the Fourier transform.

00:03:45.050 --> 00:03:49.240
Now, the thing that's peculiar
about this Fourier transform

00:03:49.240 --> 00:03:56.200
is that since u hat of f is
limited, is truncated, this

00:03:56.200 --> 00:03:58.820
transform here exists
everywhere.

00:03:58.820 --> 00:04:01.250
We don't need a limit
in the mean here.

00:04:01.250 --> 00:04:04.280
You can calculate this for
every t this exists.

00:04:04.280 --> 00:04:07.380
This is a point-wise
convergent thing.

00:04:07.380 --> 00:04:10.770
This is the thing that you're
used to when you think of

00:04:10.770 --> 00:04:14.230
functions, because the function
is defined everywhere

00:04:14.230 --> 00:04:15.770
in this case.

00:04:15.770 --> 00:04:18.380
And since we're going to go into
the sampling theorem, it

00:04:18.380 --> 00:04:21.260
had damned well better be
defined everywhere because

00:04:21.260 --> 00:04:23.210
otherwise the sampling
theorem wouldn't make

00:04:23.210 --> 00:04:24.460
any sense at all.

00:04:30.490 --> 00:04:33.830
So, the inverse Fourier
transform of the discrete time

00:04:33.830 --> 00:04:36.750
Fourier transform, as we
said, is this, it's a

00:04:36.750 --> 00:04:38.450
limit in the mean.

00:04:38.450 --> 00:04:40.790
Namely, you take more
and more terms here.

00:04:40.790 --> 00:04:45.250
You get closer and closer to
this in terms of energy.

00:04:45.250 --> 00:04:48.000
It doesn't say anything about
what happens for particular

00:04:48.000 --> 00:04:50.330
values of f.

00:04:50.330 --> 00:04:57.480
This is a sampling expansion
with t equals 1 over 2w.

00:05:14.080 --> 00:05:19.770
OK, let's go back here.

00:05:19.770 --> 00:05:23.330
We're talking about some
function of frequency which

00:05:23.330 --> 00:05:29.150
has a Fourier series, it also
has a Fourier transform.

00:05:29.150 --> 00:05:32.750
What we're interested in now
is what is the relationship

00:05:32.750 --> 00:05:36.190
between these coefficients
here and a discrete time

00:05:36.190 --> 00:05:39.910
Fourier transform and
this function here.

00:05:39.910 --> 00:05:42.300
What I want to show you is
that, in fact, these two

00:05:42.300 --> 00:05:45.140
things are very closely
related.

00:05:45.140 --> 00:05:48.760
You can now go back to the
Fourier series itself and

00:05:48.760 --> 00:05:53.090
relate the Fourier series
coefficients to the Fourier

00:05:53.090 --> 00:05:55.810
transform and you'll get the
same kind of sampling

00:05:55.810 --> 00:05:58.660
representation that we're
getting right now.

00:06:03.550 --> 00:06:32.360
So, if we -- there's something
missing in what I'm

00:06:32.360 --> 00:06:33.610
trying to say here.

00:06:37.860 --> 00:06:40.770
Oh, I see what I'm trying
to do, sorry.

00:06:40.770 --> 00:06:43.740
What I'm trying to do is to
take the inverse Fourier

00:06:43.740 --> 00:06:46.480
transform of u hat of
f, which is given by

00:06:46.480 --> 00:06:48.030
this expression here.

00:06:48.030 --> 00:06:50.330
Temporarily I'm going to forget
about the fact that

00:06:50.330 --> 00:06:53.540
this is a limit in the mean,
throw mathematics to the

00:06:53.540 --> 00:06:57.030
winds, and simply take this
inverse transform.

00:06:57.030 --> 00:06:59.730
Take the inverse transform
of this also.

00:06:59.730 --> 00:07:03.230
So, when I take the inverse
transform of the sum, what I'm

00:07:03.230 --> 00:07:08.370
going to get is the sum over k
of u sub k, and then in place

00:07:08.370 --> 00:07:13.780
of this frequency function --
these are orthogonal functions

00:07:13.780 --> 00:07:16.730
here, the things I listed
on the previous page --

00:07:16.730 --> 00:07:20.270
I got u of t is the sum of
u sub k times these time

00:07:20.270 --> 00:07:21.980
functions now.

00:07:21.980 --> 00:07:28.950
These time functions are just
the Fourier transforms of

00:07:28.950 --> 00:07:32.120
these frequency functions
here.

00:07:32.120 --> 00:07:36.190
This is a set of orthogonal
wave forms here, which are

00:07:36.190 --> 00:07:38.230
truncated sinusoids.

00:07:38.230 --> 00:07:42.280
I want to take the Fourier
transform of these and the

00:07:42.280 --> 00:07:45.240
Fourier transforms of these --

00:07:45.240 --> 00:07:47.810
I should have put them both on
the same slide so you could

00:07:47.810 --> 00:07:49.810
see what they are --

00:07:49.810 --> 00:07:53.140
but in fact, in your homework
you're going to take the

00:07:53.140 --> 00:07:57.190
inverse Fourier transform of
that and show that it is, in

00:07:57.190 --> 00:07:59.040
fact, this.

00:07:59.040 --> 00:08:03.710
That's just a nice exercise in
taking rectangular functions

00:08:03.710 --> 00:08:09.420
and sinc functions and applying
shifts in both time

00:08:09.420 --> 00:08:10.890
and frequency.

00:08:10.890 --> 00:08:16.240
When you do this, this turns
out to have the inverse

00:08:16.240 --> 00:08:17.590
transform of this.

00:08:17.590 --> 00:08:21.530
So this is u of t is just this,
where this comes from

00:08:21.530 --> 00:08:26.580
here, and then this turns out to
be the inverse transform of

00:08:26.580 --> 00:08:31.220
this function here, which,
in fact, is just this.

00:08:34.960 --> 00:08:36.210
Sorry for all of that.

00:08:40.400 --> 00:08:43.690
So now if we want to try to
understand what this means,

00:08:43.690 --> 00:08:48.020
suppose that you take a function
u of t, which is, in

00:08:48.020 --> 00:08:52.190
fact, the inverse transform of
this u hat of f, which is

00:08:52.190 --> 00:08:56.810
truncated to a finite
band limit.

00:08:56.810 --> 00:09:03.010
If we then take v of t equal to
u of t everywhere except on

00:09:03.010 --> 00:09:06.920
the sample points, and on every
sample point we simply

00:09:06.920 --> 00:09:11.060
add 1 to v -- in other words,
v of kt is equal to

00:09:11.060 --> 00:09:14.190
u of kT plus 1.

00:09:14.190 --> 00:09:18.150
So we take this nice smooth
function that we have here,

00:09:18.150 --> 00:09:28.800
and at every sample point
we simply add 1.

00:09:35.490 --> 00:09:39.610
So now the question is, is this
new function I have still

00:09:39.610 --> 00:09:41.620
baseband limited or isn't it?

00:09:46.620 --> 00:09:49.750
You see you can't answer that
question because we weren't

00:09:49.750 --> 00:09:52.790
careful enough to say
what we meant by a

00:09:52.790 --> 00:09:55.760
baseband limited function.

00:09:55.760 --> 00:09:59.050
Usually when you talk about a
baseband limited function,

00:09:59.050 --> 00:10:01.540
you're talking about a function
whose Fourier

00:10:01.540 --> 00:10:07.830
transform is zero, except in the
range minus w to plus w.

00:10:07.830 --> 00:10:12.750
Well, this new function v of t
here has the property that its

00:10:12.750 --> 00:10:17.770
Fourier transform is zero
outside of minus w to plus w.

00:10:20.550 --> 00:10:25.980
And therefore if you define
baseband limited as functions

00:10:25.980 --> 00:10:30.770
whose Fourier transform is zero
outside of limits, then

00:10:30.770 --> 00:10:34.790
the sampling theorem
doesn't hold.

00:10:34.790 --> 00:10:37.140
So what do we do about this?

00:10:37.140 --> 00:10:40.940
Well, the easiest thing to do
about it is to change what we

00:10:40.940 --> 00:10:45.580
mean by baseband limited to what
you would have meant if

00:10:45.580 --> 00:10:49.410
we hadn't going through all
of this mathematics.

00:10:49.410 --> 00:10:52.500
In other words, the Fourier
transform cuts both ways -- u

00:10:52.500 --> 00:10:57.010
of t has a Fourier transform, u
hat of f, u hat of f has an

00:10:57.010 --> 00:10:59.590
inverse transform, u of t.

00:10:59.590 --> 00:11:05.000
What we mean now by baseband
limited is that u of t is the

00:11:05.000 --> 00:11:09.020
inverse transform of a frequency
function, which is

00:11:09.020 --> 00:11:11.830
limited to minus
w over plus w.

00:11:11.830 --> 00:11:16.640
In other words, we will regard
u of t here as being baseband

00:11:16.640 --> 00:11:19.120
limited, we will not
regard v of t as

00:11:19.120 --> 00:11:21.830
being baseband limited.

00:11:21.830 --> 00:11:25.490
Because we have these two
functions, u of t and v of t,

00:11:25.490 --> 00:11:29.380
which both have the same Fourier
transforms, but which

00:11:29.380 --> 00:11:33.050
are not equal to each other.

00:11:33.050 --> 00:11:37.050
We want to, at this point, say
that the only one which is

00:11:37.050 --> 00:11:41.630
really baseband limited is the
function which is the inverse

00:11:41.630 --> 00:11:43.160
transform of u of t.

00:11:43.160 --> 00:11:45.860
If you read the sampling theorem
as it's written in the

00:11:45.860 --> 00:11:49.430
notes, that's exactly
what it says.

00:11:49.430 --> 00:11:53.200
It defines this function u of
t to which the sampling

00:11:53.200 --> 00:11:55.290
theorem applies in that way.

00:11:55.290 --> 00:11:57.100
Well anyway, this
is the sampling

00:11:57.100 --> 00:11:58.620
theorem at this point.

00:11:58.620 --> 00:12:01.310
It says you can take
u of t, you can

00:12:01.310 --> 00:12:03.330
express it in this way.

00:12:03.330 --> 00:12:10.870
If I go back to the previous
slide, what we did here by

00:12:10.870 --> 00:12:19.390
comparing u of t with this
expression for u sub k. u sub

00:12:19.390 --> 00:12:22.660
k are the coefficients in the
discrete time Fourier

00:12:22.660 --> 00:12:31.510
transform. u of t is this
inverse transform.

00:12:31.510 --> 00:12:34.620
These quantities here
are almost the same.

00:12:34.620 --> 00:12:39.530
This quantity here is just
evaluating this at particular

00:12:39.530 --> 00:12:40.300
frequencies.

00:12:40.300 --> 00:12:45.060
Namely, if for frequency f I
substitute in, if we're time

00:12:45.060 --> 00:12:54.930
t, I substitute in k over 2w,
then this formula just becomes

00:12:54.930 --> 00:12:55.820
that formula.

00:12:55.820 --> 00:13:01.720
In other words, 2w times
u sub k is equal to u

00:13:01.720 --> 00:13:03.450
evaluated at k over 2w.

00:13:07.310 --> 00:13:10.130
You already saw that when you
looked at the Fourier series.

00:13:10.130 --> 00:13:12.630
When you looked at the Fourier
series, you saw these

00:13:12.630 --> 00:13:15.590
coefficients, which, in fact,
look like the Fourier

00:13:15.590 --> 00:13:17.930
transform terms.

00:13:17.930 --> 00:13:20.870
And which, in fact, were the
same as the Fourier transform

00:13:20.870 --> 00:13:27.760
except for a scale factor at
some particular frequency.

00:13:27.760 --> 00:13:31.970
Here we have these coefficients,
which are, in

00:13:31.970 --> 00:13:35.980
fact, scaled versions of the
inverse transform of

00:13:35.980 --> 00:13:37.750
particular times.

00:13:37.750 --> 00:13:41.970
So the conclusion from that
is that, in fact, what the

00:13:41.970 --> 00:13:46.780
discrete time Fourier transform
is is it's simply

00:13:46.780 --> 00:13:50.530
the Fourier transform of the
sampling theorem expansion.

00:13:50.530 --> 00:13:55.940
The two of them are duals in a
very different way than the

00:13:55.940 --> 00:14:02.830
Fourier series and the
dtft are duals.

00:14:02.830 --> 00:14:07.650
The dtft and the Fourier series
are duals in the sense

00:14:07.650 --> 00:14:12.300
that if you take the expressions
for the Fourier

00:14:12.300 --> 00:14:16.560
series and change frequency
for time and time for

00:14:16.560 --> 00:14:19.810
frequency, you get
to the dtft.

00:14:19.810 --> 00:14:23.670
Here what we're doing is taking
the dtft and simply

00:14:23.670 --> 00:14:28.500
taking the inverse Fourier
transform of it, so that the

00:14:28.500 --> 00:14:31.700
sampling theorem is, in
fact, the Fourier

00:14:31.700 --> 00:14:34.710
transform of the dtft.

00:14:34.710 --> 00:14:37.440
It's not the dual, it's the
Fourier transform itself.

00:14:45.350 --> 00:14:50.830
Well, the discrete time Fourier
transform generalizes

00:14:50.830 --> 00:14:54.820
to arbitrary frequency intervals
just as well as to a

00:14:54.820 --> 00:14:56.170
baseband interval.

00:14:56.170 --> 00:14:59.660
Namely, you can do exactly the
same thing as what we've just

00:14:59.660 --> 00:15:05.060
done if you're looking not at
the frequency at the range of

00:15:05.060 --> 00:15:09.000
frequencies from minus w to plus
w, but you shift that up

00:15:09.000 --> 00:15:13.040
to any old place you want to and
look at delta minus w to

00:15:13.040 --> 00:15:14.840
delta plus w.

00:15:14.840 --> 00:15:17.990
And the fact the discrete time
Fourier transform, if you

00:15:17.990 --> 00:15:20.560
don't put the rectangular
function in it is going to be

00:15:20.560 --> 00:15:22.070
periodic anyway.

00:15:22.070 --> 00:15:24.140
It's exactly the same
thing that we had

00:15:24.140 --> 00:15:26.200
with a Fourier series.

00:15:26.200 --> 00:15:29.270
With a Fourier series, we could
find the Fourier series

00:15:29.270 --> 00:15:33.230
for a function limited between
minus t over 2

00:15:33.230 --> 00:15:35.030
to plus t over 2.

00:15:35.030 --> 00:15:39.420
Now by duality, we can find
the dtft for a function

00:15:39.420 --> 00:15:44.960
limited between minus w plus
delta and plus w plus delta.

00:15:44.960 --> 00:15:47.150
That's what we're doing here.

00:15:47.150 --> 00:15:54.980
So the dtft in generalized form
is now this, and v sub k

00:15:54.980 --> 00:16:00.050
is now the integral from delta
minus w to delta plus w of the

00:16:00.050 --> 00:16:02.780
same old thing as before.

00:16:02.780 --> 00:16:06.860
This is equal to this, which
is the same old thing as

00:16:06.860 --> 00:16:15.140
before, except we now have this
shifted frequency in the

00:16:15.140 --> 00:16:17.830
rectangular function.

00:16:17.830 --> 00:16:22.450
So if we take the inverse
Fourier transform of this,

00:16:22.450 --> 00:16:27.500
again, using the same duality
we had before, we get v of t

00:16:27.500 --> 00:16:31.510
is equal to the sum times
the sinc function.

00:16:35.230 --> 00:16:36.780
And the only difference now
that we're expanding this

00:16:36.780 --> 00:16:40.240
given frequency band not
centered around zero but

00:16:40.240 --> 00:16:43.460
centered around something else,
the only difference in

00:16:43.460 --> 00:16:47.380
the sampling theorem is now
we have this rotating term

00:16:47.380 --> 00:16:55.260
gyrating around up at this
frequency, k over 2w.

00:16:55.260 --> 00:17:00.080
That's the only way in which
this is different from the

00:17:00.080 --> 00:17:02.430
sampling theorem that
we had before.

00:17:06.270 --> 00:17:08.810
I wish I could put more things
on one slide but you wouldn't

00:17:08.810 --> 00:17:10.740
see them if I could.

00:17:10.740 --> 00:17:16.450
So here's a Fourier transform
of the sum 1 over t, u of kt

00:17:16.450 --> 00:17:18.090
time the sinc function.

00:17:18.090 --> 00:17:20.500
Here it's the same thing.

00:17:23.190 --> 00:17:26.410
That's one reason for comparing

00:17:26.410 --> 00:17:27.660
these things sometimes.

00:17:36.600 --> 00:17:37.970
1 over t in here.

00:17:43.970 --> 00:17:49.600
OK, times, so it's the same
thing with this rotating term

00:17:49.600 --> 00:17:51.290
which is the only difference.

00:17:51.290 --> 00:17:56.210
Now, how many of you can see
that the Fourier transform of

00:17:56.210 --> 00:18:00.910
this quantity is equal to
this sinc function?

00:18:00.910 --> 00:18:01.780
I can't do that.

00:18:01.780 --> 00:18:05.080
It's one of the things you're
going to do in your homework.

00:18:05.080 --> 00:18:08.410
I get confused every time I do
it, and I got confused enough

00:18:08.410 --> 00:18:12.800
to leave out the 1 over t
this time when I did it.

00:18:12.800 --> 00:18:18.750
You just have to be patient
with that and do it a few

00:18:18.750 --> 00:18:23.360
times and you'll find
that it's not --

00:18:23.360 --> 00:18:26.720
well, it becomes automatic
after awhile.

00:18:26.720 --> 00:18:28.840
It's one place where you
need plug and chug.

00:18:31.560 --> 00:18:36.170
So now that we've generalized
the dtft to look at any old

00:18:36.170 --> 00:18:39.250
frequency band instead of just
the frequency band around

00:18:39.250 --> 00:18:42.290
zero, we can do the
same thing that we

00:18:42.290 --> 00:18:44.170
did with time functions.

00:18:44.170 --> 00:18:46.000
Namely, with a time function --

00:18:46.000 --> 00:18:46.210
Yes?

00:18:46.210 --> 00:18:49.600
AUDIENCE: [INAUDIBLE].

00:18:49.600 --> 00:18:51.510
PROFESSOR: You don't think
it should be a 1 over t?

00:18:51.510 --> 00:18:58.030
Well, you very well might be
right because I didn't think

00:18:58.030 --> 00:19:00.820
it should have been either
when I wrote it down.

00:19:00.820 --> 00:19:03.280
But I don't see --

00:19:03.280 --> 00:19:04.530
AUDIENCE: [INAUDIBLE].

00:19:09.560 --> 00:19:10.550
PROFESSOR: It was the--.

00:19:10.550 --> 00:19:11.800
AUDIENCE: [INAUDIBLE].

00:19:22.630 --> 00:19:25.080
PROFESSOR: Oh, that's the
difference, yes, of course.

00:19:27.940 --> 00:19:29.950
It's not the coefficient
that I have here,

00:19:29.950 --> 00:19:32.400
it's the actual --

00:19:32.400 --> 00:19:35.180
yeah.

00:19:35.180 --> 00:19:36.430
Yes.

00:19:40.780 --> 00:19:42.340
So it should be the
same as the--

00:19:54.610 --> 00:19:55.620
Oh, I see the problem.

00:19:55.620 --> 00:19:57.940
I shouldn't have had the 1
over t here, should I?

00:20:00.860 --> 00:20:02.110
No.

00:20:06.580 --> 00:20:09.900
I know one of them couldn't
be right.

00:20:09.900 --> 00:20:15.500
It is right in the notes, so
you can sort it out there.

00:20:20.100 --> 00:20:25.480
So, the thing we did when we
were dealing with a Fourier

00:20:25.480 --> 00:20:30.140
series is we took an arbitrary
function of time, we segmented

00:20:30.140 --> 00:20:33.450
it into time intervals and then
we expanded each one of

00:20:33.450 --> 00:20:36.870
those time intervals into
a Fourier series.

00:20:36.870 --> 00:20:40.740
By doing that we could take an
arbitrary L2 function and

00:20:40.740 --> 00:20:46.320
represent it as an orthogonal
expansion over this double sum

00:20:46.320 --> 00:20:50.720
of time shifts and
frequency terms.

00:20:50.720 --> 00:20:57.070
We call that the truncated
sinusoidal expansion, the t

00:20:57.070 --> 00:21:01.270
spaced truncated sinusoids and
we made an expansion out of

00:21:01.270 --> 00:21:05.100
that that would allow us to
express any old L2 function in

00:21:05.100 --> 00:21:06.870
terms of that.

00:21:06.870 --> 00:21:08.700
Here we're going to
do the same thing.

00:21:08.700 --> 00:21:12.390
We can take an arbitrary
frequency function, separate

00:21:12.390 --> 00:21:14.260
into bands of frequencies.

00:21:14.260 --> 00:21:18.610
You often want to do this in
digital communication when

00:21:18.610 --> 00:21:21.750
you're looking at transmitting
information in different

00:21:21.750 --> 00:21:24.830
bands, which you do all
the time in radio.

00:21:24.830 --> 00:21:27.850
Somebody has a certain part of
the spectrum, they transmit a

00:21:27.850 --> 00:21:30.430
signal there, somebody else
has another part of the

00:21:30.430 --> 00:21:33.970
spectrum, they transmit
a signal there.

00:21:33.970 --> 00:21:37.060
You can look at those different
signals which are in

00:21:37.060 --> 00:21:39.960
different frequency bands,
they're all orthogonal to each

00:21:39.960 --> 00:21:43.770
other, they don't interfere
with each other at all.

00:21:43.770 --> 00:21:45.340
We're doing the same
thing here.

00:21:45.340 --> 00:21:48.780
We're just saying an arbitrary
function can be split into

00:21:48.780 --> 00:21:52.300
different frequency bands, each
one of those frequency

00:21:52.300 --> 00:21:58.660
bands can be represented both by
a dtft, which is the thing

00:21:58.660 --> 00:22:02.040
we just did on the last slide,
and by sampling theorem

00:22:02.040 --> 00:22:05.940
expression, which is what we get
when we take the inverse

00:22:05.940 --> 00:22:10.240
Fourier transform of the dtft.

00:22:10.240 --> 00:22:14.600
So when we do that what we get
is a perfectly arbitrary

00:22:14.600 --> 00:22:20.140
frequency function which exists
from minus infinity to

00:22:20.140 --> 00:22:21.720
plus infinity.

00:22:21.720 --> 00:22:26.440
We can represent it as the
sum of all these separate

00:22:26.440 --> 00:22:28.000
frequency functions.

00:22:28.000 --> 00:22:31.420
I just threw a limit in the
mean here because I'm not

00:22:31.420 --> 00:22:36.730
being careful about what happens
where we separate from

00:22:36.730 --> 00:22:39.000
one frequency function
to the next.

00:22:39.000 --> 00:22:43.860
Namely, at frequency w do I use
one term or do I use the

00:22:43.860 --> 00:22:45.840
other term or do
I use the sum.

00:22:45.840 --> 00:22:47.480
But we don't want to
worry about that.

00:22:47.480 --> 00:22:49.440
We don't want to even
think about it.

00:22:49.440 --> 00:22:51.730
So we put a limit in
the mean here.

00:22:51.730 --> 00:22:59.990
So the v sub hat m of f then is
going to be the part of u

00:22:59.990 --> 00:23:05.140
of f which is in this particular
frequency range.

00:23:05.140 --> 00:23:08.540
That's completely the analogy
of taking a time function,

00:23:08.540 --> 00:23:11.810
looking at that time function
over a particular range of

00:23:11.810 --> 00:23:16.300
time, and here what we're doing
is taking a frequency

00:23:16.300 --> 00:23:20.920
function, segementing it into
different frequency intervals

00:23:20.920 --> 00:23:27.330
so that the end frequency
interval is then just this

00:23:27.330 --> 00:23:30.820
with a rectangular function
to truncate it.

00:23:30.820 --> 00:23:35.570
If I take the inverse Fourier
transform of this what I'm

00:23:35.570 --> 00:23:41.440
going to get is u of t, take the
inverse transform of all

00:23:41.440 --> 00:23:45.750
of these terms, so I'll get
the sum of vm of t.

00:23:45.750 --> 00:23:53.140
Now, vm of t is the inverse
Fourier transform of vm of f.

00:23:53.140 --> 00:23:57.210
You take that quantity, take the
inverse transform of it,

00:23:57.210 --> 00:24:01.080
and sure enough you get this
kind of expression here.

00:24:01.080 --> 00:24:09.350
It's a sampling theorem in v sub
m of f with this rotating

00:24:09.350 --> 00:24:11.240
frequency term here,
which is just the

00:24:11.240 --> 00:24:13.940
thing that we had before.

00:24:13.940 --> 00:24:17.280
So, all we're doing here is
starting out with some

00:24:17.280 --> 00:24:21.030
arbitrary frequency function,
we're segementing it in

00:24:21.030 --> 00:24:22.610
frequencies.

00:24:22.610 --> 00:24:28.920
Each frequency band then has
a dtft associated with it.

00:24:28.920 --> 00:24:33.070
When we take the inverse Fourier
transform of that

00:24:33.070 --> 00:24:38.480
dtft, what we get is a sampling
expansion for that

00:24:38.480 --> 00:24:40.270
particular frequency band.

00:24:40.270 --> 00:24:46.180
So what this is doing here,
finally when we get all done

00:24:46.180 --> 00:24:50.120
with this, is I'm just combining
the sampling theorem

00:24:50.120 --> 00:24:53.830
expansion in each frequency
range, which

00:24:53.830 --> 00:24:56.790
is what u of t is.

00:24:56.790 --> 00:25:00.390
So I've taken u of t, I split it
up into different frequency

00:25:00.390 --> 00:25:05.110
ranges, I've expressed what's
in each frequency range in

00:25:05.110 --> 00:25:07.850
terms of a sampling theorem.

00:25:07.850 --> 00:25:11.330
The sampling theorem terms are
these with these rotating

00:25:11.330 --> 00:25:17.990
terms in them corresponding to
the mth frequency range.

00:25:17.990 --> 00:25:24.680
This is completely analogous
then to the truncated sinc

00:25:24.680 --> 00:25:27.180
function expansion
we had before.

00:25:30.470 --> 00:25:36.090
This becomes a little more
sensible if we substitute a

00:25:36.090 --> 00:25:40.020
sampling time, t,
for 1 over 2w.

00:25:40.020 --> 00:25:43.590
Namely, all of these expressions
here are talking

00:25:43.590 --> 00:25:48.600
about what happens when you
sample these individual

00:25:48.600 --> 00:25:52.530
frequency bands at intervals
1 over 2w.

00:25:52.530 --> 00:25:56.130
So we'll just call that capital
T to make the formula

00:25:56.130 --> 00:25:58.140
look a little simpler.

00:25:58.140 --> 00:26:02.620
Then we get u of t is this
limit in the mean of this

00:26:02.620 --> 00:26:05.690
whole expression there.

00:26:05.690 --> 00:26:10.260
So it's a double sum, it's
a sum over time, over the

00:26:10.260 --> 00:26:16.870
samples, so there's one term for
each time, kT, and there's

00:26:16.870 --> 00:26:20.610
one term for each frequency
interval.

00:26:20.610 --> 00:26:26.550
Frequencies are indexed by
m, time is indexed by k.

00:26:26.550 --> 00:26:30.170
So the thing we have here is an
expansion now in terms of

00:26:30.170 --> 00:26:35.120
coefficients -- these are just
called coefficients again.

00:26:35.120 --> 00:26:44.780
This expansion which looks
suspiciously like the t space

00:26:44.780 --> 00:26:47.720
truncated sinusoids that
we had before.

00:26:47.720 --> 00:26:52.990
The only difference is that,
the terms were truncated in

00:26:52.990 --> 00:26:58.810
time; here, the terms are
truncated in frequency.

00:26:58.810 --> 00:27:03.110
So the different terms making
up this expansion, these

00:27:03.110 --> 00:27:08.900
orthogonal terms here, in one
case what we have is a sinc

00:27:08.900 --> 00:27:12.710
function which is translated
in time and then

00:27:12.710 --> 00:27:15.200
translated in frequency.

00:27:15.200 --> 00:27:19.070
In another case we have the
rectangular function, which is

00:27:19.070 --> 00:27:23.320
translated in time and then
translated in frequency.

00:27:23.320 --> 00:27:25.970
So in that sense, these two
expansions are almost the

00:27:25.970 --> 00:27:31.220
same, and you can think of doing
expansions perhaps in

00:27:31.220 --> 00:27:36.500
other things also and we'll talk
more about that later.

00:27:36.500 --> 00:27:47.330
So, this then is just this thing
we're going to call a t

00:27:47.330 --> 00:27:51.600
spaced sinc weighted
sinusoid expansion.

00:27:51.600 --> 00:27:54.930
So the only thing we have is
this one sinc function which

00:27:54.930 --> 00:27:58.160
is this hat sort of function.

00:27:58.160 --> 00:28:03.120
The terms in here are those
functions shifted in time by

00:28:03.120 --> 00:28:08.740
some number of sampling
intervals, t, and then shifted

00:28:08.740 --> 00:28:14.830
in frequency by some number
of frequency bands, 2w.

00:28:14.830 --> 00:28:17.560
See, the original frequency
bands that we had went from

00:28:17.560 --> 00:28:19.910
minus w to plus w.

00:28:19.910 --> 00:28:23.130
The next one goes from
w to 3w, the next one

00:28:23.130 --> 00:28:25.080
goes from 3w to 5w.

00:28:25.080 --> 00:28:29.360
So the frequency bands we're
talking about here

00:28:29.360 --> 00:28:32.260
are of width 2w.

00:28:32.260 --> 00:28:38.140
The time intervals we're talking
about are of width t.

00:28:38.140 --> 00:28:40.030
Why do people confuse
you that way?

00:28:42.550 --> 00:28:46.160
Well, because all of this
happened a long time before

00:28:46.160 --> 00:28:52.440
people realized how closely
the duality relationship

00:28:52.440 --> 00:28:54.730
between time and
frequency was.

00:28:54.730 --> 00:28:58.420
So people wanted to talk about
frequencies, baseband

00:28:58.420 --> 00:28:59.020
frequencies.

00:28:59.020 --> 00:29:03.240
You talk about a baseband
limited to w and you're

00:29:03.240 --> 00:29:06.750
talking about positive
frequencies, because engineers

00:29:06.750 --> 00:29:11.740
used to deal with cosines and
sine, and there weren't any

00:29:11.740 --> 00:29:14.010
such thing as negative
frequencies.

00:29:14.010 --> 00:29:17.170
Then they decided everything
was easier when they dealt

00:29:17.170 --> 00:29:21.230
with complex sinusoids, negative
frequencies reared

00:29:21.230 --> 00:29:24.990
their ugly head, but people
didn't want to change their

00:29:24.990 --> 00:29:28.490
notation for what a frequency
band was,

00:29:28.490 --> 00:29:30.600
which is probably good.

00:29:30.600 --> 00:29:34.130
So we're simply stuck with
this incompatibility of

00:29:34.130 --> 00:29:38.240
dealing with frequencies one
way and dealing with

00:29:38.240 --> 00:29:39.490
time the other way.

00:29:45.980 --> 00:29:49.900
We can look at that as
increments of time t, and

00:29:49.900 --> 00:29:54.170
increments of frequency, 1 over
t, but, in fact, 1 over t

00:29:54.170 --> 00:29:58.100
is 2w, so the increments in time
we're using in both of

00:29:58.100 --> 00:30:02.140
these expansions, are t, the
increments in frequency we're

00:30:02.140 --> 00:30:05.510
using are 2w.

00:30:05.510 --> 00:30:10.140
Now, there's a relatively long
section in the notes talking

00:30:10.140 --> 00:30:13.030
about degrees of freedom,
which is a

00:30:13.030 --> 00:30:15.400
pretty important topic.

00:30:15.400 --> 00:30:20.940
It's a little bit fishy
mathematically, but it really

00:30:20.940 --> 00:30:22.550
makes good engineering sense.

00:30:26.310 --> 00:30:30.910
It's an idea which is important
both in terms of

00:30:30.910 --> 00:30:35.870
taking source wave forms and
representing them in

00:30:35.870 --> 00:30:42.130
orthogonal expansions, and in
taking frequency functions and

00:30:42.130 --> 00:30:45.400
representing them --

00:30:45.400 --> 00:30:51.040
well, it is also important in
terms of taking things that we

00:30:51.040 --> 00:30:57.950
transmit where you have bits
coming into an encoder.

00:30:57.950 --> 00:31:01.570
We're going to turn those bits
into signals, we're going to

00:31:01.570 --> 00:31:04.170
turn those signals
into wave forms.

00:31:04.170 --> 00:31:07.480
Those wave forms will usually
be thought of as things that

00:31:07.480 --> 00:31:10.650
we transmit in time, and we
also transmit them in

00:31:10.650 --> 00:31:16.310
frequency, because we often use
some kind of multiplexing

00:31:16.310 --> 00:31:18.120
between different
frequency bands.

00:31:18.120 --> 00:31:20.990
We want to have a common way of
thinking about all of these

00:31:20.990 --> 00:31:26.120
things, and this is the way
that we're going to do it.

00:31:26.120 --> 00:31:29.370
Namely, if we're thinking in
terms of a particular sampling

00:31:29.370 --> 00:31:32.610
time, t, and we want to look
at a very, very large

00:31:32.610 --> 00:31:36.040
frequency band, and therefore,
look at many multiplex

00:31:36.040 --> 00:31:40.380
frequency bands, we can say how
many coefficients can we

00:31:40.380 --> 00:31:43.500
send on this channel?

00:31:43.500 --> 00:31:46.990
When we look at it in these
terms of different frequency

00:31:46.990 --> 00:31:51.470
bands, the number of
coefficients we can send is

00:31:51.470 --> 00:31:54.210
over a period of time, t zero.

00:31:54.210 --> 00:31:57.670
We can send t zero
over t different

00:31:57.670 --> 00:32:00.520
coefficients in time.

00:32:00.520 --> 00:32:02.220
We now look at frequency.

00:32:02.220 --> 00:32:07.070
We have some very broad
frequency band, w zero.

00:32:07.070 --> 00:32:10.950
The number of different
bands that we have

00:32:10.950 --> 00:32:18.130
is w zero over 2w.

00:32:23.430 --> 00:32:26.110
As a result of all of this when
you add everything up,

00:32:26.110 --> 00:32:31.720
you get 2t zero w zero degrees
of freedom over this overall

00:32:31.720 --> 00:32:34.270
bandwidth of w zero.

00:32:34.270 --> 00:32:37.710
Now remember, an overall
bandwidth of w zero in terms

00:32:37.710 --> 00:32:45.200
of these complex frequencies
goes from minus w to plus w.

00:32:45.200 --> 00:32:47.790
Minus w zero to plus w zero.

00:32:47.790 --> 00:32:51.620
The time interval goes from
minus t zero over 2 to plus t

00:32:51.620 --> 00:32:52.520
zero over 2.

00:32:52.520 --> 00:32:56.710
So this factor 2 here, which we
always talk about in terms

00:32:56.710 --> 00:32:59.310
of number of degrees of
freedom, is really a

00:32:59.310 --> 00:33:02.380
consequence of the fact that we
measure time intervals and

00:33:02.380 --> 00:33:05.840
frequency intervals in a
slightly different way.

00:33:05.840 --> 00:33:09.620
But anyway, whether we look at
it in terms of one expansion

00:33:09.620 --> 00:33:12.850
or the other expansion the
answer we get is the same.

00:33:12.850 --> 00:33:16.210
If you take some large time
interval, some large frequency

00:33:16.210 --> 00:33:20.650
interval, tuck as many numbers
as you can in that interval,

00:33:20.650 --> 00:33:22.820
this is what you come up with.

00:33:22.820 --> 00:33:27.540
Now, why did I say that this
is just slightly fishy?

00:33:27.540 --> 00:33:31.660
Well, it's slightly fishy
because if you take a function

00:33:31.660 --> 00:33:34.880
and you truncate it in time --

00:33:34.880 --> 00:33:38.110
if we take this function and
truncate it to minus t zero

00:33:38.110 --> 00:33:42.640
over 2 and plus t zero over 2,
even though that might be ten

00:33:42.640 --> 00:33:47.920
years, how can we limit
the frequency?

00:33:47.920 --> 00:33:48.640
Well, we can't.

00:33:48.640 --> 00:33:51.490
Because when we take the Fourier
transform of a time

00:33:51.490 --> 00:33:56.410
limited function, it exists
for all frequencies.

00:33:56.410 --> 00:34:00.540
The same thing happens if we try
to limit it in frequency,

00:34:00.540 --> 00:34:03.650
it squirts out forever
in time.

00:34:03.650 --> 00:34:05.370
So you can't get around that.

00:34:05.370 --> 00:34:10.420
The thing that saves us is that
if t zero and w zero are

00:34:10.420 --> 00:34:14.270
both large enough, these
functions all dribble away

00:34:14.270 --> 00:34:18.180
quickly enough that it doesn't
make any difference.

00:34:18.180 --> 00:34:19.540
You know it has to.

00:34:19.540 --> 00:34:24.920
If you think in terms of the
sampling theorem, and you try

00:34:24.920 --> 00:34:30.930
to think about it carefully in
mathematics, what does it say?

00:34:30.930 --> 00:34:34.830
If you want to transmit a
function by putting these

00:34:34.830 --> 00:34:38.550
little sine x over x hats
around each of the

00:34:38.550 --> 00:34:42.140
coefficients in the function,
when do you have to start

00:34:42.140 --> 00:34:45.830
transmitting those wave forms?

00:34:45.830 --> 00:34:49.670
You have to start transmitting
them at minus infinity.

00:34:49.670 --> 00:34:52.650
I mean we turn on our
transmitter and we somehow

00:34:52.650 --> 00:34:55.530
have to have been transmitting
for an infinite amount of time

00:34:55.530 --> 00:34:59.020
before we send the
first symbol.

00:34:59.020 --> 00:35:01.560
Well that's ridiculous,
of course.

00:35:01.560 --> 00:35:06.450
So that we always approximate
these sinusoids by sinusoids

00:35:06.450 --> 00:35:10.560
which are truncated, and we
always have some engineering

00:35:10.560 --> 00:35:13.900
faith that what we're throwing
away is not important.

00:35:13.900 --> 00:35:17.170
The only place that it's
important is when you start

00:35:17.170 --> 00:35:20.740
talking about things which are
really zero everywhere and

00:35:20.740 --> 00:35:22.100
then it becomes important.

00:35:22.100 --> 00:35:26.660
But the idea of degrees of
freedom is a very sensible

00:35:26.660 --> 00:35:30.070
idea until you try to express
it precisely.

00:35:33.570 --> 00:35:38.670
Let's get on to something
called aliasing.

00:35:42.640 --> 00:35:46.360
We're going to spend most of
the rest of today talking

00:35:46.360 --> 00:35:48.790
about aliasing.

00:35:48.790 --> 00:35:53.560
I want to try to explain why
it is that we want to spend

00:35:53.560 --> 00:35:57.220
time on this, because
there are really two

00:35:57.220 --> 00:35:59.530
things going on here.

00:35:59.530 --> 00:36:02.640
One of the things that are going
on is that if you want

00:36:02.640 --> 00:36:07.070
to look at a wave form and do
some processing on it, the

00:36:07.070 --> 00:36:11.190
usual way to do it with the
digital technology we have

00:36:11.190 --> 00:36:15.130
today, is to take that wave form
and sample it very, very

00:36:15.130 --> 00:36:17.710
rapidly in time.

00:36:17.710 --> 00:36:22.710
Then process the hell out
of all those samples.

00:36:22.710 --> 00:36:25.580
We do that hardly caring whether
it's band limited,

00:36:25.580 --> 00:36:28.530
hardly caring about the
information in it, hardly

00:36:28.530 --> 00:36:33.050
caring about anything, we just
want to sample it so fast that

00:36:33.050 --> 00:36:37.620
we essentially approximate
the function very well.

00:36:37.620 --> 00:36:42.610
Now when we do that something's
going to get lost,

00:36:42.610 --> 00:36:47.030
because when we take those
samples we're ignoring what

00:36:47.030 --> 00:36:49.700
happens between the samples.

00:36:49.700 --> 00:36:54.020
In some approximate sense, wave
forms are always smooth

00:36:54.020 --> 00:36:57.210
because they always get filtered
by something before

00:36:57.210 --> 00:36:59.950
anybody looks at them.

00:36:59.950 --> 00:37:04.220
And because they're smooth, if
you'd sample it fast enough,

00:37:04.220 --> 00:37:07.230
your fast enough samples
are going to look

00:37:07.230 --> 00:37:08.220
like the wave form.

00:37:08.220 --> 00:37:10.820
If you just connect them with
straight lines you're going to

00:37:10.820 --> 00:37:14.340
get a very good approximation
of what the wave form is.

00:37:14.340 --> 00:37:18.140
But then you stop and ask, and
when you stop and ask you're

00:37:18.140 --> 00:37:21.570
in trouble because you say well,
how fast do I have to

00:37:21.570 --> 00:37:25.730
sample, and if I sample that
fast, how much error am I

00:37:25.730 --> 00:37:28.040
going to make?

00:37:28.040 --> 00:37:34.280
That's the question for which
aliasing gives you the answer.

00:37:34.280 --> 00:37:37.560
So we want to explore
it for that reason.

00:37:37.560 --> 00:37:40.850
The other reason that we want to
explore it is when we start

00:37:40.850 --> 00:37:44.500
talking about modulation, we'll
start talking about

00:37:44.500 --> 00:37:48.650
something called Nyquist
criterion, and that's best

00:37:48.650 --> 00:37:52.690
looked at in terms of aliasing
again, and we'll see why that

00:37:52.690 --> 00:37:54.540
is when we get there.

00:37:54.540 --> 00:37:59.140
So for both of those reasons,
and also for the reason of

00:37:59.140 --> 00:38:04.580
trying to understand these
expansions in terms of source

00:38:04.580 --> 00:38:07.870
wave forms, we want to
understand what this

00:38:07.870 --> 00:38:11.960
relationship is between the
samples of a function that

00:38:11.960 --> 00:38:16.530
isn't quite band limited and
the function itself.

00:38:16.530 --> 00:38:19.670
So the thing we're going to do
to try to understand that is

00:38:19.670 --> 00:38:22.600
instead of studying just the
samples, which is what you

00:38:22.600 --> 00:38:28.220
usually do, if you're just
looking at the samples and

00:38:28.220 --> 00:38:31.240
you're trying to say how much
error do I incur by doing

00:38:31.240 --> 00:38:35.350
that, and we're looking at mean
square error, somehow or

00:38:35.350 --> 00:38:38.660
other we have to get back to
wave forms and compare the

00:38:38.660 --> 00:38:42.560
resulting wave form with the
wave form we started with.

00:38:42.560 --> 00:38:48.250
So the thing that we're going to
do is to take our function

00:38:48.250 --> 00:38:55.440
u of t, we're going to sample
it at some very rapid speed,

00:38:55.440 --> 00:38:59.925
and then we're going to take
those samples and recreate a

00:38:59.925 --> 00:39:02.220
wave form by the sampling
theorem.

00:39:02.220 --> 00:39:06.110
So we're going to call the
approximation to u of t some

00:39:06.110 --> 00:39:11.210
approximation s of t -- s of t
is, in fact, baseband limited

00:39:11.210 --> 00:39:18.490
at this point to a frequency w
where t is equal to 1 over 2w,

00:39:18.490 --> 00:39:23.415
and we simply have this sampling
theorem applied to u

00:39:23.415 --> 00:39:28.480
of kt, as if u of kt came from
a band limited wave form.

00:39:28.480 --> 00:39:31.820
So this is, in a sense, an
interpolation formula.

00:39:31.820 --> 00:39:34.040
It's a little better than
taking these samples and

00:39:34.040 --> 00:39:37.770
joining them by straight lines,
because we're, in fact,

00:39:37.770 --> 00:39:42.480
joining them by these smoother
sinc functions.

00:39:42.480 --> 00:39:48.180
The question is how close is s
of t to u of t and how do we

00:39:48.180 --> 00:39:50.540
look at that question?

00:39:50.540 --> 00:39:53.740
Well, we now have a nice way of
looking at it because after

00:39:53.740 --> 00:40:05.640
going through this t spaced
sinc weighted sinusoidal

00:40:05.640 --> 00:40:12.660
expansion, we have an exact
expression for u of t, which

00:40:12.660 --> 00:40:19.970
is the limit in the mean
of these frequency

00:40:19.970 --> 00:40:22.110
terms in u of t.

00:40:22.110 --> 00:40:25.840
Namely, to get this expression,
remember the thing

00:40:25.840 --> 00:40:30.340
we did was to take arbitrary u
of t, split it up into little

00:40:30.340 --> 00:40:34.480
frequency bands, each of width
w, then apply the sampling

00:40:34.480 --> 00:40:37.690
theorem to each of those
frequency terms, which we can

00:40:37.690 --> 00:40:39.920
do exactly.

00:40:39.920 --> 00:40:44.490
So this, in fact, is an exact
expansion -- don't worry about

00:40:44.490 --> 00:40:47.210
the limit in the mean right now,
we're going to get rid of

00:40:47.210 --> 00:40:49.640
that in a while.

00:40:49.640 --> 00:40:52.200
So we have s of t,
which is this.

00:40:52.200 --> 00:40:56.340
We have u of t, which is this.

00:40:56.340 --> 00:41:03.580
Now, we look at this and we say
OK, s of kt, namely, the

00:41:03.580 --> 00:41:10.740
case sample of s of t,
is simply u of kt.

00:41:10.740 --> 00:41:12.590
That's what happens here.

00:41:12.590 --> 00:41:21.130
You put in any old time which
is some integer j times

00:41:21.130 --> 00:41:25.540
capital T and you look at this
expression here, and the sinc

00:41:25.540 --> 00:41:35.020
function is only non-zero when
j capital T over t, when if

00:41:35.020 --> 00:41:39.080
you take the sinc function of
an integer it's zero unless

00:41:39.080 --> 00:41:40.950
the integer is zero.

00:41:40.950 --> 00:41:47.050
The sinc function goes through
zero at every integer point

00:41:47.050 --> 00:41:49.740
except for zero itself where
it's equal to 1.

00:41:52.530 --> 00:41:54.750
That's the thing which makes
the sync function nice.

00:42:00.380 --> 00:42:02.770
It dribbles away --

00:42:02.770 --> 00:42:11.380
2, 3 and so forth minus 1.

00:42:11.380 --> 00:42:21.340
So it's zero at all those sample
times, so that the case

00:42:21.340 --> 00:42:26.710
sample of s of ts of kt is
just equal to u of kt.

00:42:26.710 --> 00:42:30.750
Namely, what we're doing in this
approximation, which is

00:42:30.750 --> 00:42:34.870
what one usually does if one
samples something, is we're

00:42:34.870 --> 00:42:39.840
assuming that the approximation
is correct at

00:42:39.840 --> 00:42:42.300
the sample points, and we're
arranging it so it's correct

00:42:42.300 --> 00:42:43.490
at the sample points.

00:42:43.490 --> 00:42:49.400
So, s of kt then is equal
to u of kt from this.

00:42:49.400 --> 00:42:52.260
u of kt from this --

00:42:52.260 --> 00:42:59.560
OK, now take t and substitute
k times capital T in here.

00:43:03.630 --> 00:43:07.990
And if we substitute k times
capital T in here -- let's

00:43:07.990 --> 00:43:13.560
not, let's substitute j times
capital T to avoid a conflict

00:43:13.560 --> 00:43:15.560
with notation here.

00:43:15.560 --> 00:43:23.400
Then this T here becomes
jT and what we have is

00:43:23.400 --> 00:43:30.140
sinc of j minus k.

00:43:30.140 --> 00:43:36.650
So we have a sum here over all
k of sync of j minus k.

00:43:36.650 --> 00:43:42.190
Sinc of j minus k is zero for
all integers k, except for j,

00:43:42.190 --> 00:43:47.770
therefore, this quantity
is zero every time k is

00:43:47.770 --> 00:43:49.000
not equal to j.

00:43:49.000 --> 00:43:51.140
Therefore, we just have
the sum over m.

00:43:51.140 --> 00:43:56.610
So, s of kt is equal to u of kt,
which is equal to the sum

00:43:56.610 --> 00:44:03.170
over all frequency bands,
m, of v sub m of kt.

00:44:03.170 --> 00:44:04.420
Now what is this saying?

00:44:06.980 --> 00:44:11.390
The thing this is saying is if
you take this function u of t,

00:44:11.390 --> 00:44:16.630
which has a bunch of different
frequency bands in it, each of

00:44:16.630 --> 00:44:19.170
those frequency bands has
a sampling theorem

00:44:19.170 --> 00:44:20.630
associated with it.

00:44:20.630 --> 00:44:24.480
Each one of those frequency
bands is represented by its

00:44:24.480 --> 00:44:28.150
samples at periods of time, k.

00:44:28.150 --> 00:44:33.400
But as soon as we look at u
of kt, if we only have the

00:44:33.400 --> 00:44:40.040
samples u of kt, there's no way
to tell which frequency

00:44:40.040 --> 00:44:42.650
band it's coming from.

00:44:42.650 --> 00:44:45.230
So all of these different
frequency bands

00:44:45.230 --> 00:44:48.840
all get alias together.

00:44:48.840 --> 00:44:53.960
If I just look at u of kt, what
it is is the sum over all

00:44:53.960 --> 00:44:58.760
these frequency bands of the
samples of the individual

00:44:58.760 --> 00:45:00.010
frequency functions.

00:45:02.750 --> 00:45:07.120
So that if you tell me what u
of kt is, I can't tell you

00:45:07.120 --> 00:45:09.310
what these samples are.

00:45:09.310 --> 00:45:13.380
All I know is what the
sum of them is.

00:45:13.380 --> 00:45:17.190
So, in fact, if you start out
with a function which instead

00:45:17.190 --> 00:45:23.810
of being baseband limited to w,
in fact, is sitting between

00:45:23.810 --> 00:45:30.050
w and 3w, and there's nothing
in this baseband, and I look

00:45:30.050 --> 00:45:34.300
at these samples and then I
recreate things this way, what

00:45:34.300 --> 00:45:35.590
am I doing?

00:45:35.590 --> 00:45:41.160
I'm just taking that function
at w to 3w and translating

00:45:41.160 --> 00:45:46.410
down in frequency
to minus w to w.

00:45:46.410 --> 00:45:48.340
You can't tell.

00:45:48.340 --> 00:45:51.080
There's no way to tell just
from the samples which

00:45:51.080 --> 00:45:53.430
frequency band we're
looking at.

00:45:53.430 --> 00:45:57.850
So all these things get
mixed together.

00:45:57.850 --> 00:46:05.170
So, s of t then, since s of
t is this times these sinc

00:46:05.170 --> 00:46:11.480
functions, and this is the sum
of all the vm's, s of t is

00:46:11.480 --> 00:46:16.700
just this double sum now where
all of these are now down at

00:46:16.700 --> 00:46:19.090
this baseband frequency
interval.

00:46:19.090 --> 00:46:21.880
There's no way to
tell them apart.

00:46:21.880 --> 00:46:24.900
We have this double sum here so
I'm adding up all of these

00:46:24.900 --> 00:46:29.430
different coefficients and
they're all mixed together all

00:46:29.430 --> 00:46:31.360
down in this one
frequency band.

00:46:40.560 --> 00:46:48.300
So, u of t is represented this
way, double sum, vm of kt, vm

00:46:48.300 --> 00:46:55.250
of kt, sinc of t over t minus
k, sinc of t over t minus k.

00:46:55.250 --> 00:47:00.980
This rotating term up here,
an s of t, what I've done

00:47:00.980 --> 00:47:04.930
effectively is to get rid of
all these rotating terms.

00:47:04.930 --> 00:47:11.020
It simplifies it enormously,
but I changed the function.

00:47:11.020 --> 00:47:16.440
In fact, this function is low
path limited to w and this

00:47:16.440 --> 00:47:19.810
function has all of the glory
of an arbitrary set of

00:47:19.810 --> 00:47:22.030
frequencies in it.

00:47:22.030 --> 00:47:25.870
By just looking at these
samples, I've lost all of this

00:47:25.870 --> 00:47:30.840
stuff and it's just back down to
a baseband limited function

00:47:30.840 --> 00:47:33.880
at this point.

00:47:33.880 --> 00:47:36.650
So, if I look at the difference
between u of t and

00:47:36.650 --> 00:47:42.100
s of t, what I'm going to get
-- and this is expressed a

00:47:42.100 --> 00:47:44.210
little differently than the
way it is in the notes but

00:47:44.210 --> 00:47:54.170
it's the same thing -- just the
sum over k and m, and it

00:47:54.170 --> 00:47:57.380
has these sinc functions
in it, which both

00:47:57.380 --> 00:47:59.580
of these terms have.

00:47:59.580 --> 00:48:05.930
Then u of t has these rotating
terms and s of t doesn't, so s

00:48:05.930 --> 00:48:09.020
of t just has one in place
of the rotating term.

00:48:09.020 --> 00:48:15.610
So the difference between u of
t and s of t is just this big

00:48:15.610 --> 00:48:18.950
monster sum here, which is
looking at all the different

00:48:18.950 --> 00:48:24.920
frequency bands at all the
different sampling times.

00:48:24.920 --> 00:48:28.430
If I now try to look at the
energy difference between u of

00:48:28.430 --> 00:48:31.330
t and s of t, because that's
what I'm interested in -- how

00:48:31.330 --> 00:48:35.200
much error have I accumulated,
how much mean square error

00:48:35.200 --> 00:48:36.570
have I gotten?

00:48:36.570 --> 00:48:42.480
By taking u of t and sampling
it and then viewing it as a

00:48:42.480 --> 00:48:45.090
low pass function.

00:48:45.090 --> 00:48:49.050
This energy difference, well, we
have a set of coefficients

00:48:49.050 --> 00:48:52.390
here, we have a set
of functions here.

00:48:52.390 --> 00:48:56.260
These functions are all
orthogonal to each other.

00:48:56.260 --> 00:48:57.750
Why are they orthogonal?

00:48:57.750 --> 00:49:02.180
Well, because sinc functions are
orthogonal, which I think

00:49:02.180 --> 00:49:09.210
we've shown on our homework, and
space time functions are

00:49:09.210 --> 00:49:10.180
orthogonal.

00:49:10.180 --> 00:49:14.220
So, all of these functions
are orthogonal to --

00:49:14.220 --> 00:49:15.620
excuse me --

00:49:15.620 --> 00:49:19.330
spaced frequency functions are
orthogonal to each other, and

00:49:19.330 --> 00:49:24.730
the sinc weighted functions are
orthogonal to each other.

00:49:24.730 --> 00:49:29.760
So all I'm doing here is
expanding all of this in terms

00:49:29.760 --> 00:49:32.350
of these orthogonal functions.

00:49:32.350 --> 00:49:41.290
I have to do this separately
for these terms --

00:49:44.760 --> 00:49:47.960
I know what happens.

00:49:47.960 --> 00:49:52.410
This works when it's cold and it
doesn't work when it's hot.

00:49:52.410 --> 00:49:54.030
Interesting.

00:49:54.030 --> 00:49:57.590
So I'm separating this into
this term and this term.

00:49:57.590 --> 00:50:01.360
Now, look at what this is
when m is equal to zero.

00:50:01.360 --> 00:50:05.680
When m is equal to zero, e to
the 2 pi i, zero t over t

00:50:05.680 --> 00:50:08.180
minus 1 is zero.

00:50:08.180 --> 00:50:16.240
So, all of the m terms here are
collapsed into zero, so

00:50:16.240 --> 00:50:21.190
there isn't any error down
at baseband in a sense.

00:50:21.190 --> 00:50:27.870
All of the error occurs due to
these frequency terms larger

00:50:27.870 --> 00:50:29.970
than minus w to w.

00:50:29.970 --> 00:50:32.890
Well, that's the way
it should be.

00:50:32.890 --> 00:50:38.090
Because we know that if u of t
didn't have any terms outside

00:50:38.090 --> 00:50:41.920
of minus w to plus w, the
sampling theorem would be

00:50:41.920 --> 00:50:46.510
absolutely rock solid
with no error.

00:50:46.510 --> 00:50:50.260
So the errors are due to
two kinds of terms.

00:50:50.260 --> 00:50:55.500
One, they're due to these terms,
which is this thing.

00:50:55.500 --> 00:51:01.250
Two, they're due to these
terms, which is this.

00:51:01.250 --> 00:51:08.830
The only difference between this
is that this is a square

00:51:08.830 --> 00:51:13.530
of a sum and this is
a sum of squares.

00:51:13.530 --> 00:51:16.180
Sum of squares are nicer, we
can deal with them more

00:51:16.180 --> 00:51:22.020
nicely, and we understand
what that is better.

00:51:22.020 --> 00:51:26.340
A sum and then taking the square
of it after we take the

00:51:26.340 --> 00:51:27.720
sum is a good deal dirtier.

00:51:30.450 --> 00:51:34.030
The trouble is that
this difference

00:51:34.030 --> 00:51:36.890
doesn't have to be L2.

00:51:36.890 --> 00:51:40.310
In other words, the mean square
error we got from doing

00:51:40.310 --> 00:51:43.200
this can be infinite.

00:51:43.200 --> 00:51:47.620
One of the problems in the
current problem set is a nice

00:51:47.620 --> 00:51:51.640
simple example of this.

00:51:51.640 --> 00:51:56.240
So, s of t need not have
finite energy.

00:51:56.240 --> 00:52:02.490
That's a real kicker, because
all of this theory is very

00:52:02.490 --> 00:52:04.770
nice until this point.

00:52:04.770 --> 00:52:08.270
I mean the sampling theorem
works perfectly because when

00:52:08.270 --> 00:52:11.710
you're dealing with baseband
limited functions --

00:52:21.860 --> 00:52:28.460
for up baseband limited
function, the sinc functions

00:52:28.460 --> 00:52:30.590
give you a perfect
approximation.

00:52:30.590 --> 00:52:34.550
Namely, the sampling theorem
works with no error at all.

00:52:34.550 --> 00:52:38.790
As soon as you get a function
which spills out into higher

00:52:38.790 --> 00:52:46.030
frequencies, you can, in fact,
have these samples coming up

00:52:46.030 --> 00:52:51.330
with infinite energy in them,
and at that point this

00:52:51.330 --> 00:52:55.040
difference here can have
infinite energy.

00:52:55.040 --> 00:52:58.510
In fact, you would do much,
much better if you simply

00:52:58.510 --> 00:53:01.450
represented u of t by zero.

00:53:01.450 --> 00:53:05.350
You'd do infinitely better in
terms of mean square error

00:53:05.350 --> 00:53:07.590
just by throwing it away and
saying I'm not going even

00:53:07.590 --> 00:53:09.230
bother to approximate it.

00:53:09.230 --> 00:53:12.020
I'll just call it zero
and nothing else.

00:53:12.020 --> 00:53:15.180
If you did that, you would only
have the error in u of t

00:53:15.180 --> 00:53:18.940
and you wouldn't have all this
generated stuff from all these

00:53:18.940 --> 00:53:22.150
terms that you're
throwing away.

00:53:22.150 --> 00:53:26.540
When we start looking at random
processes, and really

00:53:26.540 --> 00:53:28.990
the only thing that we're
interested in here is random

00:53:28.990 --> 00:53:32.010
processes because noise
is a random

00:53:32.010 --> 00:53:35.340
process, signals are random.

00:53:35.340 --> 00:53:38.240
So when we start looking at
random processes, the thing

00:53:38.240 --> 00:53:44.380
that we're going to find is that
this square of a sum in

00:53:44.380 --> 00:53:47.560
terms of expected value is going
to be approximately the

00:53:47.560 --> 00:53:51.770
same as this sum of squares.

00:53:51.770 --> 00:53:55.090
So that this term and this term
are going to be roughly

00:53:55.090 --> 00:53:58.830
equal for most of the stochastic
processes that we

00:53:58.830 --> 00:54:03.100
deal with, so this problem
doesn't occur of s of t having

00:54:03.100 --> 00:54:06.230
infinite energy.

00:54:06.230 --> 00:54:10.730
What that means is that
these two terms are of

00:54:10.730 --> 00:54:13.160
roughly equal magnitude.

00:54:13.160 --> 00:54:16.010
Now, we can understand
something more

00:54:16.010 --> 00:54:18.320
about these two terms.

00:54:18.320 --> 00:54:26.690
The term here is what you get,
namely, these are the parts of

00:54:26.690 --> 00:54:30.650
u of t which are outside
of the frequency range

00:54:30.650 --> 00:54:33.530
from minus w to w.

00:54:33.530 --> 00:54:37.670
A reasonable alternative to
simply sampling this function

00:54:37.670 --> 00:54:41.200
would be to filter the
function first.

00:54:41.200 --> 00:54:45.760
If you filter the function first
what's going to happen?

00:54:45.760 --> 00:54:49.170
These terms will go away.

00:54:49.170 --> 00:54:51.260
These terms will stay.

00:54:51.260 --> 00:54:52.620
You still have the aliasing --

00:54:52.620 --> 00:54:55.680
you can't get rid of that.

00:54:55.680 --> 00:54:59.640
But you can get rid
of these terms.

00:54:59.640 --> 00:55:00.950
Excuse me.

00:55:00.950 --> 00:55:02.710
I take that back.

00:55:06.640 --> 00:55:09.610
I seem to have a binary problem
today, whatever.

00:55:09.610 --> 00:55:13.180
I seem to be mixing up
proof and falsehood.

00:55:13.180 --> 00:55:18.190
If you filter a function you're
clearly going to get

00:55:18.190 --> 00:55:21.160
rid of all of the aliasing,
because after you filtered the

00:55:21.160 --> 00:55:23.230
function you will have
a band limited

00:55:23.230 --> 00:55:25.320
function sitting there.

00:55:25.320 --> 00:55:28.500
So the only error you're going
to get is the error in what

00:55:28.500 --> 00:55:30.300
you've thrown away.

00:55:30.300 --> 00:55:34.080
What you've thrown away is, in
fact, this quantity here.

00:55:43.600 --> 00:55:46.280
Slow down, say it right.

00:55:46.280 --> 00:55:48.440
What you have thrown
away is all of the

00:55:48.440 --> 00:55:50.410
extra frequency terms.

00:55:50.410 --> 00:55:53.620
So the error is all of those
frequency terms that you've

00:55:53.620 --> 00:55:55.270
thrown away.

00:55:55.270 --> 00:55:58.860
These are the frequency terms
that you've thrown away.

00:55:58.860 --> 00:56:03.290
This is the error that you wind
up with after you filter.

00:56:03.290 --> 00:56:06.300
These terms here are
the aliasing terms.

00:56:06.300 --> 00:56:09.030
These are the things which, in
fact, could be infinite if

00:56:09.030 --> 00:56:11.940
you're unlucky enough.

00:56:11.940 --> 00:56:16.220
These you can get rid
of by filtering.

00:56:16.220 --> 00:56:19.570
So now the question is should
you filter first or should you

00:56:19.570 --> 00:56:21.290
just sample and say
to hell with it?

00:56:24.270 --> 00:56:27.830
Well, if you think about why
you want to sample and use

00:56:27.830 --> 00:56:32.910
digital signal processing, what
you're trying to do is to

00:56:32.910 --> 00:56:36.500
avoid building very complex
analog filters.

00:56:36.500 --> 00:56:40.230
So if you try to build a very,
very sharp filter which is

00:56:40.230 --> 00:56:44.200
getting rid of all of those out
of band terms, you're sort

00:56:44.200 --> 00:56:47.980
of throwing away a lot of the
reason for trying to sample to

00:56:47.980 --> 00:56:49.320
start with.

00:56:49.320 --> 00:56:52.550
So the usual conclusion is no,
we're not going to filter

00:56:52.550 --> 00:56:55.220
first, or we're only going to
have a very crude filtering

00:56:55.220 --> 00:56:59.370
operation first, and we'll just
sample a little faster if

00:56:59.370 --> 00:57:03.050
we have to, because sampling
faster is easier.

00:57:03.050 --> 00:57:07.690
So we usually just sample faster
and avoid these terms.

00:57:11.340 --> 00:57:15.550
Now we want to look at aliasing
viewed in frequency

00:57:15.550 --> 00:57:17.820
terms, and we've almost
been doing this.

00:57:17.820 --> 00:57:21.240
We've been sort of talking
around it a little bit.

00:57:21.240 --> 00:57:28.360
We're viewing an arbitrary
function, u of t, in terms of

00:57:28.360 --> 00:57:33.770
a sum of these frequency
limited functions.

00:57:33.770 --> 00:57:37.570
We're just arbitrarily taking
a function, splitting it up

00:57:37.570 --> 00:57:39.610
into these frequency bands.

00:57:39.610 --> 00:57:42.100
In terms of frequency what
we're doing is just

00:57:42.100 --> 00:57:47.780
segementing the Fourier
transform u of f.

00:57:47.780 --> 00:57:52.150
As far as the samples are
concerned, uf of kt is just

00:57:52.150 --> 00:57:55.600
equal to the sum of the samples
in each of these

00:57:55.600 --> 00:57:58.100
frequency bands -- that's
what we've been saying.

00:57:58.100 --> 00:58:01.660
That's really what aliasing
is at a fundamental level.

00:58:01.660 --> 00:58:06.470
So when you sample you can't
tell which frequency band each

00:58:06.470 --> 00:58:09.580
of these samples come from, and
they usually come a little

00:58:09.580 --> 00:58:12.770
bit from each one.

00:58:12.770 --> 00:58:17.720
So, s of t now, I'd like to
split up s of t in the same

00:58:17.720 --> 00:58:19.490
way that I split up u of t.

00:58:19.490 --> 00:58:23.770
I'd like to split up s of t,
even though I can't do this

00:58:23.770 --> 00:58:27.090
from looking at s of t, I can
do it mathematically.

00:58:27.090 --> 00:58:32.280
I want to split up s of t into
the contributions to s of t

00:58:32.280 --> 00:58:34.380
from all of these
different bands.

00:58:34.380 --> 00:58:39.800
So I want to view the mth
frequency band as the sum of

00:58:39.800 --> 00:58:46.710
vm of kt times sinc of
t over t minus k.

00:58:46.710 --> 00:58:52.530
Namely, look at what s of t was
to start with, somewhere

00:58:52.530 --> 00:58:54.660
back here a long time ago.

00:59:07.360 --> 00:59:11.070
What we found was that s of t
is equal to this quantity

00:59:11.070 --> 00:59:15.130
here, which is the sum over
time terms, the sampling

00:59:15.130 --> 00:59:17.920
terms, and a sum over
frequency term.

00:59:17.920 --> 00:59:23.140
What I'm doing now is I'm just
defining s sub m of t to be

00:59:23.140 --> 00:59:26.590
this sum in here for one
particular value of m.

00:59:26.590 --> 00:59:30.260
I'm just splitting this
double sum into a

00:59:30.260 --> 00:59:31.500
number of separate terms.

00:59:31.500 --> 00:59:35.690
So this is the contribution
to s of t from the

00:59:35.690 --> 00:59:37.870
mth frequency band.

00:59:37.870 --> 00:59:41.350
So, s of t is the sum of all of
these different frequency

00:59:41.350 --> 00:59:46.870
contributions in this quantity.
vm of t, which came

00:59:46.870 --> 00:59:51.170
from u of t, same quantity here
except for the complex

00:59:51.170 --> 00:59:57.110
exponential here. vm of t is
the same quantity with the

00:59:57.110 --> 00:59:59.100
rotating term at
the end of it.

00:59:59.100 --> 01:00:05.830
Namely, this is the actual
signal at this

01:00:05.830 --> 01:00:08.020
mth frequency band.

01:00:08.020 --> 01:00:12.980
So the contribution to it and
the sampling approximation is

01:00:12.980 --> 01:00:17.350
this, the actual term is this.

01:00:17.350 --> 01:00:25.640
So we look at these two and we
say gee, this looks like -- if

01:00:25.640 --> 01:00:28.640
we look at this in the frequency
domain this looks

01:00:28.640 --> 01:00:32.170
like just a frequency shift.

01:00:32.170 --> 01:00:38.120
So the thing we can then say is
that v sub m of f, namely

01:00:38.120 --> 01:00:44.010
the Fourier transform of this,
differs from the Fourier

01:00:44.010 --> 01:00:48.890
transform of this just
by a frequency shift.

01:00:48.890 --> 01:00:52.810
If we take the frequency shift
formula and frequency and look

01:00:52.810 --> 01:00:58.080
at it in time it just becomes
that rotating term there.

01:00:58.080 --> 01:01:01.960
Namely, frequency shifts look
like complex exponential

01:01:01.960 --> 01:01:03.210
multipliers.

01:01:05.360 --> 01:01:09.660
We already know that d sub m of
f is the mth frequency band

01:01:09.660 --> 01:01:10.810
and u of t.

01:01:10.810 --> 01:01:16.370
So in fact, it's u of
f truncated to the

01:01:16.370 --> 01:01:18.210
mth frequency band.

01:01:18.210 --> 01:01:19.460
That's what this said .

01:01:19.460 --> 01:01:23.460
So, u hat of f rect ft
minus m is just equal

01:01:23.460 --> 01:01:25.290
to this term here.

01:01:25.290 --> 01:01:29.180
So this says that s hat of f,
which is the sum of all these

01:01:29.180 --> 01:01:34.130
terms, is just the sum over m,
sum over all the frequency

01:01:34.130 --> 01:01:42.440
terms of u hat of f plus m over
t times a rectangular

01:01:42.440 --> 01:01:45.130
function of ft.

01:01:45.130 --> 01:01:52.960
All this is saying is that s
of f in frequency, it's all

01:01:52.960 --> 01:01:55.450
down at baseband now.

01:01:55.450 --> 01:02:02.710
Each of these frequency terms in
u of t, up at some band and

01:02:02.710 --> 01:02:08.840
frequency, when we sample it,
we're effectively bringing it

01:02:08.840 --> 01:02:09.530
down to base then.

01:02:09.530 --> 01:02:12.990
When we sample it and multiply
by the sinc functions we're

01:02:12.990 --> 01:02:14.590
bringing it down to baseband.

01:02:14.590 --> 01:02:18.110
So this is saying when you look
at this approximation,

01:02:18.110 --> 01:02:23.290
the space band approximation,
what we wind up with is this

01:02:23.290 --> 01:02:28.805
frequency function evaluated at
all of these different --

01:02:28.805 --> 01:02:33.100
well, just evaluated
at different times.

01:02:33.100 --> 01:02:39.160
So, s hat of f is, in fact,
frequency limited to minus w

01:02:39.160 --> 01:02:43.890
to plus w, and it has all
of these different terms

01:02:43.890 --> 01:02:44.970
contributing to it.

01:02:44.970 --> 01:02:48.070
It's just looking at aliasing
and frequency instead of

01:02:48.070 --> 01:02:49.980
looking at aliasing and time.

01:02:49.980 --> 01:02:52.090
In both cases it's
the same thing.

01:02:52.090 --> 01:02:55.850
In one case, all of the samples
get mixed together.

01:02:55.850 --> 01:02:57.610
In the other case, all
of the frequency

01:02:57.610 --> 01:02:58.920
bands get mixed together.

01:03:02.470 --> 01:03:07.990
I hope this will be clearer
in terms of this.

01:03:22.120 --> 01:03:31.280
Let's take some arbitrary
function here -- a most

01:03:31.280 --> 01:03:37.650
amazing thing, these
things all get.

01:03:47.800 --> 01:03:52.210
It seems as if latex -- a thing
for drawing pictures is

01:03:52.210 --> 01:03:56.510
fine on my screen but not fine
when I print things.

01:03:56.510 --> 01:03:58.130
But anyway, this is
fine as it is.

01:03:58.130 --> 01:04:01.260
It's slightly different from the
one in the notes, which is

01:04:01.260 --> 01:04:03.780
also goofed up in
the same way.

01:04:03.780 --> 01:04:07.420
Let's suppose we start out
with a frequency function

01:04:07.420 --> 01:04:09.310
which looks like this.

01:04:09.310 --> 01:04:11.620
Actually, it should have
something else

01:04:11.620 --> 01:04:14.640
there but that's OK.

01:04:14.640 --> 01:04:20.630
This is minus 1 over 2t,
this is plus 1 over 2t.

01:04:20.630 --> 01:04:22.730
In other words, minus w to w.

01:04:22.730 --> 01:04:28.380
Here we have another frequency
band from w to 3w, another

01:04:28.380 --> 01:04:31.800
frequency band from 3w to 5w.

01:04:31.800 --> 01:04:36.250
What that formula said is that
each frequency band gets

01:04:36.250 --> 01:04:40.920
picked up and stuck down
in the baseband area.

01:04:40.920 --> 01:04:44.820
So, in fact, what's happening
is that this part of the

01:04:44.820 --> 01:04:47.430
frequency function is
going to be picked

01:04:47.430 --> 01:04:50.030
up, stuck down there.

01:04:50.030 --> 01:04:53.370
So this goes over there.

01:04:58.080 --> 01:05:03.870
This quantity here is in
the band from 3w to 5w.

01:05:03.870 --> 01:05:07.410
It gets picked up and
put in here also.

01:05:07.410 --> 01:05:12.560
It's gotten picked up
and put down there.

01:05:12.560 --> 01:05:16.870
So I have this part, this part,
and this part just stays

01:05:16.870 --> 01:05:18.320
where it is -- this
is the part that's

01:05:18.320 --> 01:05:20.580
actually band limited.

01:05:20.580 --> 01:05:26.100
So that s hat of f now is going
to be the sum of this

01:05:26.100 --> 01:05:32.130
and this and this, and one
disappeared term which was

01:05:32.130 --> 01:05:39.150
supposed to be here, and that's
going to come in there.

01:05:39.150 --> 01:05:45.650
When you add up all of these
-- this goes over to there.

01:05:45.650 --> 01:05:48.500
When you add up all of these
you get the total frequency

01:05:48.500 --> 01:05:50.220
function s hat of f.

01:05:53.930 --> 01:05:57.130
All of you understand the
mechanics of this?

01:05:57.130 --> 01:06:02.000
I mean graphically you can
just find s hat of f from

01:06:02.000 --> 01:06:05.830
taking all of these things and
folding them all into this

01:06:05.830 --> 01:06:09.810
baseband approximation.

01:06:09.810 --> 01:06:19.240
So that you can look at the
error that you get in terms of

01:06:19.240 --> 01:06:23.160
sampling a function which is
not quite band limited in

01:06:23.160 --> 01:06:25.150
these terms, also.

01:06:25.150 --> 01:06:29.610
The aliasing then looks like the
translation from something

01:06:29.610 --> 01:06:34.540
which is in this band stuck
into the main band between

01:06:34.540 --> 01:06:36.350
minus w and w.

01:06:36.350 --> 01:06:40.290
Translation of this thing stuck
into the main band.

01:06:40.290 --> 01:06:43.450
Translation of this stuck
into the main band.

01:06:43.450 --> 01:06:46.150
They're all added together in
such a way that you can't tell

01:06:46.150 --> 01:06:48.600
which one came from where.

01:06:48.600 --> 01:06:54.680
So once you look at this, you
can't go back to here, which

01:06:54.680 --> 01:06:56.680
is why people call
it aliasing.

01:06:56.680 --> 01:07:00.470
These things are all just mixed
together and there's no

01:07:00.470 --> 01:07:03.170
way to get back.

01:07:03.170 --> 01:07:08.100
The theorem that corresponds
to all of this, and the

01:07:08.100 --> 01:07:10.950
theorem is pretty much proven
in the appendix if you

01:07:10.950 --> 01:07:12.850
want to read it.

01:07:12.850 --> 01:07:16.480
If you're not interested in
those mathematical details

01:07:16.480 --> 01:07:18.830
you're certainly welcome
not to read it.

01:07:18.830 --> 01:07:24.290
I'm not going to have
any problems on it.

01:07:24.290 --> 01:07:26.340
I'm not going to have any quiz
problems on it, we might have

01:07:26.340 --> 01:07:29.120
a problem on it.

01:07:29.120 --> 01:07:34.440
It turns out that just L1 and
L2 is not enough when you're

01:07:34.440 --> 01:07:37.730
dealing with aliasing.

01:07:37.730 --> 01:07:41.860
Aliasing, since you're both
sampling and looking at things

01:07:41.860 --> 01:07:46.640
at arbitrarily large
frequencies, the mathematics

01:07:46.640 --> 01:07:48.380
just gets messy.

01:07:48.380 --> 01:07:52.260
So the condition that you need
is that the frequency function

01:07:52.260 --> 01:07:55.150
you're dealing with in order
for all of these aliasing

01:07:55.150 --> 01:08:01.190
results to hold true, is that
the limit as f goes to

01:08:01.190 --> 01:08:08.160
infinity of u hat of f times
some function, f to the 1 plus

01:08:08.160 --> 01:08:10.190
epsilon has to go to zero.

01:08:10.190 --> 01:08:13.770
In other words, this is saying
that u hat of f has to go to

01:08:13.770 --> 01:08:18.630
zero with increasing frequency
fast enough.

01:08:18.630 --> 01:08:22.470
It has to go to zero a little
faster than 1 over f.

01:08:22.470 --> 01:08:26.240
If it went to zero, it was
1 over f, that would be

01:08:26.240 --> 01:08:29.040
guaranteed by a thing, L2.

01:08:29.040 --> 01:08:32.870
That's not enough here.

01:08:32.870 --> 01:08:35.850
You need the stronger
condition.

01:08:35.850 --> 01:08:40.070
So if it goes to zero fast
enough as f gets very, very

01:08:40.070 --> 01:08:45.350
large -- you know any function
you're going to deal with you

01:08:45.350 --> 01:08:48.990
can always model it so
that it does this.

01:08:48.990 --> 01:08:53.320
Because you simply can't
transmit wave forms that have

01:08:53.320 --> 01:08:55.920
arbitrarily high frequencies
in them.

01:08:55.920 --> 01:08:59.060
I mean no matter what kind of
antenna you use to transmit

01:08:59.060 --> 01:09:01.870
them, if it's an optical antenna
you can get to much

01:09:01.870 --> 01:09:05.750
higher frequencies, but no
matter what kind of antenna

01:09:05.750 --> 01:09:08.595
you use you're going to be
limited somehow in frequency,

01:09:08.595 --> 01:09:13.320
and it's going to drop off much
faster with increasing

01:09:13.320 --> 01:09:14.700
frequency than this.

01:09:14.700 --> 01:09:17.670
So this isn't any sort of
practical limitation on

01:09:17.670 --> 01:09:21.520
aliasing, it's just that it's
there and it limits the models

01:09:21.520 --> 01:09:24.900
you can create somewhat.

01:09:24.900 --> 01:09:29.570
If you have this condition then
it says that the Fourier

01:09:29.570 --> 01:09:36.470
transform of u of t has
to be an L1 function.

01:09:36.470 --> 01:09:40.380
The inverse transform,
u of t, has to be

01:09:40.380 --> 01:09:41.740
continuous and bounded.

01:09:41.740 --> 01:09:46.560
In other words, when we go from
u hat of f to u of t we

01:09:46.560 --> 01:09:48.990
get a bonafide function there.

01:09:48.990 --> 01:09:54.520
It's not something which
is a limit in the mean.

01:09:54.520 --> 01:09:56.690
Because as soon as we're
dealing with samples of

01:09:56.690 --> 01:09:59.550
something you really need a
function to talk about.

01:09:59.550 --> 01:10:03.750
You can't have something
which is --

01:10:03.750 --> 01:10:07.830
well, you can't have something
which has these little extra

01:10:07.830 --> 01:10:09.300
things on it.

01:10:09.300 --> 01:10:10.640
You can't live with that.

01:10:10.640 --> 01:10:13.810
So the theorem says that
this frequency

01:10:13.810 --> 01:10:15.510
function has to be L1.

01:10:15.510 --> 01:10:18.540
It says the inverse transform
has to be

01:10:18.540 --> 01:10:20.120
continuous and bounded.

01:10:20.120 --> 01:10:23.510
We've already seen that L1
functions have continuous and

01:10:23.510 --> 01:10:26.900
bounded Fourier transforms.

01:10:26.900 --> 01:10:31.140
For any t greater than zero,
the sampling approximation,

01:10:31.140 --> 01:10:36.240
namely, s of t, which is this,
is going to be bounded and

01:10:36.240 --> 01:10:37.660
continuous.

01:10:37.660 --> 01:10:42.390
And s hat of f satisfies
this relationship here.

01:10:42.390 --> 01:10:45.200
So this is the frequency
version of

01:10:45.200 --> 01:10:47.740
the aliasing formula.

01:10:47.740 --> 01:10:49.780
Here you still have the limit
in the mean here.

01:10:49.780 --> 01:10:52.450
As soon as you go back to
frequencies you can't say

01:10:52.450 --> 01:10:54.300
anything precise anymore.

01:10:54.300 --> 01:10:57.650
In time, everything
is precise.

01:10:57.650 --> 01:11:00.240
These functions are bonafide
functions.

01:11:00.240 --> 01:11:03.630
In terms of frequencies
they're not quite.

01:11:12.010 --> 01:11:17.160
I want to just start talking
about these L2 functions.

01:11:19.760 --> 01:11:22.350
As you realize, we've not only
been talking about L2

01:11:22.350 --> 01:11:26.760
functions, we've been talking
about L1 functions also, and

01:11:26.760 --> 01:11:28.660
now these crazy functions
which go off

01:11:28.660 --> 01:11:32.010
to zero fast enough.

01:11:32.010 --> 01:11:34.330
The thing we're basically
interested in, aside from

01:11:34.330 --> 01:11:38.360
sampling, is the L2 functions
because they're the ones where

01:11:38.360 --> 01:11:41.160
you can go from function
to Fourier

01:11:41.160 --> 01:11:43.330
transform and back again.

01:11:43.330 --> 01:11:47.710
They're the ones which work or
these orthogonal expansions,

01:11:47.710 --> 01:11:49.170
and they're the main things
we're going to

01:11:49.170 --> 01:11:50.420
be interested in.

01:11:53.330 --> 01:11:58.670
When we try to go further
talking about these functions,

01:11:58.670 --> 01:12:01.820
it turns out that it's much
easier to think about them in

01:12:01.820 --> 01:12:05.380
terms of vector spaces.

01:12:05.380 --> 01:12:09.020
Some of you probably have
thought about wave forms

01:12:09.020 --> 01:12:13.450
before as vectors, some of
you probably haven't.

01:12:17.060 --> 01:12:20.140
I'm sure all of you are familiar
with vectors at least

01:12:20.140 --> 01:12:24.390
in terms of a notational
convenience as a way of

01:12:24.390 --> 01:12:27.560
representing n tuples
of numbers.

01:12:27.560 --> 01:12:30.280
You can always take an n tuple
of numbers and instead of

01:12:30.280 --> 01:12:37.010
writing out u1, u2, u3, up to u
sub n, you can say vector u,

01:12:37.010 --> 01:12:40.050
and you can manipulate those
vectors, you can add vectors,

01:12:40.050 --> 01:12:43.170
you can multiply them by
scalers, you can do all of the

01:12:43.170 --> 01:12:47.720
neat things that people do, even
without knowing anything

01:12:47.720 --> 01:12:50.390
about vector spaces.

01:12:50.390 --> 01:12:54.530
It's not much of an extension
on that to take accountably

01:12:54.530 --> 01:13:01.520
infinite sequence of numbers and
represent it as a vector,

01:13:01.520 --> 01:13:05.320
especially if you've never
done it before.

01:13:05.320 --> 01:13:07.960
If you've done it before and
if you've thought about it

01:13:07.960 --> 01:13:12.180
before, you will realize there
are some problems there.

01:13:12.180 --> 01:13:14.010
But at least conceptually
there's no problem.

01:13:14.010 --> 01:13:20.120
You can think about a sequence
of numbers as being a vector,

01:13:20.120 --> 01:13:22.960
you can add those sequences,
you can multiply them by

01:13:22.960 --> 01:13:26.680
scalers, you can do all sorts
of neat things with them.

01:13:26.680 --> 01:13:33.610
Since we've shown how to
represent wave forms as

01:13:33.610 --> 01:13:37.820
sequences of coefficients in
orthogonal expansions, it then

01:13:37.820 --> 01:13:41.220
isn't much of an extension to
think about wave forms as

01:13:41.220 --> 01:13:43.280
being vectors.

01:13:43.280 --> 01:13:48.250
But the nice thing about doing
this is that you're not really

01:13:48.250 --> 01:13:50.340
stuck to a particular
orthogonal

01:13:50.340 --> 01:13:51.690
expansion when you do this.

01:13:51.690 --> 01:13:56.140
You can think of wave forms as
being vectors in just as nice

01:13:56.140 --> 01:14:00.910
a sense as you can think about
these n tuples as being

01:14:00.910 --> 01:14:04.820
vectors, and that's what
we're trying to get at.

01:14:04.820 --> 01:14:09.620
These orthogonal expansions
we're going to be looking at

01:14:09.620 --> 01:14:13.570
are really viewed most easily
in terms of vector space.

01:14:13.570 --> 01:14:16.720
All of the questions about
convergence of orthogonal

01:14:16.720 --> 01:14:21.190
expansions and things like that,
limits and all of that,

01:14:21.190 --> 01:14:24.530
all of these are very natural
in vector spaces.

01:14:24.530 --> 01:14:27.340
They're so natural that people
often forget about the fact

01:14:27.340 --> 01:14:29.750
that they're taking
limits even.

01:14:29.750 --> 01:14:32.200
So it just looks nice there.

01:14:32.200 --> 01:14:40.340
But as soon as we do this, what
we're going to be doing

01:14:40.340 --> 01:14:48.390
constantly from now on is trying
to say what we know

01:14:48.390 --> 01:14:51.610
when we're looking at
two-dimensional vectors, we

01:14:51.610 --> 01:14:53.210
have all sorts of
pretty pictures

01:14:53.210 --> 01:14:55.600
about how they behave.

01:14:55.600 --> 01:14:58.420
We are going to be trying to use
those pretty pictures in

01:14:58.420 --> 01:15:01.760
two-dimensional space to
understand what happens with

01:15:01.760 --> 01:15:05.440
wave forms, and in order to do
that we have to know a little

01:15:05.440 --> 01:15:09.850
bit more about vectors than just
vectors are things you

01:15:09.850 --> 01:15:14.710
can add and multiply
scalers by.

01:15:14.710 --> 01:15:19.010
So I will bore you for two
minutes by quickly going

01:15:19.010 --> 01:15:22.230
through the axioms of
a vector space.

01:15:22.230 --> 01:15:25.540
My reason for going through
this is when you define a

01:15:25.540 --> 01:15:30.650
vector space axiomatically, then
you can, in fact, prove

01:15:30.650 --> 01:15:34.630
that wave forms satisfy
all those axioms.

01:15:34.630 --> 01:15:38.300
Once you prove that wave forms
satisfy all those axioms, then

01:15:38.300 --> 01:15:40.180
everything you know about
two-dimensional and

01:15:40.180 --> 01:15:45.670
three-dimensional vectors and
all of that stuff all applies.

01:15:45.670 --> 01:15:48.540
Namely, everything which is
general for vector spaces

01:15:48.540 --> 01:15:50.730
applies to these vectors.

01:15:50.730 --> 01:15:53.050
So the axioms are
the following.

01:15:53.050 --> 01:15:55.230
You start out with
a set of elements

01:15:55.230 --> 01:15:57.270
which you call vectors.

01:15:57.270 --> 01:16:01.010
In terms of n tuples, the set of
elements is just the set of

01:16:01.010 --> 01:16:03.470
different n tuples.

01:16:03.470 --> 01:16:07.440
You also start out -- well,
for here we don't have to

01:16:07.440 --> 01:16:09.040
worry about scalers.

01:16:09.040 --> 01:16:13.220
So we have the set of n tuples
now, or perhaps it might be a

01:16:13.220 --> 01:16:17.450
set of sequences or a
set of wave forms.

01:16:17.450 --> 01:16:20.830
The things we insist on before
we will call this set a vector

01:16:20.830 --> 01:16:25.430
space are that we have
an operation

01:16:25.430 --> 01:16:27.760
which we call addition.

01:16:27.760 --> 01:16:30.380
Fortunately for n tuples,
addition is what you would

01:16:30.380 --> 01:16:31.240
think it would be.

01:16:31.240 --> 01:16:33.810
It's element-wise addition.

01:16:33.810 --> 01:16:38.400
For sequences, it's element-wise
addition again.

01:16:38.400 --> 01:16:42.550
For wave forms, it's
function addition.

01:16:42.550 --> 01:16:44.870
You have communitivity --

01:16:44.870 --> 01:16:48.380
you can add things
in either order.

01:16:48.380 --> 01:16:51.690
I mean look, if nobody pointed
this out to you, you'd do it

01:16:51.690 --> 01:16:53.580
anyway, right?

01:16:53.580 --> 01:16:56.370
So that it looks like nothing.

01:16:56.370 --> 01:17:00.920
But in fact, you can invent
things, mathematical objects,

01:17:00.920 --> 01:17:03.660
which you can deal with which
are not communitive.

01:17:03.660 --> 01:17:06.670
So this is saying to be a vector
space it has to have

01:17:06.670 --> 01:17:08.680
this communitivity operation.

01:17:08.680 --> 01:17:10.020
Associativity --

01:17:10.020 --> 01:17:12.580
again, it's hard to see why you
would say something like

01:17:12.580 --> 01:17:16.630
this, but all we're defining
is this addition operation,

01:17:16.630 --> 01:17:22.000
namely, there's a definition
of addition, and we know by

01:17:22.000 --> 01:17:27.170
axiom that the sum has to
be in this vector space.

01:17:27.170 --> 01:17:32.800
As soon as we assume this
associativity axiom, it says

01:17:32.800 --> 01:17:37.430
OK, this is a vector in the
space, this and this are both

01:17:37.430 --> 01:17:38.930
vectors in the space.

01:17:38.930 --> 01:17:41.390
Therefore, this sum has
to be in the space.

01:17:41.390 --> 01:17:46.530
Therefore this plus the sum
has to be in the space.

01:17:46.530 --> 01:17:48.600
What associativity says
is that that's the

01:17:48.600 --> 01:17:51.820
same element as this.

01:17:51.820 --> 01:17:54.520
Once you see this you leave out
the parentheses because

01:17:54.520 --> 01:17:57.290
you can add as many things
as you want to.

01:17:57.290 --> 01:18:01.100
Same thing -- well, here there
has to be a unique

01:18:01.100 --> 01:18:03.690
vector, zero --

01:18:03.690 --> 01:18:07.730
v plus zero is equal to v for
all v, and there's only one

01:18:07.730 --> 01:18:09.920
vector that has that property.

01:18:09.920 --> 01:18:12.590
We're going to see some problems
there in a little bit

01:18:12.590 --> 01:18:14.990
when we start studying these
L2 functions, but we'll do

01:18:14.990 --> 01:18:17.120
that next time.

01:18:17.120 --> 01:18:21.160
Finally, for every v there's a
unique negative vector so that

01:18:21.160 --> 01:18:22.740
the sum is equal to zero.

01:18:22.740 --> 01:18:24.300
All the operations that
you're used to.

01:18:24.300 --> 01:18:26.130
We'll go through the other
things next time.