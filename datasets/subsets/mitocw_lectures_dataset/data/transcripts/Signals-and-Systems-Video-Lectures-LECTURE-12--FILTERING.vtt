WEBVTT

00:00:00.040 --> 00:00:02.470
The following content is
provided under a Creative

00:00:02.470 --> 00:00:03.880
Commons license.

00:00:03.880 --> 00:00:06.920
Your support will help MIT
OpenCourseWare continue to

00:00:06.920 --> 00:00:10.570
offer high quality educational
resources for free.

00:00:10.570 --> 00:00:13.470
To make a donation or view
additional materials from

00:00:13.470 --> 00:00:17.400
hundreds of MIT courses, visit
MIT OpenCourseWare at

00:00:17.400 --> 00:00:18.650
ocw.mit.edu.

00:00:55.619 --> 00:00:58.000
PROFESSOR: In discussing
the continuous-time and

00:00:58.000 --> 00:01:01.540
discrete-time Fourier
transforms, we developed a

00:01:01.540 --> 00:01:04.050
number of important
properties.

00:01:04.050 --> 00:01:07.230
Two particularly significant
ones, as I mentioned at the

00:01:07.230 --> 00:01:10.490
time, are the modulation
property and

00:01:10.490 --> 00:01:12.860
the convolution property.

00:01:12.860 --> 00:01:15.760
Starting with the next lecture,
the one after this

00:01:15.760 --> 00:01:19.190
one, we'll be developing and
exploiting some of the

00:01:19.190 --> 00:01:22.260
consequences of the modulation
property.

00:01:22.260 --> 00:01:27.620
In today's lecture though, I'd
like to review and expand on

00:01:27.620 --> 00:01:31.100
the notion of filtering, which,
as I had mentioned,

00:01:31.100 --> 00:01:36.700
flows more or less directly from
the convolution property.

00:01:36.700 --> 00:01:39.820
To begin, let me just quickly
review what the convolution

00:01:39.820 --> 00:01:41.260
property is.

00:01:41.260 --> 00:01:45.780
Both for continuous-time and
for discrete-time, the

00:01:45.780 --> 00:01:51.400
convolution property tells us
that the Fourier transform of

00:01:51.400 --> 00:01:56.400
the convolution of two time
functions is the product of

00:01:56.400 --> 00:01:59.190
the Fourier transforms.

00:01:59.190 --> 00:02:04.450
Now, what this means in terms
of linear time-invariant

00:02:04.450 --> 00:02:08.889
filters, since we know that in
the time domain the output of

00:02:08.889 --> 00:02:12.890
a linear time-invariant filter
is the convolution of the

00:02:12.890 --> 00:02:17.080
input and the impulse response,
it says essentially

00:02:17.080 --> 00:02:20.790
then in the frequency domain
that the Fourier transform of

00:02:20.790 --> 00:02:24.740
the output is the product the
Fourier transform of the

00:02:24.740 --> 00:02:28.500
impulse response, namely the
frequency response, and the

00:02:28.500 --> 00:02:31.850
Fourier transform
of the input.

00:02:31.850 --> 00:02:36.370
So the output is described
through that product.

00:02:36.370 --> 00:02:40.760
Now, recall also that in
developing the Fourier

00:02:40.760 --> 00:02:45.250
transform, I interpreted the
Fourier transform as the

00:02:45.250 --> 00:02:49.320
complex amplitude of a
decomposition of the signal in

00:02:49.320 --> 00:02:52.120
terms of a set of complex
exponentials.

00:02:52.120 --> 00:02:55.230
And the frequency response or
the convolution property, in

00:02:55.230 --> 00:03:01.560
effect, tells us how to modify
the amplitudes of each of

00:03:01.560 --> 00:03:05.320
those complex exponentials as
they go through the system.

00:03:05.320 --> 00:03:09.190
Now, this led to the notion of
filtering, where the basic

00:03:09.190 --> 00:03:14.780
concept was that since we can
modify the amplitudes of each

00:03:14.780 --> 00:03:19.530
of the complex exponential
components separately, we can,

00:03:19.530 --> 00:03:23.370
for example, retain
some of them and

00:03:23.370 --> 00:03:25.040
totally eliminate others.

00:03:25.040 --> 00:03:27.810
And this is the basic
notion of filtering.

00:03:27.810 --> 00:03:33.000
So we have, as you recall, first
of all the notion in

00:03:33.000 --> 00:03:38.190
continuous-time of an ideal
filter, for example, I

00:03:38.190 --> 00:03:43.730
illustrate here an ideal lowpass
filter where we pass

00:03:43.730 --> 00:03:49.280
exactly frequency components in
one band and reject totally

00:03:49.280 --> 00:03:51.940
frequency components
in another band.

00:03:51.940 --> 00:03:54.620
The band being passed, of
course, referred to as the

00:03:54.620 --> 00:04:00.030
passband, and the band rejected
as the stopband.

00:04:00.030 --> 00:04:02.220
I illustrated here
a lowpass filter.

00:04:02.220 --> 00:04:07.310
We can, of course, reject the
low frequencies and retain the

00:04:07.310 --> 00:04:08.930
high frequencies.

00:04:08.930 --> 00:04:14.150
And that then corresponds to
an ideal highpass filter.

00:04:14.150 --> 00:04:17.810
Or we can just retain
frequencies within a band.

00:04:17.810 --> 00:04:22.640
And so I show below what is
referred to commonly as a

00:04:22.640 --> 00:04:25.240
bandpass filter.

00:04:25.240 --> 00:04:29.560
Now, this is what the ideal
filters looked like for

00:04:29.560 --> 00:04:31.070
continuous-time.

00:04:31.070 --> 00:04:35.200
For discrete-time, we have
exactly the same situation.

00:04:35.200 --> 00:04:39.870
Namely, we have an ideal
discrete-time lowpass filter,

00:04:39.870 --> 00:04:43.820
which passes exactly frequencies
which are the low

00:04:43.820 --> 00:04:45.120
frequencies.

00:04:45.120 --> 00:04:48.080
Low frequencies, of course,
being around 0, and because of

00:04:48.080 --> 00:04:52.260
the periodicity, also
around 2pi.

00:04:52.260 --> 00:04:56.630
We show also an ideal
highpass filter.

00:04:56.630 --> 00:05:00.180
And a highpass filter, as I
indicated last time, passes

00:05:00.180 --> 00:05:02.740
frequencies around pi.

00:05:02.740 --> 00:05:10.280
And finally, below that, I show
an ideal bandpass filter

00:05:10.280 --> 00:05:16.210
passing frequencies someplace in
the range between 0 and pi.

00:05:16.210 --> 00:05:20.330
And recall also that the basic
difference between

00:05:20.330 --> 00:05:22.610
continuous-time a discrete-time
for these

00:05:22.610 --> 00:05:26.240
filters is that the
discrete-time versions are, of

00:05:26.240 --> 00:05:29.960
course, periodic in frequency.

00:05:29.960 --> 00:05:34.600
Now, let's look at these ideal
filters, and in particular the

00:05:34.600 --> 00:05:39.320
ideal lowpass filter
in the time domain.

00:05:39.320 --> 00:05:45.290
We have the frequency response
of the ideal lowpass filter.

00:05:45.290 --> 00:05:49.580
And shown below it is the
impulse response.

00:05:49.580 --> 00:05:54.270
So here is the frequency
response and below it the

00:05:54.270 --> 00:05:59.020
impulse response of the
ideal lowpass filter.

00:05:59.020 --> 00:06:02.270
And this, of course,
is a sine x over x

00:06:02.270 --> 00:06:04.270
form of impulse response.

00:06:04.270 --> 00:06:08.820
And recognize also or recall
that since this frequency

00:06:08.820 --> 00:06:14.890
response is real-valued, the
impulse response, in other

00:06:14.890 --> 00:06:19.150
words, the inverse transform is
an even function of time.

00:06:19.150 --> 00:06:24.840
And notice also, since I want
to refer back to this, that

00:06:24.840 --> 00:06:29.270
the impulse response of an ideal
lowpass filter, in fact,

00:06:29.270 --> 00:06:30.530
is non-causal.

00:06:30.530 --> 00:06:33.420
That follows, from among other
things, from the fact that

00:06:33.420 --> 00:06:34.940
it's an even function.

00:06:34.940 --> 00:06:39.160
But keep in mind, in fact, that
a sine x over x function

00:06:39.160 --> 00:06:41.680
goes off to infinity
in both directions.

00:06:41.680 --> 00:06:45.720
So the impulse response of the
ideal lowpass filter is

00:06:45.720 --> 00:06:49.920
symmetric and continues to have
tails off to plus and

00:06:49.920 --> 00:06:52.680
minus infinity.

00:06:52.680 --> 00:06:56.850
Now, the situation is basically
the same in the

00:06:56.850 --> 00:06:59.610
discrete-time case.

00:06:59.610 --> 00:07:03.340
Let's look at the frequency
response and associated

00:07:03.340 --> 00:07:08.200
impulse response for an ideal
discrete-time lowpass filter.

00:07:08.200 --> 00:07:13.940
So once again, here is the
frequency response of the

00:07:13.940 --> 00:07:16.230
ideal lowpass filter.

00:07:16.230 --> 00:07:20.000
And below what I show the
impulse response.

00:07:20.000 --> 00:07:24.690
Again, it's a sine x over x
type of impulse response.

00:07:24.690 --> 00:07:30.290
And again, we recognize that
since in the frequency domain,

00:07:30.290 --> 00:07:34.760
this frequency response
is real-valued.

00:07:34.760 --> 00:07:39.060
That means, as a consequence
of the properties of the

00:07:39.060 --> 00:07:43.240
Fourier transform and inverse
Fourier transform, that the

00:07:43.240 --> 00:07:47.800
impulse response is an even
function in the time domain.

00:07:47.800 --> 00:07:52.180
And also, incidentally, the sine
x over x function goes

00:07:52.180 --> 00:07:54.270
off to infinity, again,
in both directions.

00:07:56.790 --> 00:08:01.650
Now, we've talked about ideal
filters in this discussion.

00:08:01.650 --> 00:08:05.150
And ideal filters all
are, in fact, ideal

00:08:05.150 --> 00:08:06.960
in a certain sense.

00:08:06.960 --> 00:08:10.550
What they do ideally is they
pass a certain band of

00:08:10.550 --> 00:08:16.060
frequencies exactly and
they reject a band

00:08:16.060 --> 00:08:19.010
of frequencies exactly.

00:08:19.010 --> 00:08:21.900
On the other hand, there are
many filtering problems in

00:08:21.900 --> 00:08:26.330
which, generally, we don't
have a sharp distinction

00:08:26.330 --> 00:08:28.670
between the frequencies we
want to pass and the

00:08:28.670 --> 00:08:31.260
frequencies we want to reject.

00:08:31.260 --> 00:08:34.990
One example of this that's
elaborated on in the text is

00:08:34.990 --> 00:08:37.610
the design of an automotive
suspension system, which, in

00:08:37.610 --> 00:08:42.490
fact, is the design of
a lowpass filter.

00:08:42.490 --> 00:08:46.550
And basically what you want to
do in a case like that is

00:08:46.550 --> 00:08:51.920
filter out or attenuate very
rapid road variations and keep

00:08:51.920 --> 00:08:56.020
the lower variations in, of
course, elevation of the

00:08:56.020 --> 00:08:58.350
highway or road.

00:08:58.350 --> 00:09:02.250
And what you can see intuitively
is that there

00:09:02.250 --> 00:09:05.910
isn't really a very sharp
distinction or sharp cut-off

00:09:05.910 --> 00:09:08.670
between what you would logically
call the low

00:09:08.670 --> 00:09:13.220
frequencies and what you would
call the high frequencies.

00:09:13.220 --> 00:09:18.000
Now, also somewhat related to
this is the fact that as we've

00:09:18.000 --> 00:09:22.350
seen in the time domain, these
ideal filters have a very

00:09:22.350 --> 00:09:24.300
particular kind of character.

00:09:24.300 --> 00:09:29.900
For example, let's look back at
the ideal lowpass filter.

00:09:29.900 --> 00:09:34.190
And we saw the impulse
response.

00:09:34.190 --> 00:09:37.090
The impulse response is what
we had shown here.

00:09:37.090 --> 00:09:41.860
Let's now look at the step
response of the discrete-time

00:09:41.860 --> 00:09:44.110
ideal lowpass filter.

00:09:44.110 --> 00:09:47.590
And notice the fact that it has
a tail that oscillates.

00:09:47.590 --> 00:09:50.300
And when the step hits,
in fact, it has

00:09:50.300 --> 00:09:52.720
an oscillatory behavior.

00:09:52.720 --> 00:09:57.670
Now, exactly the same
situation occurs in

00:09:57.670 --> 00:09:59.100
continuous-time.

00:09:59.100 --> 00:10:03.650
Let's look at the step
response of the

00:10:03.650 --> 00:10:07.310
continuous-time ideal
lowpass filter.

00:10:07.310 --> 00:10:12.540
And what we see is that when a
step hits then, in fact, we

00:10:12.540 --> 00:10:14.480
get an oscillation.

00:10:14.480 --> 00:10:18.740
And very often, that oscillation
is something

00:10:18.740 --> 00:10:19.670
that's undesirable.

00:10:19.670 --> 00:10:22.460
For example, if you were
designing an automotive

00:10:22.460 --> 00:10:27.100
suspension system and you hit
a curve, which is a step

00:10:27.100 --> 00:10:31.740
input, in fact, you probably
would not like to have the

00:10:31.740 --> 00:10:38.260
automobile oscillating, dying
down in oscillation.

00:10:38.260 --> 00:10:41.790
Now there's another very
important point, which again,

00:10:41.790 --> 00:10:43.620
we can see either in
continuous-time or

00:10:43.620 --> 00:10:49.200
discrete-time, which is that
even if we want it to have an

00:10:49.200 --> 00:10:54.880
ideal filter, the ideal filter
has another problem if we want

00:10:54.880 --> 00:10:57.960
to attempt to implement
it in real time.

00:10:57.960 --> 00:10:59.180
What's the problem?

00:10:59.180 --> 00:11:04.420
The problem is that since the
impulse response is even and,

00:11:04.420 --> 00:11:08.410
in fact, has tails that go off
to plus and minus infinity,

00:11:08.410 --> 00:11:10.190
it's non-causal.

00:11:10.190 --> 00:11:15.320
So if, in fact, we want to build
a filter and the filter

00:11:15.320 --> 00:11:20.290
is restricted to operate in real
time, then, in fact, we

00:11:20.290 --> 00:11:23.920
can't build an ideal filter.

00:11:23.920 --> 00:11:28.080
So what that says is that, in
practice, although ideal

00:11:28.080 --> 00:11:32.260
filters are nice to think about
and perhaps relate to

00:11:32.260 --> 00:11:37.780
practical problems, more
typically what we consider are

00:11:37.780 --> 00:11:43.780
nonideal filters and in the
discrete-time case, a nonideal

00:11:43.780 --> 00:11:48.850
filter then we would have a
characteristic somewhat like

00:11:48.850 --> 00:11:50.430
I've indicated here.

00:11:50.430 --> 00:11:55.300
Where instead of a very rapid
transition from passband to

00:11:55.300 --> 00:12:00.330
stopband, there would be a more
gradual transition with a

00:12:00.330 --> 00:12:06.960
passband cutoff frequency and
a stopband cutoff frequency.

00:12:06.960 --> 00:12:11.170
And perhaps also instead of
having an exactly flat

00:12:11.170 --> 00:12:15.210
characteristic in the stopband
in the passband, we would

00:12:15.210 --> 00:12:18.180
allow a certain amount
of ripple.

00:12:18.180 --> 00:12:23.350
We also have exactly the same
situation in continuous-time,

00:12:23.350 --> 00:12:27.560
where here we'll just simply
change our frequency axis to a

00:12:27.560 --> 00:12:30.480
continuous frequency axis
instead of the discrete

00:12:30.480 --> 00:12:31.920
frequency axis.

00:12:31.920 --> 00:12:35.460
Again, we would think in terms
of an allowable passband

00:12:35.460 --> 00:12:41.910
ripple, a transition from
passband to stopband with a

00:12:41.910 --> 00:12:46.940
passband cutoff frequency and
a stopband cutoff frequency.

00:12:46.940 --> 00:12:52.120
So the notion here is that,
again, ideal filters are ideal

00:12:52.120 --> 00:12:55.100
in some respects, not ideal
in other respects.

00:12:55.100 --> 00:12:57.850
And for many practical
problems, we

00:12:57.850 --> 00:12:59.360
may not want them.

00:12:59.360 --> 00:13:02.400
And even if we did want them,
we may not be able to get

00:13:02.400 --> 00:13:06.280
them, perhaps because of this
issue of causality.

00:13:06.280 --> 00:13:11.050
Even if causality is not an
issue, what happens in filter

00:13:11.050 --> 00:13:16.660
design and implementation, in
fact, is that the sharper you

00:13:16.660 --> 00:13:20.720
attempt to make the cutoff, the
more expensive, in some

00:13:20.720 --> 00:13:24.460
sense, the filter becomes,
either in terms of components,

00:13:24.460 --> 00:13:27.960
in continuous-time, or in
terms of computation in

00:13:27.960 --> 00:13:29.130
discrete-time.

00:13:29.130 --> 00:13:34.970
And so there are these whole
variety of issues that really

00:13:34.970 --> 00:13:37.990
make it important to
understand the

00:13:37.990 --> 00:13:41.790
notion nonideal filters.

00:13:41.790 --> 00:13:47.520
Now, just to illustrate as an
example, let me remind you of

00:13:47.520 --> 00:13:53.640
one example of what, in fact, is
a nonideal lowpass filter.

00:13:53.640 --> 00:13:57.820
And we have looked previously
at the associated

00:13:57.820 --> 00:13:59.660
differential equation.

00:13:59.660 --> 00:14:04.270
Let me now, in fact, relate
it to a circuit, and in

00:14:04.270 --> 00:14:08.730
particular an RC circuit, where
the output could either

00:14:08.730 --> 00:14:12.120
be across the capacitor
or the output can

00:14:12.120 --> 00:14:13.840
be across the resistor.

00:14:13.840 --> 00:14:16.340
So in effect, we have
two systems here.

00:14:16.340 --> 00:14:20.540
We have a system, which is the
system function from the

00:14:20.540 --> 00:14:24.490
voltage source input to the
capacitor output, the system

00:14:24.490 --> 00:14:29.450
from the voltage source input
to the resistor output.

00:14:29.450 --> 00:14:32.630
And, in fact, just applying
Kirchhoff's Voltage Law to

00:14:32.630 --> 00:14:35.840
this, we can relate those in
a very straightforward way.

00:14:35.840 --> 00:14:41.540
It's very straightforward to
verify that the system from

00:14:41.540 --> 00:14:46.430
input to resistor output is
simply the identity system

00:14:46.430 --> 00:14:51.480
with the capacitor output
subtracted from it.

00:14:51.480 --> 00:14:54.850
Now, we can write the
differential equation for

00:14:54.850 --> 00:14:59.360
either of these systems and, as
we talked about last time

00:14:59.360 --> 00:15:03.860
in the last several lectures,
solve that equation using and

00:15:03.860 --> 00:15:06.730
exploiting the properties of
the Fourier transform.

00:15:06.730 --> 00:15:11.790
And in fact, if we look at the
differential equation relating

00:15:11.790 --> 00:15:16.830
the capacitor output to the
voltage source input, we

00:15:16.830 --> 00:15:20.000
recognize that this is an
example that, in effect, we've

00:15:20.000 --> 00:15:21.740
solved previously.

00:15:21.740 --> 00:15:26.290
And so just working our way
down, applying the Fourier

00:15:26.290 --> 00:15:30.110
transform to the differential
equation and generating the

00:15:30.110 --> 00:15:34.500
system function by taking the
ratio of the capacitor voltage

00:15:34.500 --> 00:15:37.360
or its Fourier transform to the
Fourier transform of the

00:15:37.360 --> 00:15:42.030
source, we then have the system
function associated

00:15:42.030 --> 00:15:44.650
with the system for which
the output is

00:15:44.650 --> 00:15:46.550
the capacitor voltage.

00:15:46.550 --> 00:15:50.710
Or if we solve instead for the
system function associated

00:15:50.710 --> 00:15:54.450
with the resistor output,
we can simply

00:15:54.450 --> 00:15:57.390
subtract H1 from unity.

00:15:57.390 --> 00:16:00.510
And the system function that
we get in that case is the

00:16:00.510 --> 00:16:03.040
system function that
I show here.

00:16:03.040 --> 00:16:07.510
So we have, now, two system
functions, one for the

00:16:07.510 --> 00:16:11.480
capacitor output, the other
for the resistor output.

00:16:11.480 --> 00:16:15.540
And one, the first,
corresponding to the capacitor

00:16:15.540 --> 00:16:20.520
output, in fact, if we plot it
on a linear amplitude scale,

00:16:20.520 --> 00:16:21.430
looks like this.

00:16:21.430 --> 00:16:24.760
And as you can see, and as
we saw last time, is an

00:16:24.760 --> 00:16:27.630
approximation to a
lowpass filter.

00:16:27.630 --> 00:16:33.000
It is, in fact, and nonideal
lowpass filter, whereas the

00:16:33.000 --> 00:16:37.920
resistor output is an
approximation to a highpass

00:16:37.920 --> 00:16:42.200
filter, or in effect, a nonideal
highpass filter.

00:16:42.200 --> 00:16:46.230
So in one case, just comparing
the two, we have a lowpass

00:16:46.230 --> 00:16:50.210
filter as the capacitor output
associated with the capacitor

00:16:50.210 --> 00:16:53.700
output, and a highpass filter
associated with

00:16:53.700 --> 00:16:56.100
the resistor output.

00:16:56.100 --> 00:17:00.110
Let's just quickly look at that
example now, looking on a

00:17:00.110 --> 00:17:05.069
Bode plot, instead of
on the linear scale

00:17:05.069 --> 00:17:06.640
that we showed before.

00:17:06.640 --> 00:17:11.119
And recall incidentally, and be
aware incidentally, of the

00:17:11.119 --> 00:17:16.380
fact that we can, of course,
cascade several filters of

00:17:16.380 --> 00:17:18.940
this type and improve
the characteristics.

00:17:18.940 --> 00:17:28.040
So I have shown at the top
a Bode plot of the system

00:17:28.040 --> 00:17:30.940
function associated with
the capacitor output.

00:17:30.940 --> 00:17:35.810
It's flat out to a frequency
corresponding to 1 over the

00:17:35.810 --> 00:17:38.590
time constant, RC.

00:17:38.590 --> 00:17:43.820
And then it falls off at 10 dB
per decade, a decade being a

00:17:43.820 --> 00:17:45.640
factor of 10.

00:17:45.640 --> 00:17:49.390
Or if instead we look at the
system function associated

00:17:49.390 --> 00:17:54.300
with the resistor output, that
corresponds to a 10 dB per

00:17:54.300 --> 00:17:59.020
decade increase in frequency
up to approximately the

00:17:59.020 --> 00:18:02.510
reciprocal of the time constant,
and then approaching

00:18:02.510 --> 00:18:05.550
a flat characteristic
after that.

00:18:05.550 --> 00:18:11.400
And if we consider either one
of these, looking back again

00:18:11.400 --> 00:18:15.980
at the lowpass filter, if we
were to cascade several

00:18:15.980 --> 00:18:20.660
filters with this frequency
response, then because we have

00:18:20.660 --> 00:18:24.330
things plotted on a Bode plot,
the Bode plot for the cascade

00:18:24.330 --> 00:18:26.010
would simply be summing these.

00:18:26.010 --> 00:18:30.330
And so if we cascaded, for
example, two stages instead of

00:18:30.330 --> 00:18:34.210
a roll-off at 10 dB per decade,
it would roll off at

00:18:34.210 --> 00:18:37.780
20 dB per decade.

00:18:37.780 --> 00:18:42.100
Now, filters in this type, RC
filters, perhaps several of

00:18:42.100 --> 00:18:47.360
them in cascade, are in
fact very prevalent.

00:18:47.360 --> 00:18:53.465
And in fact, in an environment
like this, where we're, in

00:18:53.465 --> 00:19:00.150
fact, doing recording, we see
there are filters of that type

00:19:00.150 --> 00:19:03.790
that show up very commonly
both in the audio and the

00:19:03.790 --> 00:19:08.140
video portion of the signal
processing that's associated

00:19:08.140 --> 00:19:10.470
with making this set of tapes.

00:19:10.470 --> 00:19:14.350
In fact, let's take a look
in the control room.

00:19:14.350 --> 00:19:19.070
And what I'll be able to show
you in the control room is the

00:19:19.070 --> 00:19:23.200
audio portion of the processing
that's done and the

00:19:23.200 --> 00:19:26.890
kinds of filters, very much of
the type we just talked about,

00:19:26.890 --> 00:19:30.560
that are associated with the
signal processing that's done

00:19:30.560 --> 00:19:33.140
in preparing the audio
for the tapes.

00:19:33.140 --> 00:19:36.120
So let's just take a walk
into the control room

00:19:36.120 --> 00:19:37.370
and see what we see.

00:19:40.110 --> 00:19:42.280
This is the control room that's

00:19:42.280 --> 00:19:44.260
used for camera switching.

00:19:44.260 --> 00:19:48.210
It's used for computer editing
and also audio control.

00:19:48.210 --> 00:19:51.150
You can see the monitors,
and these are used

00:19:51.150 --> 00:19:53.090
for the camera switching.

00:19:53.090 --> 00:19:56.870
And this is the computer editing
console that's used

00:19:56.870 --> 00:19:59.890
for online and offline
computer editing.

00:19:59.890 --> 00:20:02.520
What I really want to
demonstrate though, in the

00:20:02.520 --> 00:20:06.760
context of the lecture is the
audio control panel, which

00:20:06.760 --> 00:20:10.680
contains, among other things, a
variety of filters for high

00:20:10.680 --> 00:20:13.280
frequency, low frequencies,
et cetera, basically

00:20:13.280 --> 00:20:15.280
equalization filters.

00:20:15.280 --> 00:20:20.380
And what we have in the way of
filtering is, first of all,

00:20:20.380 --> 00:20:23.390
what's referred to as a graphic
equalizer, which

00:20:23.390 --> 00:20:26.500
consists of a set of bandpass
filters, which I'll describe a

00:20:26.500 --> 00:20:28.340
little more carefully
in a minute.

00:20:28.340 --> 00:20:32.820
And then also, an audio control
panel, which is down

00:20:32.820 --> 00:20:36.350
here and which contains separate
equalizer circuits

00:20:36.350 --> 00:20:39.860
for each of a whole set of
channels and also lots of

00:20:39.860 --> 00:20:41.170
controls on them.

00:20:41.170 --> 00:20:46.690
Well, let me begin in the
demonstration by demonstrating

00:20:46.690 --> 00:20:51.380
a little bit of what the
graphic equalizer does.

00:20:51.380 --> 00:20:55.780
Well, what we have is a set
of bandpass filters.

00:20:55.780 --> 00:20:58.880
And what's indicated up here are
the center frequencies of

00:20:58.880 --> 00:21:02.430
the filters, and then a slider
switch for each one that lets

00:21:02.430 --> 00:21:04.570
us attenuate or amplify.

00:21:04.570 --> 00:21:06.550
And this is a dB scale.

00:21:06.550 --> 00:21:12.460
So essentially, if you look
across this bank of filters

00:21:12.460 --> 00:21:15.800
with the total output of the
equalizer just being the sum

00:21:15.800 --> 00:21:19.550
of the outputs from each of
these filters, interestingly

00:21:19.550 --> 00:21:22.320
the position of the slider
switches as you move across

00:21:22.320 --> 00:21:25.680
here, in effect, shows you what
the frequency response of

00:21:25.680 --> 00:21:27.090
the equalizer is.

00:21:27.090 --> 00:21:31.460
So you can change the overall
shaping of the filter by

00:21:31.460 --> 00:21:33.870
moving the switches
up and down.

00:21:33.870 --> 00:21:35.780
Right now the equalizer
is out.

00:21:35.780 --> 00:21:38.480
Let's put the equalizer
into the circuit.

00:21:38.480 --> 00:21:42.000
And now I put in this filtering
characteristic.

00:21:42.000 --> 00:21:45.910
And what I'd like to demonstrate
is filtering with

00:21:45.910 --> 00:21:49.240
this, when we do things that
are a little more dramatic

00:21:49.240 --> 00:21:51.560
than what would normally be
done in a typical audio

00:21:51.560 --> 00:21:53.250
recording setting.

00:21:53.250 --> 00:21:58.130
And to do this, let's add to my
voice some music to make it

00:21:58.130 --> 00:22:00.120
more interesting.

00:22:00.120 --> 00:22:02.340
Not that my voice isn't
interesting as it is.

00:22:02.340 --> 00:22:04.980
But in any case, let's
bring some music up.

00:22:04.980 --> 00:22:05.660
[MUSIC PLAYING]

00:22:05.660 --> 00:22:12.900
And now what I'll do is set
the low frequencies flat.

00:22:12.900 --> 00:22:18.430
And let me take out the high
frequencies above 800 cycles.

00:22:18.430 --> 00:22:21.160
And so now what we have,
effectively,

00:22:21.160 --> 00:22:23.940
is a lowpass filter.

00:22:23.940 --> 00:22:28.470
And now with the lowpass filter,
let me now bring the

00:22:28.470 --> 00:22:31.180
highs back up.

00:22:31.180 --> 00:22:35.310
And so I'm bringing up those
bandpass filters.

00:22:35.310 --> 00:22:39.490
And now let me cut
out the lows.

00:22:39.490 --> 00:22:43.230
And you'll hear the lows
disappearing and, in effect,

00:22:43.230 --> 00:22:47.200
keeping the highs in effectively
crispens the

00:22:47.200 --> 00:22:50.050
sound, either my voice
or the music.

00:22:50.050 --> 00:22:55.250
And finally, let me go back to
0 dB equalization on each of

00:22:55.250 --> 00:22:56.770
the filters.

00:22:56.770 --> 00:23:01.660
And what I'll also do now is
take the equalizer out of the

00:23:01.660 --> 00:23:02.910
circuit totally.

00:23:05.860 --> 00:23:10.490
Now, let's take a look at the
audio master control panel.

00:23:10.490 --> 00:23:15.000
And this panel has, of course,
for each channel and, for

00:23:15.000 --> 00:23:16.460
example, the channel
that we're working

00:23:16.460 --> 00:23:18.580
on, of a volume control.

00:23:18.580 --> 00:23:23.990
I can turn the volume down, and
I can turn the volume up.

00:23:23.990 --> 00:23:29.100
And it also has, for this
particular equalizer circuit,

00:23:29.100 --> 00:23:35.930
it has a set of three bandpass
filters and knobs which let us

00:23:35.930 --> 00:23:41.480
either put in up to 12 dB gain
or 12 dB attenuation in each

00:23:41.480 --> 00:23:44.990
of the bands, and also a
selector switch that lets us

00:23:44.990 --> 00:23:46.780
select the center the band.

00:23:46.780 --> 00:23:49.630
So let me just again
demonstrate a

00:23:49.630 --> 00:23:50.810
little bit with this.

00:23:50.810 --> 00:23:54.100
And let's get a close
up of this panel.

00:23:54.100 --> 00:23:57.450
So what we have, as
I indicated, is

00:23:57.450 --> 00:23:59.310
three bandpass filters.

00:23:59.310 --> 00:24:03.460
And these knobs that I'm
pointing to here are controls

00:24:03.460 --> 00:24:07.200
that allow us for each of the
filters to put in up to 12 dB

00:24:07.200 --> 00:24:10.310
gain or 12 dB attenuation.

00:24:10.310 --> 00:24:14.510
There are also with each of the
filters a selector switch

00:24:14.510 --> 00:24:18.000
that lets us adjust the center
frequency of the filter.

00:24:18.000 --> 00:24:21.660
Basically it's a two-position
switch.

00:24:21.660 --> 00:24:27.200
There also, as you can see, is
a button that let's us either

00:24:27.200 --> 00:24:28.830
put the equalization
in or out.

00:24:28.830 --> 00:24:31.290
Currently the equalization
is out.

00:24:31.290 --> 00:24:32.820
Let's put the equalization in.

00:24:32.820 --> 00:24:35.770
We won't hear any effect from
that, because the gain

00:24:35.770 --> 00:24:38.420
controls are all set at 0 dB.

00:24:38.420 --> 00:24:41.820
And I'll want to illustrate
shortly the effect of these.

00:24:41.820 --> 00:24:45.630
But before I do, let me draw
your attention to one other

00:24:45.630 --> 00:24:49.660
filter, which is this
white switch.

00:24:49.660 --> 00:24:55.870
And this switch is a highpass
filter that essentially cuts

00:24:55.870 --> 00:24:58.740
out frequencies below
about 100 cycles.

00:24:58.740 --> 00:25:02.510
So what it means is that if I
put this switch in, everything

00:25:02.510 --> 00:25:05.080
is more or less flat
above 100 cycles.

00:25:05.080 --> 00:25:09.960
And what that's used for,
basically, is to eliminate

00:25:09.960 --> 00:25:13.990
perhaps 60 cycle noise, if
that's present, or some low

00:25:13.990 --> 00:25:16.100
frequency hum or whatever.

00:25:16.100 --> 00:25:18.370
Well, we won't really
demonstrate

00:25:18.370 --> 00:25:19.780
anything with that.

00:25:19.780 --> 00:25:24.130
Let's [? go ?] now with the
equalization in, demonstrate

00:25:24.130 --> 00:25:28.250
the effect of boosting or
attenuating the low and high

00:25:28.250 --> 00:25:29.250
frequencies.

00:25:29.250 --> 00:25:33.030
And again, I think to
demonstrate this, it

00:25:33.030 --> 00:25:36.020
illustrates the point the
best if we have a

00:25:36.020 --> 00:25:37.110
little background music.

00:25:37.110 --> 00:25:39.750
So maestro, if you can
bring that up.

00:25:39.750 --> 00:25:41.050
[MUSIC PLAYING]

00:25:41.050 --> 00:25:45.330
And so now what I'm going to
do is first boost the low

00:25:45.330 --> 00:25:46.760
frequencies.

00:25:46.760 --> 00:25:50.040
And that's what this
potentiometer knob will do.

00:25:50.040 --> 00:25:54.980
So now, increasing the low
frequency gain and, in fact,

00:25:54.980 --> 00:25:58.720
all the way up to 12 dB when I
have the knob over as far as

00:25:58.720 --> 00:26:00.200
I've gone here.

00:26:00.200 --> 00:26:02.610
And so that has a very
bassy sound.

00:26:02.610 --> 00:26:06.370
And in fact, we can make it
even bassier by taking the

00:26:06.370 --> 00:26:11.230
high frequencies and attenuating
those by 12 dB.

00:26:15.930 --> 00:26:21.230
OK well, let's put some of the
high frequencies back in.

00:26:21.230 --> 00:26:26.300
And now let's turn the
low-frequency gain first

00:26:26.300 --> 00:26:30.080
back down to 0.

00:26:30.080 --> 00:26:32.560
And now we're back to
flat equalization.

00:26:32.560 --> 00:26:37.180
And now I can turn the low
frequency gain down so that I

00:26:37.180 --> 00:26:41.090
attenuate the low frequencies
by much as 12 dB.

00:26:41.090 --> 00:26:42.540
And that's where we are now.

00:26:42.540 --> 00:26:47.170
And so this has, of course,
a much crisper sound.

00:26:47.170 --> 00:26:51.984
And to enhance the highs even
more, I can, in addition to

00:26:51.984 --> 00:26:55.890
cutting out the lows, boost
the highs by putting in,

00:26:55.890 --> 00:26:57.140
again, as much as 12 dB.

00:27:00.410 --> 00:27:07.050
OK well, let's turn down the
music now and go back to no

00:27:07.050 --> 00:27:10.210
equalization by setting
these knobs to 0 dB.

00:27:10.210 --> 00:27:13.200
And in fact, we can take
the equalizer out.

00:27:13.200 --> 00:27:17.580
Well, that's a quick look at
some real-world filters.

00:27:17.580 --> 00:27:21.160
Now let's stop having so
much fun, and let's

00:27:21.160 --> 00:27:22.410
go back to the lecture.

00:27:29.150 --> 00:27:33.010
OK well, that's a little
behind-the-scenes look.

00:27:33.010 --> 00:27:37.070
What I'd like to do now is
turn our attention to

00:27:37.070 --> 00:27:39.130
discrete-time filters.

00:27:39.130 --> 00:27:45.720
And as I've meant in previous
lectures, there are basically

00:27:45.720 --> 00:27:50.810
two classes of discrete-time
filters or discrete-time

00:27:50.810 --> 00:27:53.280
difference equations.

00:27:53.280 --> 00:27:58.390
One class is referred to a
non-recursive or moving

00:27:58.390 --> 00:28:00.930
average filter.

00:28:00.930 --> 00:28:04.740
And the basic idea with a
moving average filter is

00:28:04.740 --> 00:28:07.840
something that perhaps you're
somewhat familiar with

00:28:07.840 --> 00:28:09.490
intuitively.

00:28:09.490 --> 00:28:14.520
Think of the notion of taking
a data sequence, and let's

00:28:14.520 --> 00:28:17.810
suppose that what we wanted to
do was apply some smoothing to

00:28:17.810 --> 00:28:19.290
the data sequence.

00:28:19.290 --> 00:28:23.220
We could, for example, think
of taking adjacent points,

00:28:23.220 --> 00:28:27.600
averaging them together, and
then moving that average along

00:28:27.600 --> 00:28:28.960
the data sequence.

00:28:28.960 --> 00:28:32.000
And what you can kind of see
intuitively is that that would

00:28:32.000 --> 00:28:34.020
apply some smoothing.

00:28:34.020 --> 00:28:36.720
So in fact, the difference
equation, let's say, for

00:28:36.720 --> 00:28:39.730
three-point moving average
would be the difference

00:28:39.730 --> 00:28:44.240
equation that I indicate here,
just simply taking a data

00:28:44.240 --> 00:28:49.340
point and the two data points
adjacent to it and forming an

00:28:49.340 --> 00:28:51.540
average of those three.

00:28:51.540 --> 00:28:55.260
So if we thought of the
processing involved, if we're

00:28:55.260 --> 00:29:00.530
forming an output sequence
value, we would take three

00:29:00.530 --> 00:29:02.240
adjacent points and
average them.

00:29:02.240 --> 00:29:06.440
That would give us the output
add the associated time.

00:29:06.440 --> 00:29:09.630
And then to compute the next
output point, we would just

00:29:09.630 --> 00:29:14.590
simply slide this by one point,
average these together,

00:29:14.590 --> 00:29:17.070
and that would give us the
next output point.

00:29:17.070 --> 00:29:20.900
And we would continue along,
just simply sliding and

00:29:20.900 --> 00:29:25.110
averaging to form the output
data sequence.

00:29:25.110 --> 00:29:29.490
Now, that's an example of what's
commonly referred to a

00:29:29.490 --> 00:29:31.370
three-point moving average.

00:29:31.370 --> 00:29:34.770
In fact, we can generalize
that notion

00:29:34.770 --> 00:29:36.110
in a number of ways.

00:29:36.110 --> 00:29:39.920
One way of generalizing the
notion of a moving average

00:29:39.920 --> 00:29:43.030
from the three-point moving
average, which I summarize

00:29:43.030 --> 00:29:47.110
again here, is to think of
extending that to a larger

00:29:47.110 --> 00:29:52.150
number of points, and in fact
applying weights to that as I

00:29:52.150 --> 00:29:56.090
indicated here, so that, in
addition to just summing up

00:29:56.090 --> 00:29:59.590
the points and dividing by the
number of points summed, we

00:29:59.590 --> 00:30:03.870
can, in fact, apply individual
weights to the points so that

00:30:03.870 --> 00:30:08.590
it's what is often referred to
as a weighting moving average.

00:30:08.590 --> 00:30:15.130
And I show below one possible
curve that might result, where

00:30:15.130 --> 00:30:19.450
these would be essentially the
weights associated with this

00:30:19.450 --> 00:30:21.410
weighted moving average.

00:30:21.410 --> 00:30:25.670
And in fact, it's easy to
verify that this indeed

00:30:25.670 --> 00:30:30.890
corresponds to the impulse
response of the filter.

00:30:30.890 --> 00:30:34.910
Well, just to cement this
notion, let me show you an

00:30:34.910 --> 00:30:36.580
example or two.

00:30:36.580 --> 00:30:41.410
Here is an example of a
five-point moving average.

00:30:41.410 --> 00:30:45.610
A five-point moving average
would have an impulse response

00:30:45.610 --> 00:30:50.510
that just consists of a
rectangle of length five.

00:30:50.510 --> 00:30:54.510
And if this is convolved with
a data sequence, that would

00:30:54.510 --> 00:30:57.880
correspond to taking five
adjacent points and, in

00:30:57.880 --> 00:30:59.870
effect, averaging them.

00:30:59.870 --> 00:31:02.890
We've looked previously at the
Fourier transform of this

00:31:02.890 --> 00:31:04.240
rectangular sequence.

00:31:04.240 --> 00:31:08.490
And the Fourier transform of
that, in fact, is of the form

00:31:08.490 --> 00:31:12.300
of a sine n x over
sine x curve.

00:31:12.300 --> 00:31:17.720
And as you can see, that is
some approximation to a

00:31:17.720 --> 00:31:18.860
lowpass filter.

00:31:18.860 --> 00:31:23.320
And so this, again, is the
impulse response and frequency

00:31:23.320 --> 00:31:28.430
response of a nonideal
lowpass filter.

00:31:28.430 --> 00:31:33.770
Now, there are a variety of
algorithms that, in fact, tell

00:31:33.770 --> 00:31:37.840
you how to choose the weights
associated with a weighted

00:31:37.840 --> 00:31:41.080
moving average to, in some
sense, design better

00:31:41.080 --> 00:31:45.060
approximations and without going
into the details of any

00:31:45.060 --> 00:31:46.510
of those algorithms.

00:31:46.510 --> 00:31:51.920
Let me just show the result of
choosing the weights for the

00:31:51.920 --> 00:31:58.610
design of a 251-point moving
average filter, where the

00:31:58.610 --> 00:32:02.430
weights are chosen using an
optimum algorithm to generate

00:32:02.430 --> 00:32:06.070
as sharp a cutoff as can
possibly be generated.

00:32:06.070 --> 00:32:11.750
And so what I show here is the
frequency response of the

00:32:11.750 --> 00:32:14.990
resulting filter on a
logarithmic amplitude scale

00:32:14.990 --> 00:32:17.560
and a linear frequency scale.

00:32:17.560 --> 00:32:20.860
Notice that on this scale, the
passband is very flat.

00:32:20.860 --> 00:32:23.500
Although here is an expanded
view of it.

00:32:23.500 --> 00:32:27.240
And in fact, it has what's
referred to as an equal-ripple

00:32:27.240 --> 00:32:29.350
characteristic.

00:32:29.350 --> 00:32:31.970
And then here is the
transition band.

00:32:31.970 --> 00:32:35.750
And here we have to stopband,
which in fact is down somewhat

00:32:35.750 --> 00:32:40.150
more than 80 dB and, again, has
what's referred to as an

00:32:40.150 --> 00:32:41.400
equal-ripple characteristic.

00:32:43.770 --> 00:32:48.470
Now, the notion of a moving
average for filtering is

00:32:48.470 --> 00:32:53.010
something that is very
commonly used.

00:32:53.010 --> 00:32:56.780
I had shown last time actually
the result of some filtering

00:32:56.780 --> 00:32:59.250
on a particular data
sequence, the Dow

00:32:59.250 --> 00:33:01.260
Jones Industrial Average.

00:33:01.260 --> 00:33:08.180
And very often, in looking at
various kinds of stock market

00:33:08.180 --> 00:33:13.810
publications, what you will see
is the Dow Jones average

00:33:13.810 --> 00:33:16.630
shown in its raw form
as a data sequence.

00:33:16.630 --> 00:33:21.780
And then very typically, you'll
see also the result of

00:33:21.780 --> 00:33:25.520
a moving average, where the
moving average might be on the

00:33:25.520 --> 00:33:28.930
order of day, or it might be
on the order of months.

00:33:28.930 --> 00:33:32.950
The whole notion being to take
some of the random high

00:33:32.950 --> 00:33:36.900
frequency fluctuations out of
the average and show the low

00:33:36.900 --> 00:33:43.060
frequency, or trends, over
some period of time.

00:33:43.060 --> 00:33:46.940
So let's, in fact, go back
to the Dow Jones average.

00:33:46.940 --> 00:33:52.450
And let me now show you what the
result of filtering with a

00:33:52.450 --> 00:33:56.330
moving average filter would
look like on the same Dow

00:33:56.330 --> 00:33:58.040
Jones industrial average
sequence that

00:33:58.040 --> 00:34:00.580
I showed last time.

00:34:00.580 --> 00:34:05.340
So once again, we have the Dow
Jones average from 1927 to

00:34:05.340 --> 00:34:07.380
roughly 1932.

00:34:07.380 --> 00:34:10.460
At the top, we see the
impulse response

00:34:10.460 --> 00:34:12.080
for the moving average.

00:34:12.080 --> 00:34:15.790
Again, I remind you on an
expanded time scale, and

00:34:15.790 --> 00:34:18.030
what's shown here is
the moving average

00:34:18.030 --> 00:34:19.630
with just one point.

00:34:19.630 --> 00:34:24.340
So the output on the bottom
trace is just simply identical

00:34:24.340 --> 00:34:25.790
to the input.

00:34:25.790 --> 00:34:28.000
Now, let's increase the
length of the moving

00:34:28.000 --> 00:34:29.389
average to two points.

00:34:29.389 --> 00:34:32.889
And we see that there is a small
amount of smoothing,

00:34:32.889 --> 00:34:34.690
three points and just
a little more

00:34:34.690 --> 00:34:37.489
smoothing, that gets inserted.

00:34:37.489 --> 00:34:43.590
Now a four-point moving
average, and next the

00:34:43.590 --> 00:34:47.710
five-point moving average,
and a six-point

00:34:47.710 --> 00:34:49.320
moving average next.

00:34:49.320 --> 00:34:51.690
And we see that the smoothing
increases.

00:34:51.690 --> 00:34:54.639
Now, let's increase the length
of the moving average filter

00:34:54.639 --> 00:35:00.310
much more rapidly and watch
how the output is more and

00:35:00.310 --> 00:35:03.340
more smooth in relation
to the input.

00:35:03.340 --> 00:35:07.620
Again, I emphasize that the
time scale for the impulse

00:35:07.620 --> 00:35:11.890
response is significantly
expanded in relationship to

00:35:11.890 --> 00:35:16.450
the time scale for both the
input and the output.

00:35:16.450 --> 00:35:20.000
And once again, through the
magic of filtering, we've been

00:35:20.000 --> 00:35:23.240
able to eliminate the 1929
Stock Market Crash.

00:35:26.530 --> 00:35:30.490
All right, so we've seen moving
average filters, or

00:35:30.490 --> 00:35:35.520
what are sometimes referred to
as non-recursive filters.

00:35:35.520 --> 00:35:39.580
And they are, as I stressed,
a very important class of

00:35:39.580 --> 00:35:41.880
discrete-time filters.

00:35:41.880 --> 00:35:45.550
Another very important class of
discrete-time filters are

00:35:45.550 --> 00:35:49.530
what are referred to as
recursive filters.

00:35:49.530 --> 00:35:53.320
Recursive filters are filters
for which the difference

00:35:53.320 --> 00:35:58.850
equation has feedback from the
output back into the input.

00:35:58.850 --> 00:36:03.320
In other words, the output
depends not only on the input,

00:36:03.320 --> 00:36:06.910
but also on previous values
of the output.

00:36:06.910 --> 00:36:10.300
So for example, as I've
stressed previously, a

00:36:10.300 --> 00:36:14.930
recursive difference equation
has the general form that I

00:36:14.930 --> 00:36:18.710
indicate here, a linear
combination of weighted

00:36:18.710 --> 00:36:21.950
outputs on the left-hand side
and linear combination of

00:36:21.950 --> 00:36:24.720
weighted inputs on the
right-hand side.

00:36:24.720 --> 00:36:30.370
And as we've talked about, we
can solve this equation for

00:36:30.370 --> 00:36:34.790
the current output y of n in
terms of current and past

00:36:34.790 --> 00:36:38.610
inputs and past outputs.

00:36:38.610 --> 00:36:42.550
For example, just to interpret
this, focus on the

00:36:42.550 --> 00:36:47.050
interpretation of this as a
filter, let's look at a first

00:36:47.050 --> 00:36:50.280
order difference equation, which
we've talked about and

00:36:50.280 --> 00:36:52.770
generated the solution
to previously.

00:36:52.770 --> 00:36:56.810
So the first order difference
equation would be as I

00:36:56.810 --> 00:36:59.220
indicated here.

00:36:59.220 --> 00:37:04.150
And imposing causality on this,
so that we assume that

00:37:04.150 --> 00:37:08.090
we are running this as a
recursive forward in time, we

00:37:08.090 --> 00:37:13.020
can solve this for y of n in
terms of x of n and y of n

00:37:13.020 --> 00:37:16.520
minus 1 weighted by
the factor a.

00:37:16.520 --> 00:37:20.970
And I simply indicate the
block diagram for this.

00:37:20.970 --> 00:37:24.120
But what we want to examine
now for this first order

00:37:24.120 --> 00:37:28.400
recursion is the frequency
response and see its

00:37:28.400 --> 00:37:30.840
interpretation as a filter.

00:37:30.840 --> 00:37:34.330
Well in fact, again, the
mathematics for this we've

00:37:34.330 --> 00:37:37.540
gone through in the
last lecture.

00:37:37.540 --> 00:37:41.210
And so interpreting the first
order difference equation as a

00:37:41.210 --> 00:37:48.130
system, what we're attempting
to generate is the frequency

00:37:48.130 --> 00:37:50.730
response, which is the
Fourier transform

00:37:50.730 --> 00:37:52.760
of the impulse response.

00:37:52.760 --> 00:37:56.080
And from the difference
equation, we can, of course,

00:37:56.080 --> 00:38:00.790
solve for either one of those
by using the properties,

00:38:00.790 --> 00:38:03.770
exploiting the properties,
of Fourier transform.

00:38:03.770 --> 00:38:07.760
Applying the Fourier transform
to the difference equation, we

00:38:07.760 --> 00:38:12.060
will end up with the Fourier
transform of the output equal

00:38:12.060 --> 00:38:15.530
to the Fourier transform of the
input times this factor,

00:38:15.530 --> 00:38:19.160
which we know from the
convolution property, in fact,

00:38:19.160 --> 00:38:24.980
is the frequency response
of the system.

00:38:24.980 --> 00:38:27.440
So this is the frequency
response.

00:38:27.440 --> 00:38:31.290
And of course, the inverse
Fourier transform of that,

00:38:31.290 --> 00:38:37.910
which I indicate below, is the
system impulse response.

00:38:37.910 --> 00:38:41.430
So we have the frequency
response obtained by applying

00:38:41.430 --> 00:38:44.150
the Fourier transform to the
difference equation, the

00:38:44.150 --> 00:38:46.190
impulse response.

00:38:46.190 --> 00:38:54.200
And, as we did last time, we can
look at that in terms of a

00:38:54.200 --> 00:38:56.990
frequency response
characteristic.

00:38:56.990 --> 00:39:01.470
And recall that, depending on
whether the factor a is

00:39:01.470 --> 00:39:05.560
positive or negative, we either
get a lowpass filter or

00:39:05.560 --> 00:39:07.840
a highpass filter.

00:39:07.840 --> 00:39:13.170
And if, in fact, we look at the
frequency response for the

00:39:13.170 --> 00:39:16.640
factor a being positive, then
we see that this is an

00:39:16.640 --> 00:39:22.080
approximation to a lowpass
filter, whereas below it I

00:39:22.080 --> 00:39:26.390
show the frequency response
for a negative.

00:39:26.390 --> 00:39:32.300
And there this corresponds to
a highpass filter, because

00:39:32.300 --> 00:39:36.820
we're attenuating low
frequencies and retaining the

00:39:36.820 --> 00:39:39.350
high frequencies.

00:39:39.350 --> 00:39:45.110
And recall also that
we illustrated this

00:39:45.110 --> 00:39:49.170
characteristic as a lowpass or
highpass filter for the first

00:39:49.170 --> 00:39:55.660
order recursion by looking at
how it worked as a filter in

00:39:55.660 --> 00:39:59.030
both cases when the input was
the Dow Jones average.

00:39:59.030 --> 00:40:02.630
And indeed, we saw that it
generated both lowpass and

00:40:02.630 --> 00:40:06.380
highpass filtering in the
appropriate cases.

00:40:06.380 --> 00:40:09.880
So for discrete-time, we have
the two classes, moving

00:40:09.880 --> 00:40:14.210
average and recursive filters.

00:40:14.210 --> 00:40:17.270
And there are a variety of
issues discussed in the text

00:40:17.270 --> 00:40:19.960
about why, in certain contexts,
one might want to

00:40:19.960 --> 00:40:21.390
use one of the other.

00:40:21.390 --> 00:40:24.870
Basically, what happens is that
for the moving average

00:40:24.870 --> 00:40:28.660
filter, for a given set a filter
specifications, there

00:40:28.660 --> 00:40:31.440
are many more multiplications
required than

00:40:31.440 --> 00:40:33.190
for a recursive filter.

00:40:33.190 --> 00:40:36.250
But there are, in certain
contexts, some very important

00:40:36.250 --> 00:40:41.450
compensating benefits for the
moving average filter.

00:40:41.450 --> 00:40:47.320
Now, this concludes, pretty
much, what I want to say in

00:40:47.320 --> 00:40:51.200
detail about filtering, the
concept of filtering, in the

00:40:51.200 --> 00:40:52.880
set of lectures.

00:40:52.880 --> 00:40:57.830
This is only a very quick
glimpse into a very important

00:40:57.830 --> 00:41:01.440
and very rich topic, and one, of
course, that can be studied

00:41:01.440 --> 00:41:05.250
on its own in an considerable
amount of detail.

00:41:05.250 --> 00:41:09.760
As the lectures go on, what
we'll find is that the basic

00:41:09.760 --> 00:41:14.570
concept of filtering, both ideal
and nonideal filtering,

00:41:14.570 --> 00:41:19.180
will be a very important
part of what we do.

00:41:19.180 --> 00:41:24.370
And in particular, beginning
with the next lecture, we'll

00:41:24.370 --> 00:41:29.930
turn to a discussion of
modulation, exploiting the

00:41:29.930 --> 00:41:33.490
property of modulation
as it relates to

00:41:33.490 --> 00:41:35.340
some practical problems.

00:41:35.340 --> 00:41:39.280
And what we'll find when we do
that is that a very important

00:41:39.280 --> 00:41:42.660
part of that discussion and, in
fact, a very important part

00:41:42.660 --> 00:41:48.120
of the use of modulation also
just naturally incorporates

00:41:48.120 --> 00:41:51.270
the concept and properties
of filtering.

00:41:51.270 --> 00:41:52.520
Thank you.