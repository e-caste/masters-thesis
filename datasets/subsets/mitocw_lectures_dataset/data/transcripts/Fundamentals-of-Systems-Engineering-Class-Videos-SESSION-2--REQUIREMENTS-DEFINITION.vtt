WEBVTT

00:00:00.120 --> 00:00:02.460
The following content is
provided under a Creative

00:00:02.460 --> 00:00:03.880
Commons license.

00:00:03.880 --> 00:00:06.090
Your support will help
MIT OpenCourseWare

00:00:06.090 --> 00:00:10.180
continue to offer high quality
educational resources for free.

00:00:10.180 --> 00:00:12.720
To make a donation or to
view additional materials

00:00:12.720 --> 00:00:16.650
from hundreds of MIT courses,
visit MIT OpenCourseWare

00:00:16.650 --> 00:00:17.880
at ocw.mit.edu.

00:00:25.370 --> 00:00:28.140
PROFESSOR: You have to
make some design decisions.

00:00:28.140 --> 00:00:31.100
And then once you've made
those design decisions,

00:00:31.100 --> 00:00:34.250
then you can actually write your
level 2, level 3 requirements

00:00:34.250 --> 00:00:37.530
and so forth, it's
an iterative process.

00:00:37.530 --> 00:00:40.280
But when you look at
the classic v model,

00:00:40.280 --> 00:00:42.570
you don't really see
those iterations.

00:00:42.570 --> 00:00:44.220
But they actually exist.

00:00:44.220 --> 00:00:46.970
So what we typically do
at the system requirements

00:00:46.970 --> 00:00:50.780
review is we review and
then agree on the high level

00:00:50.780 --> 00:00:53.750
requirements, level
0, level 1, maybe

00:00:53.750 --> 00:00:56.780
level 2 requirement, but
not the lower level ones,

00:00:56.780 --> 00:00:58.610
because you can't,
because you typically

00:00:58.610 --> 00:01:00.398
haven't done the design yet.

00:01:03.990 --> 00:01:06.460
The other thing I want
to say is a lot of the--

00:01:06.460 --> 00:01:08.280
this is really a critical issue.

00:01:08.280 --> 00:01:10.630
And a lot of the problems
we talked about last time

00:01:10.630 --> 00:01:14.450
in the schedule, cost overruns,
really, a lot of these things

00:01:14.450 --> 00:01:16.730
are traceable back
to the requirements.

00:01:16.730 --> 00:01:19.670
Either the requirements
were over ambitious.

00:01:19.670 --> 00:01:23.330
You can set requirements that
were essentially unachievable.

00:01:23.330 --> 00:01:27.839
Or you missed requirements that
actually became clear later on.

00:01:27.839 --> 00:01:28.880
But they weren't written.

00:01:28.880 --> 00:01:31.310
So nobody paid
attention to them.

00:01:31.310 --> 00:01:32.350
A couple of examples.

00:01:32.350 --> 00:01:36.230
So I have sort of one
example of core requirements,

00:01:36.230 --> 00:01:39.090
and then a good example.

00:01:39.090 --> 00:01:44.050
So this is a mission that
you may have heard about.

00:01:49.100 --> 00:01:50.570
A 1998 MCO.

00:01:50.570 --> 00:01:52.280
So who was born in--

00:01:52.280 --> 00:01:53.920
I'm looking at you guys.

00:01:53.920 --> 00:01:55.380
Justin, right?

00:01:55.380 --> 00:01:58.390
Justice, when were you born?

00:01:58.390 --> 00:01:59.050
'94?

00:01:59.050 --> 00:02:03.030
OK, so you're older
than MCO by four years.

00:02:03.030 --> 00:02:06.580
So MCO was a very well-known
just about not quite

00:02:06.580 --> 00:02:11.070
20 years ago, a very well known
mission failure that happened.

00:02:11.070 --> 00:02:16.550
A Mars climate orbiter, it
was launched on December 1998.

00:02:16.550 --> 00:02:20.560
And it had multiple functions
study the Martian climate,

00:02:20.560 --> 00:02:22.300
weather and surface changes.

00:02:22.300 --> 00:02:26.380
And it was to act as a relay
satellite for the Mars polar

00:02:26.380 --> 00:02:29.750
Lander, which came after
it and also failed.

00:02:29.750 --> 00:02:32.320
Both failed.

00:02:32.320 --> 00:02:35.320
And unfortunately MCO burned up.

00:02:35.320 --> 00:02:39.310
We think contact was
lost with a spacecraft

00:02:39.310 --> 00:02:43.370
after it basically entered
the Martian atmosphere.

00:02:43.370 --> 00:02:47.170
And you know nothing-- there
was no more communication.

00:02:47.170 --> 00:02:49.120
So we don't know for sure.

00:02:49.120 --> 00:02:53.194
But their best guess is that
the spacecraft burned up

00:02:53.194 --> 00:02:58.580
in the approach to Mars, that
the actual altitude at which

00:02:58.580 --> 00:03:00.170
had entered the
Martian atmosphere

00:03:00.170 --> 00:03:04.420
was about 57 kilometers.

00:03:04.420 --> 00:03:07.190
And it was supposed
to be about 220.

00:03:07.190 --> 00:03:09.740
So even though the Martian
atmosphere is very thin,

00:03:09.740 --> 00:03:12.920
when you enter at
very high velocities,

00:03:12.920 --> 00:03:16.060
that's not a good thing.

00:03:16.060 --> 00:03:17.300
This is the very famous--

00:03:17.300 --> 00:03:20.170
you've heard about this--
confusion of units problem,

00:03:20.170 --> 00:03:25.710
like this mission that one
part of the team used SI units,

00:03:25.710 --> 00:03:29.890
specifically Newton's seconds,
this is momentum, right?

00:03:29.890 --> 00:03:34.610
Force times time, that
gives you momentum.

00:03:34.610 --> 00:03:38.900
So when you burn your engines
for x number of seconds

00:03:38.900 --> 00:03:41.780
the sum of the product of
those two is your momentum.

00:03:41.780 --> 00:03:43.160
And then another
part of the team

00:03:43.160 --> 00:03:49.150
used English units, pounds
of force times second.

00:03:49.150 --> 00:03:55.215
OK, and so that was
fundamentally the problem that

00:03:55.215 --> 00:03:56.860
caused the burn up.

00:03:56.860 --> 00:03:59.710
Now if you read the
accident report.

00:03:59.710 --> 00:04:02.620
And I have a link here
to the accident report,

00:04:02.620 --> 00:04:06.490
you will notice that the
requirements were actually OK.

00:04:06.490 --> 00:04:09.980
The requirements were
written correctly.

00:04:09.980 --> 00:04:12.910
So specifically, there was a
document called the software

00:04:12.910 --> 00:04:17.110
interface specification, SIS,
that specified everything

00:04:17.110 --> 00:04:20.880
should be in SI units
on the ground segment

00:04:20.880 --> 00:04:22.570
and on the space segment.

00:04:22.570 --> 00:04:27.520
But the problem is that this
was not checked and implemented.

00:04:27.520 --> 00:04:30.730
And so here's a quote
from the accident report.

00:04:30.730 --> 00:04:33.220
Items that the mission
assurance manager, which

00:04:33.220 --> 00:04:35.000
didn't exist for this mission.

00:04:35.000 --> 00:04:37.720
So the mission
Assurance Manager role

00:04:37.720 --> 00:04:40.760
is to make sure the requirements
are actually followed.

00:04:40.760 --> 00:04:43.960
There was no mission Assurance
Manager on the MCO mission.

00:04:43.960 --> 00:04:48.070
Included ensuring that
the AMD file, which

00:04:48.070 --> 00:04:52.480
is one of the files put out
by the propulsion system,

00:04:52.480 --> 00:04:55.120
met the requirements
of the softwares

00:04:55.120 --> 00:04:58.050
in the interface specification
And that did not happen.

00:04:58.050 --> 00:05:02.440
And so that was sort of
the root cause there.

00:05:02.440 --> 00:05:04.940
Here's a good example
for requirements.

00:05:04.940 --> 00:05:07.270
This is a little bit older.

00:05:07.270 --> 00:05:09.200
This is the DC-3.

00:05:09.200 --> 00:05:11.750
This is an old plane.

00:05:11.750 --> 00:05:17.790
First flight in December 1935.

00:05:17.790 --> 00:05:21.190
This was this was
really an airplane that

00:05:21.190 --> 00:05:25.420
kickstarted civil aviation
as a commercial service.

00:05:25.420 --> 00:05:29.290
And so first of
all, the DC-3 was

00:05:29.290 --> 00:05:33.820
based on an earlier
evolution of the DC-2.

00:05:33.820 --> 00:05:38.740
And I first saw this when
I worked in St. Louis.

00:05:38.740 --> 00:05:40.870
There was a little museum
at the headquarters.

00:05:40.870 --> 00:05:44.820
And they had like a, like
a nice plaque on the wall

00:05:44.820 --> 00:05:49.030
with actually a replica
of the contract.

00:05:49.030 --> 00:05:53.620
You know, the original letter
that left the DC-3 contract.

00:05:53.620 --> 00:05:56.830
And the story is that
this-- these requirements--

00:05:56.830 --> 00:05:57.510
these are--

00:05:57.510 --> 00:06:01.110
this is level 0 requirements,
what's written here,

00:06:01.110 --> 00:06:03.630
was hammered out
in a single quote,

00:06:03.630 --> 00:06:07.930
end quote marathon phone call
between Smith and Douglas.

00:06:07.930 --> 00:06:11.290
So Smith was, at that
time, the head of what

00:06:11.290 --> 00:06:13.600
was today essentially
United Airlines.

00:06:13.600 --> 00:06:16.630
And Douglas, who by the way, is
a graduate of this department

00:06:16.630 --> 00:06:21.820
here at MIT, Donald Douglas,
was the head of the Douglas

00:06:21.820 --> 00:06:23.260
Aircraft Company.

00:06:23.260 --> 00:06:27.040
And here are the requirements:
range about 1,000 miles.

00:06:27.040 --> 00:06:31.070
So this means that you don't
have a trans-continental range,

00:06:31.070 --> 00:06:31.570
right?

00:06:31.570 --> 00:06:33.730
If you want transcontinental
range in the US,

00:06:33.730 --> 00:06:35.080
you need about how many miles?

00:06:38.480 --> 00:06:43.080
Like Boston to San
Diego, Seattle to Miami.

00:06:43.080 --> 00:06:43.850
3,000?

00:06:43.850 --> 00:06:45.680
Yeah, reserves.

00:06:45.680 --> 00:06:47.420
Yeah, 3,000 miles.

00:06:47.420 --> 00:06:50.970
So this means that, if you go
transcontinental with the DC-3,

00:06:50.970 --> 00:06:53.460
you've got to refuel
twice, basically.

00:06:53.460 --> 00:06:55.360
But you know, that was OK.

00:06:55.360 --> 00:06:58.620
Today, we wouldn't-- we
probably wouldn't accept it.

00:06:58.620 --> 00:07:00.830
But that's OK back then.

00:07:00.830 --> 00:07:03.670
Cruise speed about 150 miles.

00:07:03.670 --> 00:07:07.130
20 to 30 passengers, depending
on the configuration.

00:07:07.130 --> 00:07:08.630
Twin engines.

00:07:08.630 --> 00:07:10.970
And then something that
we would say today.

00:07:10.970 --> 00:07:14.420
That's a fuzzy-- that's a not
a well written requirement,

00:07:14.420 --> 00:07:15.680
because it's fuzzy.

00:07:15.680 --> 00:07:19.440
But it said, it should be
a rugged and economical.

00:07:19.440 --> 00:07:21.710
And based on this sort of
high level requirements

00:07:21.710 --> 00:07:24.320
that were pretty
clearly defined,

00:07:24.320 --> 00:07:26.420
the airplane was
then designed, built,

00:07:26.420 --> 00:07:28.710
and very, very successful.

00:07:28.710 --> 00:07:34.560
And over 10,000 copies of
this airplane were built.

00:07:34.560 --> 00:07:38.870
So what happened since then
is the requirements explosion.

00:07:38.870 --> 00:07:42.080
This is a chart from
a document called

00:07:42.080 --> 00:07:46.160
the technical multi-disciplinary
design optimization

00:07:46.160 --> 00:07:48.290
white paper.

00:07:48.290 --> 00:07:51.500
And it's a little dated,
but the basic message here

00:07:51.500 --> 00:07:54.950
is pretty stunning if
you think about it.

00:07:54.950 --> 00:07:57.920
So first, heavier
than air flight,

00:07:57.920 --> 00:08:00.620
1903, the Wright
brothers, right?

00:08:00.620 --> 00:08:02.240
1G flight.

00:08:02.240 --> 00:08:06.530
What is the requirement
for 1G flight?

00:08:06.530 --> 00:08:07.940
Get off the ground.

00:08:07.940 --> 00:08:09.200
Get off the ground.

00:08:09.200 --> 00:08:12.470
And stay off the ground for
at least a few seconds, right?

00:08:12.470 --> 00:08:15.440
Not just ballistic.

00:08:15.440 --> 00:08:16.610
That's the requirement.

00:08:16.610 --> 00:08:17.840
Get off the ground.

00:08:17.840 --> 00:08:19.610
Heavier than air flight.

00:08:19.610 --> 00:08:20.900
Yeah, big success.

00:08:20.900 --> 00:08:22.440
Big milestone.

00:08:22.440 --> 00:08:27.380
Well, pretty clear after
not too long, it was well--

00:08:27.380 --> 00:08:29.054
we also want to turn.

00:08:29.054 --> 00:08:30.470
We don't want to
just fly straight

00:08:30.470 --> 00:08:36.510
on the beach and land again, so
maneuvering, gust acceleration.

00:08:36.510 --> 00:08:38.280
There are winds buffeting.

00:08:38.280 --> 00:08:39.840
You've got to
handle those gusts.

00:08:39.840 --> 00:08:42.090
So that that's important.

00:08:42.090 --> 00:08:44.810
And then what were the
first airplanes made of?

00:08:44.810 --> 00:08:47.050
Let's see an EPFL, guys.

00:08:47.050 --> 00:08:48.350
What's the first airplanes?

00:08:48.350 --> 00:08:50.874
What materials did they use?

00:08:50.874 --> 00:08:52.862
[STATIC]

00:08:52.862 --> 00:08:53.856
[INAUDIBLE]

00:08:53.856 --> 00:08:54.850
AUDIENCE: Wood.

00:08:54.850 --> 00:08:56.970
PROFESSOR: Wood, yeah.

00:08:56.970 --> 00:08:57.470
What else?

00:08:57.470 --> 00:08:58.178
AUDIENCE: Canvas.

00:08:58.178 --> 00:08:59.050
PROFESSOR: Canvas.

00:08:59.050 --> 00:09:01.730
AUDIENCE: [INAUDIBLE]

00:09:01.730 --> 00:09:02.630
PROFESSOR: Exactly.

00:09:02.630 --> 00:09:06.590
so then very soon after that,
maybe in the 20s and 30s,

00:09:06.590 --> 00:09:08.180
we started using metals, right?

00:09:08.180 --> 00:09:09.576
Metallic structures.

00:09:09.576 --> 00:09:11.450
And the big issue there,
especially if you're

00:09:11.450 --> 00:09:15.010
flying close to the
ocean and salt water,

00:09:15.010 --> 00:09:16.840
is corrosion control.

00:09:16.840 --> 00:09:18.740
Your airplanes can't rust.

00:09:18.740 --> 00:09:22.010
And so a corrosion
control became important.

00:09:22.010 --> 00:09:25.580
And pressurization,
what is that all about?

00:09:29.240 --> 00:09:31.020
Higher, faster.

00:09:31.020 --> 00:09:35.070
So at some point, you need to
pressurize the cabin, right?

00:09:35.070 --> 00:09:36.690
That's a new requirement.

00:09:36.690 --> 00:09:38.980
The Wright brothers
never thought about that.

00:09:38.980 --> 00:09:40.980
Well, they didn't-- maybe
they thought about it.

00:09:40.980 --> 00:09:43.900
But they certainly didn't have
to pressurize their Wright

00:09:43.900 --> 00:09:44.640
flyer.

00:09:44.640 --> 00:09:49.200
So you see you see what's
happening is we get greedy.

00:09:49.200 --> 00:09:50.520
You know, we were excited.

00:09:50.520 --> 00:09:51.580
We can fly now.

00:09:51.580 --> 00:09:52.930
But now we want to go higher.

00:09:52.930 --> 00:09:54.490
We want to stay longer.

00:09:54.490 --> 00:09:56.100
So we get greedy.

00:09:56.100 --> 00:09:59.050
And we go to more extreme
environments and so forth.

00:09:59.050 --> 00:10:04.230
And as we do that, it get
harvested do and more and more

00:10:04.230 --> 00:10:06.630
requirements start piling up.

00:10:06.630 --> 00:10:10.305
And you see a big step
here, World War II, right?

00:10:10.305 --> 00:10:12.990
Handling quality,
radar transparency.

00:10:12.990 --> 00:10:14.670
Radar was invented.

00:10:14.670 --> 00:10:16.290
So now you want to
have airplanes that

00:10:16.290 --> 00:10:19.880
are not visible on the radar.

00:10:19.880 --> 00:10:22.900
Fatigue, rough field landing.

00:10:22.900 --> 00:10:25.860
And then we have another big
step here in the 60s and 70s.

00:10:25.860 --> 00:10:30.300
This was during the Cold
War, smart weapons, nuclear,

00:10:30.300 --> 00:10:31.560
fly by wire, right?

00:10:31.560 --> 00:10:35.680
Replacing cables with
electronic flight controls.

00:10:35.680 --> 00:10:39.060
And then a lot of the
"ilitys" in the last 20 years,

00:10:39.060 --> 00:10:43.370
reducibility, affordability,
portability, et cetera.

00:10:43.370 --> 00:10:47.250
So if you actually look
at the requirements set

00:10:47.250 --> 00:10:49.200
for the new generation
of airplanes,

00:10:49.200 --> 00:10:52.960
whether commercial or
military, it's overwhelming.

00:10:52.960 --> 00:10:55.920
I mean, it's thousands and
thousands of requirements,

00:10:55.920 --> 00:10:58.440
because we've gotten greedy.

00:10:58.440 --> 00:10:59.970
And we've gotten good at it.

00:10:59.970 --> 00:11:01.926
So we keep adding
more requirements.

00:11:01.926 --> 00:11:03.300
And that's a big
issue right now.

00:11:03.300 --> 00:11:04.799
And we'll talk later
in the semester

00:11:04.799 --> 00:11:07.260
about complexity management.

00:11:07.260 --> 00:11:09.090
But the key message
here is requirements

00:11:09.090 --> 00:11:12.330
have been growing over time.

00:11:12.330 --> 00:11:14.460
More and more requirements
added as systems grow

00:11:14.460 --> 00:11:17.590
and in performance
and complexity.

00:11:17.590 --> 00:11:19.560
So here's some standards.

00:11:19.560 --> 00:11:21.270
I won't go through
those in detail.

00:11:21.270 --> 00:11:25.600
But people recognize, in the
system engineering community,

00:11:25.600 --> 00:11:27.940
how important it is,
these requirements.

00:11:27.940 --> 00:11:30.070
So in the system
engineering handbook,

00:11:30.070 --> 00:11:34.290
there's two sections, 4.2, which
is about technical requirements

00:11:34.290 --> 00:11:36.970
definition, and
then section 6.2,

00:11:36.970 --> 00:11:39.300
which is about
requirements management.

00:11:39.300 --> 00:11:42.180
So definition means that's
the initial definition

00:11:42.180 --> 00:11:43.710
of the initial requirement.

00:11:43.710 --> 00:11:45.510
And then management
is the process

00:11:45.510 --> 00:11:49.670
of updating them, adding
requirements, modifying them,

00:11:49.670 --> 00:11:51.530
making sure they're up to date.

00:11:51.530 --> 00:11:54.010
And there are a
couple of appendices.

00:11:54.010 --> 00:11:56.780
INCOSE, the International
Council of System Engineering

00:11:56.780 --> 00:11:59.570
has, in the handbook,
a whole section.

00:11:59.570 --> 00:12:01.970
There's even a requirement
working group, people

00:12:01.970 --> 00:12:05.150
who really specialize
in this, and then

00:12:05.150 --> 00:12:07.940
as well in the ISO
standard, you have a lot

00:12:07.940 --> 00:12:09.350
written about requirements.

00:12:09.350 --> 00:12:11.300
So this is really a big deal.

00:12:11.300 --> 00:12:13.520
So the last thing I want
to do here in this section

00:12:13.520 --> 00:12:17.180
is to sort of, at
a very high level,

00:12:17.180 --> 00:12:21.200
communicate to you what
requirement really are about.

00:12:21.200 --> 00:12:24.020
What they are about
is, like I said,

00:12:24.020 --> 00:12:25.880
don't set off in your
ship without-- you

00:12:25.880 --> 00:12:28.370
don't know what port
you're sailing to, right?

00:12:28.370 --> 00:12:31.340
So requirements set goals
and constrain the design

00:12:31.340 --> 00:12:32.960
in the objective space.

00:12:32.960 --> 00:12:35.150
So whatever you're
designing, you're

00:12:35.150 --> 00:12:38.180
always going to have two spaces
that you're dealing with.

00:12:38.180 --> 00:12:40.440
The design space,
on the one hand,

00:12:40.440 --> 00:12:44.000
that's the things you
can choose as a designer.

00:12:44.000 --> 00:12:45.620
These are the
knobs you can turn,

00:12:45.620 --> 00:12:47.150
the decisions you can make.

00:12:47.150 --> 00:12:48.650
And then the
objective space, which

00:12:48.650 --> 00:12:52.490
is the things that, essentially,
your customer cares about.

00:12:52.490 --> 00:12:55.800
I'll give you a
quick example here.

00:12:55.800 --> 00:12:59.510
So when we use the word shall,
which I'll get to in a minute.

00:12:59.510 --> 00:13:02.630
The English word, shall,
means this is essentially

00:13:02.630 --> 00:13:04.220
a constraint.

00:13:04.220 --> 00:13:06.310
You must accomplish this.

00:13:06.310 --> 00:13:11.180
And when you use the word,
should, it's more like a goal.

00:13:11.180 --> 00:13:12.650
It would be nice to do this.

00:13:12.650 --> 00:13:15.380
But it's not
absolutely mandatory.

00:13:15.380 --> 00:13:18.080
So shall is a hard constraint.

00:13:18.080 --> 00:13:22.050
Should it is
desirable as a goal.

00:13:22.050 --> 00:13:25.197
So let me give you this
quick example here.

00:13:25.197 --> 00:13:26.780
So let's say you're
designing a house.

00:13:26.780 --> 00:13:29.420
You're about setting
off to design a house.

00:13:29.420 --> 00:13:32.380
And what would be some
requirements for a house.

00:13:32.380 --> 00:13:34.670
So I wrote four of them here.

00:13:34.670 --> 00:13:38.840
And I'll map them to the design
space and the objective space.

00:13:38.840 --> 00:13:41.270
First requirement,
the house shall sleep

00:13:41.270 --> 00:13:43.580
between four and six people.

00:13:43.580 --> 00:13:45.740
Well, is that in
the design space

00:13:45.740 --> 00:13:46.857
or in the objective space?

00:13:49.660 --> 00:13:51.389
That's in the
objective space, right?

00:13:51.389 --> 00:13:52.180
Yeah, that's right.

00:13:52.180 --> 00:13:57.790
So here, we have an axis
called occupance, right?

00:13:57.790 --> 00:14:01.610
So four is the minimum and
six is sort of the maximum.

00:14:01.610 --> 00:14:03.730
So that's the upper bound.

00:14:03.730 --> 00:14:05.860
The next one, the
total build cost

00:14:05.860 --> 00:14:09.280
should be less than $550,000.

00:14:09.280 --> 00:14:10.990
Should be.

00:14:10.990 --> 00:14:13.180
What is that?

00:14:13.180 --> 00:14:15.702
Maybe an EPFL.

00:14:15.702 --> 00:14:17.602
AUDIENCE: It's a goal.

00:14:17.602 --> 00:14:18.560
PROFESSOR: It's a goal.

00:14:18.560 --> 00:14:19.720
Yup, that's right.

00:14:19.720 --> 00:14:22.540
And is it in the design
space or the objective space?

00:14:26.040 --> 00:14:27.617
AUDIENCE: The objective space.

00:14:27.617 --> 00:14:28.700
PROFESSOR: That's correct.

00:14:28.700 --> 00:14:33.050
So I put this as a dashed line,
OK, because it's a should.

00:14:33.050 --> 00:14:36.500
So what I've done here, just
by writing these two sentences,

00:14:36.500 --> 00:14:40.100
these two requirements, is I've
essentially carved out a space,

00:14:40.100 --> 00:14:40.600
right?

00:14:40.600 --> 00:14:42.740
And I can shape that box.

00:14:42.740 --> 00:14:44.600
Basically, what these
two requirements

00:14:44.600 --> 00:14:49.310
do is they put a box around
in the objective space saying

00:14:49.310 --> 00:14:51.770
that, whatever house
you're going to design,

00:14:51.770 --> 00:14:55.310
it has to fit within this box.

00:14:55.310 --> 00:14:59.420
Then the third one is the house
shall have at least at least

00:14:59.420 --> 00:15:01.000
three bedrooms.

00:15:01.000 --> 00:15:01.940
What is that?

00:15:01.940 --> 00:15:05.390
In the design space
or objective space?

00:15:05.390 --> 00:15:06.440
Design space, right?

00:15:06.440 --> 00:15:11.840
Because defining a bedroom
is a design decision, right?

00:15:11.840 --> 00:15:15.410
And the house should
have a fireplace.

00:15:15.410 --> 00:15:19.700
So you can show the lower bound
here, at least three bedrooms.

00:15:19.700 --> 00:15:23.540
And then the fireplace is a--

00:15:23.540 --> 00:15:24.680
it would be nice to have.

00:15:24.680 --> 00:15:27.290
But you don't absolutely
have to have it.

00:15:27.290 --> 00:15:29.260
So you can sort of draw this--

00:15:29.260 --> 00:15:31.010
it's more like a
line here, right?

00:15:31.010 --> 00:15:32.710
Yes, fireplace.

00:15:32.710 --> 00:15:34.280
But it's a dashed line.

00:15:34.280 --> 00:15:36.580
And then at least
three bedrooms.

00:15:36.580 --> 00:15:40.360
So just these four
sentences, we've now put a--

00:15:40.360 --> 00:15:43.760
we've defined the space that
we're going to be designing in.

00:15:43.760 --> 00:15:46.250
So we have constraints
in the design space.

00:15:46.250 --> 00:15:48.340
And we have constraints
in the objective space.

00:15:48.340 --> 00:15:51.240
And that's fundamentally
the role of requirement

00:15:51.240 --> 00:15:54.620
is to constrain, to give
us direction as to what

00:15:54.620 --> 00:15:57.550
we're going to design.

00:15:57.550 --> 00:16:02.240
OK, so let's do our first
concept question for today.

00:16:02.240 --> 00:16:05.000
And that's the
following question,

00:16:05.000 --> 00:16:07.880
do you think there's a
fundamental difference

00:16:07.880 --> 00:16:09.560
in the meaning
between the words,

00:16:09.560 --> 00:16:13.010
requirements, which we've
talked about so far,

00:16:13.010 --> 00:16:15.320
and then the word,
specifications,

00:16:15.320 --> 00:16:17.510
which I haven't mentioned yet.

00:16:17.510 --> 00:16:22.250
So no, you think they're
essentially the same.

00:16:22.250 --> 00:16:24.020
Yes, there is a difference.

00:16:24.020 --> 00:16:26.530
Requirements are like the
input, and specifications

00:16:26.530 --> 00:16:29.420
are the output of
the design process.

00:16:29.420 --> 00:16:31.070
Yes, you think a difference.

00:16:31.070 --> 00:16:35.550
Specifications include the
requirements as a subset.

00:16:35.550 --> 00:16:36.980
Or you're not sure.

00:16:36.980 --> 00:16:39.080
So think about this.

00:16:39.080 --> 00:16:41.600
And then submit your answers.

00:16:41.600 --> 00:16:44.180
And as far as these
URLs are concerned,

00:16:44.180 --> 00:16:46.940
for the concept questions,
I went to all lowercase.

00:16:46.940 --> 00:16:49.670
Hopefully, that's a
little bit easier.

00:16:49.670 --> 00:16:52.460
So secc3.

00:16:52.460 --> 00:16:54.890
tiny.cc/secc3.

00:16:54.890 --> 00:16:55.640
What do you think?

00:16:55.640 --> 00:16:58.920
Requirements and specifications.

00:16:58.920 --> 00:17:00.610
The same thing or not?

00:17:37.370 --> 00:17:38.270
Who needs more time?

00:17:38.270 --> 00:17:39.000
Anybody?

00:17:39.000 --> 00:17:39.500
OK.

00:17:52.880 --> 00:17:57.780
OK, so we have nobody
thinks they're the same.

00:17:57.780 --> 00:18:00.910
62 thirds of you think that
requirements are the input,

00:18:00.910 --> 00:18:02.930
specifications are the output.

00:18:02.930 --> 00:18:07.710
9 of you think that
requirements are a subset.

00:18:07.710 --> 00:18:09.540
And then 6% are not sure.

00:18:09.540 --> 00:18:11.370
So that's good.

00:18:11.370 --> 00:18:13.020
I agree with that.

00:18:13.020 --> 00:18:17.090
So a lot of people use
requirements and specifications

00:18:17.090 --> 00:18:18.060
as the same thing.

00:18:18.060 --> 00:18:19.130
They're really not.

00:18:19.130 --> 00:18:24.510
OK, so think of requirements
and you haven't actually

00:18:24.510 --> 00:18:25.710
started to design that.

00:18:25.710 --> 00:18:29.270
This is your putting
constraints in the design space,

00:18:29.270 --> 00:18:30.510
defining the direction.

00:18:30.510 --> 00:18:33.450
But we don't actually know
what the design will look like.

00:18:33.450 --> 00:18:37.680
You may have some requirements
may say you must use this box,

00:18:37.680 --> 00:18:40.050
or you must use
this sensor, right?

00:18:40.050 --> 00:18:43.170
And you might actually find
some of those in the CanSat.

00:18:43.170 --> 00:18:48.630
But basically the
requirements are the input.

00:18:48.630 --> 00:18:53.490
So any-- What are
your experiences?

00:18:53.490 --> 00:18:56.700
When have you heard those terms,
requirements or specifications

00:18:56.700 --> 00:19:01.140
used interchangeably
or not interchangeably?

00:19:01.140 --> 00:19:03.150
Has this come up as an
issue for you before?

00:19:08.710 --> 00:19:10.980
[? Marissa, ?]
you're worked at--

00:19:10.980 --> 00:19:13.940
you're worked on human
spaceflight, right?

00:19:13.940 --> 00:19:15.860
Space tourism vehicles.

00:19:15.860 --> 00:19:18.335
So what-- how did you guys
do it at Virgin Galactic?

00:19:20.936 --> 00:19:22.310
AUDIENCE: Well,
I think something

00:19:22.310 --> 00:19:24.620
that you generally saw was like
people will look at sensors.

00:19:24.620 --> 00:19:27.050
And they would-- there's a
specification for a sensor.

00:19:27.050 --> 00:19:29.600
And they would not necessarily
compare the requirements

00:19:29.600 --> 00:19:31.700
to the specification.

00:19:31.700 --> 00:19:34.700
So or they would not understand
how the two intersected.

00:19:34.700 --> 00:19:37.160
So I think there was a
bit of a misunderstanding

00:19:37.160 --> 00:19:39.760
of the difference between what
the actual requirements were,

00:19:39.760 --> 00:19:43.489
versus what the specifications
were designed to be.

00:19:43.489 --> 00:19:45.280
PROFESSOR: The sensors
you're talking about

00:19:45.280 --> 00:19:47.930
would be sensors, I'm assuming,
that you would purchase, right?

00:19:47.930 --> 00:19:49.000
As commercial--

00:19:49.000 --> 00:19:49.610
AUDIENCE: Yeah, absolutely.

00:19:49.610 --> 00:19:51.235
So I think we were
buying of the shelf.

00:19:51.235 --> 00:19:53.340
And so I mean, sometimes
the specifications

00:19:53.340 --> 00:19:54.800
were broader than what we
wanted and sometimes they

00:19:54.800 --> 00:19:55.650
were narrower.

00:19:55.650 --> 00:19:58.010
But you know, you can do
additional testing on it.

00:19:58.010 --> 00:20:00.343
So there was sometimes a
breakdown between understanding

00:20:00.343 --> 00:20:03.171
really whether the sensor met
what we are looking for or it

00:20:03.171 --> 00:20:03.670
didn't.

00:20:03.670 --> 00:20:04.801
PROFESSOR: OK.

00:20:04.801 --> 00:20:05.300
Good.

00:20:05.300 --> 00:20:08.210
What about an EPFL.

00:20:08.210 --> 00:20:11.101
Any experiences? [? Walker, ?]
you worked on slip rings,

00:20:11.101 --> 00:20:11.600
right?

00:20:11.600 --> 00:20:15.270
Slip rings was one of the big
specialties of your company.

00:20:15.270 --> 00:20:17.330
I'm assuming that
you guys had to make

00:20:17.330 --> 00:20:18.560
that distinction, right?

00:20:18.560 --> 00:20:20.990
Between requirements
and specifications.

00:20:20.990 --> 00:20:24.770
What are your thoughts
at EPFL on this?

00:20:24.770 --> 00:20:26.671
GUEST SPEAKER: Well,
yes, from outside,

00:20:26.671 --> 00:20:31.054
we clearly had a separation
also on an ether level.

00:20:31.054 --> 00:20:33.489
But I was wondering
here in the class,

00:20:33.489 --> 00:20:37.348
has anybody seen the difference
between specification

00:20:37.348 --> 00:20:38.775
requirements?

00:20:38.775 --> 00:20:39.316
Any comments?

00:20:39.316 --> 00:20:41.041
Maybe some of the
PhD students that

00:20:41.041 --> 00:20:43.290
have been around the block?

00:20:43.290 --> 00:21:18.020
AUDIENCE: [INAUDIBLE]

00:21:18.020 --> 00:21:20.150
PROFESSOR: Yeah, OK, great.

00:21:20.150 --> 00:21:23.570
So I found here, I,
you know, I wanted

00:21:23.570 --> 00:21:26.690
to sort of find a real
example that everybody can

00:21:26.690 --> 00:21:30.020
relate to very, very easily.

00:21:30.020 --> 00:21:32.300
So the answer is there
is a distinction.

00:21:32.300 --> 00:21:33.680
They are quite different.

00:21:33.680 --> 00:21:36.380
But they're-- got to be careful,
because you can mix them up.

00:21:36.380 --> 00:21:40.210
So requirements specify what
the product or system should--

00:21:40.210 --> 00:21:42.390
shall or should do, right?

00:21:42.390 --> 00:21:46.670
Functions it shall perform, how
well it should perform these.

00:21:46.670 --> 00:21:48.800
Also maybe the
degree of autonomy,

00:21:48.800 --> 00:21:50.210
how automated is the system?

00:21:50.210 --> 00:21:54.460
So what the operators must do,
when the system is operating.

00:21:54.460 --> 00:21:57.350
And also compatibility
with other devices.

00:21:57.350 --> 00:22:02.450
And then specifications are
about how the system is built

00:22:02.450 --> 00:22:04.130
and how it actually works.

00:22:04.130 --> 00:22:05.870
So the form, right?

00:22:05.870 --> 00:22:07.640
What the materials
that are used,

00:22:07.640 --> 00:22:11.240
the dimensions,
schematics, blueprints,

00:22:11.240 --> 00:22:13.650
the details of the
user interface.

00:22:13.650 --> 00:22:16.670
Those are things-- those
are all specifications.

00:22:16.670 --> 00:22:21.140
So I try to look up a very
simple consumer product

00:22:21.140 --> 00:22:26.300
that we all are familiar
with, a microwave oven.

00:22:26.300 --> 00:22:30.620
Kenmore Elite Countertop
2.2 cubic foot.

00:22:30.620 --> 00:22:32.720
You go to Sears website.

00:22:32.720 --> 00:22:36.660
And what's interesting is they
actually do a pretty good job.

00:22:36.660 --> 00:22:40.100
It's actually pretty consistent
with what I'm saying here,

00:22:40.100 --> 00:22:42.210
except they don't talk
about requirements.

00:22:42.210 --> 00:22:44.150
They call it description.

00:22:44.150 --> 00:22:46.740
So what's listed on
their description.

00:22:46.740 --> 00:22:50.390
And this is, I'm pretty
much quoting here, verbatim.

00:22:50.390 --> 00:22:54.770
This microwave is large enough
to accommodate the big dishes,

00:22:54.770 --> 00:22:55.270
right?

00:22:55.270 --> 00:22:59.240
So the idea is this is sort
of family style, right?

00:22:59.240 --> 00:23:03.860
This is not a small microwave
just for a frozen meals.

00:23:03.860 --> 00:23:06.950
This is-- you should be able
to put a big casserole in it.

00:23:06.950 --> 00:23:10.320
And reheat meals and so forth.

00:23:10.320 --> 00:23:14.150
So the idea that what
are the things you're

00:23:14.150 --> 00:23:15.440
going to use in the microwave.

00:23:15.440 --> 00:23:17.000
What's the use case, right?

00:23:17.000 --> 00:23:18.260
CONOPS.

00:23:18.260 --> 00:23:19.790
CONOPS for the microwave.

00:23:19.790 --> 00:23:25.320
You know, family, for kids,
both parents are working,

00:23:25.320 --> 00:23:27.950
busy, you know,
not time to spend

00:23:27.950 --> 00:23:29.800
two hours preparing dinner.

00:23:29.800 --> 00:23:32.300
Therefore, big dishes,
a lot of people.

00:23:32.300 --> 00:23:33.620
It has to be quick, right?

00:23:33.620 --> 00:23:36.710
That's a CONOPS.

00:23:36.710 --> 00:23:38.720
And the requirements,
this description,

00:23:38.720 --> 00:23:40.130
is essentially the requirement.

00:23:40.130 --> 00:23:43.130
1,200 watts of power
to reheat food quickly.

00:23:43.130 --> 00:23:45.200
So time is important.

00:23:45.200 --> 00:23:48.470
And then one touch settings
for different food types,

00:23:48.470 --> 00:23:50.302
rice, pizza, frozen meals.

00:23:50.302 --> 00:23:51.260
And that, what is that?

00:23:51.260 --> 00:23:52.910
That's automation, right?

00:23:52.910 --> 00:23:55.100
Rather than having to
guess how long and at what

00:23:55.100 --> 00:23:59.570
power level to reheat, there's
some partial automation

00:23:59.570 --> 00:24:00.260
built in.

00:24:00.260 --> 00:24:04.320
That's essentially
requirements, very user centric.

00:24:04.320 --> 00:24:05.600
Do you see that?

00:24:05.600 --> 00:24:07.780
And then when you look
under specification,

00:24:07.780 --> 00:24:11.230
it says the following things:
stainless steel exterior,

00:24:11.230 --> 00:24:11.730
right?

00:24:11.730 --> 00:24:13.350
Again, you don't
want it to rust.

00:24:13.350 --> 00:24:15.400
The dimensions, the weight.

00:24:15.400 --> 00:24:17.340
There's a general
warranty one year.

00:24:17.340 --> 00:24:19.740
The power cord is included.

00:24:19.740 --> 00:24:21.000
It's very different.

00:24:21.000 --> 00:24:24.690
Those are things that describe
how it's made, the form of it,

00:24:24.690 --> 00:24:25.540
and so forth.

00:24:25.540 --> 00:24:30.620
So make sure you
keep those separate.

00:24:30.620 --> 00:24:34.870
OK, so let me talk about the
NASA requirements process.

00:24:34.870 --> 00:24:37.680
And then we'll talk
about challenges.

00:24:37.680 --> 00:24:42.160
So getting back to the
system engineering engine.

00:24:42.160 --> 00:24:46.825
That's sort of the heart of
the NASA system engineering

00:24:46.825 --> 00:24:47.325
process.

00:24:47.325 --> 00:24:50.320
You remember, this is the--

00:24:50.320 --> 00:24:53.280
this happens at every
level of decomposition.

00:24:53.280 --> 00:24:55.930
After stakeholder expectations.

00:24:55.930 --> 00:24:59.850
The second step is technical
requirements definition.

00:24:59.850 --> 00:25:02.520
And there's some pretty strong
language in the handbook

00:25:02.520 --> 00:25:04.800
that this really
has to be done well.

00:25:04.800 --> 00:25:07.680
So the center directors
or their designees

00:25:07.680 --> 00:25:10.260
shall establish and
maintain a process

00:25:10.260 --> 00:25:12.750
to include activities,
requirements, guidelines,

00:25:12.750 --> 00:25:18.730
documentation for the definition
of technical requirements.

00:25:18.730 --> 00:25:20.800
So I think I've
already said this,

00:25:20.800 --> 00:25:23.655
but I just want to make it
clear again, this is kind of--

00:25:23.655 --> 00:25:24.870
I like this cartoon.

00:25:24.870 --> 00:25:26.580
This is Moses, right?

00:25:26.580 --> 00:25:27.480
Up on thee--

00:25:27.480 --> 00:25:30.600
Moses just got the
tablets, right?

00:25:30.600 --> 00:25:31.770
The stone tablets.

00:25:31.770 --> 00:25:34.800
They-- the 10 commandments.

00:25:34.800 --> 00:25:37.740
And one of them is,
thou shalt not steal.

00:25:37.740 --> 00:25:40.290
And God says, out of
the clouds, no, they're

00:25:40.290 --> 00:25:42.900
requirements, not goals, right?

00:25:42.900 --> 00:25:49.045
So what God is saying is that
the 10 commandments are, shall,

00:25:49.045 --> 00:25:50.410
right?

00:25:50.410 --> 00:25:52.500
And not should.

00:25:52.500 --> 00:25:56.510
Even though, I think, some of
us don't always succeed at that.

00:25:56.510 --> 00:25:59.420
But that's basically the idea.

00:25:59.420 --> 00:26:03.000
Shall is a very hard constraint.

00:26:03.000 --> 00:26:05.160
And that's what you
will be judged against.

00:26:05.160 --> 00:26:09.330
And should is essentially
a desirable goal.

00:26:09.330 --> 00:26:16.920
But the degree of attainment
is somewhat flexible.

00:26:16.920 --> 00:26:18.340
Why are we doing this?

00:26:18.340 --> 00:26:22.180
Why are we spending our time
writing technical requirements?

00:26:22.180 --> 00:26:26.160
It's essentially to transform
those stakeholder expectations

00:26:26.160 --> 00:26:28.590
we talked about last
time, transform them

00:26:28.590 --> 00:26:31.860
into measurable
technical requirements.

00:26:31.860 --> 00:26:33.700
Requirements come in
different flavors.

00:26:33.700 --> 00:26:35.560
And I'll mention those flavors.

00:26:35.560 --> 00:26:40.790
And we express them in
these shall statements.

00:26:40.790 --> 00:26:43.080
They also provide a
basis for agreement

00:26:43.080 --> 00:26:45.360
among the stakeholders
and developers.

00:26:45.360 --> 00:26:49.230
So you will often find
requirements part of contracts,

00:26:49.230 --> 00:26:50.610
right?

00:26:50.610 --> 00:26:54.240
Now it becomes serious, you
know when the requirements set

00:26:54.240 --> 00:26:56.060
actually has legal implications.

00:26:56.060 --> 00:26:59.010
You're legally signing up
to develop a system that

00:26:59.010 --> 00:27:01.200
will meet these requirements.

00:27:01.200 --> 00:27:04.370
That's pretty serious stuff.

00:27:04.370 --> 00:27:06.510
By writing good
technical requirements,

00:27:06.510 --> 00:27:10.530
you can reduce the development
effort, because of less rework.

00:27:10.530 --> 00:27:13.760
So a lot of rework and
iterations and confusion

00:27:13.760 --> 00:27:17.510
is based on missing or poorly
written requirement, right?

00:27:17.510 --> 00:27:21.240
And writing those early and
before the design begins

00:27:21.240 --> 00:27:23.160
is helpful.

00:27:23.160 --> 00:27:26.640
A requirements set is also a
basis for cost and schedule

00:27:26.640 --> 00:27:28.120
estimates.

00:27:28.120 --> 00:27:30.770
And so some of these
missions that overran.

00:27:30.770 --> 00:27:33.300
Do you remember I showed
you this chart last time.

00:27:33.300 --> 00:27:37.680
We analyzed 40 missions, earth
and space science missions.

00:27:37.680 --> 00:27:41.285
Like 20% of them were
responsible for 80%

00:27:41.285 --> 00:27:42.600
of the overruns.

00:27:42.600 --> 00:27:45.720
A lot of that had to do
with unrealistic goals

00:27:45.720 --> 00:27:50.370
or expectations
and requirements.

00:27:50.370 --> 00:27:54.360
And then the next point here is
that the requirements provide

00:27:54.360 --> 00:27:56.610
the basis for verification.

00:27:56.610 --> 00:27:58.650
In other words, the
better, the more

00:27:58.650 --> 00:28:01.780
crisp, the better written
your requirements are,

00:28:01.780 --> 00:28:04.860
the easier it is
to test the system

00:28:04.860 --> 00:28:07.170
and to check whether these--

00:28:07.170 --> 00:28:09.540
whether the system
is in compliance

00:28:09.540 --> 00:28:11.040
with the requirements.

00:28:11.040 --> 00:28:13.800
And then, eventually,
the basis for acceptance.

00:28:13.800 --> 00:28:16.650
Acceptance is also
a big deal, right?

00:28:16.650 --> 00:28:19.470
It basically means,
I accept your design.

00:28:19.470 --> 00:28:21.210
I take ownership of it.

00:28:21.210 --> 00:28:24.120
And I say, you, as the
developer of the system,

00:28:24.120 --> 00:28:25.680
have done your job properly.

00:28:25.680 --> 00:28:29.130
And there's a legal transfer
of the assets that happens.

00:28:29.130 --> 00:28:34.870
So facilitates the transfer
of the product to the users.

00:28:34.870 --> 00:28:36.780
And then even later,
if you're going

00:28:36.780 --> 00:28:38.820
to do it like a
version 2 or a block

00:28:38.820 --> 00:28:41.120
upgrade, a next
generation product,

00:28:41.120 --> 00:28:44.400
it's much easier to do when
you have a clear requirements,

00:28:44.400 --> 00:28:47.430
because it tells you what the
original system or the earlier

00:28:47.430 --> 00:28:51.790
version was able
to do or not do.

00:28:51.790 --> 00:28:52.750
Graphically.

00:28:52.750 --> 00:28:56.210
So this is figure 4.0.1.

00:28:56.210 --> 00:28:58.940
I briefly talked
about this last time.

00:28:58.940 --> 00:29:02.010
We start, essentially,
here at the development.

00:29:02.010 --> 00:29:03.870
We have mission authority.

00:29:03.870 --> 00:29:05.880
We do the stakeholder
expectations.

00:29:05.880 --> 00:29:07.770
We talked about that last time.

00:29:07.770 --> 00:29:11.070
And then here, right away,
comes a high level requirement.

00:29:11.070 --> 00:29:15.220
So that means your level
0, level 1 requirement.

00:29:15.220 --> 00:29:20.990
And then as you try to get more
detailed in the requirements,

00:29:20.990 --> 00:29:23.590
what do you think happens?

00:29:23.590 --> 00:29:25.690
Ideally, you want to
write all the requirements

00:29:25.690 --> 00:29:26.470
upfront, right?

00:29:26.470 --> 00:29:27.750
That would be great.

00:29:27.750 --> 00:29:32.082
But you try to do
that, you hit a wall.

00:29:32.082 --> 00:29:34.470
Why is that?

00:29:34.470 --> 00:29:36.030
What's the issue?

00:29:36.030 --> 00:29:38.250
Why can't we just write
all the requirements

00:29:38.250 --> 00:29:40.330
and then be done
with it in one shot?

00:29:40.330 --> 00:29:40.830
Yes.

00:29:40.830 --> 00:29:42.170
Go ahead.

00:29:42.170 --> 00:29:44.100
AUDIENCE: Well, your
system changes over time.

00:29:44.100 --> 00:29:45.700
And some of the
requirements clash.

00:29:45.700 --> 00:29:48.444
And you can't achieve all
of them simultaneously.

00:29:48.444 --> 00:29:50.610
PROFESSOR: Yes. so there's
two things you mentioned.

00:29:50.610 --> 00:29:52.187
So one is the sort of--

00:29:52.187 --> 00:29:52.770
and I'll talk.

00:29:52.770 --> 00:29:55.120
This is known as,
requirements volatility,

00:29:55.120 --> 00:29:57.510
like the requirements are
changing as you learn more

00:29:57.510 --> 00:29:58.740
about the problem.

00:29:58.740 --> 00:30:02.370
And then the other is you detect
conflict between requirements.

00:30:02.370 --> 00:30:04.550
And you have to clean those up.

00:30:04.550 --> 00:30:06.840
Those are two very valid issues.

00:30:06.840 --> 00:30:09.360
But it's not quite
what I was going for.

00:30:09.360 --> 00:30:12.060
AUDIENCE: There's another
one, requirements creep,

00:30:12.060 --> 00:30:15.540
in which your customer levies
these new requirements on you,

00:30:15.540 --> 00:30:16.950
once you've started the process.

00:30:16.950 --> 00:30:19.540
PROFESSOR: Yes, so new
requirements get added.

00:30:19.540 --> 00:30:22.764
Hopefully, you get
more budget, too.

00:30:22.764 --> 00:30:24.180
That doesn't always
happen, right?

00:30:24.180 --> 00:30:26.100
So that's another issue.

00:30:26.100 --> 00:30:27.550
But it's a little different.

00:30:27.550 --> 00:30:29.600
Let's see, EPFL, you guys.

00:30:29.600 --> 00:30:32.700
Why don't we write like all four
or five levels of requirements

00:30:32.700 --> 00:30:34.260
all at once?

00:30:34.260 --> 00:30:36.990
Why can't we do that, typically?

00:30:36.990 --> 00:30:38.844
Why do you think?

00:30:38.844 --> 00:30:42.610
AUDIENCE: Usually, the other
requirements aren't clear.

00:30:42.610 --> 00:30:44.560
They don't exist yet.

00:30:44.560 --> 00:30:47.490
Later on in the process,
they become clear.

00:30:47.490 --> 00:30:50.250
And you start to realize
the details, which at first,

00:30:50.250 --> 00:30:51.259
you don't.

00:30:51.259 --> 00:30:53.550
PROFESSOR: That's-- I think
that's pretty close to what

00:30:53.550 --> 00:30:54.370
I'm looking for.

00:30:54.370 --> 00:30:58.980
So the issue is you do your
level 0, level 1 requirements.

00:30:58.980 --> 00:31:01.860
And then sort of as
you get to level 2,

00:31:01.860 --> 00:31:04.710
you can't really write
that level 2 requirement

00:31:04.710 --> 00:31:08.040
until you've made some
key design decisions.

00:31:08.040 --> 00:31:10.890
Are we going to use electric
propulsion or are we going

00:31:10.890 --> 00:31:12.870
to use chemical propulsion?

00:31:12.870 --> 00:31:16.290
You know, that's a huge
decision in space system design.

00:31:16.290 --> 00:31:19.770
And unless you've
made that decision,

00:31:19.770 --> 00:31:22.560
you can't really write
lower level requirements,

00:31:22.560 --> 00:31:25.860
because the fundamental
working principles

00:31:25.860 --> 00:31:29.580
of chemical and electrical
propulsion are quite different.

00:31:29.580 --> 00:31:33.390
So that's the key issue is that
you can only do the high level

00:31:33.390 --> 00:31:38.310
requirements in a
solution neutral space.

00:31:38.310 --> 00:31:40.320
And then you hit the
wall, because you've

00:31:40.320 --> 00:31:45.750
got to make some key concept
technology selection decision.

00:31:45.750 --> 00:31:47.640
And that's shown
here by this red box

00:31:47.640 --> 00:31:50.670
called functional and
logical composition.

00:31:50.670 --> 00:31:54.140
I don't like that
nomenclature a lot.

00:31:54.140 --> 00:31:56.490
This should really say,
system architecture

00:31:56.490 --> 00:31:58.440
or concept selection,
which we'll get

00:31:58.440 --> 00:32:01.110
into in the next couple weeks.

00:32:01.110 --> 00:32:04.200
Once you've chosen a high
level architecture and concept,

00:32:04.200 --> 00:32:08.222
then you say, OK, we're going
to go for ion propulsion.

00:32:08.222 --> 00:32:09.930
Well, then you can
write the requirements

00:32:09.930 --> 00:32:13.620
for the ion propulsion
system, which

00:32:13.620 --> 00:32:18.210
are we through the find
in this yellow box here.

00:32:18.210 --> 00:32:20.340
So this is your design
and product structure,

00:32:20.340 --> 00:32:23.910
derived an allocated
requirements at lower levels.

00:32:23.910 --> 00:32:25.430
You see that?

00:32:25.430 --> 00:32:28.140
That's the fundament--
all the things you said,

00:32:28.140 --> 00:32:30.390
requirements creep
requirements conflict.

00:32:33.420 --> 00:32:35.170
All those things are true.

00:32:35.170 --> 00:32:36.750
But the fundamental
reason why we

00:32:36.750 --> 00:32:38.700
can't write all the
requirements upfront,

00:32:38.700 --> 00:32:42.240
because, at some point, the
lower level requirements depend

00:32:42.240 --> 00:32:44.880
on design decisions made.

00:32:44.880 --> 00:32:47.910
That's the fundamental issue.

00:32:47.910 --> 00:32:51.480
OK, any questions
about that point?

00:32:51.480 --> 00:32:52.947
Yes?

00:32:52.947 --> 00:32:54.780
AUDIENCE: It's not
totally about that point.

00:32:54.780 --> 00:32:55.654
But it's still like--

00:32:55.654 --> 00:32:57.600
So requirements
versus specification.

00:32:57.600 --> 00:33:00.630
So if you're like
buying a component

00:33:00.630 --> 00:33:02.460
from a vendor, some
piece of hardware,

00:33:02.460 --> 00:33:04.876
and you want identify like
the specific locations

00:33:04.876 --> 00:33:06.250
where it should
attach to things,

00:33:06.250 --> 00:33:09.042
it's more of like a form
as opposed to really--

00:33:09.042 --> 00:33:10.500
so does that fall
into requirements

00:33:10.500 --> 00:33:11.550
or is that like a specification?

00:33:11.550 --> 00:33:12.040
PROFESSOR: Great point.

00:33:12.040 --> 00:33:13.950
So there are-- what
you're describing

00:33:13.950 --> 00:33:16.230
is a peculiar type
of requirement

00:33:16.230 --> 00:33:18.240
that we call interface
requirements.

00:33:18.240 --> 00:33:21.930
And it's a perfect
segue to this next--

00:33:21.930 --> 00:33:23.310
you know, if I
could only include

00:33:23.310 --> 00:33:26.650
like I don't five
slides in this lecture,

00:33:26.650 --> 00:33:28.920
this would be one of them.

00:33:28.920 --> 00:33:31.450
This basically is what
are the different flavors

00:33:31.450 --> 00:33:33.400
of requirements or
types of requirements.

00:33:33.400 --> 00:33:35.920
And there are six of them here.

00:33:35.920 --> 00:33:38.050
So first of all, the
functional requirements.

00:33:38.050 --> 00:33:40.050
I think we've sort of
talked about those, right?

00:33:40.050 --> 00:33:42.870
Define the functions that
need to be done to accomplish

00:33:42.870 --> 00:33:44.630
the mission objectives.

00:33:44.630 --> 00:33:48.490
There's some examples here
around thrust vector control.

00:33:48.490 --> 00:33:50.310
So basically, the
idea here is that you

00:33:50.310 --> 00:33:51.570
have a thrusting system.

00:33:51.570 --> 00:33:56.420
And it has or you can
actually direct the thrust.

00:33:56.420 --> 00:33:59.130
And in this case, you
should control the thrust.

00:33:59.130 --> 00:34:03.420
You shall provide thrust control
around pitch and your axes.

00:34:03.420 --> 00:34:06.360
So this statement is a high
level functional statement.

00:34:06.360 --> 00:34:11.429
And it's written in the actor
verb, object form, right?

00:34:11.429 --> 00:34:14.080
So that's sort of the
classic, you know,

00:34:14.080 --> 00:34:16.409
the classic requirement and
the functional requirement.

00:34:16.409 --> 00:34:19.010
And then we have
performance requirements.

00:34:19.010 --> 00:34:20.960
The performance requirements
are, in a sense,

00:34:20.960 --> 00:34:24.719
qualifiers on the
functional requirements.

00:34:24.719 --> 00:34:26.460
So a performance
requirement will

00:34:26.460 --> 00:34:31.770
specify how well the
function should be performed,

00:34:31.770 --> 00:34:34.679
how fast should it
fly, how much thrust.

00:34:34.679 --> 00:34:38.230
You know, this is where you
have to actually put numbers in.

00:34:38.230 --> 00:34:41.780
So in this case, this
thrust vector controller

00:34:41.780 --> 00:34:47.040
shall gimbal the engine
9 degrees, right?

00:34:47.040 --> 00:34:50.280
That's the deflection
angle, at least 9 degrees,

00:34:50.280 --> 00:34:52.229
plus or minus 1 degree, degree.

00:34:52.229 --> 00:34:53.250
0.1 degree.

00:34:53.250 --> 00:34:56.820
That's the performance
requirement.

00:34:56.820 --> 00:34:59.170
Then we have constraints.

00:34:59.170 --> 00:35:02.000
OK, yeah?

00:35:02.000 --> 00:35:04.000
STUDENT: Isn't the
performance department saying

00:35:04.000 --> 00:35:05.940
that the engine has
to gimbal 9 degrees,

00:35:05.940 --> 00:35:08.550
isn't that kind of pushing
toward the specification.

00:35:08.550 --> 00:35:09.400
Or is that?

00:35:09.400 --> 00:35:11.420
I mean, I guess, is can
also be a requirement.

00:35:11.420 --> 00:35:12.480
But isn't that?

00:35:12.480 --> 00:35:15.570
PROFESSOR: Right, in
this case, we have a set,

00:35:15.570 --> 00:35:20.610
and we're not specifying how
those 9 degrees are achieved,

00:35:20.610 --> 00:35:27.090
you know, whether it's through
a gimbal or the actual mechanism

00:35:27.090 --> 00:35:29.280
or how it's not described here.

00:35:29.280 --> 00:35:31.690
All that's described is
the angular [? range, ?]

00:35:31.690 --> 00:35:33.110
essentially, that this.

00:35:33.110 --> 00:35:36.760
And that is a
performance requirement.

00:35:36.760 --> 00:35:38.820
But you'll see, there
will be some examples

00:35:38.820 --> 00:35:42.630
of things that are putting
limits on the form, which looks

00:35:42.630 --> 00:35:44.640
more like a specification.

00:35:44.640 --> 00:35:46.440
So then we have constraints.

00:35:46.440 --> 00:35:52.362
Constraints are things on
like weight, mass, power,

00:35:52.362 --> 00:35:53.070
things like that.

00:35:53.070 --> 00:35:56.070
So constraints are requirements
that cannot be traded off with

00:35:56.070 --> 00:35:58.450
respect that cost,
schedule, or performance.

00:35:58.450 --> 00:36:03.300
So for example, the prospector
controller unit module

00:36:03.300 --> 00:36:06.210
shall weigh less
than 120 pounds.

00:36:06.210 --> 00:36:08.860
So that's a-- that's not,
if you think about it,

00:36:08.860 --> 00:36:10.770
that is not functional, right?

00:36:10.770 --> 00:36:16.190
The weight of the
thrust vector controller

00:36:16.190 --> 00:36:20.450
shall not be more than 100--
that is not performance.

00:36:20.450 --> 00:36:23.120
It's not functional requirement,
but it's a constraint

00:36:23.120 --> 00:36:24.860
on the form, essentially.

00:36:24.860 --> 00:36:28.570
So this looks more like what
we would call a specification

00:36:28.570 --> 00:36:30.230
constraint.

00:36:30.230 --> 00:36:32.390
The fourth one is what
[? Marissa ?] brought up.

00:36:32.390 --> 00:36:34.580
This is an interface
requirement.

00:36:34.580 --> 00:36:38.510
OK, so in this case, our
thrust vector controller

00:36:38.510 --> 00:36:42.560
shall interface with
the J-2x The J-2x is

00:36:42.560 --> 00:36:44.400
a very famous engine.

00:36:44.400 --> 00:36:48.120
And J-2x is a kind of--

00:36:48.120 --> 00:36:50.060
this is sort of,
this was written

00:36:50.060 --> 00:36:53.150
during the constellation days
of the constellation program

00:36:53.150 --> 00:36:57.500
at NASA is the idea of a new
generation of the J-2 engine.

00:36:57.500 --> 00:37:00.500
So the idea is that
whatever you do,

00:37:00.500 --> 00:37:03.590
however you design your
thrust vector controller,

00:37:03.590 --> 00:37:07.670
it must be able to interface
with the J-2x engine,

00:37:07.670 --> 00:37:10.490
according to
conditions specified

00:37:10.490 --> 00:37:13.890
in this interface
control document.

00:37:13.890 --> 00:37:18.230
So this is called an
interface requirement.

00:37:18.230 --> 00:37:22.050
Then the fifth category are
environmental requirements.

00:37:22.050 --> 00:37:27.120
So the TVC shall use [? Biber ?]
acoustic shocks and loads

00:37:27.120 --> 00:37:30.020
according, again, to some
environmental document.

00:37:30.020 --> 00:37:32.300
And by the way, for
the CanSat competition,

00:37:32.300 --> 00:37:33.300
we have that, right?

00:37:33.300 --> 00:37:34.640
There's two documents.

00:37:34.640 --> 00:37:36.080
There's the mission guide.

00:37:36.080 --> 00:37:38.660
And then there's this
environmental testing guide.

00:37:38.660 --> 00:37:43.930
So what this essentially says
is under what conditions shall

00:37:43.930 --> 00:37:46.860
the performance,
and functional--

00:37:46.860 --> 00:37:48.950
the functions and
performance that

00:37:48.950 --> 00:37:50.960
are specified in
the first two type

00:37:50.960 --> 00:37:54.350
of requirements, under
what conditions shall that

00:37:54.350 --> 00:37:56.300
be performed, right?

00:37:56.300 --> 00:37:58.340
And if anything
you think about it,

00:37:58.340 --> 00:38:01.640
designing whether it's
a sensor or anything

00:38:01.640 --> 00:38:07.880
to operate between 0 degrees
Celsius and 30 degrees Celsius

00:38:07.880 --> 00:38:13.400
or between minus 60 and plus
80, is a huge difference, right?

00:38:13.400 --> 00:38:15.350
You can write that down.

00:38:15.350 --> 00:38:18.170
But what that actually
means to open up

00:38:18.170 --> 00:38:21.200
the range of
environmental conditions,

00:38:21.200 --> 00:38:23.330
it has a big, big
impact on the design.

00:38:23.330 --> 00:38:25.970
And so this is a big
deal in practice.

00:38:25.970 --> 00:38:29.797
And then, at least in
Space Systems design,

00:38:29.797 --> 00:38:31.880
you know a lot of these
environmental requirements

00:38:31.880 --> 00:38:35.930
are of course, driven by the
space environment or the launch

00:38:35.930 --> 00:38:36.980
environment.

00:38:36.980 --> 00:38:39.530
If you're designing
airplanes, whether you're

00:38:39.530 --> 00:38:42.140
flying in a small mountainous
country like Switzerland

00:38:42.140 --> 00:38:45.320
or on the ocean off of
an aircraft carrier,

00:38:45.320 --> 00:38:47.539
those are very
different environments.

00:38:47.539 --> 00:38:48.830
And they're going to influence.

00:38:48.830 --> 00:38:51.050
You have to specify the
operating requirement.

00:38:51.050 --> 00:38:53.480
The bigger the
envelope that you make

00:38:53.480 --> 00:38:56.780
for the environmental
requirements, the more complex

00:38:56.780 --> 00:38:59.120
the system will be.

00:38:59.120 --> 00:39:04.505
Also medical-- anybody working
on medical devices here?

00:39:04.505 --> 00:39:05.340
EPFL.

00:39:05.340 --> 00:39:05.960
Anybody?

00:39:05.960 --> 00:39:07.940
Medical devices?

00:39:07.940 --> 00:39:11.030
So in medical devices,
it's the same thing.

00:39:11.030 --> 00:39:12.680
Is this medical
device going to be

00:39:12.680 --> 00:39:15.100
used in a hospital
setting, where

00:39:15.100 --> 00:39:16.910
everything is kind of clean.

00:39:16.910 --> 00:39:19.190
You have clean power.

00:39:19.190 --> 00:39:21.980
The nurses, everybody
is very well-trained.

00:39:21.980 --> 00:39:22.800
That's one thing.

00:39:22.800 --> 00:39:26.510
Or is his medical device
going to be used in the field,

00:39:26.510 --> 00:39:27.580
you know?

00:39:27.580 --> 00:39:31.670
In Africa, in India, in a rural
area, where people are not,

00:39:31.670 --> 00:39:35.090
maybe not trained, medically
and professionally and so forth.

00:39:35.090 --> 00:39:35.910
Very different.

00:39:35.910 --> 00:39:37.890
The function may be the same.

00:39:37.890 --> 00:39:40.130
But the environmental
conditions are very different.

00:39:40.130 --> 00:39:43.130
You have to really
specify those.

00:39:43.130 --> 00:39:46.460
And then we have-- the last
category is kind of the other.

00:39:46.460 --> 00:39:49.220
It's sort of a catchall.

00:39:49.220 --> 00:39:51.210
But it can be very important.

00:39:51.210 --> 00:39:54.980
So this includes a lot of the
human factors, reliability

00:39:54.980 --> 00:39:56.390
and safety requirements.

00:39:56.390 --> 00:39:59.900
Those are-- and you know,
they're listed here as other.

00:39:59.900 --> 00:40:01.340
And I think it's
really important

00:40:01.340 --> 00:40:04.820
to say that just because
they're listed here

00:40:04.820 --> 00:40:06.410
doesn't mean they're
less important.

00:40:06.410 --> 00:40:09.740
These are often
neglected, unfortunately.

00:40:09.740 --> 00:40:12.360
And it really can hurt
you in the long term.

00:40:12.360 --> 00:40:16.070
So pay attention to those
human factors, reliability,

00:40:16.070 --> 00:40:17.540
and safety requirements.

00:40:17.540 --> 00:40:22.250
So six types of requirements.

00:40:22.250 --> 00:40:25.220
So let's talk about what
makes good or acceptable

00:40:25.220 --> 00:40:26.810
requirements.

00:40:26.810 --> 00:40:30.500
And there's a distinction here
between a single requirement

00:40:30.500 --> 00:40:33.050
statement and then
sets of a requirements.

00:40:33.050 --> 00:40:35.480
So first of all,
requirements should

00:40:35.480 --> 00:40:37.670
be written in natural language.

00:40:37.670 --> 00:40:41.480
They should be
complete sentences.

00:40:41.480 --> 00:40:44.600
And each of the
requirement statements

00:40:44.600 --> 00:40:52.010
should be clear and consistent,
meaning that it's not a novel

00:40:52.010 --> 00:40:54.260
or it's not a poem.

00:40:54.260 --> 00:40:55.100
But it's clear.

00:40:55.100 --> 00:40:56.240
It's understandable.

00:40:56.240 --> 00:40:57.890
It's well-written.

00:40:57.890 --> 00:40:58.730
It's correct.

00:40:58.730 --> 00:40:59.930
There's no errors in it.

00:40:59.930 --> 00:41:00.980
It's feasible.

00:41:00.980 --> 00:41:02.780
Now that's a really tricky one.

00:41:02.780 --> 00:41:06.170
That's the first thing
here that's really tricky,

00:41:06.170 --> 00:41:07.490
when you think about it.

00:41:07.490 --> 00:41:09.140
Feasible means, what?

00:41:09.140 --> 00:41:12.680
It means this requirement
can be satisfied

00:41:12.680 --> 00:41:17.120
within the laws of physics and
state of the art technologies

00:41:17.120 --> 00:41:18.680
and other project constraints.

00:41:18.680 --> 00:41:22.022
So why is that a tricky one?

00:41:22.022 --> 00:41:23.960
Go ahead.

00:41:23.960 --> 00:41:26.270
AUDIENCE: I was going to ask
a question regarding that,

00:41:26.270 --> 00:41:29.120
in terms of how do you
deal with a program

00:41:29.120 --> 00:41:31.360
where you're working
on things or you're

00:41:31.360 --> 00:41:34.160
trying to actually maybe
define the state of the art

00:41:34.160 --> 00:41:37.220
or figure out what is feasible.

00:41:37.220 --> 00:41:38.060
PROFESSOR: Right.

00:41:38.060 --> 00:41:41.720
so if you're basically
designing a product or a project

00:41:41.720 --> 00:41:46.010
or a system that's a repeat
of what's already been done,

00:41:46.010 --> 00:41:49.160
then you can have pretty
good confidence, right,

00:41:49.160 --> 00:41:51.230
that those poles are feasible.

00:41:51.230 --> 00:41:55.121
But what if you're
doing, let's say the--

00:41:55.121 --> 00:41:57.110
I think I mentioned
this last time.

00:41:57.110 --> 00:41:58.880
You're going to Europa.

00:41:58.880 --> 00:42:00.980
And you're going to
drill through the ice.

00:42:00.980 --> 00:42:03.980
And you're going to explore the
ocean under the ice in Europa.

00:42:03.980 --> 00:42:05.720
It's never been done before.

00:42:05.720 --> 00:42:07.370
You know, can we
actually do this?

00:42:07.370 --> 00:42:09.920
So this is the tricky thing.

00:42:09.920 --> 00:42:13.400
How ambitious, how ambitious
can the requirements

00:42:13.400 --> 00:42:16.040
be and you still
claim feasibility?

00:42:16.040 --> 00:42:18.380
And that's also one
of the big reasons

00:42:18.380 --> 00:42:21.210
why programs get in trouble
is when they're actually

00:42:21.210 --> 00:42:26.870
defining requirements that are
not really feasible within--

00:42:26.870 --> 00:42:29.060
they're definitely way
beyond the state of the art.

00:42:29.060 --> 00:42:32.900
And within the time frame
and budget allocated,

00:42:32.900 --> 00:42:34.460
you can't get there.

00:42:34.460 --> 00:42:37.430
And many, many programs
that run into this problem

00:42:37.430 --> 00:42:39.650
are the ones where
the technologies

00:42:39.650 --> 00:42:42.570
that you're going to use
are not really ready yet.

00:42:42.570 --> 00:42:45.260
You know, there-- we'll
talk later about technology

00:42:45.260 --> 00:42:47.020
readiness levels scale.

00:42:47.020 --> 00:42:49.730
You're not really
ready yet to do this,

00:42:49.730 --> 00:42:51.830
but you're going to try anyway.

00:42:51.830 --> 00:42:54.530
So that's a tricky
one, feasibility.

00:42:54.530 --> 00:42:57.920
Flexibility is, you
know, don't over specify

00:42:57.920 --> 00:42:59.010
how things should be done.

00:42:59.010 --> 00:43:01.850
So don't say how it
should be satisfied.

00:43:01.850 --> 00:43:02.990
Without ambiguity.

00:43:02.990 --> 00:43:06.320
That means if 10 people
read this requirement,

00:43:06.320 --> 00:43:10.390
they should have the same or
very similar interpretation.

00:43:10.390 --> 00:43:13.350
Singular statement, one
actor [? verb ?] object.

00:43:13.350 --> 00:43:16.580
And then the last point
here is verifiability.

00:43:16.580 --> 00:43:19.730
How are you going to
check whether or not

00:43:19.730 --> 00:43:22.794
this requirement will,
in fact, satisfy you.

00:43:22.794 --> 00:43:24.710
AUDIENCE: With regard
to that, the feasibility

00:43:24.710 --> 00:43:26.570
again for some of
these programs I

00:43:26.570 --> 00:43:32.220
had large, [? overrun ?]
schedule, overruns.

00:43:32.220 --> 00:43:34.370
I mean, would it be
almost better in a sense

00:43:34.370 --> 00:43:40.270
to have some of the requirements
be more shalls, like--

00:43:40.270 --> 00:43:41.810
or goal.

00:43:41.810 --> 00:43:45.410
In other words, you know, if
you can do this, go for it.

00:43:45.410 --> 00:43:47.690
But if you're going
to run over 10 years,

00:43:47.690 --> 00:43:50.580
maybe back off a
couple of percent.

00:43:50.580 --> 00:43:51.580
PROFESSOR: That's right.

00:43:51.580 --> 00:43:53.496
And what-- we'll talk
about this a little bit.

00:43:53.496 --> 00:43:56.750
But if you-- all of them
are shall statements.

00:43:56.750 --> 00:43:58.520
They're all hard constraints.

00:43:58.520 --> 00:44:01.100
The objective space
that I showed you

00:44:01.100 --> 00:44:04.730
may, in fact, have
0 feasible space.

00:44:04.730 --> 00:44:08.060
So really knowing where, what
is a hard constraint, what

00:44:08.060 --> 00:44:11.880
is a hard requirement,
and what is flexible,

00:44:11.880 --> 00:44:13.790
that's very tricky.

00:44:13.790 --> 00:44:17.570
And that's why it's important
to actually not just accept

00:44:17.570 --> 00:44:18.290
requirements.

00:44:18.290 --> 00:44:21.026
You know, if you're going to run
a project, every requirement,

00:44:21.026 --> 00:44:22.400
you want to really
understand it.

00:44:22.400 --> 00:44:27.260
And if you think this
requirement is infeasible,

00:44:27.260 --> 00:44:28.550
you have to negotiate.

00:44:28.550 --> 00:44:30.130
That's where the
upfront negotiation

00:44:30.130 --> 00:44:31.650
becomes really important.

00:44:31.650 --> 00:44:35.251
Did we lose our EPFL?

00:44:35.251 --> 00:44:35.750
OK.

00:44:35.750 --> 00:44:36.020
GUEST SPEAKER: Hello?

00:44:36.020 --> 00:44:37.186
PROFESSOR: Go ahead, please.

00:44:37.186 --> 00:44:40.002
GUEST SPEAKER: [INAUDIBLE]

00:44:40.002 --> 00:44:41.210
PROFESSOR: Please, go for it.

00:44:44.280 --> 00:44:49.882
AUDIENCE: So in 1990, we got
the requirements from NASA

00:44:49.882 --> 00:44:52.512
to build a space
[? bioreactor. ?]

00:44:52.512 --> 00:44:54.400
And all the students
will love this.

00:44:54.400 --> 00:44:57.694
It was the smallest brewery
that ever flew in space.

00:44:57.694 --> 00:45:02.910
And the initial requirements was
that all fluid containers had

00:45:02.910 --> 00:45:05.570
to be solid with double walls.

00:45:05.570 --> 00:45:10.855
And this meant that we had
another solution with bladders.

00:45:10.855 --> 00:45:11.793
[INAUDIBLE] bladders.

00:45:11.793 --> 00:45:15.550
So we had a real fight up
front in the proposal phase

00:45:15.550 --> 00:45:19.885
to demonstrate the
compliancy to the requirement

00:45:19.885 --> 00:45:23.436
of going the cell culture,
yeast cell culture,

00:45:23.436 --> 00:45:27.930
and still being
non-compliant, actually,

00:45:27.930 --> 00:45:33.271
to this requirement of hard
double-walled fluid containers.

00:45:33.271 --> 00:45:37.199
And so this is exactly
[? the point, finding these ?]

00:45:37.199 --> 00:45:42.271
[INAUDIBLE] since the
last 15 to 20 years.

00:45:42.271 --> 00:45:44.210
And this was a
breakthrough in technology.

00:45:44.210 --> 00:45:46.653
And there, you will always
have these challenges

00:45:46.653 --> 00:45:49.479
with the agencies,
with your customers.

00:45:49.479 --> 00:45:51.632
They are [INAUDIBLE]
set in their ways.

00:45:51.632 --> 00:45:55.880
And you have to demonstrate
the feasibility to them

00:45:55.880 --> 00:45:58.330
to make them change the
requirement that allows you

00:45:58.330 --> 00:46:00.074
to change the specification.

00:46:00.074 --> 00:46:01.990
PROFESSOR: No, I think
that's a great example.

00:46:01.990 --> 00:46:04.730
So in the end, you were
successful to argue

00:46:04.730 --> 00:46:07.886
for the bladder the
bladder solution.

00:46:07.886 --> 00:46:10.035
GUEST SPEAKER: Well,
the bladder was just how

00:46:10.035 --> 00:46:14.550
to keep the fresh medium and the
used medium, meaning the beer.

00:46:14.550 --> 00:46:19.270
The technology was
to put in [INAUDIBLE]

00:46:19.270 --> 00:46:23.160
And actually, it needed
to have flexibility

00:46:23.160 --> 00:46:26.825
on the pressure
in the reservoir.

00:46:26.825 --> 00:46:29.775
That's why the argument to
put [INAUDIBLE] in space

00:46:29.775 --> 00:46:32.740
finally won the day,
and allowed to relax

00:46:32.740 --> 00:46:33.850
the other requirements.

00:46:33.850 --> 00:46:36.200
PROFESSOR: Yeah,
thank you, thank you.

00:46:36.200 --> 00:46:37.880
A great example there.

00:46:37.880 --> 00:46:39.440
Any other comments?

00:46:39.440 --> 00:46:42.730
AUDIENCE: [COUGHING]

00:46:42.730 --> 00:46:45.690
PROFESSOR: OK, so so all
this is a pretty long list.

00:46:45.690 --> 00:46:48.600
And this applies to
single requirements.

00:46:48.600 --> 00:46:51.480
And then there's a set of--
this is really important.

00:46:51.480 --> 00:46:53.370
Then there's a set
of characteristics

00:46:53.370 --> 00:46:56.760
that we want to see when you
look at sets of requirements,

00:46:56.760 --> 00:46:58.440
groups that require.

00:46:58.440 --> 00:47:00.220
Absence of redundancy.

00:47:00.220 --> 00:47:04.220
This means that each requirement
is specified only once, right?

00:47:04.220 --> 00:47:06.870
You don't want to
have redundancy.

00:47:06.870 --> 00:47:09.240
Redundancy can be
good in system design,

00:47:09.240 --> 00:47:11.850
but not in the requirements.

00:47:11.850 --> 00:47:14.220
Consistency, using terms.

00:47:14.220 --> 00:47:16.410
Completeness, this
basically means

00:47:16.410 --> 00:47:18.480
not missing key requirements.

00:47:18.480 --> 00:47:21.240
And then this idea of
absence of conflict.

00:47:21.240 --> 00:47:23.670
And this is also similar
to the feasibility.

00:47:23.670 --> 00:47:25.650
This is a tricky one.

00:47:25.650 --> 00:47:28.150
Requirements can be in
tension with each other,

00:47:28.150 --> 00:47:30.810
particularly their should goals.

00:47:30.810 --> 00:47:33.960
But they shouldn't be in direct
conflict with each other,

00:47:33.960 --> 00:47:37.410
like you know you shall
use aluminum for this unit.

00:47:37.410 --> 00:47:40.020
And then another
requirements says, no metals

00:47:40.020 --> 00:47:42.660
are allowed to be
used in this unit.

00:47:42.660 --> 00:47:44.420
You can't.

00:47:44.420 --> 00:47:46.260
That conflict is not solvable.

00:47:46.260 --> 00:47:48.120
That's a direct contradiction.

00:47:48.120 --> 00:47:51.240
That's different from having
competing requirements

00:47:51.240 --> 00:47:54.010
or requirements in tension.

00:47:54.010 --> 00:47:56.610
So let's do a quick exercise.

00:47:56.610 --> 00:47:59.230
And then we'll actually
take a break, as well.

00:47:59.230 --> 00:48:03.870
So this is a turn to
your partner exercise.

00:48:03.870 --> 00:48:05.490
And then we'll have a break.

00:48:05.490 --> 00:48:08.670
And we'll restart in
like about seven minutes.

00:48:08.670 --> 00:48:10.200
So here's what I'd
like you to do.

00:48:10.200 --> 00:48:12.240
I have three systems here.

00:48:12.240 --> 00:48:15.130
They're very different
in scale and complexity.

00:48:15.130 --> 00:48:17.280
So A is sticky tape.

00:48:17.280 --> 00:48:19.710
And I'll tell you
this quick story here.

00:48:19.710 --> 00:48:23.440
I grew up in Switzerland
surrounded by farms, you know.

00:48:23.440 --> 00:48:25.650
And I spent all my
time at the farms

00:48:25.650 --> 00:48:28.260
and you know, big
tables, big families.

00:48:28.260 --> 00:48:30.850
And this is-- they
have these things here.

00:48:30.850 --> 00:48:34.380
This is basically-- these
are flies sticking on tape.

00:48:34.380 --> 00:48:37.570
This is to keep the flies
off the dinner table.

00:48:37.570 --> 00:48:41.880
It's called Mr. sticky
tape for trapping flies.

00:48:41.880 --> 00:48:43.560
Really kind of gross.

00:48:43.560 --> 00:48:45.890
But I remember it.

00:48:45.890 --> 00:48:48.670
B is I just a couple
of weeks ago had

00:48:48.670 --> 00:48:50.820
a test drive and the new I3.

00:48:50.820 --> 00:48:55.110
This is the BMW small
electric city car.

00:48:55.110 --> 00:48:56.850
Very cool.

00:48:56.850 --> 00:49:01.590
And then C is something that at
EPFL, you guys know very well.

00:49:01.590 --> 00:49:03.570
This is the Rolex center.

00:49:03.570 --> 00:49:05.190
It looks kind of
like Swiss cheese,

00:49:05.190 --> 00:49:06.690
when you look from the top.

00:49:06.690 --> 00:49:10.630
This is the equivalent
of W-20 here at MIT.

00:49:10.630 --> 00:49:11.970
This is the student center.

00:49:11.970 --> 00:49:14.260
So there's a library there.

00:49:14.260 --> 00:49:16.930
There's a cafeteria
there and so forth.

00:49:16.930 --> 00:49:21.010
So what I'd like you to do
is turn to your partner,

00:49:21.010 --> 00:49:25.140
pick one of those
three, and come up

00:49:25.140 --> 00:49:29.280
with one single statement,
one good requirement

00:49:29.280 --> 00:49:33.030
that you think was possibly
used in the development

00:49:33.030 --> 00:49:36.300
of that solution,
whichever one you pick, OK?

00:49:36.300 --> 00:49:38.460
So pick one of those three.

00:49:38.460 --> 00:49:41.790
And then jointly discuss
and write a requirement

00:49:41.790 --> 00:49:45.510
that you think led
to this design, OK?

00:49:45.510 --> 00:49:47.550
So take about five minutes.

00:49:47.550 --> 00:49:48.420
Take a break.

00:49:48.420 --> 00:49:51.900
And then we'll sample
what you came up with.

00:49:51.900 --> 00:49:55.520
So let's hear from EPFL first.

00:49:55.520 --> 00:49:59.200
did anybody do A?

00:49:59.200 --> 00:50:00.570
AUDIENCE: We did A.

00:50:00.570 --> 00:50:02.010
PROFESSOR: OK, go for it.

00:50:02.010 --> 00:50:04.200
Speak up.

00:50:04.200 --> 00:50:06.660
AUDIENCE: We had four
requirements for.

00:50:06.660 --> 00:50:08.430
PROFESSOR: OK, go for it.

00:50:08.430 --> 00:50:09.470
AUDIENCE: All right.

00:50:09.470 --> 00:50:15.570
So The tape shows
[INAUDIBLE] of the tape

00:50:15.570 --> 00:50:18.600
should be less than 4 grand.

00:50:18.600 --> 00:50:26.554
The tape should be able
to catch up to 60 insects.

00:50:26.554 --> 00:50:29.270
And the sticky tape should
not be toxic for humans.

00:50:29.270 --> 00:50:31.500
PROFESSOR: OK, I like,
yeah, the toxicity.

00:50:31.500 --> 00:50:32.250
That's good.

00:50:32.250 --> 00:50:33.570
Excellent.

00:50:33.570 --> 00:50:34.320
Very good.

00:50:34.320 --> 00:50:36.120
ow who did A here at MIT.

00:50:36.120 --> 00:50:36.810
Anybody?

00:50:36.810 --> 00:50:37.990
A?

00:50:37.990 --> 00:50:38.490
Go for it.

00:50:42.400 --> 00:50:46.830
AUDIENCE: We said
if greater than 10%

00:50:46.830 --> 00:50:50.070
of the surface area of the
fly contacts the paper,

00:50:50.070 --> 00:50:53.630
it shall not be able
to release itself.

00:50:53.630 --> 00:50:55.000
PROFESSOR: Ah, I see.

00:50:55.000 --> 00:50:57.750
So this is a
trapping requirement.

00:50:57.750 --> 00:50:59.459
AUDIENCE: Yeah, how
effective should it--

00:50:59.459 --> 00:51:01.958
PROFESSOR: There are different,
very different flies, right?

00:51:01.958 --> 00:51:03.630
There like these
little day flies.

00:51:03.630 --> 00:51:05.400
And then there's
huge horseflies.

00:51:05.400 --> 00:51:08.710
So which type of fly
did this apply to.

00:51:08.710 --> 00:51:11.190
AUDIENCE: We said 10% of
the surface area of the fly.

00:51:11.190 --> 00:51:12.840
PROFESSOR: Oh, any type of fly.

00:51:12.840 --> 00:51:14.835
Any different fly species.

00:51:14.835 --> 00:51:15.460
AUDIENCE: Yeah.

00:51:15.460 --> 00:51:16.043
PROFESSOR: OK.

00:51:16.594 --> 00:51:17.260
All right, cool.

00:51:17.260 --> 00:51:18.516
So go ahead.

00:51:18.516 --> 00:51:19.890
Well, you know
the point of this.

00:51:19.890 --> 00:51:21.570
You get the point
of this is, right?

00:51:21.570 --> 00:51:26.290
A is like the sort of
you think trivial system.

00:51:26.290 --> 00:51:28.170
But once you really
start thinking about it,

00:51:28.170 --> 00:51:32.700
it's pretty tricky, right?

00:51:32.700 --> 00:51:36.300
Who else wants to, A-- something
that hasn't been mentioned yet

00:51:36.300 --> 00:51:38.860
on A. Sam, go for it.

00:51:38.860 --> 00:51:40.550
Make sure you push the button.

00:51:43.310 --> 00:51:45.990
AUDIENCE: Yeah,
for the sticky trap

00:51:45.990 --> 00:51:50.470
we said that the product
shall fit on a store shelf

00:51:50.470 --> 00:51:52.060
when packaged.

00:51:52.060 --> 00:51:54.180
PROFESSOR: OK, so that's
kind of packaging,

00:51:54.180 --> 00:51:57.240
logistics, distribution
requirement.

00:51:57.240 --> 00:51:58.990
Very good.

00:51:58.990 --> 00:52:00.715
Mike?

00:52:00.715 --> 00:52:02.590
AUDIENCE: They kind of
already touched on it,

00:52:02.590 --> 00:52:05.570
but the sticky tape shall
not be toxic and allow for--

00:52:05.570 --> 00:52:08.716
allow for removal of human
skin without bodily harm.

00:52:08.716 --> 00:52:09.590
PROFESSOR: OK, great.

00:52:09.590 --> 00:52:12.492
So that's in the same--
you know, human factors

00:52:12.492 --> 00:52:13.450
requirement, basically.

00:52:13.450 --> 00:52:13.950
Yeah.

00:52:13.950 --> 00:52:15.210
Very good.

00:52:15.210 --> 00:52:17.715
Anything else on A at EPFL?

00:52:17.715 --> 00:52:29.100
AUDIENCE: [INAUDIBLE]

00:52:29.100 --> 00:52:31.290
PROFESSOR: OK, so
installation requirement.

00:52:31.290 --> 00:52:32.200
OK.

00:52:32.200 --> 00:52:36.090
Nobody mentioned the ones
I remember as a child are

00:52:36.090 --> 00:52:36.930
bigger than this.

00:52:36.930 --> 00:52:38.880
They were really long.

00:52:38.880 --> 00:52:40.350
So capacity, right?

00:52:40.350 --> 00:52:43.470
You could sort of have a
length or capacity requirement,

00:52:43.470 --> 00:52:44.500
as well.

00:52:44.500 --> 00:52:45.090
Good.

00:52:45.090 --> 00:52:45.590
All right.

00:52:45.590 --> 00:52:51.480
I think we want to move on from
the sticky flies to BMW i3.

00:52:51.480 --> 00:52:55.170
So we had a little discussion
here during the break.

00:52:55.170 --> 00:52:56.100
[? Lucy, ?] go for it.

00:52:58.950 --> 00:53:02.700
AUDIENCE: So the car shell
meet environmental regulations

00:53:02.700 --> 00:53:08.270
through mechanical or software
tweaking with a proposal.

00:53:08.270 --> 00:53:10.410
PROFESSOR: Could you
guys hear this at EPFL?

00:53:10.410 --> 00:53:12.010
You've been following
the news, right?

00:53:12.010 --> 00:53:12.990
With Volkswagon.

00:53:14.390 --> 00:53:16.180
So what happened?

00:53:16.180 --> 00:53:20.190
Why did Volks-- the CEO
just step down, right?

00:53:20.190 --> 00:53:21.720
It's kind of a big deal.

00:53:21.720 --> 00:53:23.205
Trust in the company has eroded.

00:53:26.400 --> 00:53:29.100
What happened there?

00:53:29.100 --> 00:53:33.130
AUDIENCE: So the requirements
that were set at the start.

00:53:33.130 --> 00:53:36.030
So the car shell meet
environmental regulations

00:53:36.030 --> 00:53:37.930
on emissions.

00:53:37.930 --> 00:53:40.290
This requirement was
probably not met.

00:53:40.290 --> 00:53:43.140
But the realization that it
wasn't met was probably too

00:53:43.140 --> 00:53:46.770
late in the design process,
such that it cannot be changed.

00:53:46.770 --> 00:53:51.540
And so the easy or cheap way to
meet environmental regulations,

00:53:51.540 --> 00:53:55.272
in that case, was to tweak
the software, I guess.

00:53:55.272 --> 00:53:55.980
PROFESSOR: Right.

00:53:55.980 --> 00:53:58.660
So by the way this is
kind of interesting.

00:53:58.660 --> 00:54:02.110
But how do you measure
environmental compliance

00:54:02.110 --> 00:54:03.525
of emissions for cars?

00:54:03.525 --> 00:54:06.152
Do you know how that's
done in practice?

00:54:06.152 --> 00:54:06.860
Do you guys know?

00:54:09.460 --> 00:54:13.000
AUDIENCE: So it's having
[? the car ?] run on a--

00:54:13.000 --> 00:54:17.350
having the engine run, but
the car is not rolling.

00:54:17.350 --> 00:54:23.200
And there's, behind the
[FRENCH] the exhaust.

00:54:23.200 --> 00:54:26.050
Behind the exhaust, you
measure whatever is emitted.

00:54:26.050 --> 00:54:28.570
PROFESSOR: And it's like
another rolling carpet, right?

00:54:28.570 --> 00:54:32.390
It's a dynamo, basically.

00:54:32.390 --> 00:54:35.980
And the way they do it is they
have so-called drive cycles,

00:54:35.980 --> 00:54:38.890
like the [? FT6 ?] drive cycle.

00:54:38.890 --> 00:54:41.030
You know, the highway,
the city cycle,

00:54:41.030 --> 00:54:42.592
which was a lot of on and off.

00:54:42.592 --> 00:54:44.050
And those drive
cycles are actually

00:54:44.050 --> 00:54:47.590
different in Europe and
the US and other countries.

00:54:47.590 --> 00:54:50.380
Every country has
different drive cycles.

00:54:50.380 --> 00:54:55.360
So that's-- and what is a
drive cycle, essentially?

00:54:55.360 --> 00:54:57.859
What word would we, as
systems engineers, what word

00:54:57.859 --> 00:54:58.650
would we put on it?

00:54:58.650 --> 00:54:59.500
AUDIENCE: CONOPS.

00:54:59.500 --> 00:55:01.810
PROFESSOR: A drive cycle
is just an, over time,

00:55:01.810 --> 00:55:04.862
accelerations velocity
of the car, right?

00:55:04.862 --> 00:55:05.820
STUDENT: It's a CONOPS.

00:55:05.820 --> 00:55:09.370
PROFESSOR: It's a CONOPS
A drive cycle is a CONOPS.

00:55:09.370 --> 00:55:11.980
And so for diesel
engines, this issue that

00:55:11.980 --> 00:55:14.620
happened with
Volkswagen, it's only

00:55:14.620 --> 00:55:17.170
an issue with the
diesel, the TDI engines,

00:55:17.170 --> 00:55:19.060
right, not the gasoline engine.

00:55:19.060 --> 00:55:23.530
So the issue is that the
CONOPS, the drive cycle,

00:55:23.530 --> 00:55:27.640
in the US with TDI engines,
they couldn't meet it.

00:55:27.640 --> 00:55:30.952
So they came up with
this trick, right?

00:55:30.952 --> 00:55:32.410
Whereas in Europe,
they didn't have

00:55:32.410 --> 00:55:35.590
to do that, because the European
drive cycle, there's a lot more

00:55:35.590 --> 00:55:38.710
diesel engines use
in European cars.

00:55:38.710 --> 00:55:41.440
They didn't have to do that
in Europe, because the CONOPS,

00:55:41.440 --> 00:55:43.960
the drive cycle it's
used for checking

00:55:43.960 --> 00:55:47.260
the environmental compliance
is different in Europe.

00:55:47.260 --> 00:55:48.730
So great.

00:55:48.730 --> 00:55:51.520
Anybody else on the I-3.

00:55:51.520 --> 00:55:54.730
Now the I3 is interesting,
because that's actually

00:55:54.730 --> 00:55:56.740
an electric car, right?

00:55:56.740 --> 00:56:00.640
And so it doesn't have an
engine, a diesel engine

00:56:00.640 --> 00:56:05.280
or a combustion engine, except
if you get the range extender.

00:56:05.280 --> 00:56:06.880
So it's all
electric, but you can

00:56:06.880 --> 00:56:10.630
actually, as an option get
the range extender, which does

00:56:10.630 --> 00:56:11.870
use fuel.

00:56:11.870 --> 00:56:19.140
OK, EPFL, the i3, any
other requirements there?

00:56:19.140 --> 00:56:37.144
AUDIENCE: So we have
four [INAUDIBLE]

00:56:37.144 --> 00:56:37.810
PROFESSOR: Yeah.

00:56:37.810 --> 00:56:53.560
AUDIENCE: As a third one, the
car shall carry [INAUDIBLE]

00:56:53.560 --> 00:56:55.450
PROFESSOR: OK, so recharging.

00:56:55.450 --> 00:56:57.200
The third requirement
is interesting.

00:56:57.200 --> 00:56:59.380
You said of average
build, right?

00:56:59.380 --> 00:57:01.630
That's the word you use.

00:57:01.630 --> 00:57:02.290
AUDIENCE: Yes.

00:57:02.290 --> 00:57:04.000
PROFESSOR: Now that's great.

00:57:04.000 --> 00:57:06.370
That's a human
factors requirement.

00:57:06.370 --> 00:57:10.120
Now of average build is
a little fuzzy, right?

00:57:10.120 --> 00:57:14.110
How would you make
that more verifiable?

00:57:18.840 --> 00:57:44.520
AUDIENCE: [INAUDIBLE]

00:57:44.520 --> 00:57:48.840
PROFESSOR: Yeah, so there's
actually people that, you know,

00:57:48.840 --> 00:57:54.106
the size distribution, male,
female, you know, weight.

00:57:54.106 --> 00:57:55.100
AUDIENCE: [INAUDIBLE]

00:57:55.100 --> 00:57:58.030
PROFESSOR: And [INAUDIBLE]
the metric measurements

00:57:58.030 --> 00:58:01.570
are actually being
recorded and updated.

00:58:01.570 --> 00:58:03.460
People are getting
taller around the world.

00:58:03.460 --> 00:58:06.050
People are getting heavier.

00:58:06.050 --> 00:58:07.209
We know that, right?

00:58:07.209 --> 00:58:09.250
So the way you would write
that third requirement

00:58:09.250 --> 00:58:13.150
to be verifiable is that
the car shall accommodate

00:58:13.150 --> 00:58:19.960
for passengers in a, say,
P10 male or P5 female

00:58:19.960 --> 00:58:23.260
and a P90 male, right?

00:58:23.260 --> 00:58:26.920
And if you write it that way,
then you know the actual weight

00:58:26.920 --> 00:58:29.980
and dimensions of the
human body can actually

00:58:29.980 --> 00:58:33.970
be traced to a database
that's pretty well known.

00:58:33.970 --> 00:58:36.370
So then instead of
saying average build,

00:58:36.370 --> 00:58:40.930
you say it's a PT50, P50 female.

00:58:40.930 --> 00:58:43.480
And that's something
that's very verifiable.

00:58:43.480 --> 00:58:45.688
Does that make sense?

00:58:45.688 --> 00:58:46.596
AUDIENCE: Yes.

00:58:46.596 --> 00:58:47.470
PROFESSOR: OK, great.

00:58:47.470 --> 00:58:49.750
So what about the last one?

00:58:49.750 --> 00:58:53.800
So by the way, here at MIT,
anybody who's been to EPFL?

00:58:53.800 --> 00:58:57.580
Been to the-- [INAUDIBLE] He
has a Master's from there.

00:58:57.580 --> 00:59:01.180
[INAUDIBLE] been there?

00:59:01.180 --> 00:59:03.040
This is a very cool building.

00:59:03.040 --> 00:59:05.470
It's pretty unusual.

00:59:05.470 --> 00:59:08.180
I mean, we have some very
unusual building on campus,

00:59:08.180 --> 00:59:08.680
too, here.

00:59:08.680 --> 00:59:11.410
But if you get a
chance, it's pretty.

00:59:11.410 --> 00:59:14.920
Unusual so let's
hear from you guys.

00:59:14.920 --> 00:59:18.430
So what do you think was a
requirement for the [? Rolex ?]

00:59:18.430 --> 00:59:20.790
center design?

00:59:24.240 --> 00:59:27.370
AUDIENCE: The building should be
a recognizable structure, that

00:59:27.370 --> 00:59:30.565
would be memorable for EPSL.

00:59:30.565 --> 00:59:31.690
PROFESSOR: Ah, interesting.

00:59:31.690 --> 00:59:36.100
A recognizable structure
that should be memorable.

00:59:36.100 --> 00:59:39.400
So that's-- I think I know
where you're going with this.

00:59:39.400 --> 00:59:41.170
But it's a little--

00:59:41.170 --> 00:59:42.580
you know, recognizable.

00:59:42.580 --> 00:59:45.940
Every building is recognizable
in a sense, right?

00:59:45.940 --> 00:59:48.460
I think-- I like it.

00:59:48.460 --> 00:59:50.050
I know where you're
going with this.

00:59:50.050 --> 00:59:54.260
But it's a little
fuzzy still, right?

00:59:54.260 --> 00:59:57.295
So why do you think
it has holes in it?

00:59:57.295 --> 00:59:58.420
Why do you think the holes?

01:00:01.535 --> 01:00:06.260
AUDIENCE: [INAUDIBLE] unique
might be a better word.

01:00:06.260 --> 01:00:08.624
[INAUDIBLE]

01:00:08.624 --> 01:00:09.290
PROFESSOR: Yeah.

01:00:09.290 --> 01:00:11.120
So that's really.

01:00:11.120 --> 01:00:14.450
The holes are, in some
sense, inefficient, right?

01:00:14.450 --> 01:00:16.880
Because you're putting holes
in the middle of a building.

01:00:16.880 --> 01:00:18.770
But they provide
natural lighting.

01:00:18.770 --> 01:00:21.410
And there's a
symbolism there, right?

01:00:21.410 --> 01:00:24.510
There's a symbolism, the
Swiss cheese symbolism.

01:00:24.510 --> 01:00:28.310
So if the holes, in a sense,
have at least two functions,

01:00:28.310 --> 01:00:29.030
right?

01:00:29.030 --> 01:00:29.730
That's good.

01:00:29.730 --> 01:00:30.400
I like that.

01:00:30.400 --> 01:00:31.650
That's very good.

01:00:31.650 --> 01:00:32.480
What else?

01:00:32.480 --> 01:00:37.200
Another example of a requirement
for the [? Rolex ?] center?

01:00:37.200 --> 01:00:39.910
AUDIENCE: You're taking and
making [INAUDIBLE] category.

01:00:39.910 --> 01:01:18.960
[INAUDIBLE]

01:01:18.960 --> 01:01:20.140
PROFESSOR: Good.

01:01:20.140 --> 01:01:21.350
No, that was great.

01:01:21.350 --> 01:01:22.970
So you have functional
requirement,

01:01:22.970 --> 01:01:24.770
you had interface requirements.

01:01:24.770 --> 01:01:26.600
You had a lot of
those six categories

01:01:26.600 --> 01:01:28.350
we talked about, right?

01:01:28.350 --> 01:01:28.850
Good.

01:01:28.850 --> 01:01:29.260
Excellent.

01:01:29.260 --> 01:01:29.759
Yeah?

01:01:29.759 --> 01:01:30.950
Go ahead.

01:01:30.950 --> 01:01:33.920
AUDIENCE: So how do you write
a requirement about something

01:01:33.920 --> 01:01:38.330
aesthetic in a way that's
not fuzzy or is there a way

01:01:38.330 --> 01:01:40.730
to do that?

01:01:40.730 --> 01:01:42.810
PROFESSOR: That's
a great question.

01:01:42.810 --> 01:01:45.800
I'm not sure I'm the best
person to answer that.

01:01:45.800 --> 01:01:50.390
What I can't tell you is,
in the automotive world,

01:01:50.390 --> 01:01:54.200
the aesthetics of automobiles
and how people judge

01:01:54.200 --> 01:01:56.900
whether a car is
beautiful or appealing,

01:01:56.900 --> 01:02:00.700
that's actually moved from being
kind of just a very fuzzy thing

01:02:00.700 --> 01:02:02.060
to quite measurable.

01:02:02.060 --> 01:02:04.970
You know, there's
different shapes and then

01:02:04.970 --> 01:02:07.460
the building blocks of
shapes and streamlines.

01:02:07.460 --> 01:02:10.430
Those things are-- that's
really a science today.

01:02:10.430 --> 01:02:13.190
And eventually, you
know, there's ratings.

01:02:13.190 --> 01:02:17.820
These are people rate vehicles
for aesthetics and so forth.

01:02:17.820 --> 01:02:21.140
And usually, it's a five point
scale, like a Likert scale,

01:02:21.140 --> 01:02:24.920
like JD Power and associates
is a very well-known marketing

01:02:24.920 --> 01:02:25.860
firm.

01:02:25.860 --> 01:02:30.980
And so they'll say, this
looks-- this will prob--

01:02:30.980 --> 01:02:32.810
they can actually,
at this point,

01:02:32.810 --> 01:02:35.890
you can show them a-- not
a sketch, but a model.

01:02:35.890 --> 01:02:39.590
And based on past data and
information, they'll tell you,

01:02:39.590 --> 01:02:44.190
this car will probably
score between a 4.2 and 4.4

01:02:44.190 --> 01:02:48.100
on the 5 point aesthetic
scale, JD Power scale.

01:02:48.100 --> 01:02:50.110
It's really pretty remarkable.

01:02:50.110 --> 01:02:54.270
But I guess the bigger point is
there's some things that really

01:02:54.270 --> 01:02:56.565
delight us, that have
an artistic quality

01:02:56.565 --> 01:02:59.540
and surprise us in
aesthetic quality.

01:02:59.540 --> 01:03:01.200
And it's true.

01:03:01.200 --> 01:03:03.470
That is one of the
tensions is yet--

01:03:03.470 --> 01:03:06.180
system engineering should--
you know, this very precise.

01:03:06.180 --> 01:03:08.440
Write it down.

01:03:08.440 --> 01:03:12.090
Make sure there is no fuzziness
there or as little as possible.

01:03:12.090 --> 01:03:13.860
And then on the
other hand, we want

01:03:13.860 --> 01:03:18.690
delightful, surprising things
that have an artistic nature

01:03:18.690 --> 01:03:19.440
to them.

01:03:19.440 --> 01:03:21.390
And that is
absolutely a tension.

01:03:21.390 --> 01:03:23.980
And we just acknowledge that.

01:03:23.980 --> 01:03:27.180
OK, any questions?

01:03:27.180 --> 01:03:29.290
Comments before we move on?

01:03:29.290 --> 01:03:30.949
AUDIENCE: I had a
question about--?

01:03:30.949 --> 01:03:31.740
PROFESSOR: Hang on.

01:03:31.740 --> 01:03:32.970
Just one second.

01:03:32.970 --> 01:03:35.400
OK, go ahead.

01:03:35.400 --> 01:03:37.675
At EPFL?

01:03:37.675 --> 01:03:40.050
AUDIENCE: And to which extent
can we refer [? to norms ?]

01:03:40.050 --> 01:03:42.301
and [? loads ?] in
the requirements?

01:03:42.301 --> 01:03:43.800
PROFESSOR: Yeah,
you should do that.

01:03:43.800 --> 01:03:48.570
So compliance, being compliant
with standards and just

01:03:48.570 --> 01:03:51.390
to make clear, standards
and regulations

01:03:51.390 --> 01:03:53.320
are not the same, right?

01:03:53.320 --> 01:03:57.290
A standard, like an IEEE
standard or an ISO standard,

01:03:57.290 --> 01:03:58.300
it's not a law.

01:03:58.300 --> 01:03:59.760
It's not a legal thing.

01:03:59.760 --> 01:04:04.140
It's-- a standard it is
something that maybe a group

01:04:04.140 --> 01:04:07.320
of companies or a group of
organizations have agreed to.

01:04:07.320 --> 01:04:09.960
This is how we
will do it, right?

01:04:09.960 --> 01:04:13.320
The IEEE Wi-Fi
standard, what is it?

01:04:13.320 --> 01:04:17.050
802.11g.

01:04:17.050 --> 01:04:18.030
And that's not a law.

01:04:18.030 --> 01:04:19.260
That's a standard.

01:04:19.260 --> 01:04:22.720
And if you're going to
be 802.11g compliant,

01:04:22.720 --> 01:04:25.410
you write that in
the requirements.

01:04:25.410 --> 01:04:28.460
The environmental emissions
standards we talked about,

01:04:28.460 --> 01:04:30.360
those are actually laws.

01:04:30.360 --> 01:04:33.570
If you are going to sell
a vehicle in country x,

01:04:33.570 --> 01:04:36.750
it has to comply legally
with these regulations.

01:04:36.750 --> 01:04:39.300
But you're absolutely
right, if you

01:04:39.300 --> 01:04:41.460
need to comply
with these things,

01:04:41.460 --> 01:04:43.620
it needs to be part of
the requirements set,

01:04:43.620 --> 01:04:48.680
because otherwise, it will
not happen just automatically.

01:04:48.680 --> 01:04:49.965
[? Weston? ?]

01:04:49.965 --> 01:04:51.840
AUDIENCE: Yeah, it's
kind of along that vein.

01:04:51.840 --> 01:04:55.151
If you have to
comply, say, with ADA,

01:04:55.151 --> 01:04:57.150
instead you have to be
called out, specifically,

01:04:57.150 --> 01:04:59.940
or do you say must comply with
building codes or building

01:04:59.940 --> 01:05:00.450
laws?

01:05:00.450 --> 01:05:02.280
And it's sort of a
blanket requirement?

01:05:02.280 --> 01:05:03.904
PROFESSOR: No, you
have to be specific,

01:05:03.904 --> 01:05:07.320
because building codes are,
first of all, a lot of these

01:05:07.320 --> 01:05:09.280
are local, as well.

01:05:09.280 --> 01:05:11.670
And it's very chaotic.

01:05:11.670 --> 01:05:15.730
So and some of these
might be conflicting.

01:05:15.730 --> 01:05:18.960
So you should be as
specific as possible.

01:05:18.960 --> 01:05:21.900
OK, let's move on here.

01:05:21.900 --> 01:05:25.060
My sense is you're getting it
just for what requirements are.

01:05:25.060 --> 01:05:27.190
And why they're important.

01:05:27.190 --> 01:05:31.290
So let me talk briefly about
requirements, decomposition,

01:05:31.290 --> 01:05:32.850
allocation, and validation.

01:05:32.850 --> 01:05:35.490
This is a figure from
the NASA handbook.

01:05:35.490 --> 01:05:39.750
And basically, what it talks
about is the high level system

01:05:39.750 --> 01:05:43.050
functional requirements
are broken down

01:05:43.050 --> 01:05:45.120
into the performance
requirements.

01:05:45.120 --> 01:05:47.040
And then as you make
design decisions,

01:05:47.040 --> 01:05:50.460
as you decompose your system
into different subsystems,

01:05:50.460 --> 01:05:53.850
each subsystem will have its
own functional and performance

01:05:53.850 --> 01:05:55.020
requirements.

01:05:55.020 --> 01:05:58.650
And then the important thing
is the difference between

01:05:58.650 --> 01:06:01.290
allocated and
derived requirements.

01:06:01.290 --> 01:06:03.930
So allocated requirements
are requirements

01:06:03.930 --> 01:06:08.220
that you choose to allocate.

01:06:08.220 --> 01:06:10.620
And then derived
requirements are calculated

01:06:10.620 --> 01:06:13.590
based on the dependent
requirements,

01:06:13.590 --> 01:06:15.240
based on the allocated
requirements.

01:06:15.240 --> 01:06:18.120
And I'll get into
this in a minute.

01:06:18.120 --> 01:06:19.740
So requirements
are hierarchical.

01:06:19.740 --> 01:06:21.330
We talked about this.

01:06:21.330 --> 01:06:24.480
Functional performance
requirements are allocated.

01:06:24.480 --> 01:06:28.800
And then from these, we can
further decompose and derive

01:06:28.800 --> 01:06:29.637
requirements.

01:06:29.637 --> 01:06:31.470
And then the total set
of these requirements

01:06:31.470 --> 01:06:34.380
needs to be verified
and then validated

01:06:34.380 --> 01:06:38.500
against the stakeholder
expectations.

01:06:38.500 --> 01:06:41.550
So let me briefly talk
about requirements margins

01:06:41.550 --> 01:06:42.690
management.

01:06:42.690 --> 01:06:46.290
So because you don't
know everything upfront,

01:06:46.290 --> 01:06:47.640
there's uncertainty.

01:06:47.640 --> 01:06:50.820
We typically build in reserves
into our requirements.

01:06:50.820 --> 01:06:52.270
And those are called margins.

01:06:52.270 --> 01:06:55.200
So we put in margins
for mass, power, maybe

01:06:55.200 --> 01:06:57.460
memory in computer systems.

01:06:57.460 --> 01:07:00.290
So margins are
essentially reserves

01:07:00.290 --> 01:07:02.940
that are not allocated
to particular subsystems,

01:07:02.940 --> 01:07:05.580
but are controlled by
the project managers

01:07:05.580 --> 01:07:07.270
or at a higher level.

01:07:07.270 --> 01:07:10.140
So the idea is that you
write the requirement

01:07:10.140 --> 01:07:14.070
in a way that is a little bit
more stringent than it really

01:07:14.070 --> 01:07:16.810
needs to be.

01:07:16.810 --> 01:07:19.230
And then by being
more stringent,

01:07:19.230 --> 01:07:21.840
you've built some
reserve into the system

01:07:21.840 --> 01:07:24.360
to handle unexpected things.

01:07:24.360 --> 01:07:27.540
So I'll just give you the
example with mass growth.

01:07:27.540 --> 01:07:30.480
You know, this is very
typical in aerospace vehicles.

01:07:30.480 --> 01:07:34.560
Mass growth can range
between, here, 10 to 60%.

01:07:34.560 --> 01:07:35.920
I'll show you some examples.

01:07:35.920 --> 01:07:38.910
And a lot of it depends on
the novelty of the project.

01:07:38.910 --> 01:07:42.930
So a typical guideline,
specifically for mass margins,

01:07:42.930 --> 01:07:50.220
is about 30% reserve at
the SRR, 20% PDR, 10% CPR,

01:07:50.220 --> 01:07:55.170
and keep about 5% right
before you operate the system.

01:07:55.170 --> 01:07:58.380
IOC is initial
operating capability.

01:07:58.380 --> 01:08:00.960
So here's some historical data.

01:08:00.960 --> 01:08:05.400
This is for manned
or crude vehicles,

01:08:05.400 --> 01:08:07.710
starting with Mercury,
Gemini, Apollo,

01:08:07.710 --> 01:08:09.840
Skylab, and then the shuttle.

01:08:09.840 --> 01:08:14.760
You can see the mass growth
from the concept stage, which

01:08:14.760 --> 01:08:18.990
is phase A or prephase A,
all the way to operations,

01:08:18.990 --> 01:08:21.750
you know, between 10 and 60%.

01:08:21.750 --> 01:08:25.740
The new Orion spacecraft is
not yet included on this chart.

01:08:25.740 --> 01:08:28.020
So what you do is
you essentially write

01:08:28.020 --> 01:08:31.979
the requirement, knowing
that this growth will happen

01:08:31.979 --> 01:08:33.450
during the design process.

01:08:33.450 --> 01:08:36.569
That's the basic
idea of margins.

01:08:36.569 --> 01:08:38.010
And then the next
thing you get is

01:08:38.010 --> 01:08:41.100
that you monitor
the satisfaction

01:08:41.100 --> 01:08:44.020
of the requirements
during the design process.

01:08:44.020 --> 01:08:47.510
And so let's say you have,
in a performance requirement,

01:08:47.510 --> 01:08:49.830
you say that the
system shall not

01:08:49.830 --> 01:08:54.090
emit more than x number
of [? NOX ?] emissions,

01:08:54.090 --> 01:08:58.000
or the systems shall not be
heavier than such and such.

01:08:58.000 --> 01:08:59.270
That's on the y-axis here.

01:08:59.270 --> 01:09:01.649
That's your technical
performance measure.

01:09:01.649 --> 01:09:04.020
And then you move through
time and, you know,

01:09:04.020 --> 01:09:06.450
as the design gets
more detailed,

01:09:06.450 --> 01:09:07.620
usually it gets heavier.

01:09:07.620 --> 01:09:09.779
You add more things.

01:09:09.779 --> 01:09:11.430
And you monitor that.

01:09:11.430 --> 01:09:14.340
And then you have your
final current estimate

01:09:14.340 --> 01:09:17.430
of where you will be at
the end of the project.

01:09:17.430 --> 01:09:21.630
And as you do that, your limits,
your reserves, your margins,

01:09:21.630 --> 01:09:24.420
and here there is an upper
and lower margin shown,

01:09:24.420 --> 01:09:29.560
is going to be narrowing down.

01:09:29.560 --> 01:09:31.080
I'll give you a quick example.

01:09:31.080 --> 01:09:36.390
When I was at McDonnell Douglas,
the F18 EF version, the Super

01:09:36.390 --> 01:09:38.250
Hornet, was being developed.

01:09:38.250 --> 01:09:42.240
And the key thing
there was GTOW,

01:09:42.240 --> 01:09:45.899
GTOW, gross take off weight.

01:09:45.899 --> 01:09:50.350
It's basically the weight of
the plane with crew, fuel,

01:09:50.350 --> 01:09:53.960
any payloads all in.

01:09:53.960 --> 01:09:57.450
The gross take off weight of
the airplane, very important,

01:09:57.450 --> 01:09:59.370
because it determines the range.

01:09:59.370 --> 01:10:00.840
It determines a lot of things.

01:10:00.840 --> 01:10:03.480
And the number, not
to exceed number,

01:10:03.480 --> 01:10:08.020
which is shown here on this
chart as the maximum contract

01:10:08.020 --> 01:10:11.200
or allocated
requirements threshold,

01:10:11.200 --> 01:10:12.780
was contractually specified.

01:10:12.780 --> 01:10:17.160
Not only that, but there were
penalties, financial penalties,

01:10:17.160 --> 01:10:21.960
associated with every kilogram
that you would be over.

01:10:21.960 --> 01:10:23.160
So this was a big deal.

01:10:23.160 --> 01:10:25.170
And they had a
huge the wall chart

01:10:25.170 --> 01:10:27.000
in the hallway,
the main hallway,

01:10:27.000 --> 01:10:28.680
of the engineering building.

01:10:28.680 --> 01:10:32.580
And every day somebody would
actually manually update

01:10:32.580 --> 01:10:35.569
that day's best estimate of
what the gross take off weight

01:10:35.569 --> 01:10:36.610
of the airplane would be.

01:10:36.610 --> 01:10:38.890
And it's like a
Brownian motion thing.

01:10:38.890 --> 01:10:42.320
And as soon as you hit
some critical threshold,

01:10:42.320 --> 01:10:44.070
you would see there'd
be people with would

01:10:44.070 --> 01:10:46.590
come together and say,
we've got to take weight out

01:10:46.590 --> 01:10:49.290
of the airplane
somehow, again, right?

01:10:49.290 --> 01:10:52.410
And then basically
try to get the design

01:10:52.410 --> 01:10:55.720
to comply with that requirement
as you move through the design

01:10:55.720 --> 01:10:56.400
process.

01:10:56.400 --> 01:10:59.280
You can't do that with too
many of the requirements.

01:10:59.280 --> 01:11:01.870
But the most important
technical performance

01:11:01.870 --> 01:11:03.870
measures, that's what you do.

01:11:03.870 --> 01:11:06.510
It's a big deal.

01:11:06.510 --> 01:11:09.609
So here's the flow chart,
basically, for requirements.

01:11:09.609 --> 01:11:11.400
I'm not going to go
through this in detail.

01:11:11.400 --> 01:11:14.940
But the basic idea is the
inputs come from the stakeholder

01:11:14.940 --> 01:11:18.410
expectations, the stakeholder
work we talked about a lot

01:11:18.410 --> 01:11:19.440
last time.

01:11:19.440 --> 01:11:21.840
You go through the
requirements definition process

01:11:21.840 --> 01:11:25.860
and outcomes invalidated set
of technical requirements,

01:11:25.860 --> 01:11:27.930
measures of performance
that you can measure,

01:11:27.930 --> 01:11:29.820
and then these
technical performance

01:11:29.820 --> 01:11:36.330
measures that you can then track
and validate against later.

01:11:36.330 --> 01:11:38.850
Here's a question that
I often get asked.

01:11:38.850 --> 01:11:41.010
Well, OK, so we write
these requirements.

01:11:41.010 --> 01:11:43.440
You guys write them on
paper or your tablet.

01:11:43.440 --> 01:11:47.250
But how do these requirements
actually get recorded, right?

01:11:47.250 --> 01:11:48.360
And managed.

01:11:48.360 --> 01:11:50.917
So I would say
there's sort of two--

01:11:50.917 --> 01:11:52.500
there's the low cost,
and then there's

01:11:52.500 --> 01:11:55.640
sort of the professional
version of doing this.

01:11:55.640 --> 01:11:58.230
The easy way to do it
is you just write them,

01:11:58.230 --> 01:12:00.420
you capture them in a document.

01:12:00.420 --> 01:12:04.530
So that means Microsoft
Word, Excel, Google

01:12:04.530 --> 01:12:09.930
Docs, just a document, a well
written, organized document.

01:12:09.930 --> 01:12:12.060
And then you capture and
revise your requirements.

01:12:12.060 --> 01:12:14.640
And the one thing I
strongly recommend

01:12:14.640 --> 01:12:18.110
is using hyperlinks
to link requirements.

01:12:18.110 --> 01:12:22.890
And this is the idea
that every requirement

01:12:22.890 --> 01:12:25.044
has to be linked to
some other requirement.

01:12:25.044 --> 01:12:27.210
So if it's a low level
requirement, you want to ask,

01:12:27.210 --> 01:12:29.530
well, where does that come from?

01:12:29.530 --> 01:12:31.020
Why did we write
that requirement?

01:12:31.020 --> 01:12:33.240
Well, it has a
parent requirement.

01:12:33.240 --> 01:12:35.250
You want to have
a hyperlink there

01:12:35.250 --> 01:12:37.270
to get you from
one to the other.

01:12:37.270 --> 01:12:39.030
And I have a little
example for that.

01:12:41.860 --> 01:12:47.430
And I think this is OK for
smaller projects, where

01:12:47.430 --> 01:12:50.070
you have dozens or a few
hundred requirements, right?

01:12:50.070 --> 01:12:52.590
And so here's my rule
of thumb for this.

01:12:52.590 --> 01:12:54.720
Do you remember
the magic number 7?

01:12:54.720 --> 01:12:57.300
So we talked last
time, where does

01:12:57.300 --> 01:13:00.000
the world of really
complex systems start.

01:13:00.000 --> 01:13:03.000
And the argument was, well, if
you need more than three levels

01:13:03.000 --> 01:13:04.110
of the decomposition.

01:13:04.110 --> 01:13:05.140
What does that mean?

01:13:05.140 --> 01:13:08.580
Well, 7 plus, minus
2 to the third power

01:13:08.580 --> 01:13:13.890
is somewhere between
125 and 729, right?

01:13:13.890 --> 01:13:16.980
So if you're sort of in
that world or fewer, right?

01:13:16.980 --> 01:13:21.020
If a few hundred, a few dozen,
or few hundred requirements

01:13:21.020 --> 01:13:23.640
kind of what we have in CanSat.

01:13:23.640 --> 01:13:26.130
It's OK to do it this way.

01:13:26.130 --> 01:13:28.241
It's still going to be
a lot of requirements.

01:13:28.241 --> 01:13:29.490
And you have to do a good job.

01:13:29.490 --> 01:13:31.530
But you can do it that way.

01:13:31.530 --> 01:13:34.710
If you have more than that,
and that typically means

01:13:34.710 --> 01:13:37.740
more than 1,000
requirements to handle,

01:13:37.740 --> 01:13:41.880
and there are big projects
that have 5,000, 10,000

01:13:41.880 --> 01:13:46.260
requirements, there is no way
you can manage that effectively

01:13:46.260 --> 01:13:48.720
in a kind of document based way.

01:13:48.720 --> 01:13:51.180
So what you need
then is a database.

01:13:51.180 --> 01:13:52.980
You basically capture
the requirements

01:13:52.980 --> 01:13:55.620
in a relational
database where that

01:13:55.620 --> 01:13:57.400
allows you to link
each requirement

01:13:57.400 --> 01:13:58.480
to other requirements.

01:13:58.480 --> 01:14:02.430
And so this is not meant
as an advertisement,

01:14:02.430 --> 01:14:06.570
but one of the most heavily
used requirements tools

01:14:06.570 --> 01:14:08.880
out there is called, DOORS.

01:14:08.880 --> 01:14:14.100
And this was relatively
recently bought by IBM.

01:14:14.100 --> 01:14:15.360
This was a separate company.

01:14:15.360 --> 01:14:17.280
It was bought by
IBM and included it

01:14:17.280 --> 01:14:23.250
in a suite of software tools
called IBM Rational for System

01:14:23.250 --> 01:14:24.540
Development.

01:14:24.540 --> 01:14:26.400
And so DOORS allows you.

01:14:26.400 --> 01:14:28.170
It's a database,
relational database,

01:14:28.170 --> 01:14:30.450
that allows you to write
requirements, share

01:14:30.450 --> 01:14:31.110
requirements.

01:14:31.110 --> 01:14:33.540
And the latest version
of DOORS is actually

01:14:33.540 --> 01:14:36.570
web based, so you can
have people in India,

01:14:36.570 --> 01:14:39.990
in Europe, in the US, you're
co-developing a system.

01:14:39.990 --> 01:14:42.390
You can all write
requirements and manage them

01:14:42.390 --> 01:14:43.890
on this common database, right?

01:14:43.890 --> 01:14:46.340
Because if you have a
document, very quickly

01:14:46.340 --> 01:14:48.000
it's going to be
confusing, as what's

01:14:48.000 --> 01:14:51.690
the latest version, who
has the latest update.

01:14:51.690 --> 01:14:53.501
Version management
becomes a nightmare.

01:14:54.000 --> 01:14:55.890
So just so you're aware of this.

01:14:55.890 --> 01:14:58.037
We're not going to be
using DOORS in this class.

01:14:58.037 --> 01:14:59.370
We'll just do it document based.

01:14:59.370 --> 01:15:01.620
But you know the
rule of thumb here

01:15:01.620 --> 01:15:03.240
is, more than
1,000 requirements,

01:15:03.240 --> 01:15:06.370
you've got to go to some
professional solution.

01:15:06.370 --> 01:15:09.600
So here's a very sort
of trivial example

01:15:09.600 --> 01:15:12.330
of hierarchical
requirements with links.

01:15:12.330 --> 01:15:14.020
Requirement one,
the systems shall

01:15:14.020 --> 01:15:17.700
fit into a volume not
exceeding one cubic meter.

01:15:17.700 --> 01:15:19.160
And then we have
sub-requirements.

01:15:19.160 --> 01:15:24.230
The system's width shall
be between 0.5 and 1 meter.

01:15:24.230 --> 01:15:26.190
The height, the depth.

01:15:26.190 --> 01:15:28.290
The system shall
be made entirely

01:15:28.290 --> 01:15:30.660
from aluminum 60/60 alloy.

01:15:30.660 --> 01:15:32.550
A sub-requirement
here is the system

01:15:32.550 --> 01:15:35.770
shall not contain any
internal voids or cavities.

01:15:35.770 --> 01:15:39.690
Requirement three, the shape
of the system must be a cube.

01:15:39.690 --> 01:15:42.390
And then a sub-requirement,
the angles between the sides

01:15:42.390 --> 01:15:45.670
shall be 90 degrees
plus or minus 1 degree.

01:15:45.670 --> 01:15:48.660
And so I did this here
just in the slides.

01:15:48.660 --> 01:15:52.030
But if you click on this,
it'll actually transport you

01:15:52.030 --> 01:15:53.570
into another requirement.

01:15:53.570 --> 01:15:55.080
This is the requirement four.

01:15:55.080 --> 01:15:58.890
The mass of the system shall not
exceed 2,700 kilograms, right?

01:15:58.890 --> 01:16:04.110
Aluminum has a density
of about 2,700 kilograms

01:16:04.110 --> 01:16:05.550
per cubic meter.

01:16:05.550 --> 01:16:07.710
So I click back, it
transports me back

01:16:07.710 --> 01:16:09.620
to the earlier requirement.

01:16:09.620 --> 01:16:15.150
So the fact that it's made of
aluminum and the volume cannot

01:16:15.150 --> 01:16:18.840
exceed one cubic meter,
then this requirement four,

01:16:18.840 --> 01:16:20.040
the mass shall not exceed.

01:16:20.040 --> 01:16:21.670
It's not an independent
requirement.

01:16:21.670 --> 01:16:24.330
It's an dependent or
derived requirement

01:16:24.330 --> 01:16:25.980
based on the first two.

01:16:25.980 --> 01:16:27.260
And therefore, they're linked.

01:16:27.260 --> 01:16:29.170
Do you see how this works?

01:16:29.170 --> 01:16:32.430
And to really manage
requirements well and then link

01:16:32.430 --> 01:16:34.530
them, use these hyperlinks.

01:16:34.530 --> 01:16:37.930
It's very, very effective.

01:16:37.930 --> 01:16:40.990
So what would be an object that
satisfies these requirements?

01:16:40.990 --> 01:16:43.830
So here's our one
cubic meter envelope.

01:16:43.830 --> 01:16:46.500
So an aluminum cube
with a side length

01:16:46.500 --> 01:16:51.000
of 60 centimeters this
volume and this mass

01:16:51.000 --> 01:16:52.590
will satisfy the requirements.

01:16:52.590 --> 01:16:53.730
It's not the only thing.

01:16:53.730 --> 01:16:58.014
There's a lot of
other geometries

01:16:58.014 --> 01:16:58.930
that would satisfy it.

01:16:58.930 --> 01:17:01.230
But this particular
instantiation

01:17:01.230 --> 01:17:03.700
would satisfy
these requirements.

01:17:03.700 --> 01:17:06.840
So that's the idea
hierarchical requirements,

01:17:06.840 --> 01:17:10.560
linking them to hyperlinks.

01:17:10.560 --> 01:17:13.770
OK, so let me talk briefly
about the challenges now

01:17:13.770 --> 01:17:15.150
of requirements definition.

01:17:15.150 --> 01:17:16.840
And there's-- this is not easy.

01:17:16.840 --> 01:17:18.670
There's a lot of challenges.

01:17:18.670 --> 01:17:21.000
The first one is
requirements allocation.

01:17:21.000 --> 01:17:23.310
You know, there's composition
and flowing requirements

01:17:23.310 --> 01:17:24.930
to the lower levels.

01:17:24.930 --> 01:17:27.510
And then the idea
is that, whatever

01:17:27.510 --> 01:17:30.210
requirements you derive
at a lower level,

01:17:30.210 --> 01:17:33.990
if you satisfy the lower
level requirements, that

01:17:33.990 --> 01:17:37.320
should guarantee that you then
automatically satisfy a higher

01:17:37.320 --> 01:17:40.170
level requirements from
which the lower level

01:17:40.170 --> 01:17:42.180
requirements were derived.

01:17:42.180 --> 01:17:45.590
That's the basic idea of
requirements allocation.

01:17:45.590 --> 01:17:47.390
And so the way you
can think of this,

01:17:47.390 --> 01:17:50.020
graphically, is we start
out at the high level.

01:17:50.020 --> 01:17:51.290
Here's our stakeholders.

01:17:51.290 --> 01:17:53.330
Stakeholder needs requirements.

01:17:53.330 --> 01:17:54.830
This is level 0.

01:17:54.830 --> 01:17:56.660
You set the system boundary.

01:17:56.660 --> 01:17:58.430
What's the lifecycle?

01:17:58.430 --> 01:17:59.730
And then we apply it.

01:17:59.730 --> 01:18:01.640
That's our first application.

01:18:01.640 --> 01:18:04.370
And then we apply it by
decomposing the system

01:18:04.370 --> 01:18:07.080
into its function.

01:18:07.080 --> 01:18:09.087
And so that's the
second application.

01:18:09.087 --> 01:18:10.670
And then you say,
well, how do these--

01:18:10.670 --> 01:18:13.770
how will these companies
be carried out?

01:18:13.770 --> 01:18:15.980
So we define subsystems.

01:18:15.980 --> 01:18:19.250
And essentially, then,
the subsystem requirements

01:18:19.250 --> 01:18:21.320
are derived from the
functional requirements.

01:18:21.320 --> 01:18:25.510
And you put numbers, key
system performance parameters,

01:18:25.510 --> 01:18:26.350
behind these.

01:18:26.350 --> 01:18:28.490
And depending on the
complexity of the system,

01:18:28.490 --> 01:18:30.790
you may have to go
multiple layers down.

01:18:30.790 --> 01:18:33.440
But that's the basic
requirements allocation

01:18:33.440 --> 01:18:35.810
process.

01:18:35.810 --> 01:18:37.250
And I think I said this already.

01:18:37.250 --> 01:18:40.820
It's difficult to do and
stay solution neutral

01:18:40.820 --> 01:18:44.030
the deeper you go into this.

01:18:44.030 --> 01:18:46.910
Let me briefly
mention, this will not

01:18:46.910 --> 01:18:48.990
be, we will not sort
of test you on this.

01:18:48.990 --> 01:18:51.870
But I want to make
you aware of this.

01:18:51.870 --> 01:18:54.620
A methodology called
ISO performance.

01:18:54.620 --> 01:18:59.990
And that was actually the
topic of my dissertation.

01:18:59.990 --> 01:19:04.400
How do you allocate requirements
to lower level parameters

01:19:04.400 --> 01:19:08.000
in systems, when a higher
level requirement is defined,

01:19:08.000 --> 01:19:09.110
is clear.

01:19:09.110 --> 01:19:13.550
So the idea is that you have a
vector of desired performance

01:19:13.550 --> 01:19:14.960
requirements.

01:19:14.960 --> 01:19:17.300
And you want to
understand, first of all,

01:19:17.300 --> 01:19:20.120
you want to understand are
those requirements feasible.

01:19:20.120 --> 01:19:21.920
And if they are
feasible, it usually

01:19:21.920 --> 01:19:24.740
means there is more than one way
that these requirements could

01:19:24.740 --> 01:19:26.990
be satisfied, that the higher
level requirements could

01:19:26.990 --> 01:19:28.230
be satisfied.

01:19:28.230 --> 01:19:32.810
So find different non-unique
feasible combinations

01:19:32.810 --> 01:19:36.260
to satisfy the high
level requirements.

01:19:36.260 --> 01:19:38.870
And so this is one
of the readings.

01:19:38.870 --> 01:19:40.850
Very quickly, we have
our design space.

01:19:40.850 --> 01:19:42.930
We have our objective space.

01:19:42.930 --> 01:19:46.100
And then we have this
cost risk objective space.

01:19:46.100 --> 01:19:48.410
And so the idea is that,
in the performance space,

01:19:48.410 --> 01:19:49.910
you have the shall statements.

01:19:49.910 --> 01:19:52.516
You shall perform at that level.

01:19:52.516 --> 01:19:53.640
And that's this point here.

01:19:53.640 --> 01:19:55.490
That's your performance target.

01:19:55.490 --> 01:20:00.740
And if it's in this gray
area, it's actually feasible.

01:20:00.740 --> 01:20:04.170
And it usually means there's
more than one way to do it.

01:20:04.170 --> 01:20:07.310
So if you can then map
backwards to the design space,

01:20:07.310 --> 01:20:11.180
these points here are
all ISO performance,

01:20:11.180 --> 01:20:15.620
meaning they all
satisfy and provide

01:20:15.620 --> 01:20:16.730
this level of performance.

01:20:16.730 --> 01:20:18.860
But they do it in
different ways.

01:20:18.860 --> 01:20:22.130
And then in order to
select the final design

01:20:22.130 --> 01:20:24.080
or final requirements
set, you want

01:20:24.080 --> 01:20:25.400
to look at other objectives.

01:20:25.400 --> 01:20:27.980
This is where the should
statements come in.

01:20:27.980 --> 01:20:31.310
And these are typically cost
and risk related objectives.

01:20:31.310 --> 01:20:34.400
So let me give you,
this sounds pretty

01:20:34.400 --> 01:20:35.780
abstract and theoretical.

01:20:35.780 --> 01:20:38.120
Let me give you a
very specific example.

01:20:38.120 --> 01:20:42.080
This was my case study,
the Space Telescope.

01:20:42.080 --> 01:20:45.890
This is the actually this has
now become the James Webb Space

01:20:45.890 --> 01:20:46.760
Telescope.

01:20:46.760 --> 01:20:48.300
Hasn't launched yet.

01:20:48.300 --> 01:20:50.220
This is 20 years ago.

01:20:50.220 --> 01:20:52.440
We've been working on the
James Webb for a long time.

01:20:52.440 --> 01:20:54.680
But if it works, it
will be exciting,

01:20:54.680 --> 01:20:58.100
because it's going to get us
very, very close to the Big

01:20:58.100 --> 01:20:58.830
Bang, right?

01:20:58.830 --> 01:21:03.190
That's what James Webb will
look in the highly redshifted

01:21:03.190 --> 01:21:06.380
infrared to really see the
formation of the earliest

01:21:06.380 --> 01:21:08.130
proto-galaxies in the universe.

01:21:08.130 --> 01:21:11.340
So if this works, it
will be very exciting.

01:21:11.340 --> 01:21:15.120
So here's, essentially, a
model of the spacecraft.

01:21:15.120 --> 01:21:17.600
This is a precursor
to James Webb.

01:21:17.600 --> 01:21:20.330
And the big thing
you need to do is

01:21:20.330 --> 01:21:26.420
you need to point and be very,
very stable for a long time

01:21:26.420 --> 01:21:29.100
to take in these very,
very faint images.

01:21:29.100 --> 01:21:32.030
So we have wavefront error
phasing requirements.

01:21:32.030 --> 01:21:33.905
And then we have these
pointing requirements.

01:21:33.905 --> 01:21:37.640
You've got to a point
very stable and in order

01:21:37.640 --> 01:21:40.820
to achieve this optical
pointing performance,

01:21:40.820 --> 01:21:45.740
we have the structure
of the spacecraft.

01:21:45.740 --> 01:21:47.030
We have reaction wheels.

01:21:47.030 --> 01:21:48.430
We have controllers.

01:21:48.430 --> 01:21:51.290
And there is noise, different
kinds of noise sources

01:21:51.290 --> 01:21:55.420
that are trying to basically
prevent us from pointing

01:21:55.420 --> 01:21:57.350
with this precision.

01:21:57.350 --> 01:22:01.970
So very quickly, this is what
this Nexus precursor spacecraft

01:22:01.970 --> 01:22:05.240
looks like in the
deploy configuration,

01:22:05.240 --> 01:22:10.740
here on the upper right in
the stowed configuration.

01:22:10.740 --> 01:22:12.480
Initial performance assessment.

01:22:12.480 --> 01:22:14.660
So this is really trying
to define the requirements

01:22:14.660 --> 01:22:19.540
for deriving the requirements
for the structure,

01:22:19.540 --> 01:22:21.650
for the optics,
for the controller,

01:22:21.650 --> 01:22:23.600
knowing that this is the point.

01:22:23.600 --> 01:22:26.330
If you want to have
this science happen,

01:22:26.330 --> 01:22:28.310
you've got a point
with that precision.

01:22:28.310 --> 01:22:28.910
That is known.

01:22:28.910 --> 01:22:31.970
So let's flow that down.

01:22:31.970 --> 01:22:35.400
So if we look at the pointing,
for example, here on the right,

01:22:35.400 --> 01:22:37.460
this is kind of fuzzy furball.

01:22:37.460 --> 01:22:38.930
What does that represent?

01:22:38.930 --> 01:22:42.400
That's a time domain simulation
of the centroid of the image,

01:22:42.400 --> 01:22:42.900
right?

01:22:42.900 --> 01:22:46.440
The telescope is now
observing a part of the sky,

01:22:46.440 --> 01:22:49.620
trying to get these
early proto-galaxies.

01:22:49.620 --> 01:22:52.110
And it's flexible.

01:22:52.110 --> 01:22:53.740
It's a very
lightweight telescope.

01:22:53.740 --> 01:22:56.160
It has these reaction
wheels are turning,

01:22:56.160 --> 01:22:57.690
trying to keep it stable.

01:22:57.690 --> 01:23:00.130
You have electronic
sources of noise.

01:23:00.130 --> 01:23:04.020
So the blue furball here
predicts that we would not

01:23:04.020 --> 01:23:05.130
meet the requirements.

01:23:05.130 --> 01:23:07.350
This is some initial
design, some initial set

01:23:07.350 --> 01:23:08.520
of requirements.

01:23:08.520 --> 01:23:12.210
We need to find a way
to get down to the--

01:23:12.210 --> 01:23:14.520
this is about 15 microns--

01:23:14.520 --> 01:23:16.210
[? root mean ?] square error.

01:23:16.210 --> 01:23:20.010
So it's about three times worse
than what we need to achieve.

01:23:20.010 --> 01:23:21.900
And the requirement
is we need to get down

01:23:21.900 --> 01:23:25.450
to 5 microns of pointing
or jitter precision.

01:23:25.450 --> 01:23:27.720
So how do we do this?

01:23:27.720 --> 01:23:30.780
So what ISO
performance does is it

01:23:30.780 --> 01:23:33.150
looks at the sensitivities
in the system.

01:23:33.150 --> 01:23:35.400
What are all the
things that influence

01:23:35.400 --> 01:23:38.190
the pointing performance
of the telescope.

01:23:38.190 --> 01:23:40.600
And you can see here.

01:23:40.600 --> 01:23:42.000
These are the two
key performance

01:23:42.000 --> 01:23:46.530
measures on the left, wavefront
error, and then line of sight.

01:23:46.530 --> 01:23:49.320
And the bars
essentially tell you

01:23:49.320 --> 01:23:51.940
what are the really
sensitive parameters that

01:23:51.940 --> 01:23:53.285
drive performance.

01:23:53.285 --> 01:23:56.880
So disturbance parameters,
planned structural parameters,

01:23:56.880 --> 01:23:58.280
optics, and then controls.

01:23:58.280 --> 01:24:00.510
So it's really
multi-disciplinary.

01:24:00.510 --> 01:24:02.640
And what's neat
about it is you can,

01:24:02.640 --> 01:24:04.680
if you know these
sensitivities, you

01:24:04.680 --> 01:24:07.950
can essentially calculate
the Jacobian a matrix.

01:24:07.950 --> 01:24:09.750
The Jacobian matrix
is essentially

01:24:09.750 --> 01:24:12.720
the partial derivatives
of your performance, which

01:24:12.720 --> 01:24:15.210
is your higher level
requirement, with respect

01:24:15.210 --> 01:24:18.570
to these lower level
parameters or requirements.

01:24:18.570 --> 01:24:23.520
And you can then find, using
this essentially the null space

01:24:23.520 --> 01:24:26.010
of the Jacobian matrix,
that will tell you

01:24:26.010 --> 01:24:30.520
how do you move in that space
to keep the performance fixed

01:24:30.520 --> 01:24:33.100
at the requirement level.

01:24:33.100 --> 01:24:37.020
Let me explain this just
using two parameters.

01:24:37.020 --> 01:24:40.140
And this was a big deal in
the Hubble Space Telescope.

01:24:40.140 --> 01:24:41.820
So the two parameters
I'm going to use

01:24:41.820 --> 01:24:46.810
are KR ISO and UD, the
dynamic wheel and balance.

01:24:46.810 --> 01:24:49.080
So these spacecrafts
have reaction wheels

01:24:49.080 --> 01:24:52.620
that are turning to
point the spacecraft

01:24:52.620 --> 01:24:55.610
and counteract any momentum
that you get from, for example,

01:24:55.610 --> 01:24:57.090
from solar pressure.

01:24:57.090 --> 01:25:02.010
So UD is the amount of imbalance
that you have in these wheels.

01:25:02.010 --> 01:25:04.860
If you have imbalance,
that will cause chatter.

01:25:04.860 --> 01:25:08.010
It will cost torques, which
will cause that jitter.

01:25:08.010 --> 01:25:14.460
And then KR ISO is the vibration
isolation of the reaction wheel

01:25:14.460 --> 01:25:15.250
assembly.

01:25:15.250 --> 01:25:18.780
How stiff or soft is
the vibration isolation.

01:25:18.780 --> 01:25:20.340
And what you can
see in this clock

01:25:20.340 --> 01:25:21.870
is that, our initial design--

01:25:21.870 --> 01:25:23.820
this is based on a simulation--

01:25:23.820 --> 01:25:26.970
does not satisfy a
higher level requirement.

01:25:26.970 --> 01:25:29.940
In order to satisfy that, we
need to go down to the blue

01:25:29.940 --> 01:25:35.490
line, labelled with 5
microns appointing precision.

01:25:35.490 --> 01:25:39.060
And what you can see is that
there are different ways

01:25:39.060 --> 01:25:41.370
to achieve that 5 microns.

01:25:41.370 --> 01:25:44.580
We could go over here.

01:25:44.580 --> 01:25:46.530
This is labeled as HST.

01:25:46.530 --> 01:25:49.110
That's what Hubble
Space Telescope is.

01:25:49.110 --> 01:25:51.240
The Hubble Space
Telescope basically

01:25:51.240 --> 01:25:55.470
went for ultra, ultra,
ultra quiet reaction wheels,

01:25:55.470 --> 01:25:59.260
very, very low
dynamic imbalance.

01:25:59.260 --> 01:26:02.910
So [? Marissa, ?] you
talked about buying sensors

01:26:02.910 --> 01:26:04.830
from a supplier and
putting them in.

01:26:04.830 --> 01:26:06.240
These reactors,
there's companies

01:26:06.240 --> 01:26:08.580
that really specialize
in making reaction wheels

01:26:08.580 --> 01:26:10.270
and things like that.

01:26:10.270 --> 01:26:12.480
So if you're going to
go for this point here.

01:26:12.480 --> 01:26:15.990
Let me point that out again,
so you guys can see it at EPFL.

01:26:15.990 --> 01:26:19.140
If you're going to go, if you're
going to derive and allocate

01:26:19.140 --> 01:26:21.840
this requirement, it means
you put a lot of pressure

01:26:21.840 --> 01:26:25.650
on your supplier to achieve
that level of dynamic wheel

01:26:25.650 --> 01:26:27.380
imbalance.

01:26:27.380 --> 01:26:28.830
If they can do it, that's great.

01:26:28.830 --> 01:26:30.600
But it could be very expensive.

01:26:30.600 --> 01:26:35.850
But it makes your job easier
as the spacecraft integrator.

01:26:35.850 --> 01:26:40.740
Or you can go straight down to
this point here called spec.

01:26:40.740 --> 01:26:45.720
So you're essentially tolerating
a noisier reaction wheel.

01:26:45.720 --> 01:26:50.680
But then you need a very, very
soft, very capable isolation

01:26:50.680 --> 01:26:53.790
stage, very soft isolator.

01:26:53.790 --> 01:26:57.462
What's the disadvantage of
having very soft isolation?

01:26:57.462 --> 01:26:58.920
What do you think
is the big issue?

01:27:01.794 --> 01:27:05.630
AUDIENCE: [INAUDIBLE]

01:27:05.630 --> 01:27:06.810
PROFESSOR: So the launch.

01:27:06.810 --> 01:27:10.030
You probably have to lock
it down during launch.

01:27:10.030 --> 01:27:11.950
You have a big displacements.

01:27:11.950 --> 01:27:14.860
You need, if you have a very
soft isolation stage, you

01:27:14.860 --> 01:27:17.140
need volume,
because the isolator

01:27:17.140 --> 01:27:19.320
is going to move a lot, right?

01:27:19.320 --> 01:27:21.760
And you may not
have that volume.

01:27:21.760 --> 01:27:24.760
Or you could do a
little bit of each.

01:27:24.760 --> 01:27:27.070
So this test point here.

01:27:27.070 --> 01:27:30.430
We're going to have quieter
wheels, but not ultra quiet.

01:27:30.430 --> 01:27:32.110
And we're going to
have a soft isolator.

01:27:32.110 --> 01:27:34.970
But we have the right
combination of the two.

01:27:34.970 --> 01:27:37.870
And we're going to go
for that point there.

01:27:37.870 --> 01:27:40.150
So now if you go for
that point, you're

01:27:40.150 --> 01:27:42.590
going to satisfy your
pointing requirement,

01:27:42.590 --> 01:27:45.160
bu you've allocate at the
lower level requirement,

01:27:45.160 --> 01:27:48.910
in this case, to the isolation
stage and the dynamic wheel

01:27:48.910 --> 01:27:50.890
imbalance in a kind
of balanced way.

01:27:50.890 --> 01:27:53.920
So everybody's job is
roughly equally difficult.

01:27:53.920 --> 01:27:55.400
That's the sort of idea here.

01:27:55.400 --> 01:27:56.650
Yes?

01:27:56.650 --> 01:27:59.560
AUDIENCE: Does this model assume
that all of these variables

01:27:59.560 --> 01:28:03.130
are independent
and, I guess, kind

01:28:03.130 --> 01:28:08.000
of continuous in terms of you
can incrementally work better?

01:28:08.000 --> 01:28:10.990
PROFESSOR: So they're not
independent in the sense

01:28:10.990 --> 01:28:13.620
that they're coupled through
the performance of the system.

01:28:13.620 --> 01:28:15.370
But you can choose--
the assumption is you

01:28:15.370 --> 01:28:18.550
can choose these independently.

01:28:18.550 --> 01:28:20.170
But they're coupled,
because you need

01:28:20.170 --> 01:28:21.820
to achieve that requirement.

01:28:21.820 --> 01:28:23.860
And yes, in this case,
they're continuous.

01:28:23.860 --> 01:28:26.960
But you can think of this
as a discrete, as well.

01:28:26.960 --> 01:28:29.440
So for example, the
reaction wheels could be,

01:28:29.440 --> 01:28:33.040
you're picking from a
catalog, in which case

01:28:33.040 --> 01:28:36.940
now you're really picking
specifications for components

01:28:36.940 --> 01:28:40.310
that are off the shelf.

01:28:40.310 --> 01:28:42.010
OK, so let me--

01:28:42.010 --> 01:28:43.580
I'm going to skip here for time.

01:28:43.580 --> 01:28:47.200
So basically, following this
ISO performance process,

01:28:47.200 --> 01:28:50.310
you can go from some initial
requirements, derived

01:28:50.310 --> 01:28:53.940
requirements that
are infeasible, to,

01:28:53.940 --> 01:28:57.170
in blue here I'm showing
you the results of this.

01:28:57.170 --> 01:28:58.547
It's very close to 5.

01:28:58.547 --> 01:29:00.130
There's some numerical
tolerance here.

01:29:00.130 --> 01:29:03.970
But by but essentially
rebalancing the requirements

01:29:03.970 --> 01:29:06.550
within the system, we're
achieving a higher level

01:29:06.550 --> 01:29:07.310
requirement.

01:29:07.310 --> 01:29:09.430
But in a way that
this [INAUDIBLE]

01:29:09.430 --> 01:29:13.940
sort of the challenge
equitably across sub-systems.

01:29:13.940 --> 01:29:15.060
Does that make sense?

01:29:15.060 --> 01:29:17.710
At EPFL, did you
guys follow this?

01:29:17.710 --> 01:29:19.030
I know this was a bit fast.

01:29:19.030 --> 01:29:23.080
But that's the basic
idea of ISO performance.

01:29:23.080 --> 01:29:24.402
Any questions on your side?

01:29:28.340 --> 01:29:31.620
AUDIENCE: [INAUDIBLE]

01:29:31.620 --> 01:29:33.690
AUDIENCE: Maybe I have one.

01:29:33.690 --> 01:29:35.810
So given that you have
[? distance ?] requirements

01:29:35.810 --> 01:29:39.580
and you probably have
[INAUDIBLE] for each one,

01:29:39.580 --> 01:29:41.725
is there a way that we
would integrate all those

01:29:41.725 --> 01:29:46.550
[? lines, ?] that you could
see the [INAUDIBLE] for those?

01:29:46.550 --> 01:29:48.300
If you don't mind,
maybe it's a little bit

01:29:48.300 --> 01:29:50.674
[? softer, ?] but maybe there's
another requirement where

01:29:50.674 --> 01:29:55.284
[INAUDIBLE]

01:29:58.220 --> 01:30:02.508
PROFESSOR: [INAUDIBLE]

01:30:02.508 --> 01:30:04.472
AUDIENCE: We don't hear you.

01:30:21.190 --> 01:30:23.530
PROFESSOR: Sorry, guys,
ran out of battery here.

01:30:23.530 --> 01:30:24.979
Can you hear me again?

01:30:27.880 --> 01:30:29.240
Can you hear me?

01:30:29.240 --> 01:30:30.540
Yeah?

01:30:30.540 --> 01:30:34.260
So the question was,
well if you have multiple

01:30:34.260 --> 01:30:37.230
of these performance, ISO
performance lines, that's

01:30:37.230 --> 01:30:38.090
exactly right.

01:30:38.090 --> 01:30:41.220
If you have a vector of
higher level requirements,

01:30:41.220 --> 01:30:44.039
you're going to have ISO
performance surfaces.

01:30:44.039 --> 01:30:45.830
And so it gets, you
know, the more of these

01:30:45.830 --> 01:30:49.660
you have to satisfy at the
same time, the more complex

01:30:49.660 --> 01:30:50.310
this gets.

01:30:50.310 --> 01:30:53.010
But we can handle
that computationally.

01:30:53.010 --> 01:30:55.920
So you have to do some
simulation and computation

01:30:55.920 --> 01:30:58.140
upfront to make sure you pick.

01:30:58.140 --> 01:31:02.170
These requirements are
not just wild guesses.

01:31:02.170 --> 01:31:05.360
They're actually based on some
calculation and simulation.

01:31:05.360 --> 01:31:07.590
OK?

01:31:07.590 --> 01:31:08.220
All right.

01:31:08.220 --> 01:31:10.620
So let's do this.

01:31:10.620 --> 01:31:12.990
Let's do this in a
kind of simplified way.

01:31:12.990 --> 01:31:17.200
This is going to be our last
concept question for today.

01:31:17.200 --> 01:31:21.030
Here's the higher level
requirement is a balloon.

01:31:21.030 --> 01:31:23.941
Those of you that have done
unified engineering here,

01:31:23.941 --> 01:31:24.940
you've done this, right?

01:31:24.940 --> 01:31:26.460
We did this in unified.

01:31:26.460 --> 01:31:29.850
A balloon shall lift the payload
of 1,000 kilograms, which

01:31:29.850 --> 01:31:33.030
includes its own mass.

01:31:33.030 --> 01:31:36.780
You can use either helium,
which has a density of 0.2

01:31:36.780 --> 01:31:38.260
kilograms per cubic meters.

01:31:38.260 --> 01:31:40.200
This is in standard
atmosphere conditions.

01:31:40.200 --> 01:31:42.240
Or hydrogen, 0.1.

01:31:42.240 --> 01:31:45.230
I've rounded these
numbers, as a lift gas.

01:31:45.230 --> 01:31:50.400
The standard density
of air is 1.3.

01:31:50.400 --> 01:31:54.360
Which of the following
requirements is infeasible?

01:31:54.360 --> 01:31:56.340
A, the balloon
shall have a radius

01:31:56.340 --> 01:31:58.920
of 6.1 meters and
the balloon shall

01:31:58.920 --> 01:32:02.190
use 99.9 percent pure helium.

01:32:02.190 --> 01:32:05.800
B, a radius of 5.9
and the balloon

01:32:05.800 --> 01:32:11.310
shall use 99.99 point percent
hydrogen as a lift gas.

01:32:11.310 --> 01:32:16.920
And then 5.9 meters helium,
6.1 meters hydrogen,

01:32:16.920 --> 01:32:19.620
all these requirements
actually are OK.

01:32:19.620 --> 01:32:23.320
Or none of these
requirements are feasible.

01:32:23.320 --> 01:32:28.080
OK, so I'll give you I'll
give you three minutes

01:32:28.080 --> 01:32:31.110
to try and figure this out.

01:32:31.110 --> 01:32:34.090
And then I'll show
you the solution.

01:32:34.090 --> 01:32:34.590
Don't cheat.

01:32:34.590 --> 01:32:35.714
Don't go to the next chart.

01:32:39.610 --> 01:32:42.910
So think about this the
high level requirement is

01:32:42.910 --> 01:32:45.520
the balloon shall
lift 1,000 kilograms,

01:32:45.520 --> 01:32:47.410
including its own mass.

01:32:47.410 --> 01:32:51.010
And we're trying to allocate
lower level requirements

01:32:51.010 --> 01:32:54.970
for the size of the
balloon and the gas

01:32:54.970 --> 01:32:58.275
that we're going to use.

01:32:58.275 --> 01:32:59.772
So try to figure this out.

01:33:05.699 --> 01:33:07.240
All right, I think
we probably need--

01:33:07.240 --> 01:33:08.740
who needs more time for this?

01:33:11.440 --> 01:33:15.740
OK, so we're going to leave
this as a cliffhanger, OK?

01:33:15.740 --> 01:33:18.530
We'll do the solution next time.

01:33:18.530 --> 01:33:21.380
And take a little time
to figure this out.

01:33:21.380 --> 01:33:23.990
Try not to look at
the next slide, OK?

01:33:23.990 --> 01:33:27.440
So I'm going to skip
this just for time.

01:33:27.440 --> 01:33:30.950
And I want to talk briefly about
the SRR, what it is, and then

01:33:30.950 --> 01:33:32.630
kick off assignment 2.

01:33:32.630 --> 01:33:33.890
So SRR.

01:33:33.890 --> 01:33:36.500
So the idea is you've
really been working

01:33:36.500 --> 01:33:38.990
on these requirements
hard, you know, as a team,

01:33:38.990 --> 01:33:40.309
with your customers.

01:33:40.309 --> 01:33:42.100
And this takes-- this
is not a quick thing.

01:33:42.100 --> 01:33:43.558
This is not just
two or three days.

01:33:43.558 --> 01:33:46.520
Typically, writing
your level 0, level

01:33:46.520 --> 01:33:51.470
1 requirements is a process
that takes weeks, months,

01:33:51.470 --> 01:33:54.980
sometimes at least a year.

01:33:54.980 --> 01:33:58.490
But typically, it's on the
order of three to six months

01:33:58.490 --> 01:34:00.620
in many projects, roughly.

01:34:00.620 --> 01:34:03.570
And once you have your
high level requirements,

01:34:03.570 --> 01:34:07.180
SRR is the milestone where
you review those, right?

01:34:07.180 --> 01:34:09.710
So here's an example.

01:34:09.710 --> 01:34:11.300
So it's a social.

01:34:11.300 --> 01:34:13.220
It's a peer review process.

01:34:13.220 --> 01:34:16.700
And the main goal of SBAR
is to vet the requirements

01:34:16.700 --> 01:34:19.100
as they were written
to see if you have

01:34:19.100 --> 01:34:22.770
any missing, misstated,
redundant, or otherwise

01:34:22.770 --> 01:34:24.870
unsatisfactory requirements.

01:34:24.870 --> 01:34:29.690
This is a picture from JPL,
from MSL, actually, mission.

01:34:29.690 --> 01:34:32.090
And I want to just point
out a good friend of mine

01:34:32.090 --> 01:34:35.280
who is a graduate here of our
department, Richard Kornfeld.

01:34:35.280 --> 01:34:38.030
[? Voelker ?] knows him,
met him last summer.

01:34:38.030 --> 01:34:40.220
He's been working on
three different Mars

01:34:40.220 --> 01:34:42.021
missions over the last decade.

01:34:42.021 --> 01:34:43.520
And we're going to
hear from Richard

01:34:43.520 --> 01:34:47.180
later this semester about
verification of requirements,

01:34:47.180 --> 01:34:49.400
because he verified the
entry descent and landing

01:34:49.400 --> 01:34:51.770
requirements for MSL.

01:34:51.770 --> 01:34:57.040
So here's essentially what
it says in the NASA handbook.

01:34:57.040 --> 01:35:01.490
SRR happens during phase A,
before you go into phase B.

01:35:01.490 --> 01:35:04.940
And you need at least your top
two level requirements written

01:35:04.940 --> 01:35:06.685
before you can do the SRR.

01:35:09.410 --> 01:35:12.050
I do want to mention the
second reading post reading.

01:35:12.050 --> 01:35:14.600
This is about
requirements volatility.

01:35:14.600 --> 01:35:19.160
So just because you
past the SRR doesn't

01:35:19.160 --> 01:35:22.010
mean that the requirements
are completely frozen.

01:35:22.010 --> 01:35:24.860
First of all, you don't have a
lot of lower level requirements

01:35:24.860 --> 01:35:25.400
yet, right?

01:35:25.400 --> 01:35:28.610
Those are going to
be added post SRR.

01:35:28.610 --> 01:35:30.020
and even some of the--

01:35:30.020 --> 01:35:33.302
you pointed out, some of
you, the requirements creep

01:35:33.302 --> 01:35:34.010
and these things.

01:35:34.010 --> 01:35:38.540
So this second reading is about
requirements volatility, which

01:35:38.540 --> 01:35:40.220
you can actually quantify.

01:35:40.220 --> 01:35:42.890
What are the sources of
requirements volatility?

01:35:42.890 --> 01:35:44.810
That's what this
figure shows you.

01:35:44.810 --> 01:35:47.810
And then what is the impact
of requirements volatility?

01:35:50.580 --> 01:35:52.610
What is the impact of
requirements volatility

01:35:52.610 --> 01:35:53.990
on a project?

01:35:53.990 --> 01:35:57.200
So specifically, on the
number of system requirements,

01:35:57.200 --> 01:36:00.490
on rework, on project
schedule, and so forth.

01:36:00.490 --> 01:36:03.410
Really, it's a very,
very recent paper

01:36:03.410 --> 01:36:06.860
on requirements volatility.

01:36:06.860 --> 01:36:09.380
So let me just kick
off assignment 2.

01:36:09.380 --> 01:36:10.670
And then we'll be done.

01:36:10.670 --> 01:36:15.110
So assignment 2 goes out
today and is due in two weeks.

01:36:15.110 --> 01:36:17.270
So that's October 9.

01:36:17.270 --> 01:36:19.640
And it's very focused
on requirements.

01:36:19.640 --> 01:36:23.600
Basically, what I want you-- and
it's the same teams that you're

01:36:23.600 --> 01:36:27.020
in for all the assignments.

01:36:27.020 --> 01:36:29.540
Is essentially, first
of all, first task

01:36:29.540 --> 01:36:32.810
is find a project
or program where

01:36:32.810 --> 01:36:34.730
poorly written or
managed requirements

01:36:34.730 --> 01:36:36.090
were a major problem.

01:36:36.090 --> 01:36:40.670
So as a team, discuss an
example and discuss that example

01:36:40.670 --> 01:36:42.050
as a team.

01:36:42.050 --> 01:36:46.100
The second task is look
at those CanSat 2016

01:36:46.100 --> 01:36:49.580
requirements, those
47 base requirements

01:36:49.580 --> 01:36:51.740
and analyze those critically.

01:36:51.740 --> 01:36:55.730
So that means are they
feasible, are they well-written.

01:36:55.730 --> 01:36:56.990
Classify them.

01:36:56.990 --> 01:36:58.670
What type of requirement is it?

01:36:58.670 --> 01:37:00.230
Is it an interface requirement?

01:37:00.230 --> 01:37:02.150
Is it a performance requirement?

01:37:02.150 --> 01:37:05.690
And then figure out whether
there's a hierarchy there.

01:37:05.690 --> 01:37:09.080
And basically, then, from
that, generate your own set

01:37:09.080 --> 01:37:12.300
of requirements for
the CanSat competition.

01:37:12.300 --> 01:37:15.020
So you're going to either
rewrite or organize

01:37:15.020 --> 01:37:17.600
these requirements in
a way that's better

01:37:17.600 --> 01:37:20.180
and that works
for you as a team.

01:37:20.180 --> 01:37:22.520
And then the fourth
requirement is

01:37:22.520 --> 01:37:27.530
to figure out where
you want your margins,

01:37:27.530 --> 01:37:31.700
where do you think you need
to have reserves and margins

01:37:31.700 --> 01:37:33.410
in these requirements.

01:37:33.410 --> 01:37:36.620
So it's very much
looking and reorganizing

01:37:36.620 --> 01:37:43.930
and critically analyzing the
CanSat 2016 requirements set.

01:37:43.930 --> 01:37:46.120
So let me summarize.

01:37:46.120 --> 01:37:48.010
Good requirements
are really essential.

01:37:48.010 --> 01:37:50.950
It's the starting point
for system design,

01:37:50.950 --> 01:37:53.380
system engineering.

01:37:53.380 --> 01:37:55.150
It is a challenging
thing, especially

01:37:55.150 --> 01:37:58.610
the flow down is challenging.

01:37:58.610 --> 01:38:01.090
There are some methods and
commercial tools for doing

01:38:01.090 --> 01:38:02.590
formal requirements management.

01:38:02.590 --> 01:38:04.840
So I mentioned ISO performance.

01:38:04.840 --> 01:38:09.290
And then I mentioned DOORS,
these commercial tools.

01:38:09.290 --> 01:38:13.480
And then the last point here
is just because you passed SRR,

01:38:13.480 --> 01:38:15.850
and you have high level
requirements approved,

01:38:15.850 --> 01:38:18.310
doesn't mean that's
the end of the story.

01:38:18.310 --> 01:38:23.650
The requirements will continue
to be updated, refined.

01:38:23.650 --> 01:38:26.230
But you have to be you
have to be very disciplined

01:38:26.230 --> 01:38:27.370
to keep that in check.

01:38:27.370 --> 01:38:30.410
If your requirements
volatility is too high,

01:38:30.410 --> 01:38:34.420
then bad things can
happen to your project.

01:38:34.420 --> 01:38:36.280
And I really
recommend the reading

01:38:36.280 --> 01:38:40.400
on requirements volatility, some
very, very recent data on that,

01:38:40.400 --> 01:38:41.510
OK?

01:38:41.510 --> 01:38:45.880
So that's the end of
the session for today.

01:38:45.880 --> 01:38:49.520
I'm going to be online on the
WebEx in about 10 minutes.

01:38:49.520 --> 01:38:52.000
If any of you have questions,
or any comments, or you

01:38:52.000 --> 01:38:54.550
want to dive into this further.

01:38:54.550 --> 01:38:57.160
I know this is not a great
time for you at EPFL,

01:38:57.160 --> 01:38:59.540
because it's Friday
night for you guys.

01:38:59.540 --> 01:39:02.210
So I think what
we're going to do,

01:39:02.210 --> 01:39:05.020
we'll figure this out with
[? Leighs ?] and [? Johana. ?]

01:39:05.020 --> 01:39:07.480
We'll see if we want
to do a separate time,

01:39:07.480 --> 01:39:10.780
a different time during the
week for the office hours.

01:39:10.780 --> 01:39:12.460
I'm happy to do this
at a better time,

01:39:12.460 --> 01:39:14.590
if this doesn't
work for you guys,

01:39:14.590 --> 01:39:16.270
because it's happy
hour time for you.

01:39:16.270 --> 01:39:18.580
So anyway.

01:39:18.580 --> 01:39:19.600
OK, so great.

01:39:19.600 --> 01:39:20.440
Have a great week.

01:39:20.440 --> 01:39:22.770
And we'll see you next Friday.