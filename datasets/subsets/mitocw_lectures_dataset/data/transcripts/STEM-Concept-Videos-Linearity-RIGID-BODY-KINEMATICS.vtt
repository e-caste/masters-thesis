WEBVTT

00:00:04.290 --> 00:00:10.110
Here's a well-thrown disk. But have you ever
thrown one badly, so that as it spins, there's

00:00:10.110 --> 00:00:17.110
a wobble? This wobble rotates with a different
frequency than the disk itself spins.

00:00:17.660 --> 00:00:23.790
In this video, we're going to describe mathematically
the motion of all of the points on this badly

00:00:23.790 --> 00:00:25.390
thrown disk.

00:00:25.390 --> 00:00:31.300
This video is part of the Linearity Video
Series. Many complex systems are modeled or

00:00:31.300 --> 00:00:35.820
approximated linearly because of the mathematical
advantages.

00:00:35.820 --> 00:00:42.780
Hi, my name is Dan Frey, and I am a professor
of Engineering Systems and Mechanical Engineering

00:00:42.780 --> 00:00:49.780
at MIT. And I use rigid body kinematics myself
when designing radio--controlled aircraft.

00:00:50.010 --> 00:00:56.600
Before watching this video, you should be
familiar with eigenvalues and eigenvectors,

00:00:56.600 --> 00:01:03.600
the standard basis, e1, e2, e3 of R3, and
orthogonal matrices.

00:01:04.509 --> 00:01:10.530
After watching this video, you will be able
to: identify rotation matrices; decompose

00:01:10.530 --> 00:01:17.530
the motion of the badly thrown disk into translational
and rotational components; and write the rotational

00:01:17.680 --> 00:01:24.680
motion of the disk as a product of rotation
matrices.

00:01:27.220 --> 00:01:33.170
Our goal is to describe the motion of the
disk. The disk is a rigid body; it doesn't

00:01:33.170 --> 00:01:38.670
stretch, bend, or deform in any way when it
is thrown.

00:01:38.670 --> 00:01:44.479
In this video, we're not interested in why
the disk moves the way it does—that is,

00:01:44.479 --> 00:01:49.229
we're not trying to describe torques and forces
that govern the motion. We simply want to

00:01:49.229 --> 00:01:56.229
describe the motion mathematically. This is
a job for rigid body kinematics. We're going

00:01:56.490 --> 00:02:03.490
to describe the motion by decomposing it into
translational and rotational components.

00:02:03.630 --> 00:02:07.630
We'll start with the mathematics of rotation
matrices.

00:02:07.630 --> 00:02:11.560
This will allow us to build up to a description
of the wobbly disk.

00:02:11.560 --> 00:02:17.129
Finally, we'll complete the description of
the wobbly disk by adding in the translational

00:02:17.129 --> 00:02:18.169
component.

00:02:18.169 --> 00:02:24.060
Let's start with some linear algebra.
A rotation is a mapping that takes any vector

00:02:24.060 --> 00:02:31.060
in R3 to some other vector in R3 via rotation
about some axis by some angle.

00:02:34.239 --> 00:02:39.930
Rotations don't change the length of a vector.
So, if you scale a vector and then rotate

00:02:39.930 --> 00:02:46.790
it, you get the same thing as if you first
rotate it, and then scale the vector.

00:02:46.790 --> 00:02:53.790
Also, if you take two vectors, sum them and
then rotate the sum, this is equal to vector

00:02:56.040 --> 00:03:01.469
you would get if you first rotate both vectors
and then add them.

00:03:01.469 --> 00:03:07.510
These two properties together mean that Rotations
act linearly on vectors.

00:03:07.510 --> 00:03:13.529
And by definition, linear operations can be
represented by matrices.

00:03:13.529 --> 00:03:17.779
But what does a rotation matrix look like?

00:03:17.779 --> 00:03:24.779
We can learn a lot about a matrix by examining
its eigenvalues and eigenvectors. Recall that

00:03:25.129 --> 00:03:32.099
a vector v is an eigenvector of a matrix if
it is sent to a scalar multiple of itself

00:03:32.099 --> 00:03:35.168
when acted upon by the matrix.

00:03:35.168 --> 00:03:39.400
That scalar is the eigenvalue.

00:03:39.400 --> 00:03:46.400
Consider a rotation of 60 degrees about the
axis defined by the vector e1+e2. Pause the

00:03:46.989 --> 00:03:53.989
video here and determine one eigenvalue and
eigenvector. By the definition of an eigenvector,

00:04:01.029 --> 00:04:08.029
the vector e1+e2, which points along the axis
of rotation, is an eigenvector with eigenvalue

00:04:08.150 --> 00:04:15.019
one. This is because this vector is UNCHANGED
by the rotation matrix.

00:04:15.019 --> 00:04:22.019
Suppose you have a rotation matrix such that
e1 and e2 are both eigenvectors with eigenvalue

00:04:23.150 --> 00:04:25.060
1.

00:04:25.060 --> 00:04:32.060
What would this mean about the rotation? Pause
the video and think about this. The entire

00:04:36.470 --> 00:04:43.280
xy-plane will be unchanged by this rotation.
This is only possible if the matrix is the

00:04:43.280 --> 00:04:50.280
identity matrix! This is the null rotation...
nothing happens! What are the eigenvalues

00:04:52.680 --> 00:04:59.680
and eigenvectors of a 180-degree rotation
about the z-axis?

00:05:06.040 --> 00:05:12.560
This rotation matrix has one eigenvalue of
1, corresponding to the vector e3, which points

00:05:12.560 --> 00:05:15.310
along the axis of rotation.

00:05:15.310 --> 00:05:22.280
But it has more eigenvectors: any vector in
the xy-plane is sent to its negative by the

00:05:22.280 --> 00:05:29.280
rotation, so any vector in the xy-plane is
an eigenvector with eigenvalue -1.

00:05:32.740 --> 00:05:39.370
Now let's consider a rotation by some angle
theta (that is not an integer multiple of

00:05:39.370 --> 00:05:43.220
pi) clockwise about the z-axis.

00:05:43.220 --> 00:05:49.490
Write a matrix that represents such a rotation.

00:05:49.490 --> 00:05:55.870
Compute the eigenvalues of this matrix, and
use the definition of an eigenvector to explain

00:05:55.870 --> 00:06:02.870
why this makes sense.

00:06:05.060 --> 00:06:12.060
You should have found 1 real eigenvalue equal
to 1, and two complex conjugate eigenvalues.

00:06:12.980 --> 00:06:19.610
The real eigenvalue corresponds to the eigenvector
e3, which is sent to itself by the rotation,

00:06:19.610 --> 00:06:22.450
hence the eigenvalue of 1.

00:06:22.450 --> 00:06:29.230
The fact that the other two eigenvalues are
complex means that no other vector is sent

00:06:29.230 --> 00:06:34.110
to a REAL scalar multiple of itself.

00:06:34.110 --> 00:06:39.000
This makes sense geometrically because NO
other vector points in the same direction

00:06:39.000 --> 00:06:46.000
it started in after being rotated. Now, how
do we describe any general rotation about

00:06:48.370 --> 00:06:50.540
an arbitrary axis?

00:06:50.540 --> 00:06:57.540
Well, a matrix is completely defined by how
it acts on basis vectors.

00:06:58.370 --> 00:07:04.090
Since a rotation doesn't change the lengths
of vectors or the angles BETWEEN two vectors,

00:07:04.090 --> 00:07:09.980
a rotated basis will also be a basis for R3!

00:07:09.980 --> 00:07:16.980
This tells us that any rotation matrix can
be described as an orthonormal matrix.

00:07:17.830 --> 00:07:23.490
The columns are the vectors each standard
basis vector is sent to.

00:07:23.490 --> 00:07:30.490
Is it true that ALL orthonormal matrices rotate
vectors? Pause the video. Nope, here's an

00:07:37.960 --> 00:07:42.650
orthonormal matrix that's not a rotation;
it's a reflection.

00:07:42.650 --> 00:07:49.650
The rule is that only an orthonormal matrix
whose determinant is positive 1 is a rotation.

00:07:56.370 --> 00:08:02.810
But let's get back to thinking about rigid
body KINEMATICS. Remember, we want to describe

00:08:02.810 --> 00:08:08.520
the motion of the disk. We've talked about
rotation matrices, but we've left out a very

00:08:08.520 --> 00:08:15.520
important component: time!
How will we describe time dependent rotation?

00:08:16.180 --> 00:08:23.180
That's right, time dependent matrices.
Let's start by modeling a simple motion: the

00:08:25.010 --> 00:08:31.880
rotation of a disk as it spins clockwise about
the positive z-axis.

00:08:31.880 --> 00:08:38.880
We know how to write a matrix that describes
rotation by an angle theta about the z-axis.

00:08:39.698 --> 00:08:46.699
How would you make this rotation time dependent?
Pause the video and discuss.

00:08:51.160 --> 00:08:57.709
The obvious choice here is to simply make
theta a function of time! But how does it

00:08:57.709 --> 00:09:03.019
depend on time?
To write an explicit function, we need to

00:09:03.019 --> 00:09:08.529
know the rate, omega, at which the disk is
rotating.

00:09:08.529 --> 00:09:12.829
Assume the disk spins with constant angular
velocity.

00:09:12.829 --> 00:09:18.009
We can easily calculate omega by counting
the revolutions per second.

00:09:18.009 --> 00:09:24.889
And there's our matrix for a spinning—but
not wobbling—disk.

00:09:24.889 --> 00:09:31.889
Now let's try a slightly more difficult example.
Let's describe the motion of this wobbly,

00:09:31.930 --> 00:09:36.329
spinning disk as it rotates on this stick.

00:09:36.329 --> 00:09:43.149
The disk is itself rotating clockwise about
its center of mass when viewed from the positive

00:09:43.149 --> 00:09:50.149
z-axis. As before, we can find the rotation
rate, omega-D, of a marked point by counting

00:09:52.420 --> 00:09:59.420
the revolutions per second. Assume omega_D
is constant. Now, observe the slight tilt

00:10:02.540 --> 00:10:05.980
of the disk off of horizontal.

00:10:05.980 --> 00:10:11.649
This tilt is created by a rotation about a
tilt axis.

00:10:11.649 --> 00:10:18.649
The tilt axis is the vector in the xy-plane
about which the disk is rotated by some small

00:10:18.939 --> 00:10:25.939
angle theta, creating the tilt. The wobble
is created because the tilt axis is rotating

00:10:27.230 --> 00:10:31.850
clockwise about the positive z-axis.

00:10:31.850 --> 00:10:38.290
We can visualize this by observing that the
normal vector to the disk rotates in a cone

00:10:38.290 --> 00:10:45.290
shape about the z-axis. By tracking the normal
vector's revolutions per second, we can find

00:10:46.800 --> 00:10:53.800
the rotation rate of the wobble, omega-W,
of the normal vector. This is also the rotation

00:10:54.089 --> 00:11:01.089
rate for tilt axis. We assume omega_W is constant.
Notice that omega-D and omega-W are different

00:11:03.420 --> 00:11:08.149
rotation rates.
For simplicity, we assume that the marked

00:11:08.149 --> 00:11:15.149
point begins along the x-axis; and the initial
tilt axis aligns with the x-axis, with the

00:11:16.920 --> 00:11:19.490
tilt angle theta.

00:11:19.490 --> 00:11:25.449
Let's start by creating a sequence of rotations
that rotates the marked point to the angle

00:11:25.449 --> 00:11:32.449
omega_D times t and the tilt axis to the angle
omega_W times t for any time t.

00:11:36.220 --> 00:11:41.410
To describe this motion, we are going to decompose
the behavior into a sequence of rotations

00:11:41.410 --> 00:11:48.410
about e1, e2, and e3, which have the benefit
of being easy to describe mathematically.

00:11:49.369 --> 00:11:55.910
I want to start by eliminating the tilt of
the disk, so we can imagine it spinning parallel

00:11:55.910 --> 00:11:58.199
to the ground.

00:11:58.199 --> 00:12:05.199
What is the matrix that undoes the tilt of
theta degrees about the x-axis? Pause and

00:12:05.929 --> 00:12:12.929
write down a matrix. We rotate by an angle
negative theta about the positive x-axis,

00:12:18.610 --> 00:12:21.170
which is represented by this matrix.

00:12:21.170 --> 00:12:28.170
Now, I rotate the marked point clockwise about
the z-axis by the angle (omega_D minus omega_W)

00:12:33.009 --> 00:12:34.920
times t.

00:12:34.920 --> 00:12:41.009
This matrix describes the angle difference
traveled by the marked point relative to the

00:12:41.009 --> 00:12:48.009
position of the tilt axis. Now, we need to
make sure that we tilt the disk again so that

00:12:49.470 --> 00:12:52.079
we can describe the wobble.

00:12:52.079 --> 00:12:58.709
Since we assume the tilt axis begins along
the x-axis, we rotate the disk back to the

00:12:58.709 --> 00:13:02.869
initial tilted position by theta degrees.

00:13:02.869 --> 00:13:09.869
This counterclockwise, time-independent rotation
about the x-axis is represented by this matrix.

00:13:13.369 --> 00:13:19.069
Finally we must describe the wobble, created
by the rotation of the tilt axis. The tilt

00:13:19.069 --> 00:13:26.069
axis is rotating clockwise about the positive
z-axis with rotation rate omega-W, so at time

00:13:28.069 --> 00:13:35.069
t, it has rotated by omega_W t degrees, which
is what this matrix does.

00:13:36.720 --> 00:13:41.920
How will we combine these matrices to describe
the motion of the marked point?

00:13:41.920 --> 00:13:48.920
Pause and discuss.

00:13:49.660 --> 00:13:56.660
We multiply the matrices together. The order
we apply each matrix matters. We must perform

00:13:57.989 --> 00:14:04.989
the rotations in the same order we decomposed
the motion, because matrices do not multiply

00:14:05.379 --> 00:14:10.970
commutatively.

00:14:10.970 --> 00:14:17.809
Let's understand geometrically why this worked.
The angle of the marker is changed in two

00:14:17.809 --> 00:14:24.809
steps of this process, first a rotation by
angle omega-D minus omega-W times t, and then

00:14:28.519 --> 00:14:32.110
by an angle omega_W times t.

00:14:32.110 --> 00:14:39.110
In the end, it ends up exactly where it should,
at omega-D times t. Only the final matrix

00:14:40.230 --> 00:14:47.230
affects the tilt axis, rotating it by the
angle omega-W times t.

00:14:47.600 --> 00:14:54.149
Because the disk is a rigid object, by describing
the position of the marked point and the tilt

00:14:54.149 --> 00:15:01.149
axis for all times with matrices, we've actually
described the position of every point on the

00:15:01.649 --> 00:15:03.029
disk.

00:15:03.029 --> 00:15:09.499
We can find the location of any point at time
t by applying this matrix operation to any

00:15:09.499 --> 00:15:16.499
vector on the initial disk. Now, let's go
back to the badly thrown disk.

00:15:17.689 --> 00:15:21.519
We can apply the rotational transformation
directly to our thrown disk.

00:15:21.519 --> 00:15:23.309
The only changes might be to the rotation
rates and the initial position. You can think

00:15:23.309 --> 00:15:25.809
about how we might change the formula. We'll
ignore that. So all that is left to consider

00:15:25.809 --> 00:15:29.739
is the translation.

00:15:29.739 --> 00:15:34.489
If you throw a disk and watch it from the
side, we can ignore the rotations and focus

00:15:34.489 --> 00:15:40.429
on the translation of the center point of
the disk. For the small time interval that

00:15:40.429 --> 00:15:46.329
we are interested in describing, the disk
moves in a straight, horizontal path. So this

00:15:46.329 --> 00:15:51.709
vector equation approximates the translation.

00:15:51.709 --> 00:15:56.149
Because the disk is a rigid object, we get
the full description of the motion by simply

00:15:56.149 --> 00:15:58.089
adding in the translation.

00:15:58.089 --> 00:16:03.509
To the rotation of the wobbly disk to obtain
the following equation of motion for any point

00:16:03.509 --> 00:16:06.100
on the disk.

00:16:06.100 --> 00:16:10.489
If you thought this problem was cool, you're
not the only one. Richard Feynman studied

00:16:10.489 --> 00:16:16.319
the kinematics AND the dynamics of the wobbly
disk. He was able to show that the rotation

00:16:16.319 --> 00:16:22.769
rate of the special marked point, omega-D,
was exactly twice the rotation rate, omega-W,

00:16:22.769 --> 00:16:29.769
of the tilt axis. This realization ultimately
led to insights into the behavior of electrons.

00:16:34.059 --> 00:16:40.819
In this video, we saw that rotation matrices
are orthogonal matrices with determinant equal

00:16:40.819 --> 00:16:43.059
to positive 1.

00:16:43.059 --> 00:16:49.910
The kinematics of rigid bodies involves breaking
a problem into translation and rotation.

00:16:49.910 --> 00:16:55.709
The rotations may be decomposed into several
time dependent rotation matrices that are

00:16:55.709 --> 00:16:58.160
multiplied together.

00:16:58.160 --> 00:17:04.030
The matrix product added to the translation
describes the location at any time of all

00:17:04.030 --> 00:17:06.319
points on the rigid body.

00:17:06.319 --> 00:17:10.800
I hope you'll try to describe the motions
of various rotating objects that you encounter.

00:17:10.800 --> 00:17:16.119
Have fun, and good luck!