WEBVTT

00:00:00.000 --> 00:00:02.620
SPEAKER: The following content
is provided under a Creative

00:00:02.620 --> 00:00:03.640
Commons license.

00:00:03.640 --> 00:00:06.730
Your support will help MIT
OpenCourseWare continue to

00:00:06.730 --> 00:00:10.030
offer high quality educational
resources for free.

00:00:10.030 --> 00:00:12.780
To make a donation, or to view
additional materials from

00:00:12.780 --> 00:00:16.900
hundreds of MIT courses, visit
MIT OpenCourseWare at

00:00:16.900 --> 00:00:19.260
ocw.mit.edu.

00:00:19.260 --> 00:00:26.960
PROFESSOR: OK, last time we were
talking about this thing

00:00:26.960 --> 00:00:30.200
called the theorem
of irrelevance.

00:00:30.200 --> 00:00:33.780
At one level, the theorem of
irrelevance is just another

00:00:33.780 --> 00:00:39.660
statement of, when you start
looking at detection theory,

00:00:39.660 --> 00:00:43.050
there are things called
sufficient statistics.

00:00:43.050 --> 00:00:45.480
And what the theorem of
irrelevance says is you can

00:00:45.480 --> 00:00:50.560
ignore things that aren't part
of a sufficient statistic.

00:00:50.560 --> 00:00:53.530
But more specifically, it says
something about what those

00:00:53.530 --> 00:00:55.920
irrelevant things are.

00:00:55.920 --> 00:00:59.740
And in particular, let me repeat
what we said last time

00:00:59.740 --> 00:01:01.780
but with a little less
of the detail.

00:01:01.780 --> 00:01:03.990
You start out with
a signal set.

00:01:03.990 --> 00:01:04.230
Ok?

00:01:04.230 --> 00:01:08.540
You're going to transmit one
element of that single--

00:01:08.540 --> 00:01:10.950
signal set--

00:01:10.950 --> 00:01:15.000
and you're going to turn
it into some waveform--

00:01:15.000 --> 00:01:17.000
which we'll call X of t.

00:01:17.000 --> 00:01:20.680
And X of t is going to depend
on which particular signal

00:01:20.680 --> 00:01:23.140
enters the transmitter
at this point.

00:01:23.140 --> 00:01:25.870
You're going to receive
something where the thing that

00:01:25.870 --> 00:01:29.060
you receive has noise
added to it.

00:01:29.060 --> 00:01:32.170
And also if you'll notice I've
written the thing that we

00:01:32.170 --> 00:01:36.600
receive that it's including a
whole lot of other stuff.

00:01:36.600 --> 00:01:36.940
OK?

00:01:36.940 --> 00:01:40.910
In other words, the signal is
constrained to j different

00:01:40.910 --> 00:01:43.420
degrees of freedom.

00:01:43.420 --> 00:01:49.340
And what you get out of the
channel involves a much larger

00:01:49.340 --> 00:01:51.540
set of degrees of freedom.

00:01:51.540 --> 00:01:55.590
In other words, you're putting
things in involving only a

00:01:55.590 --> 00:01:58.930
certain period of time, in a
certain bandwidth, usually.

00:01:58.930 --> 00:02:02.220
And you can look at anything
you want to at the output.

00:02:02.220 --> 00:02:05.055
The only thing is you can't peek
at what the input was at

00:02:05.055 --> 00:02:08.380
the transmitter, because if
you could there will be no

00:02:08.380 --> 00:02:11.410
sense in actually
transmitting it.

00:02:11.410 --> 00:02:15.760
OK, so the point is, we receive
something which, in

00:02:15.760 --> 00:02:21.030
the degrees of freedom that we
know about, Yj is equal Xj

00:02:21.030 --> 00:02:23.670
plus the noise variables.

00:02:23.670 --> 00:02:26.680
And in the other degrees
of freedom, Yj is

00:02:26.680 --> 00:02:28.770
just equal to Zj.

00:02:28.770 --> 00:02:33.780
And now the rules of the game
are that these out of band

00:02:33.780 --> 00:02:42.980
things, all of these noise
coefficients, which are not

00:02:42.980 --> 00:02:49.240
part of the phi 1 up to phi sub
capital J. All of these

00:02:49.240 --> 00:02:55.060
things, the noise there, is
independent of the noise in--

00:02:55.060 --> 00:02:58.150
is independent of the noise and
the signal in what we're

00:02:58.150 --> 00:02:59.740
actually sending.

00:02:59.740 --> 00:03:03.820
Because it's independent it's
irrelevant that's relatively

00:03:03.820 --> 00:03:05.520
easy to show.

00:03:05.520 --> 00:03:10.440
But the broader way to look at
this, and the way I want--

00:03:10.440 --> 00:03:13.190
and the way I'd like to get
you used to thinking about

00:03:13.190 --> 00:03:18.420
this-- is that this other stuff
here can include signals

00:03:18.420 --> 00:03:20.260
sent by other users.

00:03:20.260 --> 00:03:23.390
It can include signals sent
by you at other times.

00:03:23.390 --> 00:03:26.720
It can include anything
else in the world.

00:03:26.720 --> 00:03:29.940
And what this theorem is saying
is, if you're sending

00:03:29.940 --> 00:03:35.210
the signal in just these j
degrees of freedom, then you

00:03:35.210 --> 00:03:37.620
don't have to look
at anything else.

00:03:37.620 --> 00:03:40.370
So that all you have to look
at is these received

00:03:40.370 --> 00:03:41.620
components, Y sub j.

00:03:43.970 --> 00:03:46.060
OK, it says something
more than that.

00:03:46.060 --> 00:03:49.370
It says a lot more than that.

00:03:49.370 --> 00:03:52.710
These actual orthonormal
functions that you use, phi 1

00:03:52.710 --> 00:03:55.950
up to phi sub capital
J, don't appear in

00:03:55.950 --> 00:03:58.450
that solution at all.

00:03:58.450 --> 00:03:58.830
OK?

00:03:58.830 --> 00:04:00.640
In other words, you really
have a vector

00:04:00.640 --> 00:04:02.650
problem at this point.

00:04:02.650 --> 00:04:05.500
You have a j dimensional
vector that you send.

00:04:05.500 --> 00:04:09.180
You have a j dimensional vector
that you receive.

00:04:09.180 --> 00:04:11.890
You can use orthonormal
functions, which are anything

00:04:11.890 --> 00:04:16.560
in the world, so long as the
noise in that region that

00:04:16.560 --> 00:04:20.150
you're looking at and sending
things in does not vary.

00:04:20.150 --> 00:04:21.890
In other words, what
you can send is

00:04:21.890 --> 00:04:23.570
very broadband signals.

00:04:23.570 --> 00:04:25.930
You can send very narrow
band signals.

00:04:25.930 --> 00:04:30.980
You can send anything and it
doesn't make any difference.

00:04:30.980 --> 00:04:33.660
What this says is when you're
dealing with a white Gaussian

00:04:33.660 --> 00:04:37.020
noise channel, all signals
are equivalent.

00:04:40.990 --> 00:04:41.340
OK?

00:04:41.340 --> 00:04:43.480
In other words, it doesn't
make any difference what

00:04:43.480 --> 00:04:46.260
modulation system you use.

00:04:46.260 --> 00:04:47.700
They all behave the same way.

00:04:50.210 --> 00:04:54.000
The only difference between
different modulation systems

00:04:54.000 --> 00:04:57.400
comes in these second order
affects, which we haven't

00:04:57.400 --> 00:04:59.230
started to look at much yet.

00:04:59.230 --> 00:05:03.790
How hard is it to retrieve
carrier?

00:05:03.790 --> 00:05:10.590
How hard is it to deal
with things like time

00:05:10.590 --> 00:05:12.760
synchronization?

00:05:12.760 --> 00:05:14.580
How hard is it to build
the filters?

00:05:14.580 --> 00:05:18.780
How hard is it to move from
passband down to baseband if

00:05:18.780 --> 00:05:21.320
you want to do your operations
at baseband?

00:05:21.320 --> 00:05:25.960
All of these questions become
important, but the basic

00:05:25.960 --> 00:05:29.950
question of how to deal with the
Gaussian noise, it doesn't

00:05:29.950 --> 00:05:32.370
make any difference.

00:05:32.370 --> 00:05:36.400
You can use whatever system you
want to, and the analysis

00:05:36.400 --> 00:05:39.660
of the noise part of the problem
is exactly the same at

00:05:39.660 --> 00:05:41.130
everything.

00:05:41.130 --> 00:05:41.910
OK?

00:05:41.910 --> 00:05:46.360
And that's fairly important
because it says that in fact,

00:05:46.360 --> 00:05:48.750
this signal space there
we're using--

00:05:48.750 --> 00:05:50.640
I mean yes, we're all used
to the fact that

00:05:50.640 --> 00:05:52.210
it's a vector space.

00:05:52.210 --> 00:05:56.820
L2 is a vector space, fine--
what's important here is

00:05:56.820 --> 00:06:01.330
you're using a finite part of
that vector space, and you can

00:06:01.330 --> 00:06:04.690
deal with it just as if it's
finite dimensional vectors.

00:06:04.690 --> 00:06:07.760
You can deal with vectors and
matrices and all of that neat

00:06:07.760 --> 00:06:12.050
stuff and you can forget about
all of the analog stuff.

00:06:12.050 --> 00:06:18.140
you look at 99 percent of the
papers appear both in the

00:06:18.140 --> 00:06:22.310
information theory transactions
and in the

00:06:22.310 --> 00:06:25.060
transactions of--

00:06:25.060 --> 00:06:26.740
oh I guess it--

00:06:26.740 --> 00:06:29.010
it's communication technology.

00:06:29.010 --> 00:06:32.480
You look at all of these things
and 99 percent of the

00:06:32.480 --> 00:06:36.270
authors don't know anything
about analog communication.

00:06:36.270 --> 00:06:38.550
All they've learned is how to
deal with these vectors.

00:06:41.080 --> 00:06:41.600
OK?

00:06:41.600 --> 00:06:45.440
So in fact this is
the key to that.

00:06:45.440 --> 00:06:48.260
And you can now play
their game.

00:06:48.260 --> 00:06:51.450
But also when their game doesn't
work you can go back

00:06:51.450 --> 00:06:54.290
to looking at the analog
waveforms.

00:06:54.290 --> 00:06:56.350
But you now understand
what that game is

00:06:56.350 --> 00:06:57.240
that they're playing.

00:06:57.240 --> 00:06:59.370
They're assuming white
Gaussian noise.

00:06:59.370 --> 00:07:01.370
They don't have to deal with
the fact that the white

00:07:01.370 --> 00:07:04.930
Gaussian noise is spread over
all time and all frequency.

00:07:04.930 --> 00:07:07.930
Because part of this thoerem
says it doesn't make any

00:07:07.930 --> 00:07:11.270
difference how the noise is
characterized outside of this

00:07:11.270 --> 00:07:12.920
region that you're looking at.

00:07:12.920 --> 00:07:15.700
That's the other part of the
argument that we've been

00:07:15.700 --> 00:07:16.910
dealing with all along.

00:07:16.910 --> 00:07:19.850
It doesn't matter how you
model the noise anywhere

00:07:19.850 --> 00:07:21.910
outside of what you're
looking at.

00:07:21.910 --> 00:07:25.530
The only thing you need is that
the noise is independent

00:07:25.530 --> 00:07:27.500
outside of there.

00:07:27.500 --> 00:07:29.170
OK?

00:07:29.170 --> 00:07:30.420
So that's--

00:07:32.770 --> 00:07:36.030
I mean this was sort of trivial
analytically, but it's

00:07:36.030 --> 00:07:38.550
really an important aspect
of what's going on.

00:07:42.440 --> 00:07:43.460
OK.

00:07:43.460 --> 00:07:46.040
Let's go back to QAM or PAM.

00:07:50.100 --> 00:07:53.300
The baseband input to a white
Gaussian noise channel-- we're

00:07:53.300 --> 00:07:55.270
going to model it as u of t--

00:07:55.270 --> 00:07:57.800
we're going to look
at a succession

00:07:57.800 --> 00:07:59.240
of j different signals.

00:07:59.240 --> 00:08:03.400
In other words, when we study
detection, we said we're going

00:08:03.400 --> 00:08:06.130
to build the system, we're going
to send one signal, and

00:08:06.130 --> 00:08:09.410
then we're going to receive that
signal and we're going to

00:08:09.410 --> 00:08:10.540
tear that system down.

00:08:10.540 --> 00:08:13.470
We're not going to send more
than just this one signal.

00:08:13.470 --> 00:08:15.690
OK, now we're sending a
big batch of signals.

00:08:15.690 --> 00:08:17.750
Were sending capital
J of them.

00:08:17.750 --> 00:08:20.380
Where J can be as big
as you please.

00:08:20.380 --> 00:08:24.200
Now we're going to look at two
different alternatives.

00:08:24.200 --> 00:08:29.270
OK, one of these alternatives
is sending all j signals and

00:08:29.270 --> 00:08:32.700
building a receiver which
looks at all J of them

00:08:32.700 --> 00:08:37.430
together and makes a joint
decision on everything.

00:08:37.430 --> 00:08:43.800
It makes a maximum likelihood
decision on this sequence of J

00:08:43.800 --> 00:08:45.070
possible inputs.

00:08:45.070 --> 00:08:46.700
This is one of the things
we've looked at.

00:08:46.700 --> 00:08:52.060
This is what happens when you
have non binary detection.

00:08:52.060 --> 00:08:54.380
I mean, here you have an
enormous number of things

00:08:54.380 --> 00:08:56.900
you're detecting between.

00:08:56.900 --> 00:08:59.800
And you do maximum likelihood
detection on it.

00:08:59.800 --> 00:09:03.570
And the question is, do you get
anything extra from that

00:09:03.570 --> 00:09:07.940
beyond what you get out of doing
what we did before, just

00:09:07.940 --> 00:09:11.460
forgetting about the fact that
other signals existed?

00:09:11.460 --> 00:09:14.660
Namely, which is better?

00:09:14.660 --> 00:09:17.620
What the notes prove, and what
I'm going to sort of indicate

00:09:17.620 --> 00:09:20.670
here without any attempt
to prove it--

00:09:20.670 --> 00:09:23.240
I mean it's not a hard
proof, it's just--

00:09:23.240 --> 00:09:26.560
I mean the hardest part of this
is realizing what the

00:09:26.560 --> 00:09:28.170
problem is.

00:09:28.170 --> 00:09:30.330
And the problem is you
can detect things in

00:09:30.330 --> 00:09:31.270
two different ways.

00:09:31.270 --> 00:09:34.330
You can detect things one
signal at a time.

00:09:34.330 --> 00:09:37.840
Or you can detect them the
whole sequence at a time.

00:09:37.840 --> 00:09:41.550
And you do something different
in each of these cases.

00:09:41.550 --> 00:09:45.830
OK, so we're going to assume
again that these thetas are an

00:09:45.830 --> 00:09:47.290
orthonormal set.

00:09:47.290 --> 00:09:49.910
I'm going to assume that
I've extended them so

00:09:49.910 --> 00:09:53.960
they span all of l2.

00:09:53.960 --> 00:09:58.430
I'm going to let v be a
sample of this output

00:09:58.430 --> 00:10:01.950
vector, v1 to v sub j.

00:10:01.950 --> 00:10:04.620
You see, I use the theorem of
irrelevance here because I

00:10:04.620 --> 00:10:07.980
don't care about anything
beyond v sub j.

00:10:07.980 --> 00:10:11.590
Because all those other
things are irrelevant.

00:10:11.590 --> 00:10:14.320
So I only look at
v1 to v sub j.

00:10:14.320 --> 00:10:17.490
So the little v is going
to be a sample value

00:10:17.490 --> 00:10:20.520
of this random vector.

00:10:20.520 --> 00:10:23.680
And the components of the random
vector, the output, are

00:10:23.680 --> 00:10:26.250
going to be the input variables

00:10:26.250 --> 00:10:29.030
plus the noise variables.

00:10:29.030 --> 00:10:31.130
And the zj here are
independent.

00:10:31.130 --> 00:10:32.370
I don't even have to
assume that they're

00:10:32.370 --> 00:10:34.650
Gaussian for this argument.

00:10:34.650 --> 00:10:37.160
They can be anything at all,
so long as they're

00:10:37.160 --> 00:10:39.010
independent.

00:10:39.010 --> 00:10:44.620
OK, now if I'm doing the signal
by signal detection, in

00:10:44.620 --> 00:10:48.450
other words if what I'm doing is
I'm saying, "OK, I want to

00:10:48.450 --> 00:10:56.140
take this little j signal, and I
want to decide on what it is

00:10:56.140 --> 00:11:01.570
just from looking at the v
sample of the output." OK, I

00:11:01.570 --> 00:11:02.760
can do that.

00:11:02.760 --> 00:11:05.000
My observation is v sub j.

00:11:05.000 --> 00:11:07.120
That's something we've
talked about.

00:11:07.120 --> 00:11:09.570
I mean the fact that you might
have other information

00:11:09.570 --> 00:11:11.760
available doesn't make
any difference.

00:11:11.760 --> 00:11:13.720
You still can make a
detection on the

00:11:13.720 --> 00:11:16.120
basis of this one variable.

00:11:16.120 --> 00:11:19.770
OK, so we do that.

00:11:19.770 --> 00:11:22.730
Now, we want to compare that
with what happens when we make

00:11:22.730 --> 00:11:28.830
a detection for all capital J
of these inputs, conditional

00:11:28.830 --> 00:11:30.440
on the whole sequence.

00:11:30.440 --> 00:11:33.150
OK, you write out the
likelihood ratio.

00:11:33.150 --> 00:11:34.940
It factors.

00:11:34.940 --> 00:11:36.960
And the thing that happens when
you do this-- and you

00:11:36.960 --> 00:11:40.000
have to read the notes for
the details on this,

00:11:40.000 --> 00:11:41.920
and it's not hard--

00:11:41.920 --> 00:11:46.350
what you find is that the
maximum likelihood decision is

00:11:46.350 --> 00:11:49.260
exactly the same
in both cases.

00:11:49.260 --> 00:11:53.300
OK, so it doesn't make any
difference whether you detect

00:11:53.300 --> 00:11:58.910
little u sub j from the
observation v sub j.

00:11:58.910 --> 00:12:03.530
Or whether you detect the
vector, u sub capital j, from

00:12:03.530 --> 00:12:10.220
the whole set of outputs, v sub
1 up to v sub capital J.

00:12:10.220 --> 00:12:12.490
You get the same answer
in both cases.

00:12:12.490 --> 00:12:14.920
Now, you might say, "What
happens if some of these

00:12:14.920 --> 00:12:18.330
likelihood ratios come out to
be right on the borderline,

00:12:18.330 --> 00:12:21.390
equal to one?" Well it doesn't
make any difference because

00:12:21.390 --> 00:12:24.360
that's a zero probability
thing.

00:12:24.360 --> 00:12:27.260
If you want to worry about that,
you can worry about it

00:12:27.260 --> 00:12:29.510
and you get the same answer, you
just have to be a little

00:12:29.510 --> 00:12:31.410
more careful.

00:12:31.410 --> 00:12:34.300
Now here is something the notes
don't say, and it's also

00:12:34.300 --> 00:12:37.330
fairly important.

00:12:37.330 --> 00:12:40.240
Here we're talking about the
case where all these signals

00:12:40.240 --> 00:12:42.320
are independent of each other.

00:12:42.320 --> 00:12:45.560
Which is sort of what we want
to look at in communication

00:12:45.560 --> 00:12:50.820
because for the most part what
we're doing is we're taking

00:12:50.820 --> 00:12:54.320
data of some sort, we're source
processing it to make

00:12:54.320 --> 00:12:58.350
the bits coming up the channel
be independent of each other,

00:12:58.350 --> 00:13:02.300
and then we're going
to be sending them.

00:13:02.300 --> 00:13:04.925
Well except now we want to say,
well suppose that these

00:13:04.925 --> 00:13:07.090
inputs are not independent.

00:13:07.090 --> 00:13:09.430
Suppose, for example, that we
pass them through an error

00:13:09.430 --> 00:13:14.100
correction encoding device
before transmitting them.

00:13:14.100 --> 00:13:17.020
And the question is,
what happens then?

00:13:17.020 --> 00:13:20.900
Well the trouble is then you
have dependence between

00:13:20.900 --> 00:13:23.720
u1 and u sub j.

00:13:23.720 --> 00:13:28.780
So you can still detect each
of these just by looking at

00:13:28.780 --> 00:13:30.030
the single output.

00:13:32.330 --> 00:13:35.430
And it's a maximum likelihood
detection based on that

00:13:35.430 --> 00:13:37.360
observation.

00:13:37.360 --> 00:13:40.784
But if you look at the entire
observation, v1 up to v sub

00:13:40.784 --> 00:13:44.740
capital j, you get
something better.

00:13:44.740 --> 00:13:46.350
How do I know you got
something better?

00:13:49.420 --> 00:13:52.700
Well I know you get something
better because in this case

00:13:52.700 --> 00:13:57.260
where u1 up to u sub j are
dependent on each other, these

00:13:57.260 --> 00:14:01.440
output variables, v sub 1 up to
v sub capital j, depends on

00:14:01.440 --> 00:14:02.130
each other.

00:14:02.130 --> 00:14:03.980
They aren't irrelevant.

00:14:03.980 --> 00:14:07.420
If you want to do the best
job of maximum likelihood

00:14:07.420 --> 00:14:10.672
detection, given the observation
of v sub 1 up to v

00:14:10.672 --> 00:14:14.160
sub capital j, then you're
going to use all those

00:14:14.160 --> 00:14:16.660
variables in your detection
and you're going to

00:14:16.660 --> 00:14:18.350
get a better --

00:14:18.350 --> 00:14:20.190
And you're going to get
a better decision.

00:14:20.190 --> 00:14:22.820
In other words, a smaller error
probability, then you

00:14:22.820 --> 00:14:25.520
would have gotten otherwise.

00:14:25.520 --> 00:14:26.290
OK?

00:14:26.290 --> 00:14:29.380
But the important thing that
comes out of here is that this

00:14:29.380 --> 00:14:31.380
simple minded decision--

00:14:31.380 --> 00:14:36.430
where you make a decision on u
sub 1 based just on v sub 1--

00:14:36.430 --> 00:14:37.960
it's something you can do.

00:14:37.960 --> 00:14:41.780
You can do the maximum
likelihood decision.

00:14:41.780 --> 00:14:43.020
And you know how it behaves.

00:14:43.020 --> 00:14:46.310
You can calculate what the
error probability is.

00:14:46.310 --> 00:14:49.910
But you know now automatically
that your error probability is

00:14:49.910 --> 00:14:53.040
going to be greater than or
equal to the error probability

00:14:53.040 --> 00:14:56.300
that you would get if you base
that decision one the whole

00:14:56.300 --> 00:14:57.950
set of inputs.

00:14:57.950 --> 00:15:00.680
OK, this is an argument
that, it seems hard

00:15:00.680 --> 00:15:01.930
for most people to--

00:15:04.890 --> 00:15:08.580
that it seems hard for most
people to think of right at

00:15:08.580 --> 00:15:10.220
the beginning.

00:15:10.220 --> 00:15:13.350
Which is really to say, if
you're doing an optimal

00:15:13.350 --> 00:15:15.820
detection, it is optimal.

00:15:15.820 --> 00:15:19.720
In other words, anything else
that you do is worse.

00:15:19.720 --> 00:15:25.490
And you can always count on
that to get bound between

00:15:25.490 --> 00:15:28.350
probabilities of error that
you get doing something

00:15:28.350 --> 00:15:31.480
stupid, and probabilities of
error that you get doing

00:15:31.480 --> 00:15:32.860
something intelligent.

00:15:32.860 --> 00:15:35.120
And the stupid thing is
not always stupid--

00:15:35.120 --> 00:15:37.540
I mean the stupid thing
is sometimes better

00:15:37.540 --> 00:15:38.860
because it's cheaper--

00:15:38.860 --> 00:15:42.120
but the error probability is
always worse there then if you

00:15:42.120 --> 00:15:44.700
did the actual optimum thing.

00:15:44.700 --> 00:15:50.820
OK, so people in fact often do
do detection where they have

00:15:50.820 --> 00:15:52.080
coded systems.

00:15:52.080 --> 00:15:55.950
They decode each received symbol
separately based on the

00:15:55.950 --> 00:15:58.270
corresponding observation.

00:15:58.270 --> 00:15:59.810
They wind up with
a larger error

00:15:59.810 --> 00:16:01.680
probability than they should.

00:16:01.680 --> 00:16:06.740
Then they pass this through
some kind of, some kind of

00:16:06.740 --> 00:16:08.990
error correction device.

00:16:08.990 --> 00:16:14.040
And they wind up with a system
that sort of performs

00:16:14.040 --> 00:16:15.090
reasonably.

00:16:15.090 --> 00:16:19.340
And you ask, "Well, would it
have performed better if in

00:16:19.340 --> 00:16:23.470
fact what you did was to wait to
make a final decision until

00:16:23.470 --> 00:16:25.850
you got all the data?"

00:16:25.850 --> 00:16:29.130
And we talk a little bit about
various kinds of error control

00:16:29.130 --> 00:16:32.090
later when we get
into wireless.

00:16:32.090 --> 00:16:36.680
We'll see that some kinds of
coding systems can behave very

00:16:36.680 --> 00:16:40.260
easily and can make use of all
this extra information.

00:16:40.260 --> 00:16:41.740
And other ones can't.

00:16:41.740 --> 00:16:44.610
Algebraic kinds of schemes can't
seem to make use of the

00:16:44.610 --> 00:16:47.930
extra information.

00:16:47.930 --> 00:16:52.080
And various other kinds of
schemes can make use of it.

00:16:52.080 --> 00:16:54.520
And if you want to understand
what's happened in the error

00:16:54.520 --> 00:16:59.430
correction field over the last
five years-- unfortunately

00:16:59.430 --> 00:17:01.980
6.451 won't be given,
so you won't get all

00:17:01.980 --> 00:17:04.290
the details of this--

00:17:04.290 --> 00:17:08.720
but the simplest one sentence
statement you can say is that

00:17:08.720 --> 00:17:12.120
the world has changed from
algebraic coding techniques to

00:17:12.120 --> 00:17:14.940
probablistic decoding
techniques.

00:17:14.940 --> 00:17:19.510
And the primary reason for it is
you want to make use of all

00:17:19.510 --> 00:17:22.260
that extra information you get
from looking at the full

00:17:22.260 --> 00:17:27.770
observation, rather than just
a partial observations.

00:17:27.770 --> 00:17:29.020
OK.

00:17:31.380 --> 00:17:35.630
Now, back to various
signal sets.

00:17:35.630 --> 00:17:38.300
I put this slide up last time.

00:17:38.300 --> 00:17:43.790
I want to really talk about it
this time because for each

00:17:43.790 --> 00:17:48.530
number of degrees of freedom,
you can define what's called

00:17:48.530 --> 00:17:50.440
an orthogonal code.

00:17:50.440 --> 00:17:54.740
And the orthogonal codes for m
equals 2 and for m equals 3

00:17:54.740 --> 00:17:56.120
are drawn here.

00:17:56.120 --> 00:17:59.620
For m equals 2, it's something
that we've seen before.

00:17:59.620 --> 00:18:04.440
Namely, if you want to send a
zero, you send a one in the

00:18:04.440 --> 00:18:07.130
first compound, the first degree
of freedom, a zero in

00:18:07.130 --> 00:18:08.090
the second.

00:18:08.090 --> 00:18:13.310
And if you want to send a one,
you send the opposite thing.

00:18:13.310 --> 00:18:16.490
We've all seen that this isn't
a very sensible thing to do

00:18:16.490 --> 00:18:19.530
when we looked at binary
detection, because when you

00:18:19.530 --> 00:18:23.760
use a scheme like this of course
the thing that happens

00:18:23.760 --> 00:18:27.960
is we now know that we should
look at this in terms of just

00:18:27.960 --> 00:18:30.630
looking at this line
along here.

00:18:30.630 --> 00:18:35.300
Because what we're really
transmitting is a pilot tone,

00:18:35.300 --> 00:18:38.240
so to speak, which is half way
in the middle here, which

00:18:38.240 --> 00:18:39.490
sticks right here.

00:18:41.830 --> 00:18:45.760
Plus something that
varies from that.

00:18:45.760 --> 00:18:51.020
So that when we take out this
pilot tone, what we wind up

00:18:51.020 --> 00:18:53.540
with is a one dimensional
system instead of a two

00:18:53.540 --> 00:18:55.660
dimensional system.

00:18:55.660 --> 00:19:00.280
Which we used to call antipodal
communication-- and

00:19:00.280 --> 00:19:03.380
which everybody with any
sense calls antipodal

00:19:03.380 --> 00:19:05.520
communication, even now--

00:19:05.520 --> 00:19:08.300
but in terms of this, it's
the simplest case

00:19:08.300 --> 00:19:09.980
of a simplex code.

00:19:09.980 --> 00:19:13.600
And a simplex code is simply
an orthogonal code where

00:19:13.600 --> 00:19:16.070
you've taken the mean
and moved it out.

00:19:16.070 --> 00:19:19.170
And as soon as you remove the
mean from an orthogonal code,

00:19:19.170 --> 00:19:22.510
you get rid of one degree
freedom, because one of the

00:19:22.510 --> 00:19:24.950
signals becomes dependent
on the others.

00:19:24.950 --> 00:19:26.650
Which is exactly what's
happened here.

00:19:26.650 --> 00:19:27.630
You've just--

00:19:27.630 --> 00:19:30.640
if all your signals are in one
degree of freedom here, when

00:19:30.640 --> 00:19:34.220
you do the same thing down
here, well you get this.

00:19:34.220 --> 00:19:36.130
And I'll talk about
that later.

00:19:36.130 --> 00:19:39.790
So, one thing you can do from an
orthogonal code is go to a

00:19:39.790 --> 00:19:41.170
simplex code.

00:19:41.170 --> 00:19:44.560
The other thing you can do if
you want to transmit one more

00:19:44.560 --> 00:19:49.300
bit out of this signal set is to
go to a bi orthogonal code.

00:19:49.300 --> 00:19:52.640
Which says-- along with
transmitting zero, one and

00:19:52.640 --> 00:19:56.910
one, zero-- you look this and
you say, "Gee why don't I also

00:19:56.910 --> 00:20:02.940
put in zero minus one, minus
one zero, and zero

00:20:02.940 --> 00:20:04.690
minus one down here.

00:20:04.690 --> 00:20:07.790
Which is exactly what the
bi orthogonal code is.

00:20:07.790 --> 00:20:11.820
The bi orthogonal code simply
says take your orthogonal code

00:20:11.820 --> 00:20:15.190
and every time you have a one,
change it into a minus one and

00:20:15.190 --> 00:20:17.590
get an extra code
word out of it.

00:20:17.590 --> 00:20:19.620
What's the difference between
a set of code words and a

00:20:19.620 --> 00:20:21.860
signal set?

00:20:21.860 --> 00:20:23.110
Anybody have any idea?

00:20:26.660 --> 00:20:27.660
Absolutely none.

00:20:27.660 --> 00:20:31.070
They're both exactly
the same thing.

00:20:31.070 --> 00:20:35.370
And you think of it as being a
code, usually, if what you're

00:20:35.370 --> 00:20:38.570
doing is thinking of generating
an error correcting

00:20:38.570 --> 00:20:41.910
code and then from that error
correcting code you think of

00:20:41.910 --> 00:20:46.140
using QAM or PAM or something
else out beyond that.

00:20:46.140 --> 00:20:48.540
You call it a signal set if
you're just doing the whole

00:20:48.540 --> 00:20:50.420
thing as one unit.

00:20:50.420 --> 00:20:56.890
What a lot of systems now do is
they start out with a code,

00:20:56.890 --> 00:21:01.410
then they turn this into an
orthogonal signal set.

00:21:01.410 --> 00:21:02.120
I'll tell you in other words.

00:21:02.120 --> 00:21:04.000
A code produces bits.

00:21:04.000 --> 00:21:07.170
From the bits you group them
together into sets of bits.

00:21:07.170 --> 00:21:11.520
From the sets of bits you
go into a signal--

00:21:11.520 --> 00:21:13.890
which is, for example something
from one of these

00:21:13.890 --> 00:21:17.450
three possibilities here--

00:21:17.450 --> 00:21:18.700
OK.

00:21:21.540 --> 00:21:24.760
The important thing to notice
here-- and it's particularly

00:21:24.760 --> 00:21:28.800
important to think about it for
a few minutes-- is because

00:21:28.800 --> 00:21:31.790
you do so many exercises.

00:21:31.790 --> 00:21:34.290
And you've done a number of them
already and you will do a

00:21:34.290 --> 00:21:36.520
few more in this course
where you deal with

00:21:36.520 --> 00:21:38.760
the m equals 2 case.

00:21:38.760 --> 00:21:41.700
And you can deal with this
biorthogonal set here.

00:21:41.700 --> 00:21:46.260
You can shift the biorthogonal
set around by 45 degrees.

00:21:46.260 --> 00:21:48.530
In which case it looks
like this.

00:21:54.030 --> 00:21:56.420
OK, so that looks like
two PAM sets.

00:21:56.420 --> 00:21:59.970
It looks like a standard QAM.

00:21:59.970 --> 00:22:02.970
It looks like standard 4QAM.

00:22:02.970 --> 00:22:06.270
This is exactly the same
as this of course.

00:22:06.270 --> 00:22:10.680
When you do detection on this
you do detection by saying,

00:22:10.680 --> 00:22:14.350
when you transmit this does
the noise carry you across

00:22:14.350 --> 00:22:16.380
that boundary?

00:22:16.380 --> 00:22:19.610
And then does the noise carry
you across this boundary?

00:22:19.610 --> 00:22:23.340
The noise in this direction is
orthogonal from the noise in

00:22:23.340 --> 00:22:27.320
this direction and therefore,
finding the probability of

00:22:27.320 --> 00:22:29.560
error is very, very simple.

00:22:29.560 --> 00:22:34.090
Because because you look at two
separate orthogonal kinds

00:22:34.090 --> 00:22:37.190
of noise and you can just
multiply these probabilities

00:22:37.190 --> 00:22:39.740
together in the appropriate
way to

00:22:39.740 --> 00:22:41.890
find out what's happening.

00:22:41.890 --> 00:22:45.690
The important thing to have
stick in your memory now is

00:22:45.690 --> 00:22:47.360
that as soon as you
go to m equals

00:22:47.360 --> 00:22:50.590
three, life gets harder.

00:22:50.590 --> 00:22:54.470
In fact, if you look at this
orthogonal set here and you

00:22:54.470 --> 00:22:57.780
try to find the error
probability for it-- you try

00:22:57.780 --> 00:22:59.530
to find it exactly--

00:22:59.530 --> 00:23:01.310
you can't do it like this.

00:23:01.310 --> 00:23:03.480
You can't just multiply
three terms.

00:23:03.480 --> 00:23:06.610
You look at these regions in
three dimensional space.

00:23:06.610 --> 00:23:09.300
If you want to visualize what
they are, what do you do?

00:23:12.720 --> 00:23:15.760
What picture do you look at?

00:23:15.760 --> 00:23:17.960
You look at this picture.

00:23:17.960 --> 00:23:18.350
OK?

00:23:18.350 --> 00:23:22.350
Because this picture is just
this with the mean taken away.

00:23:22.350 --> 00:23:25.590
So the error probability here
is the same as the error

00:23:25.590 --> 00:23:27.050
probability here.

00:23:27.050 --> 00:23:33.420
When I send this point the
regions that I'm looking at

00:23:33.420 --> 00:23:35.580
look like this.

00:23:40.900 --> 00:23:43.490
And they're not orthogonal
to each other.

00:23:43.490 --> 00:23:47.470
So to find the probability that
this point gets outside

00:23:47.470 --> 00:23:53.330
of this region looks just
a little bit messy.

00:23:53.330 --> 00:23:57.930
And that happens for all
m bigger than two.

00:23:57.930 --> 00:24:03.500
I never knew this because well,
I think this is probably

00:24:03.500 --> 00:24:06.720
a disaster that happens more
to teachers than to people

00:24:06.720 --> 00:24:08.460
working in the field.

00:24:08.460 --> 00:24:11.880
Because so often I have
explained to people how these

00:24:11.880 --> 00:24:15.160
two dimensional pictures work
that I just get used to

00:24:15.160 --> 00:24:17.630
thinking that this is
an easy problem.

00:24:17.630 --> 00:24:20.510
And in fact when you start
looking at the problem for m

00:24:20.510 --> 00:24:23.780
equals three, then the problem
gets much more interesting and

00:24:23.780 --> 00:24:27.210
much more useful and much more
practical when n becomes three

00:24:27.210 --> 00:24:30.250
or four or five or six
or seven or eight.

00:24:30.250 --> 00:24:33.340
Beyond eight it becomes a
little too hard to do.

00:24:33.340 --> 00:24:36.410
But up until there,
it's very easy.

00:24:36.410 --> 00:24:38.930
OK, so we're going to make use
of that in a little bit.

00:24:45.870 --> 00:24:49.030
As we said orthogonal codes
and simplex codes-- if you

00:24:49.030 --> 00:24:51.970
scale the simplex code from
the orthogonal code-- have

00:24:51.970 --> 00:24:54.560
exactly the same error
probability.

00:24:54.560 --> 00:25:00.090
In other words, this code here
where I've made the distances

00:25:00.090 --> 00:25:03.340
between the point square root
of two over two, which

00:25:03.340 --> 00:25:07.270
corresponds to the distance
between the points here.

00:25:07.270 --> 00:25:10.730
This and this have exactly the
same error probability.

00:25:10.730 --> 00:25:14.380
So you can even, in fact, find
the error probability for this

00:25:14.380 --> 00:25:17.050
or for this, whichever
you find easier.

00:25:17.050 --> 00:25:18.790
You now think it's easier
to find the error

00:25:18.790 --> 00:25:21.230
probability for this.

00:25:21.230 --> 00:25:24.590
I've lead you down the primrose
path, because in fact

00:25:24.590 --> 00:25:28.180
this one is easier to find the
error probability for.

00:25:28.180 --> 00:25:30.380
This one, again, you
can find the error

00:25:30.380 --> 00:25:32.920
probability if you want.

00:25:32.920 --> 00:25:37.170
But the energy difference
between this and this is

00:25:37.170 --> 00:25:44.020
simply the added energy that you
have to use here to send

00:25:44.020 --> 00:25:48.570
the mean of these
three signals.

00:25:48.570 --> 00:25:52.120
And one signal is sitting out
here at 1,0,0 one is sitting

00:25:52.120 --> 00:25:56.850
at 0,1,0 one is sitting
at 0,0,1.

00:25:56.850 --> 00:25:59.220
Even I can calculate the
mean of those three.

00:25:59.220 --> 00:26:01.970
It's one third, one third,
an one third.

00:26:01.970 --> 00:26:05.050
So you calculate the energy in
one third, one third, and one

00:26:05.050 --> 00:26:09.490
third, and it's three times
one ninth, or one third.

00:26:09.490 --> 00:26:11.800
Which is exactly
what this says.

00:26:11.800 --> 00:26:16.630
The energy difference between
orthogonal and simplex is 1

00:26:16.630 --> 00:26:17.930
minus 1 over m.

00:26:17.930 --> 00:26:21.730
In other words that's the factor
in energy that you lose

00:26:21.730 --> 00:26:24.160
by using orthogonal
codes instead of

00:26:24.160 --> 00:26:25.910
using simplex codes.

00:26:25.910 --> 00:26:29.090
Why do people ever use
orthogonal codes?

00:26:29.090 --> 00:26:33.400
If it's just a pure loss
in energy in doing so?

00:26:33.400 --> 00:26:37.220
Well, one reason is when n
gets up to be 6 or 8, it

00:26:37.220 --> 00:26:40.140
doesn't amounts to
a whole lot.

00:26:40.140 --> 00:26:48.290
And the other reason is if you
look at if you look at

00:26:48.290 --> 00:26:51.510
modulating these things on to
sine waves and things like

00:26:51.510 --> 00:26:58.140
that, you suddenly see that
when you're using this it

00:26:58.140 --> 00:27:01.850
becomes easier to keep frequency
lock and phase lock

00:27:01.850 --> 00:27:04.020
than it does when
you use this.

00:27:04.020 --> 00:27:06.070
I mean you have to think about
that argument a little bit to

00:27:06.070 --> 00:27:07.590
make sense out of it.

00:27:07.590 --> 00:27:11.170
But that, in fact, is why people
often use orthogonal

00:27:11.170 --> 00:27:14.610
signals because, in fact,
they can recover

00:27:14.610 --> 00:27:16.560
other things from it.

00:27:16.560 --> 00:27:19.400
Well because they're actually
sending a mean, also.

00:27:19.400 --> 00:27:21.870
So the mean is the thing that
lets them recover all these

00:27:21.870 --> 00:27:23.130
other neat things.

00:27:26.080 --> 00:27:29.670
So that sort of sometimes
rules out this and it

00:27:29.670 --> 00:27:32.100
sometimes rules out that.

00:27:32.100 --> 00:27:32.600
OK.

00:27:32.600 --> 00:27:36.340
Orthogonal and biorthogonal
codes have the same energy?

00:27:36.340 --> 00:27:38.560
Well, look at them.

00:27:38.560 --> 00:27:41.980
These two signal points each
have the same energy.

00:27:41.980 --> 00:27:45.880
And these two have the same
energy as these two.

00:27:45.880 --> 00:27:48.580
So the average energy
is the same as the

00:27:48.580 --> 00:27:50.020
energy at each point.

00:27:50.020 --> 00:27:53.880
So this and this have
the same energy.

00:27:53.880 --> 00:27:57.620
What happens to the probability
of error?

00:27:57.620 --> 00:28:01.840
Well you can't evaluate
it exactly.

00:28:01.840 --> 00:28:04.760
Except here is a case where just
looking at the m equals 2

00:28:04.760 --> 00:28:07.030
case gives you the
right answer.

00:28:07.030 --> 00:28:10.640
I mean here to make an error
you have to go across that

00:28:10.640 --> 00:28:11.930
boundary there.

00:28:11.930 --> 00:28:15.030
Here to make an error you have
to either go across that

00:28:15.030 --> 00:28:17.820
boundary or go across
that boundary.

00:28:17.820 --> 00:28:19.880
The error of probability
essentially goes up by a

00:28:19.880 --> 00:28:21.140
factor of two.

00:28:21.140 --> 00:28:23.000
Same thing happens here.

00:28:23.000 --> 00:28:24.860
You just get twice as
many ways to make

00:28:24.860 --> 00:28:27.520
errors as you had before.

00:28:27.520 --> 00:28:30.910
And all of these ways to make
errors are equally probable.

00:28:30.910 --> 00:28:33.910
All the points are equally
distant from each other.

00:28:33.910 --> 00:28:37.480
So you essentially just double
the number of likely ways you

00:28:37.480 --> 00:28:38.590
can make errors.

00:28:38.590 --> 00:28:42.490
And the error probability
essentially goes up by two.

00:28:42.490 --> 00:28:43.740
Goes up a little--

00:28:45.850 --> 00:28:48.240
well because you're using a
union band it either goes up

00:28:48.240 --> 00:28:51.300
by a little more or a little
less than two--

00:28:51.300 --> 00:28:53.080
but it's almost two.

00:28:58.050 --> 00:29:03.210
OK, so I want to actually find
the probability of error now.

00:29:03.210 --> 00:29:06.500
If you're sending an
orthogonal code.

00:29:06.500 --> 00:29:10.480
Namely, we pick an orthogonal
code where we pick as many

00:29:10.480 --> 00:29:13.010
code words as we want to.

00:29:13.010 --> 00:29:18.200
m might be 64, it might
be 128, whatever.

00:29:18.200 --> 00:29:24.500
And we want to try to figure
out how to evaluate the

00:29:24.500 --> 00:29:27.750
probability of error for
this kind of code.

00:29:27.750 --> 00:29:33.360
After you face the fact that,
in fact, these lines are not

00:29:33.360 --> 00:29:36.290
orthogonal to each other.

00:29:36.290 --> 00:29:42.190
OK, well the way you do this
is you say, OK the, even

00:29:42.190 --> 00:29:47.530
though this is a slightly messy
problem, it's clear from

00:29:47.530 --> 00:29:51.260
symmetry that you got the same
error probability no matter

00:29:51.260 --> 00:29:53.100
which signal point you sent.

00:29:53.100 --> 00:29:56.370
Namely, every signal point is
exactly the same as every

00:29:56.370 --> 00:29:57.820
other signal point.

00:29:57.820 --> 00:30:01.270
What you call the first signal
depends only on which you

00:30:01.270 --> 00:30:04.620
happen to call the first
orthonormal direction.

00:30:04.620 --> 00:30:08.140
Whether it's this,
or this, or this.

00:30:08.140 --> 00:30:10.920
I can change it in anyway I
want to and the problem is

00:30:10.920 --> 00:30:13.160
still exactly the same.

00:30:13.160 --> 00:30:16.210
OK, so all I'm going to do
is try to find the error

00:30:16.210 --> 00:30:20.070
probability when I send
this signal here.

00:30:20.070 --> 00:30:22.900
In other words, when
I send 1,0,0--

00:30:22.900 --> 00:30:26.980
actually I'm going to send the
square root of e and 0,0--

00:30:26.980 --> 00:30:29.150
because I want to talk about
the energy here.

00:30:29.150 --> 00:30:33.100
Why am I torturing
you with this?

00:30:33.100 --> 00:30:36.410
Well 50 years ago, 55 years
ago, Shannon came out with

00:30:36.410 --> 00:30:40.370
this marvelous paper which says
there's something called

00:30:40.370 --> 00:30:42.660
channel capacity.

00:30:42.660 --> 00:30:45.020
And what he said channel
capacity was

00:30:45.020 --> 00:30:47.310
was the minimum rate--

00:30:47.310 --> 00:30:50.560
the, was the maximum rate at
which you could transmit on a

00:30:50.560 --> 00:30:55.190
channel and still get zero
error probability.

00:30:55.190 --> 00:30:59.230
Sort of the simplest and most
famous case of that is where

00:30:59.230 --> 00:31:02.120
you have white Gaussian
noise to deal with.

00:31:02.120 --> 00:31:03.670
You're trying to transmit
through this

00:31:03.670 --> 00:31:06.230
white Gaussian noise.

00:31:06.230 --> 00:31:09.380
And you can use as much
bandwidth as you want.

00:31:09.380 --> 00:31:11.370
Namely, you can spread
the signals out as

00:31:11.370 --> 00:31:12.710
much as you want to.

00:31:12.710 --> 00:31:14.920
You can sort of see from
starting to look at this

00:31:14.920 --> 00:31:20.530
picture that you're going to
be a little better off, for

00:31:20.530 --> 00:31:25.370
example, if you want to send
one bit in these two

00:31:25.370 --> 00:31:28.040
dimensions here with
orthogonal signals.

00:31:28.040 --> 00:31:30.890
If you can think of what happens
down here for m equals

00:31:30.890 --> 00:31:35.770
4, you would wind up with
four orthogonal signals.

00:31:35.770 --> 00:31:38.910
And if you wind up with four
orthogonal signals, you're

00:31:38.910 --> 00:31:41.810
sending two bits, so you're
going to use twice as much

00:31:41.810 --> 00:31:43.360
energy for each of them.

00:31:43.360 --> 00:31:49.570
So you can scale each of
these up to be 2,0,0,0;

00:31:49.570 --> 00:31:55.240
0,2,0,0; and so forth.

00:31:55.240 --> 00:31:57.620
So you're sending twice
as much energy.

00:31:57.620 --> 00:31:59.750
You're filling up more bandwidth
because you need

00:31:59.750 --> 00:32:02.810
more degrees of freedom
to send this signal.

00:32:02.810 --> 00:32:04.640
But who cares?

00:32:04.640 --> 00:32:06.920
Because we have all the
bandwidth we want.

00:32:06.920 --> 00:32:09.020
Gets more complicated.

00:32:09.020 --> 00:32:12.090
But the question is, what
happens if we go to a very

00:32:12.090 --> 00:32:14.580
large set of orthogonal
signals?

00:32:14.580 --> 00:32:16.930
And what we're going to find is
that when we go to a very

00:32:16.930 --> 00:32:20.550
large set of orthogonal signals,
we can get an error

00:32:20.550 --> 00:32:24.820
probability which goes to zero
as the number of orthogonal

00:32:24.820 --> 00:32:27.010
signals gets bigger.

00:32:27.010 --> 00:32:29.990
It goes to zero very fast
as we send more

00:32:29.990 --> 00:32:32.220
bits with each signal.

00:32:32.220 --> 00:32:35.000
And the place where
it goes to zero is

00:32:35.000 --> 00:32:37.390
exactly channel capacity.

00:32:37.390 --> 00:32:40.240
Now in your homework, you're
going to work out a simpler

00:32:40.240 --> 00:32:42.740
version of all of this.

00:32:42.740 --> 00:32:44.280
And a simpler version
is something

00:32:44.280 --> 00:32:46.330
called the union band.

00:32:46.330 --> 00:32:49.630
And in the union band you just
assume that the probability of

00:32:49.630 --> 00:32:53.800
error when you send this is the
sum of the probability of

00:32:53.800 --> 00:32:59.490
error, of making an error, to
this and the possibility of

00:32:59.490 --> 00:33:01.500
making an error to this.

00:33:01.500 --> 00:33:03.520
The thing that we're
going to add here--

00:33:06.550 --> 00:33:09.280
and let me try to explain
it from this picture.

00:33:09.280 --> 00:33:11.580
I'm sending this point here.

00:33:11.580 --> 00:33:12.830
OK?

00:33:17.950 --> 00:33:22.000
And I can find the probability
of error over to that point.

00:33:22.000 --> 00:33:26.600
Which is the probability of
going over that threshold.

00:33:26.600 --> 00:33:29.710
I can talk about the probability
of error to over

00:33:29.710 --> 00:33:33.990
here, which is the probability
of going over that threshold.

00:33:33.990 --> 00:33:36.920
These are not orthogonal
to each other.

00:33:36.920 --> 00:33:40.150
And in fact they have a common
component to them.

00:33:40.150 --> 00:33:44.120
And the common component is
what happens in this first

00:33:44.120 --> 00:33:46.000
direction here.

00:33:46.000 --> 00:33:52.700
OK, in other words if you send
1,0,0 and the noise, and your

00:33:52.700 --> 00:33:54.920
own noise variable
clobbers you.

00:33:54.920 --> 00:33:59.630
In other words, what you receive
is something in this

00:33:59.630 --> 00:34:03.280
coordinate which is way down
here and sort of arbitrary

00:34:03.280 --> 00:34:06.090
everywhere else--

00:34:06.090 --> 00:34:10.690
conditional on the noise here
being very, very large--

00:34:10.690 --> 00:34:13.850
you're probably going
to make an error.

00:34:13.850 --> 00:34:18.010
Now if you can imagine having a
million orthogonal signals--

00:34:18.010 --> 00:34:22.070
and the noise clobbering you on
your own noise variable--

00:34:22.070 --> 00:34:26.620
you're going to have a million
ways to make errors.

00:34:26.620 --> 00:34:30.720
And they're all going to
be kind of likely.

00:34:30.720 --> 00:34:34.440
If I go far enough down here,
suppose what I receive in this

00:34:34.440 --> 00:34:37.040
coordinate is zero.

00:34:37.040 --> 00:34:40.520
Then there's a probability of
one half that each one of

00:34:40.520 --> 00:34:45.100
these things is going to
be greater than zero.

00:34:45.100 --> 00:34:48.990
If I use a union bound, adding
up the probabilities of each

00:34:48.990 --> 00:34:52.600
of these, I'm going to add
up a million one halves.

00:34:52.600 --> 00:34:56.820
Which is 500,000.

00:34:56.820 --> 00:35:00.310
As an upper bound to
a probability.

00:35:00.310 --> 00:35:04.500
And that's going to clobber
my bound pretty badly.

00:35:04.500 --> 00:35:09.020
Which says the thing I want to
do here is, when I'm sending

00:35:09.020 --> 00:35:12.340
this I want to condition my
whole argument on what the

00:35:12.340 --> 00:35:14.860
noise is in this direction.

00:35:14.860 --> 00:35:18.190
And given what the noise is in
this direction, I will then

00:35:18.190 --> 00:35:21.440
try to evaluate the
error probability,

00:35:21.440 --> 00:35:23.200
conditional on this.

00:35:23.200 --> 00:35:26.710
And conditional on a received
value here.

00:35:26.710 --> 00:35:31.170
In fact, the noise in the
direction, w2, is independent

00:35:31.170 --> 00:35:34.480
of the noise in direction, w3,
independent of the noise in

00:35:34.480 --> 00:35:36.740
direction, w4, and so forth.

00:35:36.740 --> 00:35:42.350
So at that point, condition on
w1 I'm dealing with m minus 1

00:35:42.350 --> 00:35:45.500
independent random variables.

00:35:45.500 --> 00:35:47.660
I can deal with independent
random variables.

00:35:47.660 --> 00:35:50.740
You can deal with an independent
random variables.

00:35:50.740 --> 00:35:52.500
Maybe some of you can
integrate over

00:35:52.500 --> 00:35:55.000
these complex polycons.

00:35:55.000 --> 00:35:55.620
I can't.

00:35:55.620 --> 00:35:56.900
I don't want to.

00:35:56.900 --> 00:35:59.730
I don't want to write a
program that does it.

00:35:59.730 --> 00:36:02.320
I don't want to be close to
anybody who writes a program

00:36:02.320 --> 00:36:04.570
that does it.

00:36:04.570 --> 00:36:06.450
It offends me.

00:36:06.450 --> 00:36:09.550
OK, so here we go.

00:36:15.090 --> 00:36:17.480
Where am I?

00:36:17.480 --> 00:36:19.400
OK, so the first thing I'm going
to do, which I didn't

00:36:19.400 --> 00:36:23.830
tell you, because I'm
going to scale the

00:36:23.830 --> 00:36:25.080
problem a little bit.

00:36:29.600 --> 00:36:32.860
I did say that here.

00:36:32.860 --> 00:36:36.810
I'm going to normalize the whole
problem by calling my

00:36:36.810 --> 00:36:40.670
output W sub j instead
of Y sub j.

00:36:40.670 --> 00:36:44.540
And I'm going to normalize it by
multiplying Y sub j by the

00:36:44.540 --> 00:36:47.530
square root of the
noise variance.

00:36:47.530 --> 00:36:50.330
OK in other words, I'm going to
scale the noise down so the

00:36:50.330 --> 00:36:52.520
noise has unit variance.

00:36:52.520 --> 00:36:55.950
And by scaling the noise down
so it has unit variance, the

00:36:55.950 --> 00:36:58.770
signal will be scaled down
in the same way.

00:36:58.770 --> 00:37:02.570
So the signal, now, instead of
being the square root of e--

00:37:02.570 --> 00:37:05.450
which is the energy I have
available-- it's going to be

00:37:05.450 --> 00:37:11.160
the square root 2e
divided by N0.

00:37:11.160 --> 00:37:14.690
Somehow this thing keeps
creeping up everywhere.

00:37:14.690 --> 00:37:15.920
This 2e over N0.

00:37:15.920 --> 00:37:20.750
Well of course it's the
difference between e, which is

00:37:20.750 --> 00:37:25.930
the energy we have to send the
signal, and N0 over 2, which

00:37:25.930 --> 00:37:28.630
is the noise energy in each
degree of freedom.

00:37:28.630 --> 00:37:30.810
So it's not surprising
that it's sort of

00:37:30.810 --> 00:37:32.280
a fundamental quantity.

00:37:32.280 --> 00:37:35.180
And as soon as we normalize to
make the noise variance equal

00:37:35.180 --> 00:37:38.860
to one, that's what
the signal is.

00:37:38.860 --> 00:37:41.500
So I'm going to call alpha this
so I don't have to write

00:37:41.500 --> 00:37:42.760
this all the time.

00:37:42.760 --> 00:37:45.670
Because it gets kind of
messy on the slides.

00:37:45.670 --> 00:37:52.340
OK so given that I'm going to
send input one, the received

00:37:52.340 --> 00:37:58.400
variable W1 is going to be
normal with a mean alpha which

00:37:58.400 --> 00:38:03.530
is the square root of 2e over N0
and with a variance of one.

00:38:03.530 --> 00:38:05.730
All the other random variables
are going to be

00:38:05.730 --> 00:38:07.200
normal random variables.

00:38:07.200 --> 00:38:09.690
Mean zero, variance one.

00:38:09.690 --> 00:38:11.050
OK?

00:38:11.050 --> 00:38:15.010
I'm going to make an error if
any one of these other random

00:38:15.010 --> 00:38:20.810
variables happens to rise
up and exceed W1.

00:38:20.810 --> 00:38:24.810
So the thing we have here is W1
is doing some crazy thing.

00:38:24.810 --> 00:38:28.860
I have this enormous sea of
other code words in other

00:38:28.860 --> 00:38:30.760
directions.

00:38:30.760 --> 00:38:34.360
And then the question we
ask is can the noise--

00:38:34.360 --> 00:38:37.870
which is usually very small
all over the place but it

00:38:37.870 --> 00:38:39.740
might rise up some place.

00:38:39.740 --> 00:38:43.210
And if it rises up someplace,
we're asking what's the

00:38:43.210 --> 00:38:46.320
probability that it's going to
rise up to be big enough that

00:38:46.320 --> 00:38:47.580
it's exceeds W1?

00:38:47.580 --> 00:38:55.920
So, I can at least write down
what the error probability is

00:38:55.920 --> 00:38:58.810
exactly at that point.

00:38:58.810 --> 00:39:02.480
What I'm going to do is I'm
going to write down the

00:39:02.480 --> 00:39:06.430
probability density for W1.

00:39:06.430 --> 00:39:10.300
And W1, remember, is a Gaussian
random variable with

00:39:10.300 --> 00:39:12.720
mean alpha and with
variance one.

00:39:12.720 --> 00:39:16.040
So we could actually write down
what that density is.

00:39:16.040 --> 00:39:21.680
And for each W1 I'm going to
make an error if the union of

00:39:21.680 --> 00:39:23.980
any one of these
events occurs.

00:39:23.980 --> 00:39:26.630
Namely, if any one of the
W sub j is bigger than

00:39:26.630 --> 00:39:30.140
W1, bingo I'm lost.

00:39:30.140 --> 00:39:31.060
OK?

00:39:31.060 --> 00:39:36.980
So I'm going to integrate that
now over all values of W1.

00:39:36.980 --> 00:39:41.880
Now, as I said before if W1 is
very small, then lots of other

00:39:41.880 --> 00:39:44.260
signals look more
likely than W1.

00:39:44.260 --> 00:39:47.070
In other words I'm going
to get clobbered no

00:39:47.070 --> 00:39:49.120
matter what I do.

00:39:49.120 --> 00:39:53.440
Whereas if W1 is large, it looks
like the union bound

00:39:53.440 --> 00:39:53.950
might work here.

00:39:53.950 --> 00:39:57.000
And the union bound is what
you're doing in the homework

00:39:57.000 --> 00:40:00.520
without paying any
attention to W1.

00:40:00.520 --> 00:40:04.680
OK, so I'm going to use the
union band-- and the union

00:40:04.680 --> 00:40:08.020
band says the probability that
this union of all these

00:40:08.020 --> 00:40:11.390
different m minus 1 events--

00:40:11.390 --> 00:40:15.020
exceeds some value, W1.

00:40:15.020 --> 00:40:18.690
W1 is just some arbitrary
constant in here.

00:40:18.690 --> 00:40:20.270
The probability of this.

00:40:20.270 --> 00:40:22.200
I'm going to write
it in two ways.

00:40:22.200 --> 00:40:24.400
It's upper bounded by one.

00:40:24.400 --> 00:40:27.310
Because all probabilities are
upper bounded by one.

00:40:27.310 --> 00:40:30.210
This is not a probability
density, this is a probability

00:40:30.210 --> 00:40:32.940
now so it's upper
bounded by one.

00:40:32.940 --> 00:40:36.110
And it's also upper bounded
by this union band.

00:40:36.110 --> 00:40:40.550
Mainly, the union of
m minus 1 events.

00:40:40.550 --> 00:40:42.300
Each with probability.

00:40:42.300 --> 00:40:45.090
This is the tail of the
Gaussian distribution

00:40:45.090 --> 00:40:46.850
evaluated at w1.

00:40:46.850 --> 00:40:48.710
So I have the union band here.

00:40:48.710 --> 00:40:50.070
I have one here.

00:40:50.070 --> 00:40:52.330
Going to pick some
parameter gamma.

00:40:52.330 --> 00:40:55.840
I don't know what gamma should
be yet, but whatever I pick

00:40:55.840 --> 00:40:58.420
gamma to be I still have
a legitimate bound.

00:40:58.420 --> 00:41:01.980
This is less than or equal to
this, and it's less than or

00:41:01.980 --> 00:41:03.390
equal to this.

00:41:03.390 --> 00:41:08.030
Just common sense dictates that
I'm going to use this

00:41:08.030 --> 00:41:09.890
when this is less than one.

00:41:09.890 --> 00:41:13.650
And I'm going to use this when
this is greater than one.

00:41:13.650 --> 00:41:15.360
That's what common sense says.

00:41:15.360 --> 00:41:19.050
As soon as I start to evaluate
this, common sense goes out

00:41:19.050 --> 00:41:22.840
the window because then I start
to deal with setting

00:41:22.840 --> 00:41:26.390
this quantity equal to one and
dealing with the inverse of

00:41:26.390 --> 00:41:28.500
the Gaussian distribution
function.

00:41:28.500 --> 00:41:30.350
Which is very painful.

00:41:30.350 --> 00:41:33.920
So I'm then going to
bound what this is.

00:41:33.920 --> 00:41:36.260
And in terms of the bound on
this, I'm going to affect

00:41:36.260 --> 00:41:37.530
gamma that way.

00:41:37.530 --> 00:41:40.130
Because all I'm interested in
is an upper bound on error

00:41:40.130 --> 00:41:42.330
probability anyway.

00:41:42.330 --> 00:41:46.830
OK, so that's where
we're going to go.

00:41:46.830 --> 00:41:51.630
So this probability of error
then is then exceeded by using

00:41:51.630 --> 00:41:55.870
this bound for small W1.

00:41:55.870 --> 00:42:01.660
I get this integral over
all W1 between minus

00:42:01.660 --> 00:42:03.280
infinity and gamma.

00:42:03.280 --> 00:42:05.650
And let's just look at
what this becomes.

00:42:05.650 --> 00:42:08.940
This is just the tail of the
Gaussian distribution.

00:42:08.940 --> 00:42:11.990
That's the lower tail instead
of the upper tail, but that

00:42:11.990 --> 00:42:13.610
doesn't make any difference.

00:42:13.610 --> 00:42:18.460
So this is exactly Q of
alpha minus gamma.

00:42:18.460 --> 00:42:24.080
Mainly, alpha is where the mean
of this density is and

00:42:24.080 --> 00:42:26.760
gamma is where I integrate to.

00:42:26.760 --> 00:42:30.090
So if I shift the thing
down, I get

00:42:30.090 --> 00:42:32.360
something that goes from--

00:42:32.360 --> 00:42:35.190
well you might be surprised as
to why this is minus gamma

00:42:35.190 --> 00:42:38.060
instead of plus gamma, and it's
minus gamma because I'm

00:42:38.060 --> 00:42:42.060
looking at the lower tail rather
than the upper tail and

00:42:42.060 --> 00:42:45.110
asking you to think this
through in real time is

00:42:45.110 --> 00:42:47.970
unreasonable, but believe me
if you sit down and think

00:42:47.970 --> 00:42:51.090
about it for a couple of seconds
you'll realize that

00:42:51.090 --> 00:42:55.440
this integral is exactly this
lowered tail of this Gaussian

00:42:55.440 --> 00:42:56.740
distribution.

00:42:56.740 --> 00:43:00.290
The other term is a little
more complicated.

00:43:00.290 --> 00:43:05.950
It's m minus 1, which is that
term there, times Q of w1,

00:43:05.950 --> 00:43:09.700
which is this term here, times
the Gaussian density.

00:43:09.700 --> 00:43:14.440
Now this is the Gaussian density
for W1, which is one

00:43:14.440 --> 00:43:15.860
over square root of 2pi.

00:43:15.860 --> 00:43:19.600
This is a normalized invariance,
but it has a mean

00:43:19.600 --> 00:43:22.920
of alpha, so it's this.

00:43:22.920 --> 00:43:26.390
OK, well next thing we have to
do is either fiddle around

00:43:26.390 --> 00:43:30.790
like mad or look at this.

00:43:30.790 --> 00:43:33.640
If you remember one of the
things that you did--

00:43:33.640 --> 00:43:37.400
I think in the previous homework
that you passed in--

00:43:37.400 --> 00:43:44.520
you found the bound on Q.
Which looks like this.

00:43:51.650 --> 00:43:52.900
OK.

00:43:54.690 --> 00:43:57.120
That's just the tail of the
Gaussian distribution.

00:43:57.120 --> 00:44:00.280
And the tail of the Gaussian
distribution is upper banded

00:44:00.280 --> 00:44:05.330
by this for W1 greater than
or equal to zero.

00:44:05.330 --> 00:44:08.480
It's upper bounded by a bunch of
other things which you find

00:44:08.480 --> 00:44:10.630
in this problem.

00:44:10.630 --> 00:44:12.590
The other bounds are tighter.

00:44:12.590 --> 00:44:15.580
This is the most useful bound
to the Gaussian distribution

00:44:15.580 --> 00:44:16.890
that there is.

00:44:16.890 --> 00:44:22.310
Because it works for W greater
than or equal to zero.

00:44:22.310 --> 00:44:24.640
And it's exact when W1
is equal to zero.

00:44:24.640 --> 00:44:27.090
Because you're just integrating
over half of the

00:44:27.090 --> 00:44:29.440
Gaussian density.

00:44:29.440 --> 00:44:33.500
And it's convenient and
easy to work with.

00:44:33.500 --> 00:44:39.900
But what that says is the Q
of W1, when W1 is anything

00:44:39.900 --> 00:44:43.200
greater than or equal to zero,
looks very much like a

00:44:43.200 --> 00:44:45.740
Gaussian density.

00:44:45.740 --> 00:44:48.240
So the thing that you're doing
here is taking one Gaussian

00:44:48.240 --> 00:44:50.670
density and you're
multiplying it by

00:44:50.670 --> 00:44:53.000
another Gaussian density.

00:44:53.000 --> 00:44:58.590
And the one Gaussian density is
sitting here looking like

00:44:58.590 --> 00:45:03.710
this with some scale factor
on it at zero.

00:45:03.710 --> 00:45:08.290
The other Gaussian density
is out here at alpha--

00:45:08.290 --> 00:45:09.250
was alpha, wasn't it?

00:45:09.250 --> 00:45:10.540
Or was it gamma?

00:45:10.540 --> 00:45:14.450
Can't keep my gammas and
alphas straight--

00:45:14.450 --> 00:45:16.530
OK, and it looks like this.

00:45:20.260 --> 00:45:24.710
If you take the product of two
Gaussian densities of the same

00:45:24.710 --> 00:45:25.890
amplitude and everything.

00:45:25.890 --> 00:45:27.250
And the same variance.

00:45:27.250 --> 00:45:29.790
What do you wind up with?

00:45:29.790 --> 00:45:32.320
Well you can go through and
complete the square.

00:45:32.320 --> 00:45:33.910
And you can sort of see from
looking at this from the

00:45:33.910 --> 00:45:36.190
symmetry of it that
what you're going

00:45:36.190 --> 00:45:37.590
to get is the Gaussian.

00:45:37.590 --> 00:45:41.230
Which is right there.

00:45:41.230 --> 00:45:42.110
Alpha over 2.

00:45:42.110 --> 00:45:45.410
OK so these two things,
when you multiply

00:45:45.410 --> 00:45:47.350
them, look like this.

00:45:51.440 --> 00:45:54.470
This has the same variance
as these two things do.

00:45:54.470 --> 00:45:56.240
But it's centered
on alpha over 2.

00:45:59.120 --> 00:46:01.740
If you want to take the Fourier
transform and multiply

00:46:01.740 --> 00:46:03.210
the Fourier transform.

00:46:03.210 --> 00:46:05.330
I mean, you take the Fourier
transform of the Gaussian and

00:46:05.330 --> 00:46:08.270
you got a Gaussian.

00:46:08.270 --> 00:46:11.400
So here we're multiplying.

00:46:11.400 --> 00:46:14.030
Up there in Fourier transform
space you're convolving.

00:46:14.030 --> 00:46:16.770
And when you convolve a Gaussian
with a Gaussian you

00:46:16.770 --> 00:46:17.920
got a Gaussian.

00:46:17.920 --> 00:46:20.680
When you multiply Gaussian by a
Gaussian you got a Gaussian.

00:46:20.680 --> 00:46:23.320
When you do anything to a
Gaussian, you got a Gaussian.

00:46:23.320 --> 00:46:24.570
OK?

00:46:26.630 --> 00:46:28.480
So this thing--

00:46:28.480 --> 00:46:31.700
and if you don't believe me just
actually take these two

00:46:31.700 --> 00:46:35.010
exponents and complete the
square and see what you get--

00:46:35.010 --> 00:46:38.070
so the mean is going
to be alpha over 2.

00:46:38.070 --> 00:46:43.340
So, here you have a term which
is one tail of the Gaussian

00:46:43.340 --> 00:46:48.300
distribution centered at
alpha minus gamma.

00:46:48.300 --> 00:46:53.690
And here you have another one
centered at alpha over 2.

00:46:53.690 --> 00:46:57.590
When you see these two terms,
something clicks in your mind

00:46:57.590 --> 00:47:00.450
and says that sometimes this
term is going to be the

00:47:00.450 --> 00:47:01.950
significant term.

00:47:01.950 --> 00:47:05.080
Sometimes this term is going
to be significant term.

00:47:05.080 --> 00:47:07.490
And it depends on
whether gamma--

00:47:07.490 --> 00:47:10.410
alpha minus gamma- is
greater than or less

00:47:10.410 --> 00:47:12.200
than alpha over 2.

00:47:12.200 --> 00:47:14.680
So you can sort of see what's
going to happen right away.

00:47:18.660 --> 00:47:22.460
Well I hope you can see what's
going to happen right away,

00:47:22.460 --> 00:47:23.590
because I'm not going
to torture you

00:47:23.590 --> 00:47:24.560
with any more of this.

00:47:24.560 --> 00:47:29.360
And you can look at the notes
to find the details.

00:47:29.360 --> 00:47:32.000
But you now sort of see
what's happening.

00:47:32.000 --> 00:47:35.070
Because you have a
sum of two terms.

00:47:35.070 --> 00:47:36.770
We're trying to upper
bound this.

00:47:36.770 --> 00:47:40.360
We don't much care about factors
of two, or factors of

00:47:40.360 --> 00:47:43.240
square root of 2pi
or anything.

00:47:43.240 --> 00:47:46.590
We're trying to look at when
this goes to zero.

00:47:46.590 --> 00:47:48.840
When you make m bigger
and bigger.

00:47:48.840 --> 00:47:50.970
And when it doesn't
go to zero.

00:47:50.970 --> 00:47:53.475
So when we do this, the
probability of error is going

00:47:53.475 --> 00:47:56.660
to be less than or equal to
either of these two terms.

00:47:56.660 --> 00:47:58.670
And here are these
two alternatives

00:47:58.670 --> 00:48:00.170
that we spoke about.

00:48:00.170 --> 00:48:03.370
Namely when alpha over 2 is less
than or equal to gamma,

00:48:03.370 --> 00:48:04.580
we get this.

00:48:04.580 --> 00:48:08.260
When alpha over 2 is greater
than gamma, we get this.

00:48:08.260 --> 00:48:12.160
And this involves choosing gamma
in the right way, so

00:48:12.160 --> 00:48:19.170
that that union bound is about
equal to one at gamma.

00:48:19.170 --> 00:48:21.130
OK, well that doesn't
tell us anything.

00:48:21.130 --> 00:48:25.540
So we say, "OK, what we're
really interested in here is,

00:48:25.540 --> 00:48:28.870
as m is getting bigger and
bigger, we're spending a

00:48:28.870 --> 00:48:32.410
certain amount of energy
per input bit.

00:48:32.410 --> 00:48:34.240
And that's what we're interested
in as far as

00:48:34.240 --> 00:48:35.870
Shannon's theorem
is concerned.

00:48:35.870 --> 00:48:38.560
How much energy do you
spend to send a bit

00:48:38.560 --> 00:48:41.110
through this channel?

00:48:41.110 --> 00:48:44.400
And this gives you the answer
to that question.

00:48:44.400 --> 00:48:47.920
You let log m equal to b. m
is the size of the signal

00:48:47.920 --> 00:48:52.120
alphabet, so b is the number
of bits you're sending.

00:48:52.120 --> 00:48:57.400
So Eb, namely the energy per
bit, is just the total energy

00:48:57.400 --> 00:49:00.960
in these orthogonal waveforms
divided by b.

00:49:00.960 --> 00:49:03.310
So that's the energy per bit.

00:49:03.310 --> 00:49:07.110
OK, you substitute these two
things into that equation and

00:49:07.110 --> 00:49:10.750
what you get is these
two different terms.

00:49:10.750 --> 00:49:14.520
You got E to the minus
b times this junk.

00:49:14.520 --> 00:49:18.240
And E to the minus b
times this junk.

00:49:18.240 --> 00:49:20.330
What happens when m gets big?

00:49:20.330 --> 00:49:25.090
When m gets big, holding Eb
fixed, so the game is we're

00:49:25.090 --> 00:49:29.930
going to keep doubling our
orthogonal set, being able to

00:49:29.930 --> 00:49:31.740
transmit one more bit.

00:49:31.740 --> 00:49:34.850
And every time we transmit one
more bit, we get a little more

00:49:34.850 --> 00:49:38.770
energy that we can use to
transmit that one extra bit.

00:49:38.770 --> 00:49:42.980
So we used an orthogonal set,
but using a little more energy

00:49:42.980 --> 00:49:44.790
in that orthogonal set.

00:49:44.790 --> 00:49:51.290
So what this says is that the
probability of error goes down

00:49:51.290 --> 00:49:55.120
exponentially with
b, if either one

00:49:55.120 --> 00:49:57.670
these terms are positive.

00:49:57.670 --> 00:50:00.890
And this, and looking at the
biggest of these terms tells

00:50:00.890 --> 00:50:03.470
you which one you
want to look at.

00:50:03.470 --> 00:50:09.140
So, anytime that Eb over 4N0 is
less than or equal to log n

00:50:09.140 --> 00:50:15.100
is less than Eb over N0,
you get this term.

00:50:15.100 --> 00:50:20.990
Any time Eb over 4N0 is greater
than the natural log

00:50:20.990 --> 00:50:23.640
of 2, you get this term.

00:50:23.640 --> 00:50:26.870
Now when you go through the
union bound in your homework,

00:50:26.870 --> 00:50:27.730
I'll give you a clue.

00:50:27.730 --> 00:50:29.710
This is the answer you
ought to come up with

00:50:29.710 --> 00:50:31.330
when you're all done.

00:50:31.330 --> 00:50:33.950
Because that's what the
union bound tells you.

00:50:33.950 --> 00:50:36.810
Here, remember we did something
more sophisticated

00:50:36.810 --> 00:50:41.830
the union bound because we said
the union bound is lousy

00:50:41.830 --> 00:50:44.330
when you get a lot
of noise on W1.

00:50:44.330 --> 00:50:47.250
And therefore we did something
separate for that case.

00:50:47.250 --> 00:50:50.800
And what we're finding now is
depending on how much energy

00:50:50.800 --> 00:50:54.790
we're using, namely depending on
whether we're trying to get

00:50:54.790 --> 00:50:57.580
very, very close to channel
capacity or not.

00:50:57.580 --> 00:51:00.380
If you're trying to get very
close to channel capacity

00:51:00.380 --> 00:51:02.330
you've got to use this
answer here.

00:51:02.330 --> 00:51:04.690
Which comes from here.

00:51:04.690 --> 00:51:09.250
And in this case, this says that
the probability of error

00:51:09.250 --> 00:51:12.620
goes to zero exponentially in
the number of bits you're

00:51:12.620 --> 00:51:16.840
putting into this orthogonal
code, at this rate.

00:51:16.840 --> 00:51:20.700
Eb over 2N0 minus log 2.

00:51:20.700 --> 00:51:23.390
Which is positive if
Eb over 4N0, well--

00:51:30.940 --> 00:51:33.880
I'm sorry.

00:51:33.880 --> 00:51:38.060
If you can, if you can trace
back about three minutes, just

00:51:38.060 --> 00:51:42.730
reverse everything I said about
this and about this.

00:51:42.730 --> 00:51:45.590
Somehow I wrote these
inequalities in the wrong way

00:51:45.590 --> 00:51:47.410
and it sort of confused me.

00:51:50.990 --> 00:51:53.240
This is the answer you're
going to get

00:51:53.240 --> 00:51:55.050
from the union bound.

00:51:55.050 --> 00:52:01.720
This is the answer that we get
now because we use this more

00:52:01.720 --> 00:52:04.570
sophisticated way of
looking at it.

00:52:26.470 --> 00:52:28.090
Sob.

00:52:28.090 --> 00:52:29.830
No.

00:52:29.830 --> 00:52:32.390
Erase what I just said in the
last thirty seconds and go

00:52:32.390 --> 00:52:36.490
back to what I said
before that.

00:52:36.490 --> 00:52:39.050
This is the answer you're going
to get in the homework.

00:52:39.050 --> 00:52:42.020
This is the answer that
we want to look at.

00:52:42.020 --> 00:52:44.500
This thing goes--

00:52:44.500 --> 00:52:47.780
is valid-- anytime that
Eb over N0 is

00:52:47.780 --> 00:52:50.200
greater than or equal--

00:52:50.200 --> 00:52:52.650
is greater than natural
log of 2.

00:52:52.650 --> 00:52:56.610
When Eb over N0 is equal to log
2, that's the capacity of

00:52:56.610 --> 00:52:57.470
this channel.

00:52:57.470 --> 00:53:08.190
Namely Eb equals N0 log 2.

00:53:08.190 --> 00:53:15.080
Well better to say it
Eb over N0 equals

00:53:15.080 --> 00:53:18.300
natural log of 2 is capacity.

00:53:21.790 --> 00:53:25.810
And anytime Eb over N0 is
greater than log 2 this term

00:53:25.810 --> 00:53:27.580
in here is positive.

00:53:27.580 --> 00:53:31.250
The error probability goes down
exponentially as b gets

00:53:31.250 --> 00:53:34.370
large and eventually
goes to zero.

00:53:34.370 --> 00:53:37.410
It doesn't get down as fast
here as it does here.

00:53:37.410 --> 00:53:40.140
But this is where you really
want to be because this is

00:53:40.140 --> 00:53:45.610
where you're transmitting with
absolutely the smallest amount

00:53:45.610 --> 00:53:48.430
of energy possible.

00:53:48.430 --> 00:53:51.150
OK, so that's Shannon's
formula.

00:53:51.150 --> 00:53:58.370
And at least we have caught up
to 50 years behind what's

00:53:58.370 --> 00:54:01.720
going on in communication.

00:54:01.720 --> 00:54:05.840
And actually shown you something
that's right there.

00:54:05.840 --> 00:54:09.950
And in fact, what we went
through today is really the

00:54:09.950 --> 00:54:12.100
essence of that, of
the proof of the

00:54:12.100 --> 00:54:15.000
channel capacity theorem.

00:54:15.000 --> 00:54:17.070
If you want to do it for
finite bandwidth

00:54:17.070 --> 00:54:19.060
it gets much harder.

00:54:19.060 --> 00:54:21.980
But for this case,
we really did it.

00:54:21.980 --> 00:54:22.660
It's all there.

00:54:22.660 --> 00:54:26.340
I mean you read the notes and
in a little extra detail.

00:54:26.340 --> 00:54:29.310
But just with the grunge
work left out, that's

00:54:29.310 --> 00:54:32.290
what's going on.

00:54:32.290 --> 00:54:34.650
OK, wireless communication.

00:54:34.650 --> 00:54:38.110
That's what we want to spend
the rest of the term on.

00:54:38.110 --> 00:54:40.600
We want to spend the rest of
the term on that because

00:54:40.600 --> 00:54:43.430
whether you realize it or not,
we sort of said everything

00:54:43.430 --> 00:54:48.170
there is to say about white
Gaussian noise.

00:54:48.170 --> 00:54:54.680
And when all of that sinks in,
what you're left with is the

00:54:54.680 --> 00:54:57.410
idea the white Gaussein noise.

00:54:57.410 --> 00:55:01.190
You're really dealing with just
a finite vector problem.

00:55:01.190 --> 00:55:04.070
And you don't have to worry
about anything else.

00:55:04.070 --> 00:55:07.670
The QAM and the PAM, all that
stuff, all disappear.

00:55:07.670 --> 00:55:10.880
Doesn't matter whether you send
things broadband, narrow

00:55:10.880 --> 00:55:12.060
band, whatever.

00:55:12.060 --> 00:55:14.220
It's all the same answer.

00:55:14.220 --> 00:55:16.460
Wireless is different.

00:55:16.460 --> 00:55:22.130
Wireless is different for
a couple of reasons.

00:55:22.130 --> 00:55:25.550
You're dealing with the
radiation between antennas

00:55:25.550 --> 00:55:28.500
because you're dealing with the
radiation between antennas

00:55:28.500 --> 00:55:31.180
rather than what's going
on on a wire.

00:55:31.180 --> 00:55:33.560
I mean, what's going on a wire,
the wire is pretty much

00:55:33.560 --> 00:55:35.530
shielded from the
outside world.

00:55:35.530 --> 00:55:39.240
So you send something, noise
gets added, and you receive

00:55:39.240 --> 00:55:41.010
signal plus noise.

00:55:41.010 --> 00:55:43.270
There's not much fading,
there's not much

00:55:43.270 --> 00:55:44.760
awkward stuff going on.

00:55:44.760 --> 00:55:46.580
Here all of the stuff goes on.

00:55:50.340 --> 00:55:53.870
As soon as you start using
wireless communication, you're

00:55:53.870 --> 00:55:56.210
allowed to drive around
in your car talking on

00:55:56.210 --> 00:55:57.650
two phones at once.

00:55:57.650 --> 00:56:00.530
With your ears and
eyes shielded.

00:56:00.530 --> 00:56:04.460
You can kill yourself much
easier that way than you can

00:56:04.460 --> 00:56:06.210
with ordinary telephony.

00:56:06.210 --> 00:56:07.250
You can be in constant

00:56:07.250 --> 00:56:14.210
communications with almost anyone.

00:56:14.210 --> 00:56:18.670
OK, so you have motion, you
have temporary locations.

00:56:18.670 --> 00:56:20.410
You have all these
neat things.

00:56:20.410 --> 00:56:22.760
And if you look at what's
happening in the world, the

00:56:22.760 --> 00:56:26.670
less developed parts of the
world have much more mobile

00:56:26.670 --> 00:56:28.720
communication than we do.

00:56:28.720 --> 00:56:31.130
Because in fact they don't
have that much wire

00:56:31.130 --> 00:56:31.960
communication.

00:56:31.960 --> 00:56:33.760
It's not that good there.

00:56:33.760 --> 00:56:37.080
So they find it's far cheaper
to get a mobile phone.

00:56:37.080 --> 00:56:40.830
Than like us where we have to
pay for both a wire line phone

00:56:40.830 --> 00:56:42.670
and a mobile phone.

00:56:42.670 --> 00:56:48.050
So they have sort of the best
of the two worlds there.

00:56:48.050 --> 00:56:51.390
Except their mobile phones are
like our mobile phones.

00:56:51.390 --> 00:56:54.460
They only work three quarters
of the time.

00:56:54.460 --> 00:56:59.490
And all of the research that's
going into sending video over

00:56:59.490 --> 00:57:02.540
wireless phones, it seems that
nobody's spending any time

00:57:02.540 --> 00:57:06.160
trying to increase the amount
of time you can use your

00:57:06.160 --> 00:57:10.470
wireless phone from
75% to 90%.

00:57:10.470 --> 00:57:13.670
And if any of you want to make
a lot of money and also do

00:57:13.670 --> 00:57:16.920
something worthwhile for the
world, invent a wireless phone

00:57:16.920 --> 00:57:18.990
the works 90% of the time.

00:57:18.990 --> 00:57:21.790
And you'll clean
up, believe me.

00:57:21.790 --> 00:57:26.740
And you can even send video on
it later if you want to.

00:57:26.740 --> 00:57:29.430
OK that's another thing that
wireless has turned out to be

00:57:29.430 --> 00:57:30.710
very useful for.

00:57:30.710 --> 00:57:32.930
And I'm sure you
all know this.

00:57:32.930 --> 00:57:34.490
It avoids mazes of wires.

00:57:34.490 --> 00:57:37.520
I mean many people in their
homes and offices and

00:57:37.520 --> 00:57:41.780
everywhere are starting to use
local area wireless networks

00:57:41.780 --> 00:57:45.280
just as a way of getting rid
of all of these maddening

00:57:45.280 --> 00:57:47.460
wires that we have running
all over the place.

00:57:47.460 --> 00:57:52.570
As soon as we have a computer
and a printer and a fax

00:57:52.570 --> 00:57:56.620
machine and a blah blah blah,
and a watch which is connected

00:57:56.620 --> 00:58:00.480
to our, and a toaster which is
connected to our computer.

00:58:00.480 --> 00:58:01.800
Argh!

00:58:01.800 --> 00:58:03.940
Pretty soon we're going to be
connected to our computers.

00:58:03.940 --> 00:58:06.650
We're going to have little
things stuck in our head and

00:58:06.650 --> 00:58:10.090
stuck our neck and all
over the place.

00:58:10.090 --> 00:58:13.590
So it'll be nice to have these,
it'll be nice to not

00:58:13.590 --> 00:58:15.790
have wires when we're
doing that.

00:58:15.790 --> 00:58:19.740
OK, but the new problem is that
the channel, in fact,

00:58:19.740 --> 00:58:21.100
changes with time.

00:58:21.100 --> 00:58:24.210
It's very different from
one time to another.

00:58:24.210 --> 00:58:26.760
And you get a lot of
interference between channels.

00:58:26.760 --> 00:58:29.940
In other words, when you're
dealing with wireless you

00:58:29.940 --> 00:58:33.020
cannot think of just
one transmitter and

00:58:33.020 --> 00:58:34.900
one receiver anymore.

00:58:34.900 --> 00:58:37.720
That's one of the problems
you want to think about.

00:58:37.720 --> 00:58:40.050
But you really have to think
about what all the other

00:58:40.050 --> 00:58:42.040
transmitters are doing and
what all the other

00:58:42.040 --> 00:58:43.290
receivers are doing.

00:58:49.800 --> 00:58:53.880
It was started by
Marconi in 1897.

00:58:53.880 --> 00:58:56.490
It took him about three years
to get transcontinental

00:58:56.490 --> 00:58:58.720
communication.

00:58:58.720 --> 00:59:01.590
I mean we think we're
so great now--

00:59:01.590 --> 00:59:05.600
being able to have research move
as quickly as it does--

00:59:05.600 --> 00:59:08.050
but if you think of the amount
of time it takes to create a

00:59:08.050 --> 00:59:11.420
new wireless system, it's
a whole lot larger

00:59:11.420 --> 00:59:13.440
now than it was then.

00:59:13.440 --> 00:59:14.930
I mean he moved very fast.

00:59:14.930 --> 00:59:18.550
I mean the technology was very
primitive and very simple.

00:59:18.550 --> 00:59:21.300
It was not a billion
dollar business.

00:59:21.300 --> 00:59:25.520
But in fact it was
very, very rapid.

00:59:25.520 --> 00:59:27.380
But what's happened since,
with wireless,

00:59:27.380 --> 00:59:30.470
has been very fitful.

00:59:30.470 --> 00:59:31.660
Businesses have started.

00:59:31.660 --> 00:59:32.740
Businesses have stopped.

00:59:32.740 --> 00:59:34.300
People have tried
to do one thing.

00:59:34.300 --> 00:59:36.450
People have tried to
do another thing.

00:59:36.450 --> 00:59:40.230
They name things by something
different all the time.

00:59:40.230 --> 00:59:44.420
I mean one sort of amusing thing
is back in the early

00:59:44.420 --> 00:59:50.230
seventies the army was trying
very hard to get wireless

00:59:50.230 --> 00:59:52.140
communication in the field.

00:59:52.140 --> 00:59:55.040
And they called this
packet radio.

00:59:55.040 --> 00:59:58.320
And they had all the
universities in the country

00:59:58.320 --> 01:00:01.480
spending enormous amounts of
time developing packet radio.

01:00:01.480 --> 01:00:03.400
Writing many papers about it.

01:00:03.400 --> 01:00:07.360
They finally got disgusted
because nothing was happening.

01:00:07.360 --> 01:00:10.270
So they pulled all the
funding for that.

01:00:10.270 --> 01:00:13.550
And about five years later, when
the people at DARPA and

01:00:13.550 --> 01:00:16.420
NSF and all of that forgot
about this unpleasant

01:00:16.420 --> 01:00:20.340
experience, people started
talking about ad hoc networks.

01:00:20.340 --> 01:00:23.150
Guess what an ad
hoc network is?

01:00:23.150 --> 01:00:25.160
Same thing as packet radio.

01:00:25.160 --> 01:00:29.400
Just a new name for an old
system, and suddenly the money

01:00:29.400 --> 01:00:33.060
started flowing in again.

01:00:33.060 --> 01:00:35.340
We don't know whether it'll be
any better this time than it

01:00:35.340 --> 01:00:36.280
was last time.

01:00:36.280 --> 01:00:41.240
But anyway that's the
way funding goes.

01:00:44.100 --> 01:00:47.960
OK, what we're going to talk
about in this class is sort of

01:00:47.960 --> 01:00:49.060
an old fashioned thing.

01:00:49.060 --> 01:00:52.860
It's not as sexy as what all
these other systems are.

01:00:52.860 --> 01:00:55.820
It's just cellular networks.

01:00:55.820 --> 01:00:59.900
It's probably because that's
well understood by now, and

01:00:59.900 --> 01:01:02.930
it's because we can talk about
all of these fundamental

01:01:02.930 --> 01:01:07.810
problems that occur in mobile
communication just in the

01:01:07.810 --> 01:01:12.800
context of this one kind of
system that, by now, is

01:01:12.800 --> 01:01:15.740
reasonably well understood.

01:01:15.740 --> 01:01:20.000
When you're doing cellular
communication, you wind up

01:01:20.000 --> 01:01:24.430
with a large bunch of mobiles
all communicating with one

01:01:24.430 --> 01:01:26.090
base station.

01:01:26.090 --> 01:01:28.570
OK, in other words you don't
have the kind of thing you had

01:01:28.570 --> 01:01:32.320
in the packet radio network or
in the ad hoc network, where

01:01:32.320 --> 01:01:35.470
you have a huge number of mobile
telephones which are

01:01:35.470 --> 01:01:37.640
all communicating
to each other.

01:01:37.640 --> 01:01:40.760
And where one phone has to
relay things for others.

01:01:40.760 --> 01:01:46.020
You wind up with a very
complicated network problem.

01:01:46.020 --> 01:01:49.690
Here, it's in a sense,
a much simpler

01:01:49.690 --> 01:01:52.050
and more sane structure.

01:01:52.050 --> 01:01:54.910
Because you're using mobile
for doing the things that

01:01:54.910 --> 01:01:57.160
mobile does well.

01:01:57.160 --> 01:01:59.070
And you're using wires
for the things that

01:01:59.070 --> 01:02:00.980
wires do very well.

01:02:00.980 --> 01:02:03.250
Mainly you have lots of mobiles
which are moving all

01:02:03.250 --> 01:02:04.380
over the place.

01:02:04.380 --> 01:02:08.090
You have these fixed base
stations which are big and

01:02:08.090 --> 01:02:12.470
expensive, and put up on hills
or on buildings or on big

01:02:12.470 --> 01:02:13.970
poles or something.

01:02:13.970 --> 01:02:15.970
And you spend a lot
of money on them.

01:02:15.970 --> 01:02:19.350
You have optical fibers or
cables or what have you

01:02:19.350 --> 01:02:22.420
running between them or running
from them to what's

01:02:22.420 --> 01:02:25.400
called a MTSO.

01:02:25.400 --> 01:02:30.470
Mobile Something Subscriber
Office-- and I can never

01:02:30.470 --> 01:02:33.720
remember what those letters
stand for--

01:02:33.720 --> 01:02:37.750
Mobile Telephone Subscriber
Office.

01:02:37.750 --> 01:02:40.690
All I had to do to remember that
was thank this was done

01:02:40.690 --> 01:02:44.020
by telephone engineers.

01:02:44.020 --> 01:02:48.770
No, Mobile Telephone Switching
Office and telephone engineers

01:02:48.770 --> 01:02:52.770
think in terms of switching and
in terms of telephones.

01:02:52.770 --> 01:02:56.630
And mobile and offices
just follows along.

01:02:56.630 --> 01:03:00.380
So the way these systems work
is you go from a mobile to a

01:03:00.380 --> 01:03:01.280
base station.

01:03:01.280 --> 01:03:04.660
From the base station to one of
these MTSOs, which is just

01:03:04.660 --> 01:03:06.160
a big switching center.

01:03:06.160 --> 01:03:09.140
From there you're in
the wired network.

01:03:09.140 --> 01:03:13.910
And from there you can either go
back to a mobile or go back

01:03:13.910 --> 01:03:20.370
to a wire line telephone or
go anywhere you want to.

01:03:20.370 --> 01:03:23.900
But but the point in that, and
I think this is important to

01:03:23.900 --> 01:03:28.590
remember, is that cellular
networks are an appendage of

01:03:28.590 --> 01:03:32.020
the wire line network.

01:03:32.020 --> 01:03:35.650
And you always have this wire
line network in the middle.

01:03:35.650 --> 01:03:37.990
You probably always will.

01:03:37.990 --> 01:03:41.270
Because wire line networks have
things like fiber which

01:03:41.270 --> 01:03:45.700
carries enormous amounts of
data very, very cheaply.

01:03:45.700 --> 01:03:50.010
And mobile is very limited
as far as capacity goes.

01:03:50.010 --> 01:03:51.870
And it's very noisy.

01:03:51.870 --> 01:03:56.250
OK, so that lets us avoid
the question of

01:03:56.250 --> 01:03:58.620
how do you do relaying.

01:03:58.620 --> 01:04:01.930
When you see pictures of this,
people draw pictures of

01:04:01.930 --> 01:04:03.610
hexagon cells.

01:04:03.610 --> 01:04:05.470
AUDIENCE: [UNINTELLIGIBLE]
turn around.

01:04:05.470 --> 01:04:11.760
PROFESSOR: Oh, when I hit
this, and it uh, OK.

01:04:19.950 --> 01:04:21.760
I mean there's not much
information on this picture

01:04:21.760 --> 01:04:25.810
anyway but, [LAUGHTER]

01:04:25.810 --> 01:04:30.230
OK, but people think in terms
of base stations put down

01:04:30.230 --> 01:04:33.470
uniformly with nice hexagons
around them.

01:04:33.470 --> 01:04:37.400
And any time a mobile within
one hexagon it communicates

01:04:37.400 --> 01:04:44.180
with the base station which is
at the center of that hexagon.

01:04:44.180 --> 01:04:47.030
And in reality what happens is
that the base stations are

01:04:47.030 --> 01:04:51.100
spread all over the place
in a very haphazard way.

01:04:51.100 --> 01:04:54.030
I shouldn't say haphazard,
because people worked very

01:04:54.030 --> 01:04:56.760
hard to find places to put
these base stations.

01:04:56.760 --> 01:05:00.150
Because you need to rent real
estate, or buy real estate to

01:05:00.150 --> 01:05:01.670
put them in.

01:05:01.670 --> 01:05:04.200
You have to find out somehow
what kind of

01:05:04.200 --> 01:05:06.300
coverage they have.

01:05:06.300 --> 01:05:08.930
And it's a very fascinating and
very difficult problem.

01:05:08.930 --> 01:05:12.610
One thing I'm going to try to
convince you of in the next

01:05:12.610 --> 01:05:16.310
lecture or so is that the
problems of choosing base

01:05:16.310 --> 01:05:20.020
stations are very heavily
electromagnetic in nature.

01:05:20.020 --> 01:05:23.730
You really have to understand
electromagnetism very well.

01:05:23.730 --> 01:05:28.970
And and you have to understand
the modeling of these physical

01:05:28.970 --> 01:05:33.130
communication links very, very
well in order to try to sort

01:05:33.130 --> 01:05:35.360
out where base stations
should go and where

01:05:35.360 --> 01:05:37.340
they shouldn't go.

01:05:37.340 --> 01:05:40.910
The other part of the problem
is the part of the problem

01:05:40.910 --> 01:05:44.850
dealing with how do you design
the mobile phone itself?

01:05:44.850 --> 01:05:50.840
How do you design the
base station itself?

01:05:50.840 --> 01:05:54.450
And these are questions which
don't depend so much on the

01:05:54.450 --> 01:05:57.780
exact modeling of the
electromagnetic channel.

01:05:57.780 --> 01:06:02.540
They only depend on very coarse
characteristics of it.

01:06:02.540 --> 01:06:06.150
And very often, when you start
to study mobile, you will

01:06:06.150 --> 01:06:10.450
spend an inordinate amount of
time studying all of the

01:06:10.450 --> 01:06:14.220
details of these electromagnetic
channels.

01:06:14.220 --> 01:06:17.480
Which in fact are very important
as far as choosing

01:06:17.480 --> 01:06:19.410
base stations are concerned.

01:06:19.410 --> 01:06:22.130
And have relatively little to
do with the questions of how

01:06:22.130 --> 01:06:23.520
do you design mobiles.

01:06:23.520 --> 01:06:27.450
How do you design
base stations?

01:06:27.450 --> 01:06:29.300
It has enough to do with it
that you have to know

01:06:29.300 --> 01:06:33.980
something about it, but it's
not central anymore.

01:06:33.980 --> 01:06:40.740
OK, so let's look at what
the problems are.

01:06:43.780 --> 01:06:47.110
As I said the cellular network
is really an appendage to the

01:06:47.110 --> 01:06:48.920
wire network.

01:06:48.920 --> 01:06:53.870
The problems we're going to
have to deal with is when

01:06:53.870 --> 01:06:58.370
you're outgoing from your own
cell phone, there's some kind

01:06:58.370 --> 01:07:01.700
of strategy that has to be used
for you to find the best

01:07:01.700 --> 01:07:03.410
base station to use.

01:07:03.410 --> 01:07:06.140
And it's a difficult question
because you're trying to find

01:07:06.140 --> 01:07:11.460
a base station you can
communicate with and one

01:07:11.460 --> 01:07:15.380
that's not so overcrowded that
you can't talk to it.

01:07:15.380 --> 01:07:17.470
So that's one big problem.

01:07:17.470 --> 01:07:19.340
We won't talk about that much.

01:07:19.340 --> 01:07:21.710
Another is the ingoing
problem.

01:07:21.710 --> 01:07:23.530
Finding a mobile.

01:07:23.530 --> 01:07:27.180
If you think about that, it's
really a very tricky problem.

01:07:27.180 --> 01:07:30.160
Because I run around in my car
with my cellphone turned off

01:07:30.160 --> 01:07:31.230
all the time.

01:07:31.230 --> 01:07:33.860
And I only turn it on if I
want to talk to somebody.

01:07:33.860 --> 01:07:37.470
So I turn it on and somehow
the whole network has to

01:07:37.470 --> 01:07:39.550
suddenly realize where I am.

01:07:39.550 --> 01:07:43.120
And you know that happens with
all of these cellular networks

01:07:43.120 --> 01:07:44.510
all over the place.

01:07:44.510 --> 01:07:47.310
And every time somebody turns on
their cell phone there's a

01:07:47.310 --> 01:07:49.080
lot of stuff going back
and forth that

01:07:49.080 --> 01:07:50.430
says who is this guy?

01:07:50.430 --> 01:07:52.420
Does he have the
right to talk?

01:07:52.420 --> 01:07:55.670
Has he paid is bill?

01:07:55.670 --> 01:08:00.880
And how do I actually find a
base station for him to use?

01:08:00.880 --> 01:08:02.900
So this is kind of, both these

01:08:02.900 --> 01:08:06.740
questions are kind of difficult.

01:08:06.740 --> 01:08:11.330
And the even worse question is
if somebody's calling me and I

01:08:11.330 --> 01:08:15.740
live say, in Boston, or close to
Boston, and I'm out in San

01:08:15.740 --> 01:08:20.460
Francisco and somebody calls me
on my cell phone, the call

01:08:20.460 --> 01:08:22.160
gets to me.

01:08:22.160 --> 01:08:24.850
And if you just imagine a little
bit what has to go on

01:08:24.850 --> 01:08:28.920
in this cellular network in
order for the cellular network

01:08:28.920 --> 01:08:32.250
to realize that I'm in San
Francisco instead of Boston.

01:08:32.250 --> 01:08:36.640
And then realize how to get
calls to me in San Francisco.

01:08:36.640 --> 01:08:37.820
I mean there's a lot
of interesting

01:08:37.820 --> 01:08:38.870
stuff going on here.

01:08:38.870 --> 01:08:41.090
But we're not going to talk
about any of that because

01:08:41.090 --> 01:08:47.530
that's really sort of an
organizational question as

01:08:47.530 --> 01:08:52.150
opposed to a physical
communication question, which

01:08:52.150 --> 01:08:55.440
is the kind of thing we're
interested in here.

01:08:55.440 --> 01:08:58.700
OK, when you have these multiple
mobiles which are

01:08:58.700 --> 01:09:02.590
sending to the same
base station.

01:09:02.590 --> 01:09:06.100
People who are working on mobile
communication, sort of

01:09:06.100 --> 01:09:10.290
the practical side of it, call
this the reverse channel.

01:09:10.290 --> 01:09:12.860
Why they call this the reverse
channel and the other one the

01:09:12.860 --> 01:09:14.500
forward channel, I don't know.

01:09:14.500 --> 01:09:17.580
Forward channel goes from the
base station to the mobile.

01:09:17.580 --> 01:09:21.160
Reverse station, reverse channel
goes from the mobile

01:09:21.160 --> 01:09:22.560
to the base station.

01:09:22.560 --> 01:09:25.690
And what it says is the
terminology was chosen by the

01:09:25.690 --> 01:09:28.870
people designing the
base stations.

01:09:28.870 --> 01:09:30.700
That's sort of clear.

01:09:30.700 --> 01:09:35.040
But if you read about this
in any more technical

01:09:35.040 --> 01:09:38.820
publication, you will see this
thing being called a multi

01:09:38.820 --> 01:09:40.180
access channel.

01:09:40.180 --> 01:09:43.610
It's the multi access channel
because many, many users are

01:09:43.610 --> 01:09:47.400
all trying to get into the
same base station.

01:09:47.400 --> 01:09:51.690
And this one electromagnetic
wave-- which is impinging on

01:09:51.690 --> 01:09:56.540
the various space station
antennas-- is carrying all of

01:09:56.540 --> 01:09:59.820
that stuff all multiplexed
together in some way.

01:09:59.820 --> 01:10:02.720
And it's not multiplexed
together in a sensible way,

01:10:02.720 --> 01:10:05.290
because it's multiplexed
together just by all of these

01:10:05.290 --> 01:10:08.750
waveforms randomly adding
to each other.

01:10:08.750 --> 01:10:12.030
So information theorists
call these things

01:10:12.030 --> 01:10:14.140
multi access channels.

01:10:14.140 --> 01:10:17.840
When you're going the other way,
base station to mobiles,

01:10:17.840 --> 01:10:20.230
it's called the forward
channel by

01:10:20.230 --> 01:10:22.030
the telephone engineers.

01:10:22.030 --> 01:10:24.020
It's called the broadcast
channel

01:10:24.020 --> 01:10:26.470
by information theorists.

01:10:26.470 --> 01:10:30.380
For those of you who think about
broadcast in terms of TV

01:10:30.380 --> 01:10:32.890
and FM and all that sort
of stuff, this is

01:10:32.890 --> 01:10:34.010
a little bit confusing.

01:10:34.010 --> 01:10:38.250
Because this is not the same
kind of broadcast that you're

01:10:38.250 --> 01:10:39.770
usually thinking about.

01:10:39.770 --> 01:10:43.180
I mean the usual kind of
broadcast is where everybody

01:10:43.180 --> 01:10:46.090
gets the same thing whether
you want it or not.

01:10:46.090 --> 01:10:49.720
But that whole signal is there,
and you all get the

01:10:49.720 --> 01:10:50.530
whole thing.

01:10:50.530 --> 01:10:54.290
Here what it is, is
you're sending a

01:10:54.290 --> 01:10:56.190
different message to everyone.

01:10:56.190 --> 01:10:59.020
You don't want everyone to be
able to tune in and receive

01:10:59.020 --> 01:11:00.420
what anybody else is getting.

01:11:00.420 --> 01:11:01.840
You want a little
privacy here.

01:11:01.840 --> 01:11:05.070
So it's really broadcasting
separate messages and trying

01:11:05.070 --> 01:11:06.320
to keep them separate.

01:11:13.890 --> 01:11:16.250
While the systems, almost
all of them, are

01:11:16.250 --> 01:11:18.080
now digital I think.

01:11:18.080 --> 01:11:20.680
In the sense of having a binary
interface, this is the

01:11:20.680 --> 01:11:23.130
same issue we've been talking
about all along.

01:11:23.130 --> 01:11:25.840
You say something is digital
if there's the binary

01:11:25.840 --> 01:11:27.790
interface on it.

01:11:27.790 --> 01:11:30.440
The source is either
analog or digital.

01:11:30.440 --> 01:11:34.070
Cellular communication was
really designed for voice.

01:11:34.070 --> 01:11:36.890
Now all the research is
concerned with how do you make

01:11:36.890 --> 01:11:39.810
it work for data also.

01:11:39.810 --> 01:11:43.020
One of the things we're going to
talk about a little bit is

01:11:43.020 --> 01:11:47.120
why the problems are
so very different.

01:11:47.120 --> 01:11:50.030
I mean you would think they're
both the same problem.

01:11:50.030 --> 01:11:51.610
Because in both cases
you're just

01:11:51.610 --> 01:11:52.950
transmitting a string of bits.

01:11:52.950 --> 01:11:54.600
That's all that's going on.

01:11:54.600 --> 01:11:58.700
But the big difference is that
in voice, you can't tolerate

01:11:58.700 --> 01:11:59.090
delay in voice.

01:11:59.090 --> 01:12:01.270
In data you can tolerate
delay.

01:12:01.270 --> 01:12:05.220
You can tolerate a lot
of delay in data.

01:12:05.220 --> 01:12:07.840
And therefore you can do lots
of things with data that you

01:12:07.840 --> 01:12:09.300
can't do with voice.

01:12:09.300 --> 01:12:12.020
If you want to have a system
that deals with both voice and

01:12:12.020 --> 01:12:15.330
data, it's got to be able
to get the voice

01:12:15.330 --> 01:12:17.280
through without delay.

01:12:17.280 --> 01:12:20.600
And you have to find some way
of solving that problem.

01:12:20.600 --> 01:12:28.600
OK, let me just say
this quickly.

01:12:28.600 --> 01:12:30.850
Let me just see if there's
anything else of content here.

01:12:36.740 --> 01:12:39.520
This is all just boiler
plate stuff.

01:12:39.520 --> 01:12:41.270
Let me skip that.

01:12:41.270 --> 01:12:42.520
And skip this.

01:12:51.060 --> 01:12:55.770
The thing we're going to be
concerned about here is really

01:12:55.770 --> 01:12:57.600
these physical modeling
issues.

01:13:01.220 --> 01:13:04.770
And where we wind up with that
is we're typically talking

01:13:04.770 --> 01:13:11.050
about bandwidths that are maybe
a few megahertz wide.

01:13:11.050 --> 01:13:12.070
Maybe a few kilohertz wide.

01:13:12.070 --> 01:13:15.330
Or maybe a few megahertz.

01:13:15.330 --> 01:13:18.980
But we're talking about carrier
frequencies which are

01:13:18.980 --> 01:13:23.310
usually up in the
gigahertz range.

01:13:23.310 --> 01:13:26.120
And they keep varying depending
on which new range

01:13:26.120 --> 01:13:28.320
of frequencies gets opened up.

01:13:28.320 --> 01:13:30.510
They started out a little
below a gigahertz.

01:13:30.510 --> 01:13:33.470
They only went up to 2.4
and now they're up

01:13:33.470 --> 01:13:35.100
around five or six.

01:13:35.100 --> 01:13:37.370
And things like that.

01:13:37.370 --> 01:13:39.530
When we talk about physical
modeling, we want to

01:13:39.530 --> 01:13:41.730
understand what difference
it makes what carrier

01:13:41.730 --> 01:13:43.220
frequency you're at.

01:13:43.220 --> 01:13:45.540
And it does make a difference
because we'll talk about

01:13:45.540 --> 01:13:46.730
Doppler shift.

01:13:46.730 --> 01:13:50.490
And Doppler shift changes a lot
as you go from one range

01:13:50.490 --> 01:13:52.050
to another.

01:13:52.050 --> 01:13:54.910
But for the most part these
systems are narrow band.

01:13:54.910 --> 01:13:58.750
There's a lot of work now
on wide band systems.

01:13:58.750 --> 01:14:00.110
And what's does a
wide band mean?

01:14:00.110 --> 01:14:02.600
Does it mean more than
a megahertz?

01:14:02.600 --> 01:14:06.080
No, it means a system where
the bandwidth that you're

01:14:06.080 --> 01:14:09.350
communicating over is a
significant fraction of the

01:14:09.350 --> 01:14:10.430
carrier frequency.

01:14:10.430 --> 01:14:12.230
If there is a carrier
frequency.

01:14:12.230 --> 01:14:15.520
Many of these wide band systems
are not even done in

01:14:15.520 --> 01:14:17.110
terms of the carrier
frequency.

01:14:17.110 --> 01:14:20.220
They're just done in terms of
an arbitrary waveform which

01:14:20.220 --> 01:14:24.830
takes over an enormous
amount of bandwidth.

01:14:24.830 --> 01:14:27.290
If you're dealing with the
narrow band problems, white

01:14:27.290 --> 01:14:31.540
Gaussian noise is a good
assumption for the noise.

01:14:31.540 --> 01:14:33.480
But now, along with
the noise you have

01:14:33.480 --> 01:14:34.910
all these other effects.

01:14:34.910 --> 01:14:38.830
You have a channel, where the
channel is not just a pass

01:14:38.830 --> 01:14:42.270
through wire with a little
attenuation on it.

01:14:42.270 --> 01:14:44.520
I mean, remember what we've
done all along.

01:14:44.520 --> 01:14:48.620
We have absolutely ignored the
question of attenuation.

01:14:48.620 --> 01:14:51.170
We've just gotten rid of it and
say what you send is what

01:14:51.170 --> 01:14:52.870
you receive.

01:14:52.870 --> 01:14:54.490
We've gotten rid of
the problem of

01:14:54.490 --> 01:14:55.700
filtering on the channel.

01:14:55.700 --> 01:14:58.870
We've said a little bit about
it, but essentially we've

01:14:58.870 --> 01:14:59.970
avoided it.

01:14:59.970 --> 01:15:02.630
Now the problem that you have
is this channel that you're

01:15:02.630 --> 01:15:06.970
transmitting over really
comes and goes.

01:15:06.970 --> 01:15:09.140
Sometimes it's there,
sometimes it's not.

01:15:09.140 --> 01:15:12.540
So it's a time varying
channel.

01:15:12.540 --> 01:15:15.290
It's a time varying channel
which depends on the frequency

01:15:15.290 --> 01:15:16.880
band that we're using.

01:15:16.880 --> 01:15:19.340
And one of the things that we
have to talk about in order to

01:15:19.340 --> 01:15:22.850
come to grips with this is
questions about how quickly

01:15:22.850 --> 01:15:26.240
does it change and why
does it change.

01:15:26.240 --> 01:15:28.930
And how much do you have to
change the frequency before

01:15:28.930 --> 01:15:31.480
you got something that looks
like an independently

01:15:31.480 --> 01:15:33.890
different channel?

01:15:33.890 --> 01:15:36.160
So we have to deal with both of
those and we're going to do

01:15:36.160 --> 01:15:38.580
that next time.

01:15:38.580 --> 01:15:42.380
And in trying to come to grips
with these questions, the

01:15:42.380 --> 01:15:45.400
first thing we're going to do
is to look at very, very

01:15:45.400 --> 01:15:49.220
idealized models of what goes
on in communication.

01:15:49.220 --> 01:15:50.340
Like, we're going to
look at a point

01:15:50.340 --> 01:15:54.130
source radiating outwards.

01:15:54.130 --> 01:15:57.470
We're going to look at a point
source radiating outwords,

01:15:57.470 --> 01:16:00.100
hitting a barrier,
and coming back.

01:16:00.100 --> 01:16:02.960
Interesting problem to look at
and you ought to read the

01:16:02.960 --> 01:16:05.220
notes about this.

01:16:05.220 --> 01:16:09.200
What happens when you're in a
car and you're driving at 60

01:16:09.200 --> 01:16:12.390
miles an hour towards
the reflecting wall.

01:16:12.390 --> 01:16:14.680
And right before you hit
the wall, what's the

01:16:14.680 --> 01:16:17.920
communication look like?

01:16:17.920 --> 01:16:20.750
OK, that's a very neat and
very simple problem.

01:16:20.750 --> 01:16:24.890
You can't do it many times,
but we will talk

01:16:24.890 --> 01:16:26.900
about that next time.