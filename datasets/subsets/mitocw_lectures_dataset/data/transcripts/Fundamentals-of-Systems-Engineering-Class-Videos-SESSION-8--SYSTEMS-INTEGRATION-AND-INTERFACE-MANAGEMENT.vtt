WEBVTT

00:00:00.120 --> 00:00:02.460
The following content is
provided under a Creative

00:00:02.460 --> 00:00:03.880
Commons license.

00:00:03.880 --> 00:00:06.090
Your support will help
MIT OpenCourseWare

00:00:06.090 --> 00:00:10.180
continue to offer high-quality
educational resources for free.

00:00:10.180 --> 00:00:12.720
To make a donation or to
view additional materials

00:00:12.720 --> 00:00:16.680
from hundreds of MIT courses,
visit MIT OpenCourseWare

00:00:16.680 --> 00:00:17.880
at ocw.mit.edu.

00:00:25.340 --> 00:00:28.360
OLIVIER DE WECK: So let's get
going on system integration

00:00:28.360 --> 00:00:29.590
and interface management.

00:00:29.590 --> 00:00:34.075
So we're essentially moving
up the right side of the V.

00:00:34.075 --> 00:00:37.300
And the idea is all the
details have been designed.

00:00:37.300 --> 00:00:40.090
The concept has been selected.

00:00:40.090 --> 00:00:42.850
We know what we're doing, but
now we have to re-integrate

00:00:42.850 --> 00:00:44.930
the system and make
sure it works--

00:00:44.930 --> 00:00:47.260
it performs the functions
that are intended

00:00:47.260 --> 00:00:49.780
and satisfies the requirements.

00:00:49.780 --> 00:00:52.730
And so what I'm going to
cover today is three things.

00:00:52.730 --> 00:00:54.660
First of all, why do we care?

00:00:54.660 --> 00:00:57.300
Why is interface
management important?

00:00:57.300 --> 00:00:58.330
Why is it important?

00:00:58.330 --> 00:00:59.840
There's two main reasons.

00:00:59.840 --> 00:01:02.190
One is because a lot
of failures originate--

00:01:02.190 --> 00:01:05.200
so a lot of failures
originate at interfaces.

00:01:05.200 --> 00:01:07.960
And the other reason
is because in order

00:01:07.960 --> 00:01:10.240
to design and manufacture
a lot of systems,

00:01:10.240 --> 00:01:13.810
we need to work with
partners and suppliers.

00:01:13.810 --> 00:01:16.540
And I'll talk about interface
management, sort of the details

00:01:16.540 --> 00:01:18.600
of it, the types of interfaces.

00:01:18.600 --> 00:01:22.570
I'll Introduce the DSM, the
Design Structure Matrix,

00:01:22.570 --> 00:01:23.980
as an important method.

00:01:23.980 --> 00:01:30.250
And then we'll talk about ICDs,
Interface Control Documents.

00:01:30.250 --> 00:01:32.630
They're a very big
deal in practice.

00:01:32.630 --> 00:01:34.900
And then finally, I'll talk
about system integration--

00:01:34.900 --> 00:01:37.840
in particular, the sequence
which you integrate systems,

00:01:37.840 --> 00:01:40.960
and then the role of standards.

00:01:40.960 --> 00:01:44.890
All right, so here, the point
that I want to make here

00:01:44.890 --> 00:01:47.870
is when you talk
about interfaces,

00:01:47.870 --> 00:01:49.840
the first thing you need
to be clear is, is it

00:01:49.840 --> 00:01:53.370
an internal interface
or an external interface

00:01:53.370 --> 00:01:54.650
of the system?

00:01:54.650 --> 00:01:58.860
And so I think you remember
this chart here that has--

00:01:58.860 --> 00:02:00.650
is this you guys--

00:02:00.650 --> 00:02:03.550
that has a system
boundary that's defined.

00:02:03.550 --> 00:02:05.260
So the system
boundary, in this case,

00:02:05.260 --> 00:02:08.530
we have this
digital camera here.

00:02:08.530 --> 00:02:12.220
And the internal interfaces
are essentially the interfaces

00:02:12.220 --> 00:02:14.860
that are within this boundary.

00:02:14.860 --> 00:02:17.500
So those are internal
interfaces within the camera,

00:02:17.500 --> 00:02:20.650
within the peripherals, that
are included in the system

00:02:20.650 --> 00:02:21.710
boundary.

00:02:21.710 --> 00:02:23.560
And then we have
external interfaces,

00:02:23.560 --> 00:02:27.250
which would be the interfaces
between the system boundary

00:02:27.250 --> 00:02:29.020
and anything that's
on the outside

00:02:29.020 --> 00:02:31.120
that you don't design
or control directly.

00:02:31.120 --> 00:02:35.650
So that's an
important distinction.

00:02:35.650 --> 00:02:39.250
The next point I want
to make is that you

00:02:39.250 --> 00:02:44.170
have to really carefully think
about interfaces as seeds

00:02:44.170 --> 00:02:46.480
of potential system failures.

00:02:46.480 --> 00:02:50.930
And so I have three
examples here for you.

00:02:50.930 --> 00:02:53.110
So the first one is--

00:02:53.110 --> 00:02:54.390
this is actually--

00:02:54.390 --> 00:02:58.060
Katya, sorry, this is
from Russia, from 2007.

00:02:58.060 --> 00:02:59.620
This is traffic.

00:02:59.620 --> 00:03:01.115
This is one of the big--

00:03:01.115 --> 00:03:05.830
not [RUSSIAN],, but
prospekt, the six lanes

00:03:05.830 --> 00:03:07.750
or eight lanes on
one side, and there's

00:03:07.750 --> 00:03:09.880
a crossroad coming in here.

00:03:09.880 --> 00:03:12.010
This is a traffic intersection.

00:03:12.010 --> 00:03:13.660
And you can see
traffic is completely

00:03:13.660 --> 00:03:15.500
blocked on this side.

00:03:15.500 --> 00:03:19.180
So traffic engineers think
a lot about interfaces,

00:03:19.180 --> 00:03:23.140
which are mainly your
intersections, the roundabouts.

00:03:23.140 --> 00:03:26.980
Interfaces are really where a
traffic system makes or breaks

00:03:26.980 --> 00:03:28.400
the traffic system.

00:03:28.400 --> 00:03:29.380
So that's a bottleneck.

00:03:29.380 --> 00:03:32.380
An interface is a
bottleneck, basically.

00:03:32.380 --> 00:03:34.390
The second example here
in the middle, this

00:03:34.390 --> 00:03:38.590
is actually an example from
MIT from an undergraduate class

00:03:38.590 --> 00:03:43.330
in design where the students
were designing an airfoil.

00:03:43.330 --> 00:03:46.080
So this has been produced
with a foam cutter.

00:03:46.080 --> 00:03:48.550
And you have a spar
that goes through here.

00:03:48.550 --> 00:03:52.690
And this was intended for
the MIT Formula SAE race car

00:03:52.690 --> 00:03:56.080
to create downward
pressure on the rear axle.

00:03:56.080 --> 00:03:57.690
They tested it in
the wind tunnel,

00:03:57.690 --> 00:04:01.670
and it worked well at 20 miles
per hour, 40 miles per hour.

00:04:01.670 --> 00:04:05.290
And then at 60 miles per
hour, there was a failure,

00:04:05.290 --> 00:04:08.620
and the airfoil just
basically disintegrated

00:04:08.620 --> 00:04:10.720
and was carried off
into the wind tunnel

00:04:10.720 --> 00:04:13.060
and completely shredded
by the propeller.

00:04:13.060 --> 00:04:14.480
Why did that happen?

00:04:14.480 --> 00:04:17.830
Well, they thought
about the shear loads.

00:04:17.830 --> 00:04:19.329
So when you have
an airfoil, there's

00:04:19.329 --> 00:04:23.710
a force that's acting
orthogonally to the airfoil.

00:04:23.710 --> 00:04:25.520
So they thought about that.

00:04:25.520 --> 00:04:29.710
The problem is there's also a
torque, like a pitching moment,

00:04:29.710 --> 00:04:31.300
a torque that's generated.

00:04:31.300 --> 00:04:34.750
And the higher the air speed
is, the higher the torque.

00:04:34.750 --> 00:04:36.820
They didn't think-- there
was no real good way

00:04:36.820 --> 00:04:41.680
to react against the torque
that was being generated.

00:04:41.680 --> 00:04:44.450
So at that high speed, the
airfoil, all of a sudden,

00:04:44.450 --> 00:04:49.790
tilted and created a lot of drag
and basically was destroyed.

00:04:49.790 --> 00:04:54.740
So the airfoil itself was OK,
but the interface was not.

00:04:54.740 --> 00:04:58.570
The third example here is a
software example or a software

00:04:58.570 --> 00:05:00.580
interface, very famous.

00:05:00.580 --> 00:05:03.760
This was the launch
failure of the Ariane 501.

00:05:03.760 --> 00:05:06.760
The very first launch
of the Ariane 5

00:05:06.760 --> 00:05:10.330
basically led to an
auto-destruct of the rocket

00:05:10.330 --> 00:05:11.710
upon ascent.

00:05:11.710 --> 00:05:13.920
There was an accident
investigation.

00:05:13.920 --> 00:05:18.160
And I'm just quoting you here
from the key passage, which

00:05:18.160 --> 00:05:23.470
said that "the active initial
reference system transmitted

00:05:23.470 --> 00:05:26.280
essentially diagnostic
information to the launcher's

00:05:26.280 --> 00:05:27.780
main computer."

00:05:27.780 --> 00:05:30.480
And so the main computer was
interpreting this information

00:05:30.480 --> 00:05:34.110
as though the rocket has
gone off course and trying

00:05:34.110 --> 00:05:36.840
to correct for it when,
in fact, it hadn't.

00:05:36.840 --> 00:05:40.140
It was actually physically going
exactly the right trajectory,

00:05:40.140 --> 00:05:41.620
but it was misinterpreted.

00:05:41.620 --> 00:05:46.200
And this is also a very famous
failure due to software reuse.

00:05:46.200 --> 00:05:50.610
So three examples of
interfaces-- bottlenecks

00:05:50.610 --> 00:05:53.970
in traffic, structural
failures, and erroneous function

00:05:53.970 --> 00:05:55.740
calls in software.

00:05:55.740 --> 00:05:59.920
And so be careful
about interfaces.

00:05:59.920 --> 00:06:03.960
The second reason we care is
working with manufacturers

00:06:03.960 --> 00:06:05.300
and suppliers.

00:06:05.300 --> 00:06:07.620
So the picture
here is essentially

00:06:07.620 --> 00:06:11.280
the Dreamliner, the Boeing 787.

00:06:11.280 --> 00:06:14.250
And you can see here the
different colors essentially

00:06:14.250 --> 00:06:15.870
represent the
different countries

00:06:15.870 --> 00:06:19.140
or the different suppliers that
are providing different parts

00:06:19.140 --> 00:06:20.670
of the airplane.

00:06:20.670 --> 00:06:23.555
Now, does anybody-- let me
ask this question to MIT,

00:06:23.555 --> 00:06:27.090
see if we can hear them now.

00:06:27.090 --> 00:06:29.810
No?

00:06:29.810 --> 00:06:33.270
Well, maybe we can use the chat.

00:06:33.270 --> 00:06:36.540
What's different
between the Dreamliner--

00:06:36.540 --> 00:06:39.000
and you could have seen
a similar picture, say,

00:06:39.000 --> 00:06:42.300
for the 737 or prior
generation aircraft.

00:06:42.300 --> 00:06:45.960
So what's the real difference
here with the interfaces,

00:06:45.960 --> 00:06:46.785
with the 787?

00:06:49.650 --> 00:06:52.500
AUDIENCE: [INAUDIBLE]

00:06:52.500 --> 00:06:54.960
OLIVIER DE WECK:
Yeah, that's true.

00:06:54.960 --> 00:07:00.120
Composites is one thing, but
that's a structural thing.

00:07:00.120 --> 00:07:01.770
I have something else in mind.

00:07:01.770 --> 00:07:06.390
There's some other fundamental
change that was made in the 787

00:07:06.390 --> 00:07:07.500
beyond composites.

00:07:07.500 --> 00:07:08.966
AUDIENCE: [INAUDIBLE]

00:07:08.966 --> 00:07:09.882
OLIVIER DE WECK: Nope.

00:07:09.882 --> 00:07:13.640
AUDIENCE: [INAUDIBLE]

00:07:13.640 --> 00:07:16.140
OLIVIER DE WECK: This has to
do with the way the airplane is

00:07:16.140 --> 00:07:18.272
assembled, with assembly.

00:07:18.272 --> 00:07:21.440
AUDIENCE: [INAUDIBLE]

00:07:21.440 --> 00:07:23.760
OLIVIER DE WECK:
Yes, yes, exactly.

00:07:23.760 --> 00:07:26.620
So the supply chain
is very different.

00:07:26.620 --> 00:07:28.620
And I guess I lost my--

00:07:32.388 --> 00:07:35.270
hm, did I reverse this?

00:07:35.270 --> 00:07:45.360
So the point I want to
make is that in the 787,

00:07:45.360 --> 00:07:48.530
the modules are
essentially pre-outfitted.

00:07:48.530 --> 00:07:51.500
Like, all the systems,
like the electrical system,

00:07:51.500 --> 00:07:54.700
the hydraulics, everything
is already installed

00:07:54.700 --> 00:07:57.520
by the time the module
arrives at the assembly

00:07:57.520 --> 00:08:00.610
plant in Everett and
close to Seattle.

00:08:00.610 --> 00:08:03.340
Before, you got the
structural sections, but then

00:08:03.340 --> 00:08:07.390
all the electricals, all
the inside was done on site.

00:08:07.390 --> 00:08:10.840
So the modules are pre-outfitted
with all the subsystems.

00:08:10.840 --> 00:08:14.590
And the final assembly itself
is very short, only a few days.

00:08:14.590 --> 00:08:17.920
So a big, big step, and
that's exactly right.

00:08:17.920 --> 00:08:20.690
That's the supply chain impact.

00:08:20.690 --> 00:08:25.480
OK, so then the
final point here is

00:08:25.480 --> 00:08:26.980
this is essentially
a launch vehicle

00:08:26.980 --> 00:08:28.690
design, a launch
vehicle that's being

00:08:28.690 --> 00:08:31.944
designed at NASA, the SLS.

00:08:31.944 --> 00:08:33.610
And if you think about
a launch vehicle,

00:08:33.610 --> 00:08:37.450
you have the first stage, second
stage, third stage, payload,

00:08:37.450 --> 00:08:39.522
the fairing.

00:08:39.522 --> 00:08:40.990
Actually, a lot
of these fairings

00:08:40.990 --> 00:08:43.390
are made here in Switzerland.

00:08:43.390 --> 00:08:46.770
And defining these
interfaces very clearly

00:08:46.770 --> 00:08:49.420
is critical to
reduce complexity.

00:08:49.420 --> 00:08:51.190
Understanding the
different types, which

00:08:51.190 --> 00:08:54.160
we're going to get into next--

00:08:54.160 --> 00:08:57.280
identifying the interfaces
is a way to reduce risk.

00:08:57.280 --> 00:08:59.470
And I just talked
about these problems

00:08:59.470 --> 00:09:01.720
originating at interfaces.

00:09:01.720 --> 00:09:04.570
And so hopefully,
it's pretty clear now

00:09:04.570 --> 00:09:07.410
that this is a critical issue.

00:09:07.410 --> 00:09:09.070
So what I'd like to
do now-- and we'll

00:09:09.070 --> 00:09:11.830
try to troubleshoot the audio
issues in the meantime--

00:09:11.830 --> 00:09:15.310
is for you to turn to
your partner exercise

00:09:15.310 --> 00:09:18.490
and share with
each other, what is

00:09:18.490 --> 00:09:20.530
an instance in your
past experience,

00:09:20.530 --> 00:09:24.340
maybe during an internship or
in a project that you worked on,

00:09:24.340 --> 00:09:27.360
where interface definition
and management was critical?

00:09:34.040 --> 00:09:37.630
AUDIENCE: Some of us went this
summer to Russia, to Moscow,

00:09:37.630 --> 00:09:41.380
to follow a summer camp on
system engineering and space

00:09:41.380 --> 00:09:42.420
engineering.

00:09:42.420 --> 00:09:43.960
And we had a project
there where we

00:09:43.960 --> 00:09:47.110
had to design a
mission to deep space.

00:09:47.110 --> 00:09:49.750
And everyone was
assigned to a group.

00:09:49.750 --> 00:09:53.200
The groups were around
five to seven people,

00:09:53.200 --> 00:09:55.630
and there were five
to seven groups.

00:09:55.630 --> 00:09:59.800
And each group had a
subsystem to design,

00:09:59.800 --> 00:10:02.740
but no group was assigned
to system engineering.

00:10:02.740 --> 00:10:04.990
So actually, there was
no one to make sure

00:10:04.990 --> 00:10:06.590
that all the interfaces were OK.

00:10:06.590 --> 00:10:09.580
So we had to go to
each other group

00:10:09.580 --> 00:10:10.840
and ask for the interfaces.

00:10:10.840 --> 00:10:14.020
And then when we had to
go back, it was a mess.

00:10:14.020 --> 00:10:16.985
And at the end, every
group had something good.

00:10:16.985 --> 00:10:19.910
But when we tried to put
all the systems together,

00:10:19.910 --> 00:10:26.270
it was a big mess and
nothing was working.

00:10:26.270 --> 00:10:29.510
OLIVIER DE WECK: That's a
pitch for systems engineering.

00:10:29.510 --> 00:10:30.850
So that's a good point.

00:10:30.850 --> 00:10:33.055
So even if you negotiate
bilateral interfaces

00:10:33.055 --> 00:10:35.560
amongst subsystems,
there's no guarantee

00:10:35.560 --> 00:10:38.110
that it will work
at the system level.

00:10:38.110 --> 00:10:42.750
OK, can we get from MIT?

00:10:42.750 --> 00:10:45.227
Can somebody give us
what you discussed?

00:10:53.520 --> 00:10:55.830
AUDIENCE: Is this
the mic working?

00:10:55.830 --> 00:10:58.620
OLIVIER DE WECK: Yeah,
now we can hear you.

00:10:58.620 --> 00:11:01.380
AUDIENCE: Great.

00:11:01.380 --> 00:11:04.680
So my grad school
project here at MIT

00:11:04.680 --> 00:11:08.220
is a secondary payload
on a big NASA mission.

00:11:08.220 --> 00:11:12.605
And as a secondary payload,
the interface control

00:11:12.605 --> 00:11:14.020
is a really big deal.

00:11:14.020 --> 00:11:15.659
So we're getting
all of our power

00:11:15.659 --> 00:11:17.700
and all of our communication
from the spacecraft,

00:11:17.700 --> 00:11:21.300
and we're also getting a
heater circuit from them.

00:11:21.300 --> 00:11:24.042
So any change is a big deal.

00:11:24.042 --> 00:11:25.500
We had to change
our heater circuit

00:11:25.500 --> 00:11:27.291
and we had to go through
a lot of paperwork

00:11:27.291 --> 00:11:28.860
just to splice a wire.

00:11:28.860 --> 00:11:34.300
So no issue with it, but it's
not as easy as it sounds,

00:11:34.300 --> 00:11:38.010
and there's a lot of control
over it, I would say.

00:11:43.794 --> 00:11:45.960
OLIVIER DE WECK: OK, maybe
another example from MIT.

00:11:50.430 --> 00:11:51.109
Somebody else?

00:11:51.109 --> 00:11:52.150
AUDIENCE: Does this work?

00:11:52.150 --> 00:11:53.671
OLIVIER DE WECK: Yeah.

00:11:53.671 --> 00:11:54.420
AUDIENCE: So the--

00:11:54.420 --> 00:11:56.753
OLIVIER DE WECK: We've got
it fixed out now, by the way.

00:11:56.753 --> 00:11:59.575
I think this is all
working now, so good.

00:11:59.575 --> 00:12:01.200
AUDIENCE: The last
project I was a part

00:12:01.200 --> 00:12:04.870
of was building an aircraft
for a Red Bull Flugtag.

00:12:04.870 --> 00:12:09.620
So it was like a giant glider
that we'd push off a platform.

00:12:09.620 --> 00:12:11.760
But we were kind of
building it in a hurry.

00:12:11.760 --> 00:12:15.120
The time constraints
were pretty quick,

00:12:15.120 --> 00:12:17.280
and we didn't really
have all the requirements

00:12:17.280 --> 00:12:20.320
until a month or two
before the competition.

00:12:20.320 --> 00:12:22.470
So we winged a lot of the
design and construction.

00:12:22.470 --> 00:12:25.770
And so we thought about
how to build the wing

00:12:25.770 --> 00:12:28.960
and how to build the empennage
and how to build the cockpit,

00:12:28.960 --> 00:12:31.750
but we didn't think about
how to put them all together.

00:12:31.750 --> 00:12:34.800
And so it turned out just being
wrapped with a lot of carbon

00:12:34.800 --> 00:12:37.290
fiber and epoxied.

00:12:37.290 --> 00:12:40.280
And in some cases, we used wood.

00:12:40.280 --> 00:12:44.670
And it was a very heavy and
poor-looking assembly once all

00:12:44.670 --> 00:12:45.510
that was together.

00:12:45.510 --> 00:12:48.340
Even though each part
individually looked great,

00:12:48.340 --> 00:12:50.280
they didn't really come
together perfectly.

00:12:50.280 --> 00:12:54.160
So we'll change that next year,
but could have thought more.

00:12:54.160 --> 00:12:55.590
OLIVIER DE WECK: OK, good.

00:12:55.590 --> 00:12:57.240
Great example.

00:12:57.240 --> 00:12:59.580
All right, so
hopefully, this is sort

00:12:59.580 --> 00:13:03.840
of motivation that, in
a sense, a system is

00:13:03.840 --> 00:13:07.582
the functions you want, the
components, and the interfaces.

00:13:07.582 --> 00:13:08.790
You've got to have all three.

00:13:08.790 --> 00:13:10.260
If you only have
great components

00:13:10.260 --> 00:13:12.360
but you don't understand
the interfaces,

00:13:12.360 --> 00:13:16.550
you stick them together, I'm not
sure what you're going to get.

00:13:16.550 --> 00:13:17.661
Yes, do you want to--

00:13:17.661 --> 00:13:23.070
AUDIENCE: [INAUDIBLE] Is it
also important the interfaces

00:13:23.070 --> 00:13:26.384
with testing facilities?

00:13:26.384 --> 00:13:27.800
OLIVIER DE WECK:
Yeah, absolutely.

00:13:27.800 --> 00:13:31.790
So testability requirements,
how you're going to test it,

00:13:31.790 --> 00:13:32.730
is critical.

00:13:32.730 --> 00:13:34.890
Also, ground support
equipment-- you know,

00:13:34.890 --> 00:13:36.980
like maintenance equipment.

00:13:36.980 --> 00:13:39.300
So not just the
interfaces, the system

00:13:39.300 --> 00:13:42.540
when you're operating
it, but during testing,

00:13:42.540 --> 00:13:44.010
during maintenance.

00:13:44.010 --> 00:13:47.700
And those are often forgotten
as well, so great point.

00:13:47.700 --> 00:13:50.550
So let's keep moving here.

00:13:50.550 --> 00:13:53.520
I want to talk about
the types of interfaces,

00:13:53.520 --> 00:13:56.280
and then we'll get to DSM.

00:13:56.280 --> 00:14:01.350
So here's a set of examples of
interfaces that we encounter.

00:14:01.350 --> 00:14:07.410
Let's see if we can get
the slides back up here.

00:14:07.410 --> 00:14:10.860
So essentially,
here's some examples.

00:14:10.860 --> 00:14:14.250
In the upper left, we
have a valve, and then

00:14:14.250 --> 00:14:16.320
a tank on the right side.

00:14:16.320 --> 00:14:19.110
And we essentially
have mass flow

00:14:19.110 --> 00:14:25.290
from the valve to the
tank, and m dot, dm dt.

00:14:25.290 --> 00:14:26.310
We have a rocket.

00:14:26.310 --> 00:14:28.920
If you think about the rocket
interface with the payload,

00:14:28.920 --> 00:14:30.510
it's transferring
momentum, right?

00:14:30.510 --> 00:14:33.660
The rocket provides
thrust, force F,

00:14:33.660 --> 00:14:36.150
for some amount
of time, delta-t,

00:14:36.150 --> 00:14:38.580
and that's the
momentum imparted.

00:14:38.580 --> 00:14:43.170
We have a heat
exchanger that is maybe

00:14:43.170 --> 00:14:46.110
giving heat off to the
air, the surrounding air.

00:14:46.110 --> 00:14:48.978
So we have a heat flux, q dot.

00:14:48.978 --> 00:14:51.690
We have solar cells,
PV cells, that

00:14:51.690 --> 00:14:55.950
are producing electrical
power, voltage times current.

00:14:55.950 --> 00:14:59.700
And this power flux is being
sent to a battery where

00:14:59.700 --> 00:15:01.420
the energy is stored.

00:15:01.420 --> 00:15:04.914
So these are all pretty
obvious examples.

00:15:04.914 --> 00:15:06.330
And then on the
right side, things

00:15:06.330 --> 00:15:07.830
get maybe a little
bit less obvious.

00:15:10.470 --> 00:15:15.060
You go to a URL and you download
an HTML file into your browser.

00:15:15.060 --> 00:15:15.990
That's an information.

00:15:15.990 --> 00:15:18.150
You're getting data.

00:15:18.150 --> 00:15:21.390
You have a motion sensor
attached, say, to your house,

00:15:21.390 --> 00:15:23.190
and it triggers an alarm.

00:15:23.190 --> 00:15:27.210
That's a command,
different from data.

00:15:27.210 --> 00:15:29.700
NPR is National Public Radio.

00:15:29.700 --> 00:15:34.470
This is kind of the high-quality
radio news reporting.

00:15:34.470 --> 00:15:36.360
And you listen to this.

00:15:36.360 --> 00:15:38.670
So there's a
cognitive interface.

00:15:38.670 --> 00:15:45.160
And then if any of you
have had any psychotherapy,

00:15:45.160 --> 00:15:48.210
this is also an interface
between the patient

00:15:48.210 --> 00:15:49.320
and the psychotherapist.

00:15:49.320 --> 00:15:51.630
This is an effective interface.

00:15:51.630 --> 00:15:53.680
So these are very different.

00:15:53.680 --> 00:15:55.590
And you can say,
well, there's hundreds

00:15:55.590 --> 00:15:57.670
of types of interfaces.

00:15:57.670 --> 00:15:59.130
Well, no.

00:15:59.130 --> 00:16:02.520
The argument here
is all interfaces

00:16:02.520 --> 00:16:07.210
can be reduced or described
by these four canonical types.

00:16:07.210 --> 00:16:10.090
The first one is
physical connection.

00:16:10.090 --> 00:16:13.125
So A connects to
B. B connects to A.

00:16:13.125 --> 00:16:15.570
A physical connection
typically implies

00:16:15.570 --> 00:16:19.260
that there's a
force or torque that

00:16:19.260 --> 00:16:21.380
can be transmitted
across the interface,

00:16:21.380 --> 00:16:23.490
and it's always symmetrical.

00:16:23.490 --> 00:16:27.220
And then we have energy,
mass, and information flows.

00:16:27.220 --> 00:16:29.130
And I'll give you
some examples of each

00:16:29.130 --> 00:16:30.810
of these types of interfaces.

00:16:30.810 --> 00:16:33.630
And these energy, mass
and information flows

00:16:33.630 --> 00:16:35.310
typically are asymmetric.

00:16:35.310 --> 00:16:37.740
It flows from one to the other.

00:16:37.740 --> 00:16:41.120
Physical connection
is always symmetric.

00:16:41.120 --> 00:16:44.660
So let's go through these,
and I'll give you examples.

00:16:44.660 --> 00:16:46.560
And then we'll see
what can we do with it.

00:16:46.560 --> 00:16:51.440
So here's physical
connection examples--

00:16:51.440 --> 00:16:53.370
rollers, brake pads.

00:16:53.370 --> 00:16:59.260
A finger touching a touch
screen is a physical interface.

00:16:59.260 --> 00:17:01.670
The interface can be reversible.

00:17:01.670 --> 00:17:04.339
In other words, the
connection is temporary--

00:17:04.339 --> 00:17:06.950
and examples of that would
be electrical connectors,

00:17:06.950 --> 00:17:10.890
USB ports, latch
mechanisms, nuts and bolts--

00:17:10.890 --> 00:17:14.839
or permanently connected,
such as in-- so one of you

00:17:14.839 --> 00:17:19.099
mentioned riveting,
spot welding, fusing.

00:17:19.099 --> 00:17:21.349
And a fun question
that comes up,

00:17:21.349 --> 00:17:23.240
well, I'm a software engineer.

00:17:23.240 --> 00:17:26.240
What is physical connection
mean for software?

00:17:26.240 --> 00:17:29.250
Well, it's a kind
of tricky question.

00:17:29.250 --> 00:17:32.870
I think the closest analog
we have is compiling.

00:17:32.870 --> 00:17:35.510
If you have pieces
of source code

00:17:35.510 --> 00:17:38.660
and you compile your
program, then you've

00:17:38.660 --> 00:17:43.100
essentially fused this together
into something new, right?

00:17:43.100 --> 00:17:45.660
So I'll show you the example.

00:17:45.660 --> 00:17:47.420
So how do we describe it?

00:17:47.420 --> 00:17:49.550
Well, here's an OPM model of--

00:17:49.550 --> 00:17:51.740
I'll give you a couple
examples from xerography.

00:17:51.740 --> 00:17:54.530
So we have a main
motor here, number one,

00:17:54.530 --> 00:17:58.460
and then two different clutches,
number two and number three.

00:17:58.460 --> 00:18:01.070
And the process linking
them is engaging, right?

00:18:01.070 --> 00:18:03.890
The main motor engages
through the clutch.

00:18:03.890 --> 00:18:06.650
We can hide the
process, and then

00:18:06.650 --> 00:18:10.380
we just have this bi-directional
interface between one and two

00:18:10.380 --> 00:18:11.750
and one and three.

00:18:11.750 --> 00:18:15.260
And then if we show this
as a mini-DSM here, one

00:18:15.260 --> 00:18:17.960
connected to two, one
connected to three,

00:18:17.960 --> 00:18:20.690
but two and three do not connect
directly with each other.

00:18:20.690 --> 00:18:23.190
They don't have a direct
physical interface.

00:18:23.190 --> 00:18:25.770
And you can see that because
those cells are empty.

00:18:25.770 --> 00:18:28.820
So physical connection
implies symmetry

00:18:28.820 --> 00:18:32.700
in the design structure
matrix that we can build up.

00:18:32.700 --> 00:18:33.736
Yes, [INAUDIBLE]?

00:18:33.736 --> 00:18:34.787
AUDIENCE: [INAUDIBLE]

00:18:34.787 --> 00:18:35.870
OLIVIER DE WECK: Oh, DSM--

00:18:35.870 --> 00:18:38.450
so DSM means Design
Structure Matrix.

00:18:38.450 --> 00:18:40.410
And I will introduce
that in a minute.

00:18:40.410 --> 00:18:42.950
We've briefly mentioned
it before in the class,

00:18:42.950 --> 00:18:46.500
but I'll get into
it in some detail.

00:18:46.500 --> 00:18:48.780
Here's some more
picture examples

00:18:48.780 --> 00:18:50.490
of physical connections--

00:18:50.490 --> 00:18:56.370
so a welding joint,
irreversible, reversible, nuts

00:18:56.370 --> 00:19:00.360
and bolts, RJ45, an
electrical connector.

00:19:00.360 --> 00:19:01.470
And then here's your--

00:19:01.470 --> 00:19:03.000
hey, I'm an old guy.

00:19:03.000 --> 00:19:04.520
I learned Fortran.

00:19:04.520 --> 00:19:07.245
Well, Basic was my first
language, and then Fortran.

00:19:07.245 --> 00:19:08.820
I did a lot of Fortran.

00:19:08.820 --> 00:19:10.960
You guys probably don't
even know what that is.

00:19:10.960 --> 00:19:12.380
But Fortran--
right, [INAUDIBLE]??

00:19:12.380 --> 00:19:14.840
Fortran's kind of a big
deal still in some--

00:19:14.840 --> 00:19:15.980
AUDIENCE: [INAUDIBLE].

00:19:15.980 --> 00:19:16.860
OLIVIER DE WECK: OK.

00:19:16.860 --> 00:19:20.610
So basically the way this works
is you have your source code,

00:19:20.610 --> 00:19:22.140
which are .f files.

00:19:22.140 --> 00:19:26.370
These are basically
Ascii files, right?

00:19:26.370 --> 00:19:29.430
And then first, you transform
them into binary files,

00:19:29.430 --> 00:19:30.960
object files.

00:19:30.960 --> 00:19:34.810
And then these get merged
together into an executable.

00:19:34.810 --> 00:19:38.370
So that's the
process of compiling.

00:19:38.370 --> 00:19:41.820
Any questions about
physical connections,

00:19:41.820 --> 00:19:46.170
this type of interface,
physical connection?

00:19:46.170 --> 00:19:47.430
Is it clear?

00:19:47.430 --> 00:19:48.680
OK, any questions at MIT?

00:19:53.710 --> 00:19:55.870
Can you still hear me?

00:19:55.870 --> 00:19:57.647
AUDIENCE: Yes, we're good.

00:19:57.647 --> 00:19:58.730
OLIVIER DE WECK: OK, good.

00:19:58.730 --> 00:20:01.130
So let's move on
to energy flows.

00:20:01.130 --> 00:20:05.690
Energy flows are present when
there's a net exchange of work

00:20:05.690 --> 00:20:07.400
between two components.

00:20:07.400 --> 00:20:12.720
So power is flowing across
the interface dw dt, right--

00:20:12.720 --> 00:20:15.710
joules per second, watts.

00:20:15.710 --> 00:20:18.530
And the energy, this energy
flow, this power flow,

00:20:18.530 --> 00:20:20.270
can take different forms--

00:20:20.270 --> 00:20:23.880
electrical power, which is
very common in many products.

00:20:23.880 --> 00:20:25.940
And so the electrical
power usually

00:20:25.940 --> 00:20:30.410
comes either as DC, Direct
Current, or AC, Alternating

00:20:30.410 --> 00:20:31.620
Current.

00:20:31.620 --> 00:20:34.460
And if you know a little
bit about the history

00:20:34.460 --> 00:20:38.270
of electrical systems and
networks, there was a huge war.

00:20:38.270 --> 00:20:40.310
It's called the AC/DC wars.

00:20:40.310 --> 00:20:41.390
It's not the band.

00:20:41.390 --> 00:20:42.740
This is not the rock music.

00:20:42.740 --> 00:20:45.800
This is the war
between Edison, who

00:20:45.800 --> 00:20:48.860
is a big proponent
of direct current,

00:20:48.860 --> 00:20:52.790
and Tesla and Westinghouse,
who were really pushing

00:20:52.790 --> 00:20:56.820
AC for big power distribution.

00:20:56.820 --> 00:20:59.200
So we won in the end?

00:20:59.200 --> 00:21:00.320
AC won.

00:21:00.320 --> 00:21:02.535
It looked initially
like Edison was really--

00:21:02.535 --> 00:21:04.035
and there's still,
in New York City,

00:21:04.035 --> 00:21:06.350
there, for a long
time, and other places,

00:21:06.350 --> 00:21:08.540
you still had DC power systems.

00:21:08.540 --> 00:21:12.770
The problem with
DC power is there's

00:21:12.770 --> 00:21:14.960
huge losses with distance.

00:21:14.960 --> 00:21:18.020
And with AC, you can go
to very high voltages

00:21:18.020 --> 00:21:20.840
and transmit power with
relatively little loss

00:21:20.840 --> 00:21:22.220
over large distance.

00:21:22.220 --> 00:21:26.090
That's the main reason that
AC won out, essentially.

00:21:26.090 --> 00:21:28.430
The thing that's important
here-- and power, of course,

00:21:28.430 --> 00:21:30.560
is current times voltage.

00:21:30.560 --> 00:21:35.420
The thing that's important is
that these voltage levels--

00:21:35.420 --> 00:21:38.540
and in the case of AC
power also, the frequency

00:21:38.540 --> 00:21:41.420
is very important,
50 or 60 hertz.

00:21:41.420 --> 00:21:43.640
This is very standardized, OK?

00:21:43.640 --> 00:21:49.130
So if you're going to design a
satellite system, or a rover,

00:21:49.130 --> 00:21:53.930
or an automotive system, or a
medical device or a consumer

00:21:53.930 --> 00:21:58.190
product, the voltage
levels are pretty--

00:21:58.190 --> 00:22:00.380
there's a few choices,
but you can't just

00:22:00.380 --> 00:22:03.590
choose some arbitrary number,
because your whole industry,

00:22:03.590 --> 00:22:06.500
your batteries, your
connectors, everything is now

00:22:06.500 --> 00:22:08.420
pretty standardized.

00:22:08.420 --> 00:22:11.870
So for the Octanus 1,
Rafael, what did you guys

00:22:11.870 --> 00:22:13.490
choose for your power system?

00:22:13.490 --> 00:22:14.882
What's your--

00:22:14.882 --> 00:22:17.710
AUDIENCE: [INAUDIBLE] 3.3 volts.

00:22:17.710 --> 00:22:20.900
OLIVIER DE WECK:
3.3-volt bus across, OK.

00:22:20.900 --> 00:22:23.300
And then if you
need more energy,

00:22:23.300 --> 00:22:25.240
you just have to add batteries.

00:22:25.240 --> 00:22:27.050
But that will
essentially-- and you

00:22:27.050 --> 00:22:28.970
can do transformations as well.

00:22:28.970 --> 00:22:31.350
You can have different
voltage levels in your system,

00:22:31.350 --> 00:22:33.980
but that adds to the complexity.

00:22:33.980 --> 00:22:37.100
Thermal flux is essentially
heat flux, dq dt.

00:22:37.100 --> 00:22:41.330
There are three fundamental
mechanisms of heat transfer--

00:22:41.330 --> 00:22:44.520
conduction, convection,
and radiation.

00:22:44.520 --> 00:22:48.210
In spacecraft, radiation is
probably the most important

00:22:48.210 --> 00:22:50.270
because that's the
only way to get rid

00:22:50.270 --> 00:22:52.820
of heat out of your spacecraft.

00:22:52.820 --> 00:22:57.130
And then you can do conduction
and convection internally.

00:22:57.130 --> 00:23:00.360
RF power, so microwaves.

00:23:00.360 --> 00:23:02.130
Transmitting or
transferring power

00:23:02.130 --> 00:23:05.820
through microwaves is becoming--

00:23:05.820 --> 00:23:08.850
of course, we now had microwave
ovens for a long time.

00:23:08.850 --> 00:23:12.600
But even doing power beaming
over larger distances

00:23:12.600 --> 00:23:14.610
with microwaves is
definitely something

00:23:14.610 --> 00:23:16.380
that's been
demonstrated, and there's

00:23:16.380 --> 00:23:18.450
a lot of interest in it.

00:23:18.450 --> 00:23:20.880
Here also, we are pretty
standard frequencies, so

00:23:20.880 --> 00:23:24.420
2.4 gigahertz, 5.8 gigahertz.

00:23:24.420 --> 00:23:27.610
You have a whole industry
built around these standards.

00:23:27.610 --> 00:23:30.270
By the way, why
the 2.4 gigahertz?

00:23:30.270 --> 00:23:32.010
Let's see if-- at MIT.

00:23:32.010 --> 00:23:34.147
This 2.4 gigahertz
for microwaves,

00:23:34.147 --> 00:23:35.230
where does that come from?

00:23:42.650 --> 00:23:44.350
Anybody know where
that comes from?

00:23:46.940 --> 00:23:49.532
AUDIENCE: Is that the frequency
that can be transmitted easily

00:23:49.532 --> 00:23:50.490
through the atmosphere?

00:23:53.090 --> 00:23:55.460
OLIVIER DE WECK: Actually,
no, it's not good.

00:23:55.460 --> 00:23:56.570
It's absorbed.

00:23:56.570 --> 00:23:58.950
It's absorbed in the atmosphere.

00:23:58.950 --> 00:24:00.440
It's the opposite.

00:24:00.440 --> 00:24:03.250
This 2.4 is very
important because it's

00:24:03.250 --> 00:24:06.530
a resonant frequency
of the water molecule.

00:24:06.530 --> 00:24:09.811
So your microwave oven
will work at 2.4 gigahertz.

00:24:09.811 --> 00:24:10.310
Why?

00:24:10.310 --> 00:24:14.690
Because if you radiate
microwaves at that frequency,

00:24:14.690 --> 00:24:17.510
it makes the water molecules
vibrate because that's

00:24:17.510 --> 00:24:20.710
a resonant frequency, and
you transfer a lot of heat

00:24:20.710 --> 00:24:24.920
or a lot of energy into
your water molecules, which

00:24:24.920 --> 00:24:28.850
are the majority of your food.

00:24:28.850 --> 00:24:31.330
So it's actually
really bad for--

00:24:31.330 --> 00:24:33.470
you'd like to use 2.4
gigahertz, but if you

00:24:33.470 --> 00:24:37.160
try to use that frequency for
atmospheric power transfer,

00:24:37.160 --> 00:24:39.510
you're right at
the resonant mode.

00:24:39.510 --> 00:24:42.590
So if you have a high level
of humidity in the air,

00:24:42.590 --> 00:24:44.450
you're going to lose
a lot of that power,

00:24:44.450 --> 00:24:47.840
just heating the atmosphere up
and not transmitting the power.

00:24:47.840 --> 00:24:49.430
Does that make sense?

00:24:49.430 --> 00:24:51.717
AUDIENCE: Yeah, thanks.

00:24:51.717 --> 00:24:52.550
OLIVIER DE WECK: OK.

00:24:52.550 --> 00:24:55.880
And then another very popular
frequency is 5.8 gigahertz.

00:24:55.880 --> 00:24:58.010
And then we can go to
X band, which is closer

00:24:58.010 --> 00:25:00.020
to 8 gigahertz, et cetera.

00:25:00.020 --> 00:25:03.790
But anyway, so this is
a kind of growing area

00:25:03.790 --> 00:25:06.560
is microwave power transfer.

00:25:06.560 --> 00:25:09.000
And then of course, the
more old-fashioned, perhaps,

00:25:09.000 --> 00:25:11.660
but still very important
is mechanical power,

00:25:11.660 --> 00:25:16.080
so transferring energy and power
through a mechanical interface.

00:25:16.080 --> 00:25:19.010
So if it's linear, it's
force times velocity.

00:25:19.010 --> 00:25:22.880
If it's rotary, it's torque
times the angular rate

00:25:22.880 --> 00:25:24.950
of rotation.

00:25:24.950 --> 00:25:27.500
And then finally, energy--

00:25:27.500 --> 00:25:29.810
typically, if you want
to have energy flow,

00:25:29.810 --> 00:25:32.690
it does imply that there's a
physical connection as well,

00:25:32.690 --> 00:25:36.810
like some kind of wires or a
gearbox or something like this.

00:25:36.810 --> 00:25:43.810
However, a lot of interest now
in wireless power transfer.

00:25:43.810 --> 00:25:46.050
But it's still kind of a--

00:25:46.050 --> 00:25:50.020
for it to really work
reliably at high power levels,

00:25:50.020 --> 00:25:54.020
this is pretty immature
technology still.

00:25:54.020 --> 00:25:55.660
So here's some examples of--

00:25:55.660 --> 00:25:57.572
again, this is from xerography.

00:25:57.572 --> 00:25:59.030
And you'll understand
why I'm using

00:25:59.030 --> 00:26:01.700
these examples in a minute.

00:26:01.700 --> 00:26:03.380
So we have a paper.

00:26:03.380 --> 00:26:06.440
We have toner, unfused toner.

00:26:06.440 --> 00:26:08.400
And we want to fuse
those two together.

00:26:08.400 --> 00:26:12.230
We do this through a heat
roller and heat and a belt.

00:26:12.230 --> 00:26:13.730
And essentially,
we're transferring

00:26:13.730 --> 00:26:16.880
energy from the heat
roll to the paper, which

00:26:16.880 --> 00:26:18.920
allows it to fuse the toner.

00:26:18.920 --> 00:26:22.400
So we have transfer of
energy from one to two,

00:26:22.400 --> 00:26:27.170
which is shown by this
green mark here in the DSM.

00:26:27.170 --> 00:26:30.920
So heat energy is transferred
from system one to system two.

00:26:33.710 --> 00:26:36.900
One question that often
comes up is, well,

00:26:36.900 --> 00:26:39.890
what if we have like waste heat?

00:26:39.890 --> 00:26:44.720
There's heat losses, and
there's parasitic energy flows.

00:26:44.720 --> 00:26:46.250
Do we care about those?

00:26:46.250 --> 00:26:48.060
Do we represent those?

00:26:48.060 --> 00:26:50.390
And the answer is
yes, you should,

00:26:50.390 --> 00:26:52.400
especially if they
affect your performance

00:26:52.400 --> 00:26:54.020
or your requirements.

00:26:54.020 --> 00:26:55.520
So the first thing
you typically do,

00:26:55.520 --> 00:26:58.280
as you map out your
interfaces, is you

00:26:58.280 --> 00:27:03.530
map the flows that you want to
happen, that need to happen.

00:27:03.530 --> 00:27:05.900
And then on top of
that, you map out

00:27:05.900 --> 00:27:07.730
the flows that happen
even though you

00:27:07.730 --> 00:27:10.630
didn't design for that, but
you need to account for them.

00:27:10.630 --> 00:27:13.400
So heat losses would be an
example of that waste heat

00:27:13.400 --> 00:27:15.030
flux.

00:27:15.030 --> 00:27:17.310
Any questions about
energy or power flows?

00:27:20.310 --> 00:27:31.010
MIT, any questions,
energy or power flux?

00:27:31.010 --> 00:27:33.150
AUDIENCE: We're good, thanks.

00:27:33.150 --> 00:27:35.000
OLIVIER DE WECK: OK.

00:27:35.000 --> 00:27:36.640
Next one, mass flows.

00:27:36.640 --> 00:27:39.760
Mass flows is when
matter, physical matter,

00:27:39.760 --> 00:27:42.940
is being exchanged between
two elements or subsystems.

00:27:42.940 --> 00:27:46.960
So mass flows is dm dt,
kilograms per second.

00:27:46.960 --> 00:27:53.320
And the form of the matter
can be fluids, gases, solids.

00:27:53.320 --> 00:27:54.800
I guess plasma as well.

00:27:54.800 --> 00:27:56.725
There's a big plasma
center here on campus.

00:27:59.710 --> 00:28:01.960
But the primary three are
fluids-- so if it's fluids,

00:28:01.960 --> 00:28:04.630
it could be like a cooling
liquid, a refrigerant, fuel,

00:28:04.630 --> 00:28:05.500
water.

00:28:05.500 --> 00:28:08.560
If it's gases, air, exhaust gas.

00:28:08.560 --> 00:28:13.120
And then for solids, examples
would be toner, paper.

00:28:13.120 --> 00:28:16.900
If you're in the mining
industry, it's iron ore.

00:28:16.900 --> 00:28:20.110
And typically, mass flow
implies an underlying

00:28:20.110 --> 00:28:24.070
physical connection, like some
kind of channel or conduit.

00:28:24.070 --> 00:28:27.760
So Rafael, your example of your
sucking up and melting the snow

00:28:27.760 --> 00:28:33.070
and you said there's a hose, so
the hose is itself a component,

00:28:33.070 --> 00:28:36.970
but it enables the mass
flow of the melted snow

00:28:36.970 --> 00:28:39.910
into some holding
tank or reservoir.

00:28:39.910 --> 00:28:42.589
And so the hose is the
physical connection.

00:28:42.589 --> 00:28:44.380
And then the mass flow
that happens through

00:28:44.380 --> 00:28:48.860
that hose is what's shown here.

00:28:48.860 --> 00:28:50.690
Mass flows can be open.

00:28:50.690 --> 00:28:54.120
So there's a source
and there's a sink.

00:28:54.120 --> 00:28:57.100
The source and the sink could
be inside or outside your system

00:28:57.100 --> 00:28:57.600
boundary.

00:28:57.600 --> 00:28:59.670
You have to think about it.

00:28:59.670 --> 00:29:03.270
But also, mass flows can form
continuous loops, particularly

00:29:03.270 --> 00:29:05.220
if you recycle things.

00:29:05.220 --> 00:29:07.380
Like for example,
in the refrigerator,

00:29:07.380 --> 00:29:13.680
your cooling liquid continuously
cycles through your system.

00:29:13.680 --> 00:29:15.680
So here's some
examples of mass flows.

00:29:15.680 --> 00:29:17.250
We have a heat exchanger.

00:29:17.250 --> 00:29:19.040
This is a U-type heat exchanger.

00:29:19.040 --> 00:29:23.255
So on the top, we have what's
called here the shell side.

00:29:23.255 --> 00:29:27.710
A fluid is coming in and
is running out on this end.

00:29:27.710 --> 00:29:30.290
And then we have
horizontally, a fluid

00:29:30.290 --> 00:29:32.180
that's coming in
on the lower side,

00:29:32.180 --> 00:29:35.960
cycling through, exchanging
the heat, and moving out.

00:29:35.960 --> 00:29:37.700
So a heat exchanger
is interesting

00:29:37.700 --> 00:29:40.350
because what kind
of flows happen

00:29:40.350 --> 00:29:48.160
in a heat exchanger of the
flows we've discussed so far?

00:29:48.160 --> 00:29:50.680
Energy and mass flow, right?

00:29:50.680 --> 00:29:52.450
So the two of them
happen together.

00:29:52.450 --> 00:29:55.780
In order for the energy flow to
happen or transfer to happen,

00:29:55.780 --> 00:29:57.980
the mass flow has
to happen as well.

00:29:57.980 --> 00:30:01.160
So these two flows are
tied to each other.

00:30:01.160 --> 00:30:02.810
Here's an example
from xerography.

00:30:02.810 --> 00:30:05.510
So we have our
photoreceptor belt.

00:30:05.510 --> 00:30:08.530
We have residual toner
on the photoreceptor

00:30:08.530 --> 00:30:11.170
that needs to be removed
from the photoreceptor.

00:30:11.170 --> 00:30:14.570
And we do this through a
cleaning lamp, and then

00:30:14.570 --> 00:30:15.820
a blade.

00:30:15.820 --> 00:30:19.330
So in this case, you
can show this as an OPM,

00:30:19.330 --> 00:30:23.860
and then you can show it here
where that residual toner is

00:30:23.860 --> 00:30:28.030
transferred from photoreceptor
one to the cleaning blade two.

00:30:28.030 --> 00:30:34.300
And this is shown in the DSM
as a mass flow from one to two.

00:30:34.300 --> 00:30:38.570
And then we have one more,
which is the information flows.

00:30:38.570 --> 00:30:41.020
So this is really where
the big revolution

00:30:41.020 --> 00:30:43.600
has happened in the
last two decades

00:30:43.600 --> 00:30:47.110
since a lot of
functions that used

00:30:47.110 --> 00:30:50.500
to be done mechanically have
been replaced with software.

00:30:50.500 --> 00:30:54.940
And here's some examples
of these information flows.

00:30:54.940 --> 00:30:58.760
So if your system has a
user interface, a GUI,

00:30:58.760 --> 00:31:03.130
a graphical user interface, or
some kind of I/O, input/output,

00:31:03.130 --> 00:31:07.480
with the user, that's critical.

00:31:07.480 --> 00:31:09.970
That's an information interface.

00:31:09.970 --> 00:31:12.590
And so Rafael, again coming
to your presentation--

00:31:12.590 --> 00:31:14.780
so I'm going to pick
on you a lot today.

00:31:14.780 --> 00:31:18.460
Not pick on you, but I'm
going to cite you a lot.

00:31:18.460 --> 00:31:21.250
You said this rover is going to
be controlled somehow, right?

00:31:21.250 --> 00:31:23.320
And the big question is
always, how much autonomy

00:31:23.320 --> 00:31:26.620
do you put inside the
thing, and how much do you

00:31:26.620 --> 00:31:28.990
rely on a user that's remote?

00:31:28.990 --> 00:31:33.490
And that's clearly an
information interface.

00:31:33.490 --> 00:31:36.490
The nature of the
information, is it analog?

00:31:36.490 --> 00:31:37.420
Is it digital?

00:31:37.420 --> 00:31:38.860
Is it wireless?

00:31:38.860 --> 00:31:40.810
So on the analog side,
we're essentially

00:31:40.810 --> 00:31:43.690
talking about some
signal, some voltage,

00:31:43.690 --> 00:31:47.680
and there's been a lot
of work done on ADC,

00:31:47.680 --> 00:31:49.840
analog-to-digital conversion.

00:31:49.840 --> 00:31:54.410
And then the opposite
is digital to analog.

00:31:54.410 --> 00:31:57.400
And depending on how many bits
you have available to you,

00:31:57.400 --> 00:32:01.440
you're going to have some
discretization errors.

00:32:01.440 --> 00:32:05.260
A purely digital interface,
we refer to it as DIO,

00:32:05.260 --> 00:32:07.414
Digital Input/Output.

00:32:07.414 --> 00:32:08.830
And then of course,
wireless, this

00:32:08.830 --> 00:32:11.470
is the standard,
the 802.11 standard,

00:32:11.470 --> 00:32:14.380
which is really very
important these days.

00:32:14.380 --> 00:32:17.920
If you think about
why we need all this,

00:32:17.920 --> 00:32:20.290
mainly, the main reason
is control, right?

00:32:20.290 --> 00:32:22.920
We have sensors,
actuators, controllers.

00:32:22.920 --> 00:32:27.370
And because this information
is never perfect--

00:32:27.370 --> 00:32:31.450
there's gaps in the information
or there's noise superimposed--

00:32:31.450 --> 00:32:35.900
we have to also filter and
amplify the information.

00:32:35.900 --> 00:32:38.620
And so if you think about the
type of information flows--

00:32:38.620 --> 00:32:42.111
for example, in spacecraft, we
could have telemetry, sensor

00:32:42.111 --> 00:32:42.610
data.

00:32:42.610 --> 00:32:44.650
And telemetry
fundamentally means,

00:32:44.650 --> 00:32:46.450
I want to know how
is my system doing.

00:32:46.450 --> 00:32:47.530
Is it healthy?

00:32:47.530 --> 00:32:49.370
Are all the subsystems working?

00:32:49.370 --> 00:32:50.730
Are there some anomalies?

00:32:50.730 --> 00:32:53.630
Are components within
their temperature limits?

00:32:53.630 --> 00:32:55.300
That's what we call telemetry.

00:32:55.300 --> 00:32:58.120
And then commands are when
you are sending a command

00:32:58.120 --> 00:33:02.800
to the system and say, you know,
turn this way, turn that way.

00:33:02.800 --> 00:33:05.380
And fundamentally,
telemetry and commands

00:33:05.380 --> 00:33:08.050
are treated quite differently.

00:33:08.050 --> 00:33:10.750
So where do you need
better quality information?

00:33:10.750 --> 00:33:12.820
Where is the link
more important,

00:33:12.820 --> 00:33:15.890
on the telemetry side
or sending commands?

00:33:15.890 --> 00:33:16.640
What do you think?

00:33:20.490 --> 00:33:23.550
Actually, no.

00:33:23.550 --> 00:33:27.100
So if your telemetry
is imperfect--

00:33:27.100 --> 00:33:29.410
I mean, it depends a little
bit what you do with it.

00:33:29.410 --> 00:33:31.710
But the commands are
typically more critical.

00:33:31.710 --> 00:33:36.190
Like, if you have a
bit error in a command,

00:33:36.190 --> 00:33:38.430
and it says fire
the engine but you

00:33:38.430 --> 00:33:41.890
didn't want to fire the engine,
you can lose your mission.

00:33:41.890 --> 00:33:47.100
So typically, what's
known as the bit error

00:33:47.100 --> 00:33:49.650
rate has to be lower,
meaning the link budget is

00:33:49.650 --> 00:33:51.300
much better for commands.

00:33:51.300 --> 00:33:54.500
So there's an asymmetry.

00:33:54.500 --> 00:33:57.070
OK, so here's some examples.

00:33:57.070 --> 00:33:58.800
So here's a typical
control loop.

00:33:58.800 --> 00:34:02.670
You have your plants, your
system, your actuator, sensors,

00:34:02.670 --> 00:34:05.820
a comparator that compares
your reference signal--

00:34:05.820 --> 00:34:09.060
this is how you want
the system to behave--

00:34:09.060 --> 00:34:13.080
and sends that to a controller,
which then closes the loop.

00:34:13.080 --> 00:34:15.090
The example here,
again from xerography,

00:34:15.090 --> 00:34:17.580
is you have some
original document.

00:34:17.580 --> 00:34:20.469
You want to make a copy here.

00:34:20.469 --> 00:34:23.250
So there's a lamp that shines
light onto your document.

00:34:23.250 --> 00:34:26.010
It goes through a
lens, a laser diode,

00:34:26.010 --> 00:34:27.960
and then to your marking system.

00:34:27.960 --> 00:34:31.770
The OPM, you have your
original, your optical system.

00:34:31.770 --> 00:34:34.469
You create a digital
image file which then

00:34:34.469 --> 00:34:36.330
is sent to the marking system.

00:34:36.330 --> 00:34:37.980
So if we simplify
all this, we can

00:34:37.980 --> 00:34:40.980
say there's information
flow from the optical system

00:34:40.980 --> 00:34:42.449
to the marking system.

00:34:42.449 --> 00:34:47.110
From one to two,
information is transferred.

00:34:47.110 --> 00:34:49.669
So any questions?

00:34:49.669 --> 00:34:52.020
So those are the four
fundamental types

00:34:52.020 --> 00:34:54.659
of interfaces and
examples with that.

00:34:54.659 --> 00:34:58.020
And so the theory, what the
theory of design tells us

00:34:58.020 --> 00:34:59.880
is that this is universal.

00:34:59.880 --> 00:35:04.260
Any kind of interface falls
into one of these types.

00:35:04.260 --> 00:35:07.680
And in fact, even in
biological systems that's true.

00:35:07.680 --> 00:35:08.419
Yeah?

00:35:08.419 --> 00:35:10.375
AUDIENCE: When we have
a system [INAUDIBLE]??

00:35:15.827 --> 00:35:17.910
OLIVIER DE WECK: I'll show
that to you in the DSM.

00:35:17.910 --> 00:35:19.650
You actually track
them separately,

00:35:19.650 --> 00:35:21.360
but they're within the same--

00:35:21.360 --> 00:35:24.690
it's one big interface, but it
has these different subflows

00:35:24.690 --> 00:35:27.510
within it, which means that--

00:35:27.510 --> 00:35:29.730
it's not just the fact
that there is an interface,

00:35:29.730 --> 00:35:32.470
but the complexity of the
interface is important.

00:35:32.470 --> 00:35:34.560
So the most complex
interfaces obviously

00:35:34.560 --> 00:35:37.410
would be the ones where you
have all four types, right?

00:35:37.410 --> 00:35:41.040
It's a physical connection, and
there's an information flow,

00:35:41.040 --> 00:35:42.900
and there's an energy
flow, and there's

00:35:42.900 --> 00:35:45.330
a mass flow across
the interface.

00:35:45.330 --> 00:35:47.420
Usually, it's only
a subset of those,

00:35:47.420 --> 00:35:51.570
but you can have interfaces
where you have all these four

00:35:51.570 --> 00:35:53.690
present at once.

00:35:53.690 --> 00:35:57.075
Any questions about these
types of interfaces at MIT?

00:36:00.529 --> 00:36:01.570
AUDIENCE: No, we're good.

00:36:01.570 --> 00:36:03.410
Thank you.

00:36:03.410 --> 00:36:04.840
OLIVIER DE WECK: OK.

00:36:04.840 --> 00:36:06.760
In general, can you
hear better now?

00:36:06.760 --> 00:36:09.870
Is it pretty stable over there?

00:36:09.870 --> 00:36:11.388
AUDIENCE: Yeah.

00:36:11.388 --> 00:36:13.000
OLIVIER DE WECK:
Good, all right.

00:36:13.000 --> 00:36:15.430
So let me talk about DSM.

00:36:15.430 --> 00:36:17.480
[INAUDIBLE] was
asking about DSM.

00:36:17.480 --> 00:36:21.880
So DSM is a fairly recent
method, the last couple

00:36:21.880 --> 00:36:25.450
of decades, for really
making a map of your system

00:36:25.450 --> 00:36:28.910
that shows explicitly
these interfaces.

00:36:28.910 --> 00:36:31.370
So here's a very simple example.

00:36:31.370 --> 00:36:33.920
This is a sample system
with five components.

00:36:33.920 --> 00:36:38.110
It has a pump, a controller,
a motor, a valve, a filter.

00:36:38.110 --> 00:36:40.330
And in this case,
we have mass flow

00:36:40.330 --> 00:36:44.560
from the pump through the
valve into the filter.

00:36:44.560 --> 00:36:48.700
And so this block diagram
on the upper left,

00:36:48.700 --> 00:36:52.130
the exact same information
is contained in this matrix.

00:36:52.130 --> 00:36:54.460
So a DSM is always
a square matrix

00:36:54.460 --> 00:36:57.400
where your components are
the rows and columns, equally

00:36:57.400 --> 00:36:59.070
labeled.

00:36:59.070 --> 00:37:01.420
And the diagonals here,
there's no information

00:37:01.420 --> 00:37:03.120
on the diagonals.

00:37:03.120 --> 00:37:07.360
So the component connects
with itself, obviously.

00:37:07.360 --> 00:37:11.800
So you keep the
diagonals sort of blank.

00:37:11.800 --> 00:37:14.980
And then all of those interfaces
and flows we mentioned

00:37:14.980 --> 00:37:17.080
are shown as off-diagonals.

00:37:17.080 --> 00:37:19.840
You have to be a little
careful because there's

00:37:19.840 --> 00:37:23.260
two definitions of DSM depending
on the inflows and then

00:37:23.260 --> 00:37:24.440
the outflows.

00:37:24.440 --> 00:37:27.190
So the definition that we
mainly use in North America

00:37:27.190 --> 00:37:31.880
is where the inflows into
a component are horizontal.

00:37:31.880 --> 00:37:35.860
So the controller sends
information to the valve.

00:37:35.860 --> 00:37:38.980
This is that blue
square right there.

00:37:38.980 --> 00:37:42.100
And you can see that's shown
here on the block diagram.

00:37:42.100 --> 00:37:44.530
But the valve also
sends information back

00:37:44.530 --> 00:37:45.906
to the controller.

00:37:45.906 --> 00:37:47.530
And that information
would probably be,

00:37:47.530 --> 00:37:49.410
valve should open or close.

00:37:49.410 --> 00:37:51.400
And when the valve
is actually opened,

00:37:51.400 --> 00:37:53.920
it would confirm that
back to the controller

00:37:53.920 --> 00:37:58.910
that the status of the
valve is open or closed.

00:37:58.910 --> 00:38:01.150
And then we have
the energy flows.

00:38:01.150 --> 00:38:03.839
The numbers that
are shown here, I

00:38:03.839 --> 00:38:05.380
don't want to get
too much into this,

00:38:05.380 --> 00:38:07.870
but there's a really
cool binary scheme

00:38:07.870 --> 00:38:10.390
for putting a number
that you can then

00:38:10.390 --> 00:38:12.220
have one number in that cell.

00:38:12.220 --> 00:38:16.090
And based on that, you can,
through the binary code,

00:38:16.090 --> 00:38:18.670
reverse engineer what
kind of interface is it.

00:38:18.670 --> 00:38:19.720
Is it just physical?

00:38:19.720 --> 00:38:21.230
Is it just binary?

00:38:21.230 --> 00:38:25.810
It's a kind of trick for
replacing these colors

00:38:25.810 --> 00:38:27.580
and cells with
just a number that

00:38:27.580 --> 00:38:30.550
allows you to then reverse
engineer what kind of interface

00:38:30.550 --> 00:38:32.290
is it.

00:38:32.290 --> 00:38:35.680
So if it's empty, it means
there's no direct connection.

00:38:35.680 --> 00:38:39.050
And then you have mechanical,
mass flows, information,

00:38:39.050 --> 00:38:41.320
and energy flows.

00:38:41.320 --> 00:38:47.390
So let me show you this on
a real example in a minute.

00:38:47.390 --> 00:38:49.870
So this method, design
structure matrix method,

00:38:49.870 --> 00:38:52.240
there's some synonyms for it--

00:38:52.240 --> 00:38:55.270
design dependency
matrix, n-squared matrix,

00:38:55.270 --> 00:38:57.460
n-squared diagram.

00:38:57.460 --> 00:39:01.600
In matrix or graph theory, it's
called an adjacency matrix.

00:39:01.600 --> 00:39:03.950
Don't be fooled;
it's the same thing.

00:39:03.950 --> 00:39:05.770
It's just a square
matrix that shows

00:39:05.770 --> 00:39:07.540
you what connects to what.

00:39:07.540 --> 00:39:12.220
And then the simplest one is
just a binary, 0's and 1's.

00:39:12.220 --> 00:39:15.640
But the richer DSMs, they
contain more information

00:39:15.640 --> 00:39:18.040
about the type of interface.

00:39:18.040 --> 00:39:19.720
So a lot of work
was done originally

00:39:19.720 --> 00:39:21.460
by Don Steward on this.

00:39:21.460 --> 00:39:23.920
This is an original
reference from '81.

00:39:23.920 --> 00:39:27.310
And then at MIT, Professor Steve
Eppinger at the Sloan School

00:39:27.310 --> 00:39:29.980
has done a lot of work on DSMs.

00:39:29.980 --> 00:39:33.160
So fundamentally, it's
a matrix representation

00:39:33.160 --> 00:39:35.320
of your product architecture.

00:39:35.320 --> 00:39:37.270
Most of the literature
you find just

00:39:37.270 --> 00:39:40.100
uses the simplest,
this binary DSM.

00:39:40.100 --> 00:39:42.880
But I'm actually a fan
of adding information

00:39:42.880 --> 00:39:45.190
into the DSM that tells
you about the physics

00:39:45.190 --> 00:39:47.810
of the interface as well.

00:39:47.810 --> 00:39:50.330
So let's look at
an example here.

00:39:50.330 --> 00:39:52.420
Do you remember the
refrigerator case study

00:39:52.420 --> 00:39:54.430
we did a few sessions ago?

00:39:54.430 --> 00:40:00.650
So this is a liaison diagram,
level one decomposition.

00:40:00.650 --> 00:40:04.390
So the refrigerator's been
decomposed into 10 components--

00:40:04.390 --> 00:40:06.610
the door, the
condenser, power supply,

00:40:06.610 --> 00:40:08.620
all the way to the compressor.

00:40:08.620 --> 00:40:11.560
And all we're doing
here is saying

00:40:11.560 --> 00:40:14.650
what is physically
connected to what.

00:40:14.650 --> 00:40:17.380
And the reason it's
called a liaison diagram

00:40:17.380 --> 00:40:20.200
is because it's going to help
you think about the assembly

00:40:20.200 --> 00:40:22.670
sequence of how this
should be put together.

00:40:22.670 --> 00:40:26.870
So another way to think about
this is like the skeleton.

00:40:26.870 --> 00:40:30.590
This is the skeleton
of your system.

00:40:30.590 --> 00:40:34.510
So if you do have a liaison
diagram, shown again--

00:40:34.510 --> 00:40:37.180
this is the same one
on the left here--

00:40:37.180 --> 00:40:40.330
you can just translate
that to a matrix.

00:40:40.330 --> 00:40:45.150
The matrix, this DSM here,
I'm using X's instead of 1's.

00:40:45.150 --> 00:40:49.630
But these two contain
exactly the same information.

00:40:49.630 --> 00:40:53.860
One is a graph view, and
the other is a matrix view,

00:40:53.860 --> 00:40:55.330
but they're identical--

00:40:55.330 --> 00:40:57.220
the same thing, the
same information,

00:40:57.220 --> 00:40:59.740
just presented in
a different way.

00:40:59.740 --> 00:41:02.560
And of course, if you pay
close attention to the matrix,

00:41:02.560 --> 00:41:04.450
you'll see it's
actually symmetric.

00:41:08.240 --> 00:41:11.990
So then we can say, well,
what kinds of interfaces?

00:41:11.990 --> 00:41:14.300
And here come the four
types that we just

00:41:14.300 --> 00:41:17.480
discussed-- the physical
connection, energy flow,

00:41:17.480 --> 00:41:19.950
mass flow, and information flow.

00:41:19.950 --> 00:41:23.740
So if we apply that idea
to the refrigerator,

00:41:23.740 --> 00:41:29.220
here's our 10 by 10
physical connections.

00:41:29.220 --> 00:41:31.580
So we have a design
scripture matrix

00:41:31.580 --> 00:41:33.080
with only the black marks.

00:41:33.080 --> 00:41:34.640
So it's symmetric.

00:41:34.640 --> 00:41:38.450
And this reflects
the liaison diagram.

00:41:38.450 --> 00:41:41.900
And then we can add, on top
of that, the mass flows, which

00:41:41.900 --> 00:41:44.010
are in red.

00:41:44.010 --> 00:41:45.710
So the mass flows,
the way you read

00:41:45.710 --> 00:41:49.040
this is we have a mass
flow from the compressor

00:41:49.040 --> 00:41:54.110
to the condenser, and
then from the condenser

00:41:54.110 --> 00:41:58.940
to the evaporator, and then
from the evaporator back

00:41:58.940 --> 00:42:00.160
to the compressor.

00:42:00.160 --> 00:42:01.550
Do you see that?

00:42:01.550 --> 00:42:05.060
And we could rearrange these
to be closer to each other.

00:42:05.060 --> 00:42:08.290
We could regroup the DSM.

00:42:08.290 --> 00:42:15.500
But essentially, these red marks
represent the refrigerant cycle

00:42:15.500 --> 00:42:19.850
within the refrigerator,
within the machine.

00:42:19.850 --> 00:42:23.990
And so you can check by tracing
these from row to column.

00:42:23.990 --> 00:42:28.370
You can actually check whether
the loop is properly closed.

00:42:28.370 --> 00:42:33.440
So then energy flows, since the
refrigerant loop that I just

00:42:33.440 --> 00:42:37.250
talked to you
about is important,

00:42:37.250 --> 00:42:40.370
you can see that
those connections

00:42:40.370 --> 00:42:45.050
we just talked about always also
carry a energy flow with them.

00:42:45.050 --> 00:42:48.740
And then finally, information
flow is very little.

00:42:48.740 --> 00:42:52.140
So in this case, there's only
one that I've represented,

00:42:52.140 --> 00:42:56.480
which is the flow from the
thermostat to the power supply.

00:42:56.480 --> 00:42:59.540
The thermostat defines the
temperature at which you

00:42:59.540 --> 00:43:01.340
want to hold the refrigerator.

00:43:01.340 --> 00:43:04.580
And if temperature goes
up, the power supply

00:43:04.580 --> 00:43:09.710
kicks in and drives
the compressor.

00:43:09.710 --> 00:43:14.510
And as soon as the temperature
falls below some threshold,

00:43:14.510 --> 00:43:18.230
then it reverses, and
the compressor turns off.

00:43:18.230 --> 00:43:20.300
So when your
refrigerator kicks in,

00:43:20.300 --> 00:43:22.820
that's an information
flow from the thermostat

00:43:22.820 --> 00:43:26.960
to the compressor
to the power supply.

00:43:26.960 --> 00:43:31.520
If you own one of those fancy,
new Samsung refrigerators where

00:43:31.520 --> 00:43:37.460
the door has a flat screen TV
in it and you can push buttons,

00:43:37.460 --> 00:43:38.830
there's a lot more blue here.

00:43:38.830 --> 00:43:40.580
There would be a lot
more blue in a really

00:43:40.580 --> 00:43:43.760
high-end refrigerator
these days.

00:43:43.760 --> 00:43:46.363
OK, any-- yes, please.

00:43:46.363 --> 00:43:51.454
AUDIENCE: [INAUDIBLE]

00:43:51.454 --> 00:43:53.120
OLIVIER DE WECK: Yeah,
so the question--

00:43:53.120 --> 00:43:54.911
I'm just going to repeat
the question-- is,

00:43:54.911 --> 00:43:57.140
can you also map the
external interfaces?

00:43:57.140 --> 00:43:59.690
And the answer is, absolutely.

00:43:59.690 --> 00:44:01.640
So what you have
to do, though, then

00:44:01.640 --> 00:44:05.360
is to kind of draw a
bigger box around this

00:44:05.360 --> 00:44:08.210
and add here the
external elements--

00:44:08.210 --> 00:44:16.090
so the human user, the wall
outlet, the grocery store,

00:44:16.090 --> 00:44:18.620
wherever you're including in
your external world that's

00:44:18.620 --> 00:44:20.030
interfacing with it.

00:44:20.030 --> 00:44:23.180
You would have to represent
at least those elements that

00:44:23.180 --> 00:44:25.520
have a direct connection
with any of it

00:44:25.520 --> 00:44:27.380
across the system boundary.

00:44:27.380 --> 00:44:29.530
You would add them
here, and then show--

00:44:29.530 --> 00:44:32.660
but you would have to then
put a big box around it

00:44:32.660 --> 00:44:35.918
to make it clear what's inside
the system and what's outside.

00:44:35.918 --> 00:44:45.480
AUDIENCE: [INAUDIBLE]

00:44:45.480 --> 00:44:46.815
OLIVIER DE WECK: That's correct.

00:44:46.815 --> 00:44:47.440
That's correct.

00:44:47.440 --> 00:44:50.460
And we can argue-- of
course for the refrigerator,

00:44:50.460 --> 00:44:52.290
the main interface
that you typically

00:44:52.290 --> 00:44:55.590
have-- well, there are two.

00:44:55.590 --> 00:44:57.660
Let's say we go for
what you're saying.

00:44:57.660 --> 00:45:01.620
We're going to add some
external interfaces.

00:45:01.620 --> 00:45:08.610
For a refrigerator, what are
the two or three most important?

00:45:08.610 --> 00:45:12.729
AUDIENCE: [INAUDIBLE]

00:45:12.729 --> 00:45:13.770
OLIVIER DE WECK: Correct.

00:45:13.770 --> 00:45:15.570
So where would that enter here?

00:45:20.500 --> 00:45:31.360
AUDIENCE: [INAUDIBLE]

00:45:31.360 --> 00:45:33.940
OLIVIER DE WECK: The
power supply, right?

00:45:33.940 --> 00:45:38.030
So we would add,
like, wall AC power.

00:45:38.030 --> 00:45:42.850
If we added that, then in this
cell corresponding to that,

00:45:42.850 --> 00:45:45.620
you would have an
inflow of power.

00:45:45.620 --> 00:45:46.120
And then--

00:45:46.120 --> 00:45:50.597
AUDIENCE: [INAUDIBLE]

00:45:50.597 --> 00:45:52.430
OLIVIER DE WECK: So
this is the power supply

00:45:52.430 --> 00:45:55.760
inside of the refrigerator,
inside the system boundary.

00:45:55.760 --> 00:45:59.807
But if you had the wall outlet,
then that would be an external.

00:45:59.807 --> 00:46:01.640
And then you would have
an interface across,

00:46:01.640 --> 00:46:04.280
but into the power supply.

00:46:04.280 --> 00:46:05.060
So that's one.

00:46:05.060 --> 00:46:06.410
What's the other one?

00:46:06.410 --> 00:46:08.600
Do you remember we talked
about the Carnot cycle?

00:46:12.558 --> 00:46:15.346
Well, yes, what do you
have to do with the heat?

00:46:15.346 --> 00:46:16.120
AUDIENCE: Burn?

00:46:16.120 --> 00:46:18.620
OLIVIER DE WECK: Yeah, so the
heat has to be removed, right,

00:46:18.620 --> 00:46:20.180
radiated out.

00:46:20.180 --> 00:46:21.740
And where does that happen?

00:46:21.740 --> 00:46:33.070
Which element here is where
the heat gets removed,

00:46:33.070 --> 00:46:36.034
which one of these 10?

00:46:36.034 --> 00:46:38.964
AUDIENCE: [INAUDIBLE]

00:46:38.964 --> 00:46:40.130
OLIVIER DE WECK: Not really.

00:46:40.130 --> 00:46:42.940
The refrigerant does the
internal heat transfer,

00:46:42.940 --> 00:46:46.810
but the heat transfer to
the outside, to the air.

00:46:46.810 --> 00:46:50.200
Refrigerators don't work
well in vacuum chambers.

00:46:50.200 --> 00:46:52.720
Remember that.

00:46:52.720 --> 00:46:55.370
It would be the evaporator.

00:46:55.370 --> 00:46:57.430
It's at the
evaporator that you're

00:46:57.430 --> 00:46:59.470
radiating the heat
to the surrounding

00:46:59.470 --> 00:47:00.490
air, the environment.

00:47:00.490 --> 00:47:04.330
So you'd have the surrounding
air as an external system,

00:47:04.330 --> 00:47:08.770
and then and energy
transfer from the evaporator

00:47:08.770 --> 00:47:11.060
to the outside.

00:47:11.060 --> 00:47:12.830
But it's a good question.

00:47:12.830 --> 00:47:16.000
So you have to always
define your system boundary.

00:47:16.000 --> 00:47:20.450
So the question then is, when
do you generate these DSMs?

00:47:20.450 --> 00:47:23.900
And fundamentally, there's two
ways, top-down or bottom-up.

00:47:23.900 --> 00:47:27.930
So top-down, you start with
a model of your system.

00:47:27.930 --> 00:47:30.110
And we talked about those
system modeling languages,

00:47:30.110 --> 00:47:34.190
like SysML, or in
this case, OPM.

00:47:34.190 --> 00:47:35.600
And then you hide some things.

00:47:35.600 --> 00:47:37.190
You hide attributes and states.

00:47:37.190 --> 00:47:39.590
You collapse all
your processes into

00:47:39.590 --> 00:47:44.030
these tagged structural links,
and then you generate your DSM.

00:47:44.030 --> 00:47:47.000
And then the other way to do it
is bottom-up where you already

00:47:47.000 --> 00:47:48.950
have a design or a system.

00:47:48.950 --> 00:47:50.270
You decompose it.

00:47:50.270 --> 00:47:52.610
For example, you do
a product dissection.

00:47:52.610 --> 00:47:55.880
You do your bill of
materials or your parts list.

00:47:55.880 --> 00:47:59.660
Then you do your
liaison diagram.

00:47:59.660 --> 00:48:01.850
You show the
physical connections.

00:48:01.850 --> 00:48:03.980
And then on top of those
physical connections,

00:48:03.980 --> 00:48:07.190
you map your mass, energy
and information flows.

00:48:07.190 --> 00:48:11.240
And once you have that, then you
can start manipulating the DSM.

00:48:11.240 --> 00:48:13.040
You can group
components differently.

00:48:13.040 --> 00:48:15.930
You can show modules
and so forth.

00:48:15.930 --> 00:48:18.680
So I want to show you a real
world-- this is not just

00:48:18.680 --> 00:48:21.860
sort of an academic example,
but this is a real-world example

00:48:21.860 --> 00:48:26.590
of a DSM that we built for a
research project with Xerox.

00:48:30.020 --> 00:48:33.440
The machine that's represented
here is in the upper right.

00:48:33.440 --> 00:48:37.760
This is the iGen3
digital printing press.

00:48:37.760 --> 00:48:42.890
And represented here is its
architecture, its interfaces,

00:48:42.890 --> 00:48:45.890
as an 84 by 84 DSM.

00:48:45.890 --> 00:48:50.310
So the machine has been
decomposed into 84, really,

00:48:50.310 --> 00:48:53.910
subsystems, because you have
a lot more than 84 parts.

00:48:53.910 --> 00:48:58.020
But at this level of
abstraction of 84 by 84,

00:48:58.020 --> 00:49:04.470
we have a total of 572 physical
connections, 45 mass flows,

00:49:04.470 --> 00:49:10.399
167 energy flows, and
165 information flows.

00:49:10.399 --> 00:49:11.940
And there's a little
more detail here

00:49:11.940 --> 00:49:13.670
in terms of the types of flows.

00:49:13.670 --> 00:49:18.360
So in red, we have mass
flows-- paper, toner, air,

00:49:18.360 --> 00:49:23.790
ozone and dirt, because you've
got to keep dirt out of the--

00:49:23.790 --> 00:49:26.540
the printing engine is
shown here in the middle.

00:49:26.540 --> 00:49:28.600
Let me just show this.

00:49:28.600 --> 00:49:31.350
So you're probably
scratching your head now.

00:49:31.350 --> 00:49:34.320
Ozone, really?

00:49:34.320 --> 00:49:35.270
Ozone?

00:49:35.270 --> 00:49:38.140
Why do we keep track of ozone?

00:49:38.140 --> 00:49:40.270
What do you think?

00:49:40.270 --> 00:49:43.211
Why do we care about ozone?

00:49:43.211 --> 00:49:46.620
AUDIENCE: [INAUDIBLE]
at ground level.

00:49:46.620 --> 00:49:49.080
OLIVIER DE WECK: It's a
pollutant at ground level.

00:49:49.080 --> 00:49:51.430
And where does the
pollutant come from?

00:49:54.136 --> 00:49:55.490
AUDIENCE: [INAUDIBLE]

00:49:55.490 --> 00:49:58.480
OLIVIER DE WECK: So it's
generated inside the machine.

00:49:58.480 --> 00:50:02.545
The reason is these machines
use very high voltages.

00:50:02.545 --> 00:50:06.130
Xerographic processes
use pretty high voltages.

00:50:06.130 --> 00:50:08.280
So if you apply a
very high voltage,

00:50:08.280 --> 00:50:11.350
you actually generate
ozone through a--

00:50:11.350 --> 00:50:13.200
it's an electrochemical
reaction that

00:50:13.200 --> 00:50:15.670
happens inside the machine.

00:50:15.670 --> 00:50:19.590
Nobody used to care about
this until people working

00:50:19.590 --> 00:50:23.010
in these print shops
started to feel symptoms

00:50:23.010 --> 00:50:24.940
and started to complain.

00:50:24.940 --> 00:50:27.660
So in the US, it's called OSHA.

00:50:27.660 --> 00:50:31.414
That's the Occupation Safety
and Health Administration.

00:50:31.414 --> 00:50:33.330
They came in, and they
took some measurements.

00:50:33.330 --> 00:50:37.420
And wow, the ozone level
is through the roof.

00:50:37.420 --> 00:50:42.870
It's multiple times above
the allowable maximum limit.

00:50:42.870 --> 00:50:44.760
And the reason is
because of this kind

00:50:44.760 --> 00:50:47.080
of xerographic process.

00:50:47.080 --> 00:50:50.800
So now, these machines
have to control the ozone.

00:50:50.800 --> 00:50:56.100
And essentially, this box here,
the printing engine, is sealed.

00:50:56.100 --> 00:50:58.050
It has its own air
conditioning system

00:50:58.050 --> 00:51:00.480
to prevent the ozone
from leaking out.

00:51:00.480 --> 00:51:06.960
It's a great example of how
occupational safety drove

00:51:06.960 --> 00:51:09.090
new requirements
which then increased

00:51:09.090 --> 00:51:10.690
the complexity of the machine.

00:51:10.690 --> 00:51:13.140
So we keep track
of the ozone flows.

00:51:13.140 --> 00:51:16.110
And then in green, we
have the usual suspects--

00:51:16.110 --> 00:51:19.890
high voltage, low voltage, DC,
mechanical energy, and then

00:51:19.890 --> 00:51:20.710
heat energy.

00:51:20.710 --> 00:51:23.700
So there's some coding
that goes on here.

00:51:23.700 --> 00:51:31.510
So in total, we have 1,033
non-empty cells here,

00:51:31.510 --> 00:51:35.280
which is about
3.7%, so about 4%.

00:51:35.280 --> 00:51:39.310
This DSM has a
density of about 4%.

00:51:39.310 --> 00:51:41.210
And that doesn't
sound very high.

00:51:41.210 --> 00:51:46.360
But believe me, this is
a very complex machine.

00:51:46.360 --> 00:51:51.030
This DSM that you see
here is version 31.

00:51:51.030 --> 00:51:55.400
So it took 31 versions
to create this DSM.

00:51:55.400 --> 00:51:58.230
And so why did it
take that long?

00:51:58.230 --> 00:52:03.390
Because this was published
as an official document

00:52:03.390 --> 00:52:06.820
capturing the architecture
of this machine.

00:52:06.820 --> 00:52:10.140
So what that means in practice
is of these 84 components

00:52:10.140 --> 00:52:13.980
or subsystems, every one of
those components or subsystems

00:52:13.980 --> 00:52:17.670
is owned by a different
person or a different team.

00:52:17.670 --> 00:52:25.100
And we went through a process
where all of these 84 teams,

00:52:25.100 --> 00:52:29.780
for their component, had
to sign off and say, yep,

00:52:29.780 --> 00:52:32.270
you've accurately
captured my interfaces.

00:52:32.270 --> 00:52:35.630
My physical, mass, information
and energy interfaces

00:52:35.630 --> 00:52:39.170
have been correctly
captured in this matrix.

00:52:39.170 --> 00:52:44.930
And oh, by the way, the empty
cells have also been certified.

00:52:44.930 --> 00:52:46.940
So if there's an
empty cell here,

00:52:46.940 --> 00:52:49.035
there's no question
whether, well, maybe it's

00:52:49.035 --> 00:52:51.560
just somebody forgot to
put the interface there.

00:52:51.560 --> 00:52:52.760
No.

00:52:52.760 --> 00:52:56.750
The owner of that row
and column certified

00:52:56.750 --> 00:52:59.240
that there is no
direct interface

00:52:59.240 --> 00:53:01.430
between this component
and the other component.

00:53:01.430 --> 00:53:03.640
That's why it took 31 versions.

00:53:03.640 --> 00:53:07.670
But now that you have this
map, you can do a lot of things

00:53:07.670 --> 00:53:08.220
with it.

00:53:08.220 --> 00:53:11.090
You can do
architectural analysis.

00:53:11.090 --> 00:53:13.640
You can benchmark
against other products.

00:53:13.640 --> 00:53:16.160
You can do what we call
technology infusion

00:53:16.160 --> 00:53:17.780
analysis, which was done.

00:53:17.780 --> 00:53:19.370
You can say, well,
what if we add

00:53:19.370 --> 00:53:21.780
this feature in the machine?

00:53:21.780 --> 00:53:26.060
OK, well, where is that
feature going to go?

00:53:26.060 --> 00:53:28.310
What are the interfaces
of that new feature?

00:53:28.310 --> 00:53:29.930
Do we have to
change the software?

00:53:29.930 --> 00:53:33.530
Do we have to
physically integrate it?

00:53:33.530 --> 00:53:36.980
This is a fantastic,
very powerful tool

00:53:36.980 --> 00:53:42.700
for showing the interfaces
and managing them.

00:53:42.700 --> 00:53:47.460
Any questions about
this DSM approach?

00:53:47.460 --> 00:53:51.360
The real way to do this is to
actually build one yourself.

00:53:51.360 --> 00:53:54.600
And you can see it's a lot of
work, but once you have it,

00:53:54.600 --> 00:53:55.835
it's very powerful.

00:53:55.835 --> 00:53:56.543
Yes, [INAUDIBLE]?

00:53:56.543 --> 00:54:04.590
AUDIENCE: [INAUDIBLE]

00:54:04.590 --> 00:54:06.930
OLIVIER DE WECK: So
there's templates,

00:54:06.930 --> 00:54:08.430
like Excel templates.

00:54:08.430 --> 00:54:10.080
But there's also software.

00:54:10.080 --> 00:54:12.120
There's a website
called DSMweb.org.

00:54:14.760 --> 00:54:17.570
And I'm happy to send that
out for you as a resource.

00:54:17.570 --> 00:54:20.360
There's even yearly conferences.

00:54:20.360 --> 00:54:24.250
There are DSM conferences
where people get together

00:54:24.250 --> 00:54:27.930
from academia, from
different companies--

00:54:27.930 --> 00:54:29.830
like BMW, for example.

00:54:29.830 --> 00:54:31.320
I'm a big fan of BMW.

00:54:31.320 --> 00:54:34.920
I think they do a great job.

00:54:34.920 --> 00:54:37.680
Their system engineering
is very, very strong.

00:54:37.680 --> 00:54:39.550
They use this on
all their vehicles,

00:54:39.550 --> 00:54:41.490
on all their subsystems.

00:54:41.490 --> 00:54:44.190
And so this
DSMweb.org, you'll see

00:54:44.190 --> 00:54:48.360
sort of the software that's
available and so forth.

00:54:48.360 --> 00:54:51.130
There's also some commercial
software available.

00:54:51.130 --> 00:54:52.470
So yeah, please, go ahead.

00:54:52.470 --> 00:54:56.634
AUDIENCE: [INAUDIBLE]

00:54:56.634 --> 00:54:58.440
OLIVIER DE WECK: Ah.

00:54:58.440 --> 00:55:01.540
So let's think about this.

00:55:01.540 --> 00:55:05.430
The 7 plus or minus 2, how
does the 7 plus or minus

00:55:05.430 --> 00:55:07.650
2 relate to the 84?

00:55:07.650 --> 00:55:10.290
This is an 84 by 84 DSM.

00:55:10.290 --> 00:55:12.848
So how do the two
relate to each other?

00:55:12.848 --> 00:55:15.032
AUDIENCE: [INAUDIBLE]

00:55:15.032 --> 00:55:15.990
OLIVIER DE WECK: Right.

00:55:15.990 --> 00:55:21.406
But what's the relationship of
that rule with the 84 by 84?

00:55:21.406 --> 00:55:25.110
AUDIENCE: [INAUDIBLE]

00:55:25.110 --> 00:55:27.630
OLIVIER DE WECK: Yeah, so
this machine might have--

00:55:27.630 --> 00:55:29.310
if you really want
every little detail,

00:55:29.310 --> 00:55:33.500
this is probably a
level 4, level 5, right?

00:55:33.500 --> 00:55:36.310
But what's shown here, this
is essentially the equivalent

00:55:36.310 --> 00:55:39.250
of a level two representation.

00:55:39.250 --> 00:55:41.140
So do you remember
7 plus or minus

00:55:41.140 --> 00:55:49.600
2 squared is somewhere between
25 at the low end and 81.

00:55:49.600 --> 00:55:52.200
So we're just
slightly above this.

00:55:52.200 --> 00:55:55.800
So my argument here is this
is essentially a level two

00:55:55.800 --> 00:56:00.860
DSM where you decompose
the system down two levels,

00:56:00.860 --> 00:56:03.530
and then you show the
DSM the interfaces

00:56:03.530 --> 00:56:05.360
at this level of abstraction.

00:56:05.360 --> 00:56:07.170
You could go level
three, but now you're

00:56:07.170 --> 00:56:11.030
going to have a 500
by 500 DSM, which

00:56:11.030 --> 00:56:15.560
is almost impossible for a human
to really understand and get

00:56:15.560 --> 00:56:17.370
any use out of it.

00:56:17.370 --> 00:56:20.480
There's also been some
work in hierarchical DSMs.

00:56:20.480 --> 00:56:26.000
So for example, if you
look at the feeder system--

00:56:26.000 --> 00:56:28.586
you see in the upper left
here that says "feeder"?

00:56:28.586 --> 00:56:30.020
Well, what is the feeder?

00:56:30.020 --> 00:56:34.070
It's all this upfront stuff that
feeds your paper and your media

00:56:34.070 --> 00:56:35.630
into the print engine.

00:56:35.630 --> 00:56:36.830
So you could take--

00:56:36.830 --> 00:56:38.660
this is just two rows here.

00:56:38.660 --> 00:56:42.060
You could take those and break
those into much greater detail.

00:56:42.060 --> 00:56:45.380
So you'd have-- kind of like you
guys did the requirements tree,

00:56:45.380 --> 00:56:46.910
the requirements hierarchy.

00:56:46.910 --> 00:56:49.180
You can have a
hierarchy of DSMs.

00:56:49.180 --> 00:56:51.650
I'm not showing that here,
but that's the relationship.

00:56:51.650 --> 00:56:55.490
This is essentially a level
two decomposition DSM.

00:56:55.490 --> 00:56:57.650
Good question.

00:56:57.650 --> 00:56:59.000
MIT, any questions?

00:57:04.153 --> 00:57:06.820
AUDIENCE: Yeah, I just have
one question about the liaison

00:57:06.820 --> 00:57:08.440
diagram.

00:57:08.440 --> 00:57:09.400
OLIVIER DE WECK: Yeah?

00:57:09.400 --> 00:57:12.070
AUDIENCE: Is there, I guess,
any meaning or information

00:57:12.070 --> 00:57:15.970
that comes from the distances
between-- like when you draw

00:57:15.970 --> 00:57:19.330
it, the way that you draw it?

00:57:19.330 --> 00:57:21.830
OLIVIER DE WECK: No,
there really isn't.

00:57:21.830 --> 00:57:25.900
So the tricky thing is if
it's a very complex system,

00:57:25.900 --> 00:57:29.390
like if we did the liaison
diagram for the 84 by 84--

00:57:29.390 --> 00:57:31.760
let me just go back here--

00:57:31.760 --> 00:57:33.770
it would be pretty messy.

00:57:33.770 --> 00:57:38.160
And so you want to sort of
do the layout of the liaison

00:57:38.160 --> 00:57:41.080
diagram so you minimize the
number of crossing lines,

00:57:41.080 --> 00:57:42.520
for example.

00:57:42.520 --> 00:57:47.470
There's actually some graph
visualization algorithms

00:57:47.470 --> 00:57:52.960
that try to create as clean
as possible of a graph.

00:57:52.960 --> 00:57:53.920
One of those is--

00:57:53.920 --> 00:57:56.920
it's called a spring
energy algorithm.

00:57:56.920 --> 00:58:00.100
It basically treats these links
as though they were springs.

00:58:00.100 --> 00:58:02.400
And then depending on
how far things are,

00:58:02.400 --> 00:58:04.360
there's spring energy.

00:58:04.360 --> 00:58:07.160
And you want to minimize the
total energy of the system.

00:58:07.160 --> 00:58:12.250
And by doing that, usually,
the graph looks pretty clean.

00:58:12.250 --> 00:58:16.240
But there's no inherent
meaning in how you lay it out.

00:58:16.240 --> 00:58:18.620
Does that makes sense, Sam?

00:58:18.620 --> 00:58:20.370
AUDIENCE: Yeah, thank you.

00:58:20.370 --> 00:58:22.296
AUDIENCE: I have
a question too--

00:58:22.296 --> 00:58:23.520
OLIVIER DE WECK: Go ahead.

00:58:23.520 --> 00:58:26.070
AUDIENCE: --about
the liaison diagrams.

00:58:26.070 --> 00:58:28.170
I was doing something
similar, at least where

00:58:28.170 --> 00:58:31.560
I had each block as a
functional aspect of the system.

00:58:31.560 --> 00:58:33.780
It was for an avionics system.

00:58:33.780 --> 00:58:36.390
And I found that I needed
to, like, make power

00:58:36.390 --> 00:58:38.900
a separate thing because
it was more of like a tree.

00:58:38.900 --> 00:58:40.980
We had one power
distribution system.

00:58:40.980 --> 00:58:44.970
But the thing I wanted to bring
up was the information flow.

00:58:44.970 --> 00:58:47.190
Originally I just had
one color for that,

00:58:47.190 --> 00:58:49.250
but I didn't find
that too useful.

00:58:49.250 --> 00:58:51.930
What I plan on doing
is splitting it

00:58:51.930 --> 00:58:54.400
up into command and telemetry.

00:58:54.400 --> 00:59:00.990
So is drawing information just
as one entity typically done?

00:59:00.990 --> 00:59:04.320
Because I think it's more useful
to have command and telemetry,

00:59:04.320 --> 00:59:09.210
or like data and commands.

00:59:09.210 --> 00:59:11.430
OLIVIER DE WECK: So
you know, that's fine.

00:59:11.430 --> 00:59:13.680
And depending on what
you're going to use it for,

00:59:13.680 --> 00:59:16.770
you can redefine the colors.

00:59:16.770 --> 00:59:20.220
There's no global standard
for how to properly do a DSM.

00:59:20.220 --> 00:59:22.020
That's still kind of evolving.

00:59:22.020 --> 00:59:25.080
So if you have different types--

00:59:25.080 --> 00:59:27.420
and you saw in
the Xerox example,

00:59:27.420 --> 00:59:30.750
we used letters as well for the
different types of mass flows--

00:59:30.750 --> 00:59:33.170
P for paper, T for toner.

00:59:33.170 --> 00:59:37.140
So the way you're going to
code it is really up to you.

00:59:37.140 --> 00:59:41.640
There's no global, right
one way to do it yet.

00:59:41.640 --> 00:59:42.730
So that sounds good.

00:59:42.730 --> 00:59:45.852
Actually, you did the
right thing there.

00:59:45.852 --> 00:59:46.810
AUDIENCE: Cool, thanks.

00:59:46.810 --> 00:59:49.478
OLIVIER DE WECK: How
are we doing time-wise?

00:59:49.478 --> 00:59:50.450
AUDIENCE: [INAUDIBLE]

00:59:50.450 --> 00:59:52.670
OLIVIER DE WECK: OK.

00:59:52.670 --> 00:59:54.210
Any other questions?

00:59:54.210 --> 00:59:55.126
Yes?

00:59:55.126 --> 00:59:58.271
AUDIENCE: What kind
of [INAUDIBLE]??

00:59:58.271 --> 01:00:00.020
OLIVIER DE WECK: So
why are we doing this?

01:00:00.020 --> 01:00:01.796
AUDIENCE: Yes, exactly.

01:00:01.796 --> 01:00:03.420
OLIVIER DE WECK:
Well, pretty pictures.

01:00:03.420 --> 01:00:06.890
No, I'm sort of half-joking.

01:00:06.890 --> 01:00:12.110
Part of it is definitely a
graphical, visual, powerful way

01:00:12.110 --> 01:00:15.080
to convey the whole
system architecture.

01:00:15.080 --> 01:00:17.180
If you think about it,
there aren't too many ways

01:00:17.180 --> 01:00:20.390
of actually visualizing
the whole system.

01:00:20.390 --> 01:00:22.220
This is a very abstract view.

01:00:22.220 --> 01:00:26.200
But there's a-- and then
this DSM here at Xerox,

01:00:26.200 --> 01:00:29.856
it printed out as a
huge, wall-sized poster.

01:00:29.856 --> 01:00:30.980
And you put it on the wall.

01:00:30.980 --> 01:00:33.380
And people actually go
up there and say, ah,

01:00:33.380 --> 01:00:34.580
that's my subsystem.

01:00:34.580 --> 01:00:36.660
And then they
argue and so forth.

01:00:36.660 --> 01:00:39.255
So part of it is
definitely a visualization.

01:00:39.255 --> 01:00:40.880
But the other thing
you can do with it,

01:00:40.880 --> 01:00:43.400
particularly if you start
putting the numbers in,

01:00:43.400 --> 01:00:47.280
you can use this for
complexity quantification.

01:00:47.280 --> 01:00:50.420
So you can quantify the
complexity of your system

01:00:50.420 --> 01:00:53.960
and then compare it
against a competing system

01:00:53.960 --> 01:00:55.790
or a prior generation system.

01:00:55.790 --> 01:00:58.339
AUDIENCE: [INAUDIBLE]

01:00:58.339 --> 01:00:59.380
OLIVIER DE WECK: Correct.

01:00:59.380 --> 01:01:01.972
AUDIENCE: You could not
have a macro view on it.

01:01:01.972 --> 01:01:02.930
OLIVIER DE WECK: Right.

01:01:02.930 --> 01:01:05.570
So this is a macro view,
but if you really-- then you

01:01:05.570 --> 01:01:08.300
need to put numbers
for the component

01:01:08.300 --> 01:01:11.580
complexities, the interface
complexities and so forth.

01:01:11.580 --> 01:01:14.030
And there's quite a bit
of research in this.

01:01:14.030 --> 01:01:17.000
So you can then move this
from a purely visual tool

01:01:17.000 --> 01:01:19.160
to becoming an analytic tool.

01:01:19.160 --> 01:01:19.887
Yes?

01:01:19.887 --> 01:01:33.304
AUDIENCE: [INAUDIBLE]

01:01:33.304 --> 01:01:34.220
OLIVIER DE WECK: Yeah.

01:01:34.220 --> 01:01:36.020
And one thing we'll
talk about next

01:01:36.020 --> 01:01:41.360
is interface control documents
as an important-- so in theory,

01:01:41.360 --> 01:01:43.820
in theory, every one
of these interfaces,

01:01:43.820 --> 01:01:48.400
you can have a document
or a digital file

01:01:48.400 --> 01:01:50.450
if you click on this.

01:01:50.450 --> 01:01:53.330
And this is where the tools
are not fully mature yet.

01:01:53.330 --> 01:01:55.670
But you'd like to be
able to click on this,

01:01:55.670 --> 01:01:57.980
and then it links you
to another document.

01:01:57.980 --> 01:01:59.750
And what is that other document?

01:01:59.750 --> 01:02:02.300
It's the ICD, the
Interface Control Document

01:02:02.300 --> 01:02:03.992
that defines that interface.

01:02:03.992 --> 01:02:05.450
And then you have
a lot of details.

01:02:05.450 --> 01:02:09.290
Like if it's an electrical
connector, how many pins,

01:02:09.290 --> 01:02:11.930
what's the function of each pin?

01:02:11.930 --> 01:02:16.220
And that's really where
things become useful, OK?

01:02:16.220 --> 01:02:18.160
All right, let me move on.

01:02:18.160 --> 01:02:19.920
But I did upload for you guys.

01:02:19.920 --> 01:02:26.780
So it's really up to you if you
want to do a DSM at your PDR.

01:02:26.780 --> 01:02:30.480
It would be nice, but
I don't absolutely--

01:02:30.480 --> 01:02:32.900
if you like this, if
you think it's useful,

01:02:32.900 --> 01:02:34.400
try it out for the PDR.

01:02:34.400 --> 01:02:36.950
But it's not a
must-have requirement.

01:02:36.950 --> 01:02:42.200
But in the full-year
SDM class that we teach,

01:02:42.200 --> 01:02:44.010
we're just doing that right now.

01:02:44.010 --> 01:02:46.670
And so you can
use it for reverse

01:02:46.670 --> 01:02:49.260
engineering the architecture
of a software package.

01:02:49.260 --> 01:02:51.290
You like open source software.

01:02:51.290 --> 01:02:53.000
You just download it.

01:02:53.000 --> 01:02:55.310
You generate a DSM,
and you can start

01:02:55.310 --> 01:02:58.130
seeing what are the different
modules in the code, what

01:02:58.130 --> 01:03:00.320
do they do, how do they
talk to each other.

01:03:00.320 --> 01:03:01.825
It's incredibly powerful.

01:03:01.825 --> 01:03:06.740
But what I did do is I
uploaded for you guys--

01:03:06.740 --> 01:03:08.870
I said there's a
top-down, and then there's

01:03:08.870 --> 01:03:11.930
a reverse engineering or
bottom-up way of doing it.

01:03:11.930 --> 01:03:16.000
This is a 17-step
procedure, pretty detailed,

01:03:16.000 --> 01:03:20.120
a document that I uploaded
under the reading section.

01:03:20.120 --> 01:03:23.410
So if you go on the website,
under the reading section,

01:03:23.410 --> 01:03:24.320
you will find--

01:03:24.320 --> 01:03:27.440
this is like a four or five-page
document that says step

01:03:27.440 --> 01:03:29.110
by step how do you do a DSM.

01:03:31.640 --> 01:03:35.000
And again, so at a high level,
then, what you get out of it

01:03:35.000 --> 01:03:36.350
is--

01:03:36.350 --> 01:03:38.300
here, I've sort of
hidden the details

01:03:38.300 --> 01:03:39.530
from what you saw before--

01:03:39.530 --> 01:03:42.320
is the high-level
architecture you can see.

01:03:42.320 --> 01:03:44.540
So in the case of
the Xerox example,

01:03:44.540 --> 01:03:47.480
we have our frontend
system, the feeder system,

01:03:47.480 --> 01:03:48.770
the main marking engine.

01:03:48.770 --> 01:03:51.020
You can see the modules.

01:03:51.020 --> 01:03:53.680
And then you have the
finishing system down here.

01:03:53.680 --> 01:03:59.610
And so many systems and products
have similar architectures.

01:03:59.610 --> 01:04:04.690
OK, any questions
before I move on.

01:04:04.690 --> 01:04:08.950
Let's talk about ICDs,
Interface Control Documents.

01:04:08.950 --> 01:04:12.820
And in the system engineering
engine from the handbook,

01:04:12.820 --> 01:04:14.560
this is right here
in the middle.

01:04:14.560 --> 01:04:17.140
This is the technical
management processes.

01:04:17.140 --> 01:04:20.020
Number 12, interface management.

01:04:20.020 --> 01:04:21.610
It's a huge deal.

01:04:21.610 --> 01:04:24.550
If you don't do it
well, if you don't

01:04:24.550 --> 01:04:26.170
do interface management well--

01:04:26.170 --> 01:04:28.480
and we heard some examples--

01:04:28.480 --> 01:04:30.870
it's really trouble.

01:04:30.870 --> 01:04:34.510
So the purpose is for
controlling your development

01:04:34.510 --> 01:04:35.280
effort.

01:04:35.280 --> 01:04:37.900
It's really important-- I just
highlighted a few words here--

01:04:37.900 --> 01:04:41.050
if you have geographically
diverse technical teams.

01:04:41.050 --> 01:04:44.230
And maintaining
interface definition,

01:04:44.230 --> 01:04:49.430
once you've decomposed your
system, is absolutely critical.

01:04:49.430 --> 01:04:51.820
So let me talk briefly
about the different--

01:04:51.820 --> 01:04:54.400
so this is a little bit
more like traditional system

01:04:54.400 --> 01:04:57.910
engineering where you define
the interface with a document.

01:04:57.910 --> 01:05:00.430
We've said that system
engineering is moving

01:05:00.430 --> 01:05:02.050
to become more model-based.

01:05:02.050 --> 01:05:05.230
We don't want big
piles of paper anymore.

01:05:05.230 --> 01:05:08.860
But the reality is that many
projects and programs still

01:05:08.860 --> 01:05:10.900
have a lot of these documents.

01:05:10.900 --> 01:05:13.150
Ideally, you'd just have
a model, a digital model

01:05:13.150 --> 01:05:14.020
of the interface.

01:05:14.020 --> 01:05:17.170
Then you don't need
a separate document.

01:05:17.170 --> 01:05:20.830
But if you are working with
suppliers or contractors that

01:05:20.830 --> 01:05:24.010
don't have the same modeling
capability as you have,

01:05:24.010 --> 01:05:25.660
these documents are critical.

01:05:25.660 --> 01:05:29.290
So the first one, it's called
IRD, Interface Requirements

01:05:29.290 --> 01:05:30.370
Document.

01:05:30.370 --> 01:05:34.300
And this is-- do you remember
when you did the requirements

01:05:34.300 --> 01:05:36.670
analysis in assignment two?

01:05:36.670 --> 01:05:38.710
This is one of the six
classes of requirements

01:05:38.710 --> 01:05:41.030
is interface requirements.

01:05:41.030 --> 01:05:43.570
So that's the idea, is all
the interface requirements

01:05:43.570 --> 01:05:46.220
are pulled together into an IRD.

01:05:46.220 --> 01:05:48.070
It defines the
functional, performance,

01:05:48.070 --> 01:05:51.820
electrical, environmental,
human, physical requirements

01:05:51.820 --> 01:05:55.480
and constraints that exist at
the common boundary between two

01:05:55.480 --> 01:05:58.060
or more functions
or system elements.

01:05:58.060 --> 01:06:02.350
So you haven't designed the
interface yet, physically,

01:06:02.350 --> 01:06:05.090
but you've defined what the
interface should be able to do,

01:06:05.090 --> 01:06:08.140
its functionality.

01:06:08.140 --> 01:06:10.570
Then we have-- this
is the most common.

01:06:10.570 --> 01:06:12.720
You've probably heard
this acronym before--

01:06:12.720 --> 01:06:16.790
is ICDs, Interface Control
Document or Interface Control

01:06:16.790 --> 01:06:17.890
Drawing.

01:06:17.890 --> 01:06:21.280
And so that is essentially the
specification of the interface.

01:06:21.280 --> 01:06:23.360
What does the
interface look like?

01:06:23.360 --> 01:06:26.740
So if you look at a ICD of
an electrical connector,

01:06:26.740 --> 01:06:30.190
you'll see the pin-out,
you see the voltage levels,

01:06:30.190 --> 01:06:33.640
you'll see the purpose of
each signal for each pin.

01:06:33.640 --> 01:06:35.630
Maybe there's some pins
that are unused that

01:06:35.630 --> 01:06:37.600
are reserved for future use.

01:06:37.600 --> 01:06:39.940
That's also very
clearly defined.

01:06:39.940 --> 01:06:45.160
And the key about the ICD is
it's a two-sided document.

01:06:45.160 --> 01:06:48.010
So there's a subsystem
A and a subsystem B,

01:06:48.010 --> 01:06:49.990
and they share a
common interface.

01:06:49.990 --> 01:06:52.390
And the ICD, the Interface
Control Document,

01:06:52.390 --> 01:06:55.990
will define both sides of
the interface as opposed

01:06:55.990 --> 01:07:01.390
to IDD, Interface
Definition Document,

01:07:01.390 --> 01:07:05.240
which is only a one-sided
or unilateral document.

01:07:05.240 --> 01:07:08.290
So for example, let's
say your company makes

01:07:08.290 --> 01:07:13.920
a very fancy camera or sensor
to be used on a spacecraft,

01:07:13.920 --> 01:07:17.020
but you don't know who is
going to use that camera,

01:07:17.020 --> 01:07:18.370
how are they going to use it.

01:07:18.370 --> 01:07:21.490
So what you're
defining is essentially

01:07:21.490 --> 01:07:23.320
your side of the interface--

01:07:23.320 --> 01:07:25.630
physical, functional.

01:07:25.630 --> 01:07:31.480
And then it's up to whoever
your customer is to take the IDD

01:07:31.480 --> 01:07:33.730
and turn it into an ICD.

01:07:33.730 --> 01:07:37.300
But the IDD is only
one-sided, unilateral.

01:07:37.300 --> 01:07:40.570
And the ICD is bilateral,
interface definition.

01:07:40.570 --> 01:07:42.370
Does that make sense?

01:07:42.370 --> 01:07:43.780
OK.

01:07:43.780 --> 01:07:47.080
So here's-- again, this
is from the handbook,

01:07:47.080 --> 01:07:49.690
the system
engineering handbook--

01:07:49.690 --> 01:07:50.980
interface management.

01:07:50.980 --> 01:07:52.570
On the input side,
you start with

01:07:52.570 --> 01:07:55.150
your interface
requirements, any changes

01:07:55.150 --> 01:07:57.790
to the interface that come
up during the lifecycle

01:07:57.790 --> 01:07:59.050
of the project.

01:07:59.050 --> 01:08:02.080
You go through the steps and
out come your interface control

01:08:02.080 --> 01:08:06.370
documents, any requirements
changes, and then interface

01:08:06.370 --> 01:08:08.080
management work
products, which might

01:08:08.080 --> 01:08:10.310
be other supporting documents.

01:08:10.310 --> 01:08:14.020
For example, a user manual
or an operator manual

01:08:14.020 --> 01:08:17.979
that will actually tell you how
to properly use the interface

01:08:17.979 --> 01:08:22.149
would be an example of
a supporting document.

01:08:22.149 --> 01:08:25.470
OK, any questions
about that before we

01:08:25.470 --> 01:08:28.800
get to system integration?

01:08:28.800 --> 01:08:31.399
So who's actually
read an ICD or had

01:08:31.399 --> 01:08:34.680
an actual ICD in their hands?

01:08:34.680 --> 01:08:36.440
You have, yeah?

01:08:36.440 --> 01:08:39.000
[INAUDIBLE],, I'm sure
you've had that many times.

01:08:39.000 --> 01:08:41.316
Can you tell us what it was?

01:08:41.316 --> 01:08:43.361
AUDIENCE: [INAUDIBLE]

01:08:43.361 --> 01:08:45.069
OLIVIER DE WECK: Let
me give you the mic.

01:08:45.069 --> 01:08:49.560
So-- [INAUDIBLE]

01:08:49.560 --> 01:08:53.460
AUDIENCE: So we were
working on a project

01:08:53.460 --> 01:08:58.770
where a Chinese asked us to
contribute a camera payload

01:08:58.770 --> 01:09:00.689
for their satellites.

01:09:00.689 --> 01:09:08.760
And so we had to define all the
electrical and data interfaces.

01:09:08.760 --> 01:09:11.279
I was in charge of
the data interfaces.

01:09:11.279 --> 01:09:18.120
And there were design documents
saying how will the interaction

01:09:18.120 --> 01:09:19.380
work between the two systems.

01:09:23.051 --> 01:09:23.550
Let's see.

01:09:23.550 --> 01:09:26.069
Because [INAUDIBLE]
protocol, I had

01:09:26.069 --> 01:09:32.460
to tell the satellites what to
do if the camera fails and how

01:09:32.460 --> 01:09:35.010
should the camera
fail if there is

01:09:35.010 --> 01:09:39.702
a problem on the computer,
so all the failure cases

01:09:39.702 --> 01:09:40.660
and this kind of thing.

01:09:40.660 --> 01:09:44.380
OLIVIER DE WECK: So it
sounds like [INAUDIBLE]..

01:09:44.380 --> 01:09:46.860
AUDIENCE: Yeah, it's an ICD.

01:09:46.860 --> 01:09:48.210
OLIVIER DE WECK: Good.

01:09:48.210 --> 01:09:50.853
And was it used then, or--

01:09:50.853 --> 01:09:54.830
AUDIENCE: [INAUDIBLE]

01:09:54.830 --> 01:09:56.500
OLIVIER DE WECK:
Great, excellent.

01:09:56.500 --> 01:10:02.320
Any examples of an ICD or
IDD or IRD on the MIT side?

01:10:02.320 --> 01:10:04.051
Anybody have
experience with this?

01:10:11.049 --> 01:10:11.590
AUDIENCE: No.

01:10:14.350 --> 01:10:16.610
OLIVIER DE WECK: Was
that you, your honor?

01:10:16.610 --> 01:10:19.850
AUDIENCE: Yes, I personally
have experience with ICDs,

01:10:19.850 --> 01:10:21.839
but no one in the room does.

01:10:21.839 --> 01:10:24.380
OLIVIER DE WECK: OK, well, why
don't you tell us about yours?

01:10:24.380 --> 01:10:27.482
Because I know you worked on
this gravity gradient sensor.

01:10:27.482 --> 01:10:28.440
AUDIENCE: Yes, exactly.

01:10:28.440 --> 01:10:30.065
OLIVIER DE WECK: So
maybe that example.

01:10:30.065 --> 01:10:31.800
Yeah, why don't you
tell us about that?

01:10:31.800 --> 01:10:33.850
AUDIENCE: So each
system had its own ICD.

01:10:33.850 --> 01:10:37.340
And that was primarily
because the rest of the team

01:10:37.340 --> 01:10:39.410
needed to understand
the inputs and outputs

01:10:39.410 --> 01:10:41.837
and how the specific
system works.

01:10:41.837 --> 01:10:43.670
So it not only works
for system integration.

01:10:43.670 --> 01:10:46.190
It just works for
the team as a whole

01:10:46.190 --> 01:10:47.750
in its understanding
of the project

01:10:47.750 --> 01:10:49.095
and the particular systems.

01:10:51.730 --> 01:10:53.410
OLIVIER DE WECK: OK, good.

01:10:53.410 --> 01:10:57.820
All right, so this is a really,
really big deal in practice.

01:10:57.820 --> 01:11:01.350
If you do something that's--

01:11:01.350 --> 01:11:03.790
so for example, if
you make a design,

01:11:03.790 --> 01:11:06.085
you modify the interface
because you think, ah,

01:11:06.085 --> 01:11:06.910
it's better for me.

01:11:06.910 --> 01:11:09.710
I'm going to change this.

01:11:09.710 --> 01:11:11.830
And it's different from the ICD.

01:11:11.830 --> 01:11:14.410
And then there's a
failure in your system.

01:11:14.410 --> 01:11:17.110
And then you say you're going
to blame the supplier and say,

01:11:17.110 --> 01:11:18.760
your box failed.

01:11:18.760 --> 01:11:21.730
My mission got screwed
up because of your box.

01:11:21.730 --> 01:11:24.640
And then it turns
out, ah, you actually

01:11:24.640 --> 01:11:30.430
implemented an interface that's
in conflict with the ICD.

01:11:30.430 --> 01:11:35.410
The supplier will step back
and say, that's not my problem.

01:11:35.410 --> 01:11:37.780
You didn't follow the
interface definition,

01:11:37.780 --> 01:11:40.810
and just changing one
pin or one polarity

01:11:40.810 --> 01:11:43.330
can lead to a system failure.

01:11:43.330 --> 01:11:46.120
So really, you have to
pay a lot of attention

01:11:46.120 --> 01:11:48.170
to the details here.

01:11:48.170 --> 01:11:50.780
OK, let's talk about
system integration.

01:11:50.780 --> 01:11:51.950
So what is it?

01:11:51.950 --> 01:11:54.850
It's essentially the
process of deliberately--

01:11:54.850 --> 01:11:56.920
so let's say you've
designed your system.

01:11:56.920 --> 01:11:59.430
The interfaces are clear.

01:11:59.430 --> 01:12:01.860
When you physically put
together your system,

01:12:01.860 --> 01:12:04.979
you have to
integrate the system.

01:12:04.979 --> 01:12:06.270
So that means different things.

01:12:06.270 --> 01:12:08.730
Physical assembly
of the parts, that's

01:12:08.730 --> 01:12:11.790
the liaison diagram,
what fits into what.

01:12:11.790 --> 01:12:14.310
And we'll talk about
sequencing in a minute.

01:12:14.310 --> 01:12:18.510
You need to connect your
different conduits and hoses.

01:12:18.510 --> 01:12:21.180
You need to fill in
various consumables--

01:12:21.180 --> 01:12:24.900
fuel, lubricants.

01:12:24.900 --> 01:12:27.870
An example in space
flight would be

01:12:27.870 --> 01:12:31.140
if you're going to
use a cryocooler,

01:12:31.140 --> 01:12:33.540
you might have to use
some gases or liquids

01:12:33.540 --> 01:12:36.570
for the cyrocooler
that are consumables,

01:12:36.570 --> 01:12:38.100
finite consumables.

01:12:38.100 --> 01:12:41.100
Connecting all your electronics
to the power sources,

01:12:41.100 --> 01:12:42.480
the avionics.

01:12:42.480 --> 01:12:45.060
Wire harnesses are
still used a lot.

01:12:45.060 --> 01:12:47.430
We would love to get rid
of wire harnesses, right?

01:12:47.430 --> 01:12:48.040
They're heavy.

01:12:48.040 --> 01:12:48.831
They're cumbersome.

01:12:48.831 --> 01:12:50.570
They're expensive.

01:12:50.570 --> 01:12:54.900
And we've been trying to replace
wire harnesses with wireless,

01:12:54.900 --> 01:12:57.630
but it's really hard to
make it work reliably.

01:12:57.630 --> 01:13:01.000
So we still use wire
harnesses quite a bit.

01:13:01.000 --> 01:13:02.730
And then you need
to upload and test

01:13:02.730 --> 01:13:07.690
your operational software
that sits inside your system.

01:13:07.690 --> 01:13:10.950
So that's a lot of work, and it
has to be done very carefully.

01:13:10.950 --> 01:13:13.590
A lot of this is
done in facilities

01:13:13.590 --> 01:13:16.140
that are very
clean, clean rooms,

01:13:16.140 --> 01:13:19.000
because you really need
to do every step properly.

01:13:19.000 --> 01:13:20.650
You need to document every step.

01:13:20.650 --> 01:13:21.735
There's quality control.

01:13:24.250 --> 01:13:28.080
And that's why it's
expensive and slow.

01:13:28.080 --> 01:13:30.240
So the next point
here is the sequence

01:13:30.240 --> 01:13:32.910
in which the integration
occurs may be important.

01:13:32.910 --> 01:13:34.470
And I want to--

01:13:34.470 --> 01:13:37.410
so the reading, the post-reading
associated with this lecture,

01:13:37.410 --> 01:13:43.440
is a paper by Ben-Asher, who's a
professor at Technion in Israel

01:13:43.440 --> 01:13:46.380
who I think has done some of
the best work, theoretical work,

01:13:46.380 --> 01:13:48.270
on system integration.

01:13:48.270 --> 01:13:52.080
And unfortunately, in complex
systems, a lot of problems

01:13:52.080 --> 01:13:53.220
are errors.

01:13:53.220 --> 01:13:56.220
We often discover them during
system integration and testing.

01:13:56.220 --> 01:14:00.180
So that's also a key point here.

01:14:00.180 --> 01:14:02.320
OK, so let me--

01:14:02.320 --> 01:14:05.387
I hope you have a chance to
read this Ben-Asher paper,

01:14:05.387 --> 01:14:06.720
because it's pretty interesting.

01:14:06.720 --> 01:14:10.780
But I'll give you sort of the
summary here on one slide.

01:14:10.780 --> 01:14:13.800
So what they looked
at was, does it

01:14:13.800 --> 01:14:17.610
matter whether you do a
single-stage integration,

01:14:17.610 --> 01:14:19.620
everything at once,
or you do what's

01:14:19.620 --> 01:14:21.930
called incremental integration?

01:14:21.930 --> 01:14:23.820
So the idea of
incremental integration

01:14:23.820 --> 01:14:27.630
is you just integrate two
components or subsystems

01:14:27.630 --> 01:14:29.550
in isolation at a time.

01:14:29.550 --> 01:14:33.840
You check them, and then you
gradually integrate as opposed

01:14:33.840 --> 01:14:35.640
to doing it all at once.

01:14:35.640 --> 01:14:40.830
And the example in the paper is
UAV, Unmanned Aerial Vehicle.

01:14:40.830 --> 01:14:44.130
And there's not a lot
of detail, but there's

01:14:44.130 --> 01:14:46.650
four major subsystems--
the engine,

01:14:46.650 --> 01:14:50.430
the flight control system,
the optronic payload,

01:14:50.430 --> 01:14:53.010
and then the payload
control system.

01:14:53.010 --> 01:14:58.250
And so in one case, you would
do a single-stage integration.

01:14:58.250 --> 01:15:00.930
So here's your four
subsystems, and you just

01:15:00.930 --> 01:15:02.871
integrate them all at once.

01:15:02.871 --> 01:15:04.620
And that's shown here
in this upper graph.

01:15:04.620 --> 01:15:08.920
So this is not the
graph of components.

01:15:08.920 --> 01:15:11.820
This is the graph of
integration steps.

01:15:11.820 --> 01:15:13.770
And then you have
to put the system,

01:15:13.770 --> 01:15:16.770
once it's integrated, these
step seven, eight, nine,

01:15:16.770 --> 01:15:18.420
through different tests.

01:15:18.420 --> 01:15:20.910
And then the idea
is that the amount

01:15:20.910 --> 01:15:24.450
of time that it takes to do
each of these integration steps

01:15:24.450 --> 01:15:26.190
is somewhat stochastic.

01:15:26.190 --> 01:15:28.890
It's not a deterministic number.

01:15:28.890 --> 01:15:31.140
And so this upper
graph here that

01:15:31.140 --> 01:15:37.410
looks kind of like a ski jump,
this is time, number of days,

01:15:37.410 --> 01:15:40.320
versus the probability.

01:15:40.320 --> 01:15:44.310
So what you see here is
that it's right-skewed--

01:15:44.310 --> 01:15:47.190
or left-skewed, depending
on how you define it.

01:15:47.190 --> 01:15:50.280
But the peak here
is to the right.

01:15:50.280 --> 01:15:55.410
And so the idea is that if
everything goes super smoothly,

01:15:55.410 --> 01:15:57.720
actually, single-stage
integration

01:15:57.720 --> 01:15:59.430
could work very well.

01:15:59.430 --> 01:16:02.760
But the likelihood of that
happening is not high.

01:16:02.760 --> 01:16:04.950
And if you think about
it, if you do all at once,

01:16:04.950 --> 01:16:07.290
single-stage integration,
troubleshooting

01:16:07.290 --> 01:16:09.760
becomes more complex as well.

01:16:09.760 --> 01:16:14.700
And so that's why this curve is
actually shifted to the right.

01:16:14.700 --> 01:16:17.290
Incremental integration,
in this case,

01:16:17.290 --> 01:16:21.540
you're just integrating two
and two, two and two, and then

01:16:21.540 --> 01:16:24.461
you integrate your
pre-integrated subsystems

01:16:24.461 --> 01:16:24.960
together.

01:16:24.960 --> 01:16:28.170
So it looks more gradual.

01:16:28.170 --> 01:16:29.610
And then here is--

01:16:29.610 --> 01:16:31.890
again, using their model.

01:16:31.890 --> 01:16:34.680
They have made certain
assumptions about this--

01:16:34.680 --> 01:16:39.310
you get a somewhat broader
distribution of outcomes.

01:16:39.310 --> 01:16:42.930
But the mean, the expected
amount of time for integration,

01:16:42.930 --> 01:16:45.570
is actually less.

01:16:45.570 --> 01:16:48.540
So you have a faster
integration time

01:16:48.540 --> 01:16:52.090
on average with
incremental approach.

01:16:52.090 --> 01:16:57.540
But in the worst case, you
may be a little bit longer

01:16:57.540 --> 01:16:58.970
than the single-stage
integration.

01:16:58.970 --> 01:17:02.460
But what really matters
is, what's the average?

01:17:02.460 --> 01:17:05.690
So the conclusion in the
paper is that the integration

01:17:05.690 --> 01:17:09.230
sequence is important, that
the integration sequence can

01:17:09.230 --> 01:17:12.140
be optimized, that
there's advantages

01:17:12.140 --> 01:17:14.940
of doing incremental
integration,

01:17:14.940 --> 01:17:17.850
primarily from a
risk perspective.

01:17:17.850 --> 01:17:23.900
So again, Octanus 1
project, maybe you guys

01:17:23.900 --> 01:17:25.580
haven't thought about
this too much yet.

01:17:25.580 --> 01:17:27.390
Maybe you have.

01:17:27.390 --> 01:17:31.130
But when you do
your final vehicle,

01:17:31.130 --> 01:17:34.250
the sequence in which everything
gets integrated and tested

01:17:34.250 --> 01:17:35.970
is important.

01:17:35.970 --> 01:17:37.550
That's really what this says.

01:17:37.550 --> 01:17:43.690
And an incremental approach
can be very helpful.

01:17:43.690 --> 01:17:45.530
The more components
you have, the more

01:17:45.530 --> 01:17:47.790
the combinatorial
space of integration

01:17:47.790 --> 01:17:49.720
sequences gets
bigger and bigger.

01:17:49.720 --> 01:17:53.730
So you have to do this at
some level of abstraction.

01:17:53.730 --> 01:17:54.860
Is that clear?

01:17:54.860 --> 01:18:03.434
AUDIENCE: [INAUDIBLE]

01:18:03.434 --> 01:18:04.350
OLIVIER DE WECK: Yeah.

01:18:04.350 --> 01:18:05.766
And so the way you
describe-- this

01:18:05.766 --> 01:18:07.290
is driven by your supply chain.

01:18:07.290 --> 01:18:09.000
When are things
becoming available?

01:18:09.000 --> 01:18:13.110
But you have to be
careful because it could

01:18:13.110 --> 01:18:15.460
be sort of risk-driven as well.

01:18:15.460 --> 01:18:18.540
So OK, good.

01:18:18.540 --> 01:18:20.520
Any questions at MIT?

01:18:20.520 --> 01:18:21.770
Any comments about this?

01:18:26.980 --> 01:18:28.675
AUDIENCE: I have a question.

01:18:28.675 --> 01:18:29.550
OLIVIER DE WECK: Yup.

01:18:29.550 --> 01:18:30.925
AUDIENCE: So I
guess the takeaway

01:18:30.925 --> 01:18:34.740
is that incremental integration
is usually preferred

01:18:34.740 --> 01:18:39.150
for most things, on average?

01:18:39.150 --> 01:18:40.650
OLIVIER DE WECK:
Yeah, I'm not sure.

01:18:40.650 --> 01:18:43.140
Read the paper.

01:18:43.140 --> 01:18:46.950
I think the conclusion
is that for new systems

01:18:46.950 --> 01:18:49.100
that you've never
integrated before,

01:18:49.100 --> 01:18:55.050
where your level of knowledge
and the TRL levels-- or you've

01:18:55.050 --> 01:18:58.380
never done this before, first
of a kind of integration,

01:18:58.380 --> 01:19:01.530
that incremental is better
because if there's a problem,

01:19:01.530 --> 01:19:04.230
then troubleshooting is easier.

01:19:04.230 --> 01:19:07.540
Now, if you're integrating
a very well known system--

01:19:07.540 --> 01:19:12.510
so it's sort of the 10th system,
but you've sort of figured out

01:19:12.510 --> 01:19:14.700
where the bugs are--

01:19:14.700 --> 01:19:18.410
so the risk level, the
uncertainty is low.

01:19:18.410 --> 01:19:21.030
Maybe then, single-stage
integration is OK.

01:19:21.030 --> 01:19:25.000
So it really depends on
the novelty and risk.

01:19:25.000 --> 01:19:27.250
So I don't think the
conclusion of the paper

01:19:27.250 --> 01:19:31.960
is single-stage
integration is bad, always.

01:19:31.960 --> 01:19:36.550
I think it's that you
should think carefully

01:19:36.550 --> 01:19:39.510
about the sequencing, and it's
driven by the amount of risk.

01:19:42.520 --> 01:19:44.480
AUDIENCE: OK, thanks.

01:19:44.480 --> 01:19:48.040
OLIVIER DE WECK:
All right, good.

01:19:48.040 --> 01:19:50.090
So we're almost at the end here.

01:19:50.090 --> 01:19:52.580
I want to ask you
a quick question.

01:19:52.580 --> 01:19:55.340
This is our concept
question for today.

01:19:55.340 --> 01:19:58.850
And this is about
interface standards.

01:19:58.850 --> 01:20:04.170
So over time in
different industries,

01:20:04.170 --> 01:20:06.350
rather than
reinventing the wheel

01:20:06.350 --> 01:20:09.350
and coming up with custom
interfaces for every project

01:20:09.350 --> 01:20:11.930
you do, you say,
do the interface

01:20:11.930 --> 01:20:15.090
according to this
standard or that standard.

01:20:15.090 --> 01:20:17.720
So I'm just curious to
know from you guys--

01:20:17.720 --> 01:20:21.380
and I asked this question
last week from another class

01:20:21.380 --> 01:20:22.460
I teach at MIT.

01:20:22.460 --> 01:20:26.810
So please answer this, and then
I'm going to show your answers

01:20:26.810 --> 01:20:29.900
and the answers of the
other class combined.

01:20:29.900 --> 01:20:34.270
So the interface
definitions here are 802.11,

01:20:34.270 --> 01:20:42.230
[? MIL-STD-1553, ?]
RS-232, BB_aJ23100.

01:20:42.230 --> 01:20:45.290
And then if you know of any
other interface standards

01:20:45.290 --> 01:20:47.690
that you think are
important, just click Other.

01:20:47.690 --> 01:20:49.100
This is a multi--

01:20:49.100 --> 01:20:51.440
there's not just one
right answer here.

01:20:51.440 --> 01:20:55.510
This is a
multi-checkbox question.

01:20:55.510 --> 01:21:00.890
All right, so here's
the responses.

01:21:00.890 --> 01:21:04.250
So 56%-- so this
is your results,

01:21:04.250 --> 01:21:08.420
and then my class from last
week, kind of mixed together.

01:21:08.420 --> 01:21:11.750
So 56% know the 802.11.

01:21:11.750 --> 01:21:12.770
So what is--

01:21:12.770 --> 01:21:17.510
I thought it might be more
than 56%, but what is 802.11?

01:21:17.510 --> 01:21:18.390
AUDIENCE: Wi-Fi.

01:21:18.390 --> 01:21:20.389
OLIVIER DE WECK: It's the
Wi-Fi standard, right?

01:21:20.389 --> 01:21:23.630
And now, G I think is
the latest, I think.

01:21:23.630 --> 01:21:26.830
It's sort of ABC, 802.11 ABC.

01:21:26.830 --> 01:21:30.850
So it's kind of
evolving standard--

01:21:30.850 --> 01:21:33.030
very important, obviously.

01:21:33.030 --> 01:21:39.940
[? MIL-STD-1553, ?] 24%
know about that one.

01:21:39.940 --> 01:21:44.770
Anybody here, any [INAUDIBLE],,
[? MIL-STD-1553? ?] So

01:21:44.770 --> 01:21:47.270
you've done rural
engineering, I can tell.

01:21:47.270 --> 01:21:49.310
So what is the 1553?

01:21:49.310 --> 01:21:50.720
AUDIENCE: It's [INAUDIBLE].

01:21:56.046 --> 01:21:57.420
OLIVIER DE WECK:
Yes, it's a DoD.

01:21:57.420 --> 01:21:59.700
So that's what's a
military standard.

01:21:59.700 --> 01:22:02.250
It's essentially a data bus.

01:22:02.250 --> 01:22:07.590
So for example, on military
planes, on many satellites,

01:22:07.590 --> 01:22:10.290
it's essentially the
architecture of the avionics.

01:22:10.290 --> 01:22:11.790
It's a bus architecture.

01:22:11.790 --> 01:22:15.990
So you typically have like
a mission computer that's

01:22:15.990 --> 01:22:19.335
the brain, and then it
directs how the messages

01:22:19.335 --> 01:22:21.660
are sent from the different--

01:22:21.660 --> 01:22:25.440
like the flight control
system or the payload.

01:22:25.440 --> 01:22:28.890
It's kind of an old standard,
but it's a very robust standard

01:22:28.890 --> 01:22:31.290
for avionics architectures.

01:22:33.950 --> 01:22:35.580
OK, at MIT, RS-232?

01:22:38.180 --> 01:22:40.110
This is also kind of
an older standard.

01:22:40.110 --> 01:22:41.460
Anybody chose that?

01:22:46.160 --> 01:22:46.910
AUDIENCE: It's a--

01:22:46.910 --> 01:22:48.360
OLIVIER DE WECK: Did anybody--

01:22:48.360 --> 01:22:49.200
go ahead.

01:22:49.200 --> 01:22:52.820
AUDIENCE: --communication
protocol for electronics.

01:22:52.820 --> 01:22:55.760
OLIVIER DE WECK: Right, but
it's a very specific one.

01:22:55.760 --> 01:22:57.950
There's a keyword
I'm looking for.

01:22:57.950 --> 01:22:59.519
AUDIENCE: Serial.

01:22:59.519 --> 01:23:00.810
OLIVIER DE WECK: Serial, right.

01:23:00.810 --> 01:23:02.720
It's a serial
interface, as opposed

01:23:02.720 --> 01:23:04.340
to a parallel interface.

01:23:04.340 --> 01:23:08.030
So it's a serial interface.

01:23:08.030 --> 01:23:09.920
And still, it's kind
of old-fashioned,

01:23:09.920 --> 01:23:11.800
but it's still used.

01:23:11.800 --> 01:23:17.360
All right, now comes BB_aJ23100.

01:23:17.360 --> 01:23:22.940
And nobody, out of
119, knew what that is.

01:23:22.940 --> 01:23:25.730
So-- and this is kind
of a trick question--

01:23:25.730 --> 01:23:29.760
this is a BioBricks interface.

01:23:29.760 --> 01:23:33.870
So are you familiar
with synthetic biology?

01:23:33.870 --> 01:23:36.320
So synthetic biology,
the basic idea

01:23:36.320 --> 01:23:41.390
is that you can do what we do
here for biological systems.

01:23:41.390 --> 01:23:45.900
So there's libraries of
parts, standard library

01:23:45.900 --> 01:23:50.060
of biological parts,
like different proteins,

01:23:50.060 --> 01:23:53.580
that you can actually
assemble organisms.

01:23:53.580 --> 01:23:55.325
There's an annual competition.

01:23:55.325 --> 01:23:57.800
It's been going on for
almost a decade now.

01:23:57.800 --> 01:23:59.210
It's kind of scary, actually.

01:23:59.210 --> 01:24:03.650
But so far, nothing really
bad has happened, I guess.

01:24:03.650 --> 01:24:08.930
But the idea is that in
biology, it's going this way.

01:24:08.930 --> 01:24:11.990
So you can look this up.

01:24:11.990 --> 01:24:14.930
You can google for this
particular reference,

01:24:14.930 --> 01:24:19.280
and it'll guide you to
essentially a protein

01:24:19.280 --> 01:24:20.060
interface.

01:24:20.060 --> 01:24:23.900
It's essentially a molecular,
biological interface.

01:24:23.900 --> 01:24:30.800
So the prediction here is that
10, 20, 30 years from now,

01:24:30.800 --> 01:24:33.240
people will know what this is.

01:24:33.240 --> 01:24:36.710
And there will be a very
internationally recognized set

01:24:36.710 --> 01:24:43.100
of biological interfaces that
people actually use and know.

01:24:43.100 --> 01:24:45.950
And then anybody
chose Other here?

01:24:48.470 --> 01:24:49.510
Anybody choose other?

01:24:49.510 --> 01:24:50.450
Yeah, you did?

01:24:53.086 --> 01:24:56.690
AUDIENCE: Like
standard USB and HDMI?

01:24:56.690 --> 01:24:58.900
OLIVIER DE WECK: And USB
has evolved as well, right?

01:24:58.900 --> 01:25:01.480
We had USB 1.0,
and then USB 2.0.

01:25:01.480 --> 01:25:03.600
Isn't that the latest still?

01:25:03.600 --> 01:25:04.712
AUDIENCE: USB-C.

01:25:04.712 --> 01:25:05.670
OLIVIER DE WECK: C, OK.

01:25:05.670 --> 01:25:08.060
AUDIENCE: It's reversible.

01:25:08.060 --> 01:25:10.070
OLIVIER DE WECK:
Yeah, so standards

01:25:10.070 --> 01:25:11.917
evolve as well, right,
as the technology

01:25:11.917 --> 01:25:13.250
behind the standards-- you know.

01:25:13.250 --> 01:25:15.740
So this is a huge
deal in practice.

01:25:15.740 --> 01:25:20.768
Anybody at MIT chose
Other, other examples?

01:25:20.768 --> 01:25:23.120
AUDIENCE: Yeah, I chose Other.

01:25:23.120 --> 01:25:28.880
Things that come to mind
are like SPI and I2C,

01:25:28.880 --> 01:25:32.330
more like serial electronic
communication protocols

01:25:32.330 --> 01:25:35.580
that are useful for
talking to chips.

01:25:35.580 --> 01:25:38.660
OLIVIER DE WECK: OK, good.

01:25:38.660 --> 01:25:41.750
So those are sort of
inside the IC world, right?

01:25:46.970 --> 01:25:48.980
OK, excellent.

01:25:48.980 --> 01:25:52.400
So all right, well,
we are actually

01:25:52.400 --> 01:25:54.390
at the end of today's lecture.

01:25:54.390 --> 01:25:57.320
So I just want to
summarize the key points.

01:25:57.320 --> 01:25:59.880
Why is interface
management important?

01:25:59.880 --> 01:26:03.650
There are many reasons, but I
think the two top reasons are--

01:26:03.650 --> 01:26:07.320
think of interfaces as a
potential Achilles heel.

01:26:07.320 --> 01:26:10.490
They're potentially
seeds for failures.

01:26:10.490 --> 01:26:12.170
We saw bottlenecks.

01:26:12.170 --> 01:26:14.150
We saw structural failures.

01:26:14.150 --> 01:26:17.360
We saw the wrong
kind of information

01:26:17.360 --> 01:26:19.730
being passed through software.

01:26:19.730 --> 01:26:22.560
And so be careful.

01:26:22.560 --> 01:26:26.240
And if there's nobody in
charge in your project

01:26:26.240 --> 01:26:30.150
to really look after the
interfaces, that's a problem.

01:26:30.150 --> 01:26:34.890
So you want to really
think about this

01:26:34.890 --> 01:26:38.760
because almost any project
today, you're decomposing it,

01:26:38.760 --> 01:26:41.640
and you're not doing
everything in-house yourself.

01:26:41.640 --> 01:26:43.320
You're going to
deal with suppliers.

01:26:43.320 --> 01:26:45.210
You're going to
deal with partners.

01:26:45.210 --> 01:26:49.200
So of course you have an
organizational, contractual

01:26:49.200 --> 01:26:52.650
interface with them, but there's
a physical interface as well.

01:26:52.650 --> 01:26:55.530
The longer you wait to
define that interface

01:26:55.530 --> 01:26:59.190
with your partners and
suppliers, the fuzzier it is,

01:26:59.190 --> 01:27:01.350
the more problems you will have.

01:27:01.350 --> 01:27:04.800
So critical to really
define the interface,

01:27:04.800 --> 01:27:10.200
and then stick with the
interface very sharply.

01:27:10.200 --> 01:27:13.570
Interface management has
different aspects to it.

01:27:13.570 --> 01:27:15.510
So first of all,
types of interfaces,

01:27:15.510 --> 01:27:18.090
there are many, many
dozens or hundreds

01:27:18.090 --> 01:27:21.000
of types of interfaces, but
they can all be boiled down

01:27:21.000 --> 01:27:23.190
to the four canonical types--

01:27:23.190 --> 01:27:27.660
physical connection, mass,
energy, and information flows.

01:27:27.660 --> 01:27:31.500
I've introduced you to the DSM,
the Design Structure Matrix

01:27:31.500 --> 01:27:32.790
method.

01:27:32.790 --> 01:27:37.110
And that's where you basically
decompose your system,

01:27:37.110 --> 01:27:40.380
and you show it as
an n by n matrix.

01:27:40.380 --> 01:27:42.600
And then you put
all the interfaces

01:27:42.600 --> 01:27:45.690
into that matrix
that you know about,

01:27:45.690 --> 01:27:48.840
not just the interfaces
that you want to have,

01:27:48.840 --> 01:27:51.070
but the interfaces that
are actually there.

01:27:51.070 --> 01:27:56.580
So if there's noise,
or vibration, or EMI,

01:27:56.580 --> 01:28:00.660
Electromagnetic
Interference, or waste heat,

01:28:00.660 --> 01:28:02.760
those are also
important because you're

01:28:02.760 --> 01:28:06.720
going to have to deal
with them in some way.

01:28:06.720 --> 01:28:09.030
Finally, ICDs.

01:28:09.030 --> 01:28:12.480
So ICDS-- and we said there's
IRDs, Interface Requirements

01:28:12.480 --> 01:28:16.580
Documents, which are the
requirements for the interface;

01:28:16.580 --> 01:28:20.440
IDDs, one-sided; and then
ICDs are the most important.

01:28:20.440 --> 01:28:22.980
It's the two-sided
interface definition.

01:28:22.980 --> 01:28:27.570
That's the NASA approach,
but [? ISA ?] uses that.

01:28:27.570 --> 01:28:30.540
Many, many industries now
use these interface control

01:28:30.540 --> 01:28:31.890
documents.

01:28:31.890 --> 01:28:34.710
Ideally, in the long-term,
we want to get rid of them.

01:28:34.710 --> 01:28:36.780
We don't want documents
in system engineering.

01:28:36.780 --> 01:28:39.390
We just want to have
models that we share.

01:28:39.390 --> 01:28:43.010
But it's still moving
in that direction.

01:28:43.010 --> 01:28:45.600
OK, and then finally,
the point about system

01:28:45.600 --> 01:28:48.690
integration-- do not
just do it randomly.

01:28:48.690 --> 01:28:52.740
Think about, how will you
assemble the system physically?

01:28:52.740 --> 01:28:55.320
How are you going to connect
all your electronics,

01:28:55.320 --> 01:28:57.000
the consumables?

01:28:57.000 --> 01:28:59.460
How will you load your software?

01:28:59.460 --> 01:29:00.600
How will you test it?

01:29:00.600 --> 01:29:03.300
We'll talk about testing,
verification and validation

01:29:03.300 --> 01:29:07.050
next week, but the way
in which you integrate,

01:29:07.050 --> 01:29:10.750
the sequence of integration
could be very important.

01:29:10.750 --> 01:29:12.810
And it's a pretty
active area of research,

01:29:12.810 --> 01:29:14.760
so in sort of system
engineering research,

01:29:14.760 --> 01:29:20.040
is really understanding and
modeling system integration

01:29:20.040 --> 01:29:22.470
as something you can optimize.

01:29:22.470 --> 01:29:24.750
And then the last point
was industry standards.

01:29:24.750 --> 01:29:27.180
Really understand what
are the key standards

01:29:27.180 --> 01:29:30.460
in your industry, what are
the key interface standards.

01:29:30.460 --> 01:29:33.600
And if you're going
to deviate, if you're

01:29:33.600 --> 01:29:37.410
going to choose something else
than an industry standard,

01:29:37.410 --> 01:29:39.330
you better know why
you're doing it.

01:29:39.330 --> 01:29:42.450
Because the minute you
decide not to use an industry

01:29:42.450 --> 01:29:45.750
standard, you've probably
just inflated the cost

01:29:45.750 --> 01:29:49.170
by a factor of 10 because
now there's no longer

01:29:49.170 --> 01:29:51.780
any off-the-shelf components.

01:29:51.780 --> 01:29:53.800
You have to basically
do everything yourself,

01:29:53.800 --> 01:29:58.700
but it's possible that there's
good reasons for doing that.