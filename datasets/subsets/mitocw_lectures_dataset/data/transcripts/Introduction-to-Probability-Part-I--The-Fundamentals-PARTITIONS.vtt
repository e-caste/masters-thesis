WEBVTT

00:00:00.780 --> 00:00:04.520
We now come to our last major
class of counting problems.

00:00:04.520 --> 00:00:07.170
We will count the number of ways
that a given set can be

00:00:07.170 --> 00:00:10.760
partitioned into pieces
of given sizes.

00:00:10.760 --> 00:00:13.770
We start with a set
that consists

00:00:13.770 --> 00:00:17.540
of n different elements.

00:00:17.540 --> 00:00:20.300
And we have r persons.

00:00:20.300 --> 00:00:28.960
We want to give n1 items to
the first person, give n2

00:00:28.960 --> 00:00:34.780
items to the second
person, and so on.

00:00:34.780 --> 00:00:38.310
And finally, we want
to give n-sub-r

00:00:38.310 --> 00:00:42.230
items to the rth person.

00:00:42.230 --> 00:00:47.510
These numbers, n1, n2, up to nr
are given to us, how many

00:00:47.510 --> 00:00:49.920
items each person should get.

00:00:49.920 --> 00:00:56.140
And these numbers must add to
n so that every item in the

00:00:56.140 --> 00:00:59.380
original set is given
to some person.

00:00:59.380 --> 00:01:04.629
We want to count to the number
of ways that this can be done.

00:01:04.629 --> 00:01:08.150
This is the number of ways that
we can partition a given

00:01:08.150 --> 00:01:12.650
set into subsets of
prescribed sizes.

00:01:12.650 --> 00:01:15.160
Let's use c to denote
the number of

00:01:15.160 --> 00:01:16.910
ways this can be done.

00:01:16.910 --> 00:01:19.620
We want to calculate
this number c.

00:01:19.620 --> 00:01:22.730
Instead of calculating directly,
we're going to use

00:01:22.730 --> 00:01:26.400
the same trick that we employed
when we counted

00:01:26.400 --> 00:01:30.170
combinations and derived the
binomial coefficient.

00:01:30.170 --> 00:01:33.229
That is, we're going to
consider, in a much simpler

00:01:33.229 --> 00:01:37.840
counting problem, the problem
of ordering n items, taking

00:01:37.840 --> 00:01:42.289
the n items in our original
set and putting them in an

00:01:42.289 --> 00:01:44.380
ordered list.

00:01:44.380 --> 00:01:48.560
Of course, we know in how many
ways this can be done.

00:01:48.560 --> 00:01:54.170
Ordering n items can be done
in n factorial ways.

00:01:54.170 --> 00:01:55.590
This is the count
of the number of

00:01:55.590 --> 00:01:57.960
permutations of n items.

00:01:57.960 --> 00:02:00.990
But now let us think of a
different way of ordering the

00:02:00.990 --> 00:02:03.150
n items, an indirect way.

00:02:03.150 --> 00:02:06.250
It proceeds according to
the following stages.

00:02:06.250 --> 00:02:08.340
We start with the n items.

00:02:08.340 --> 00:02:14.410
And we first distribute them
to the different persons.

00:02:14.410 --> 00:02:19.993
Having done that, then we ask
person one to take their

00:02:19.993 --> 00:02:25.079
items, order them, and put
them in the first n1

00:02:25.079 --> 00:02:28.390
slots of our list.

00:02:28.390 --> 00:02:33.950
Then person two takes their
items and puts them into the

00:02:33.950 --> 00:02:37.430
next n2 slots in our list.

00:02:37.430 --> 00:02:38.920
We continue this way.

00:02:38.920 --> 00:02:41.970
And finally, the last person
takes the items that they

00:02:41.970 --> 00:02:45.890
possess and puts them
in the last n-sub-r

00:02:45.890 --> 00:02:48.685
slots in this list.

00:02:51.810 --> 00:02:56.050
In how many ways can this
process be carried out?

00:02:56.050 --> 00:03:01.060
We have c choices on how
to partition the

00:03:01.060 --> 00:03:04.200
given set into subsets.

00:03:04.200 --> 00:03:12.170
Then person one has n1 factorial
choices on how to

00:03:12.170 --> 00:03:16.570
order the n1 items that
that person processes.

00:03:16.570 --> 00:03:21.140
Person two has n2 factorial
choices for how to order the

00:03:21.140 --> 00:03:25.410
n2 items that it possesses,
and so on until the last

00:03:25.410 --> 00:03:30.200
person, who has nr factorial
choices for

00:03:30.200 --> 00:03:33.230
ordering their elements.

00:03:33.230 --> 00:03:37.680
This multi-stage process results
in an ordered list of

00:03:37.680 --> 00:03:39.860
the n terms.

00:03:39.860 --> 00:03:42.780
This is the number of ways these
multi-stage process can

00:03:42.780 --> 00:03:44.770
be carried out.

00:03:44.770 --> 00:03:48.250
On the other hand, we know that
the number of possible

00:03:48.250 --> 00:03:51.520
orderings of the items
is n factorial.

00:03:51.520 --> 00:03:55.130
So we have this equality.

00:03:55.130 --> 00:03:57.820
We can solve this for c.

00:03:57.820 --> 00:04:02.600
And we find the answer, that the
number of ways that the n

00:04:02.600 --> 00:04:07.090
items can be partitioned into
subsets of the given sizes is

00:04:07.090 --> 00:04:11.170
n factorial divided by the
product of the factorials of

00:04:11.170 --> 00:04:13.710
the different ni's.

00:04:13.710 --> 00:04:17.399
This particular expression
is called the multinomial

00:04:17.399 --> 00:04:20.920
coefficient, and it generalizes
the binomial

00:04:20.920 --> 00:04:21.970
coefficient.

00:04:21.970 --> 00:04:26.690
The binomial coefficient was
referring to the case where we

00:04:26.690 --> 00:04:34.870
essentially split our set into
one subset with k elements,

00:04:34.870 --> 00:04:40.850
and then the second subset gets
the remaining elements.

00:04:40.850 --> 00:04:47.600
So the special case where r is
equal to 2, and n1 is equal to

00:04:47.600 --> 00:04:51.940
k, n2 equals to n minus k,
this corresponds to a

00:04:51.940 --> 00:04:56.210
partition of a set into two
subsets, or what is the same

00:04:56.210 --> 00:05:00.910
just selecting the first subset
and putting everything

00:05:00.910 --> 00:05:03.260
else in the second subset.

00:05:03.260 --> 00:05:07.490
And you can check that in this
particular case, the

00:05:07.490 --> 00:05:10.480
expression for the multinomial
coefficient agrees with the

00:05:10.480 --> 00:05:13.500
expression that we had derived
for the binomial coefficient.