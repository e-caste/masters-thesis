WEBVTT

00:00:00.090 --> 00:00:02.490
The following content is
provided under a Creative

00:00:02.490 --> 00:00:04.030
Commons license.

00:00:04.030 --> 00:00:06.330
Your support will help
MIT OpenCourseWare

00:00:06.330 --> 00:00:10.690
continue to offer high-quality
educational resources for free.

00:00:10.690 --> 00:00:13.320
To make a donation or
view additional materials

00:00:13.320 --> 00:00:17.270
from hundreds of MIT courses,
visit MIT OpenCourseWare

00:00:17.270 --> 00:00:18.200
at ocw.mit.edu.

00:00:32.603 --> 00:00:33.460
HERBERT GROSS: Hi.

00:00:33.460 --> 00:00:35.170
In our last two
lectures, we've been

00:00:35.170 --> 00:00:37.540
talking quite
theoretically about what

00:00:37.540 --> 00:00:41.260
we mean by spanning vectors,
dimension, vector spaces.

00:00:41.260 --> 00:00:45.310
Today, what we'd like to do is
add some computational know-how

00:00:45.310 --> 00:00:47.320
to our bag of knowledge.

00:00:47.320 --> 00:00:51.370
And let me say at the outset by
way of a reinforcement of what

00:00:51.370 --> 00:00:53.170
we've already said
in the study guide,

00:00:53.170 --> 00:00:55.720
much of the material
in this block

00:00:55.720 --> 00:00:58.720
is very difficult if
you're not used to it.

00:00:58.720 --> 00:01:00.340
And we have already
reminded you,

00:01:00.340 --> 00:01:03.490
but let's do it again,
watch the lectures,

00:01:03.490 --> 00:01:05.980
get as much out of
them as you can,

00:01:05.980 --> 00:01:09.130
do the exercises, which
hopefully will cement down

00:01:09.130 --> 00:01:11.320
many aspects of the lecture.

00:01:11.320 --> 00:01:14.260
And then if certain things
still aren't crystal clear,

00:01:14.260 --> 00:01:16.560
watch the lecture a second time.

00:01:16.560 --> 00:01:19.000
Hopefully, you may not even
have to watch the lecture

00:01:19.000 --> 00:01:21.550
the second time,
but try not to read

00:01:21.550 --> 00:01:22.970
too much into the lectures.

00:01:22.970 --> 00:01:25.210
This is material, which
I think that once you

00:01:25.210 --> 00:01:29.530
get the first insight, you must
then really work hard and do

00:01:29.530 --> 00:01:30.730
a lot of exercises.

00:01:30.730 --> 00:01:34.300
But at any rate, let's go into
today's lesson, which I call,

00:01:34.300 --> 00:01:36.490
Constructing Bases.

00:01:36.490 --> 00:01:39.160
And by way of review,
let's see what theory

00:01:39.160 --> 00:01:41.740
we've had going
into today's lesson.

00:01:41.740 --> 00:01:44.740
First of all, given
a vector space, v,

00:01:44.740 --> 00:01:49.120
with certain elements, alpha
1 up to alpha n, the set of n

00:01:49.120 --> 00:01:53.400
elements, alpha 1 up to alpha
n, is called a basis for v,

00:01:53.400 --> 00:01:55.460
provided two things happen.

00:01:55.460 --> 00:01:59.530
First, the alphas must span
v. And secondly, the alphas

00:01:59.530 --> 00:02:03.010
must be linearly independent.

00:02:03.010 --> 00:02:05.230
And, again, if this
gives you any trouble,

00:02:05.230 --> 00:02:08.080
think in terms of the
naive example of the plane

00:02:08.080 --> 00:02:09.759
or three-dimensional space.

00:02:09.759 --> 00:02:11.770
For example, in
three-dimensional space,

00:02:11.770 --> 00:02:15.580
i, j, and k span
three-dimensional space.

00:02:15.580 --> 00:02:19.690
And they also happen to
be linearly independent.

00:02:19.690 --> 00:02:22.090
At any rate, what
we then proved was,

00:02:22.090 --> 00:02:25.960
that if alpha 1 up to
alpha n is a basis for v--

00:02:25.960 --> 00:02:27.820
and don't be blinded
by the alphas, now.

00:02:27.820 --> 00:02:29.560
What we're really
saying here is,

00:02:29.560 --> 00:02:34.120
that if you have found a basis
for v, which has n elements,

00:02:34.120 --> 00:02:36.570
then the following
things must be true.

00:02:36.570 --> 00:02:39.490
One, any set of more
than n elements,

00:02:39.490 --> 00:02:42.110
for example, any n
plus 1 elements of v,

00:02:42.110 --> 00:02:43.720
are linearly dependent.

00:02:43.720 --> 00:02:46.750
Again, in terms of
three-dimensional space, what

00:02:46.750 --> 00:02:50.200
we're saying is, if you
have four or more vectors

00:02:50.200 --> 00:02:54.430
in three space, those vectors
may or may not span v.

00:02:54.430 --> 00:02:56.380
But the thing that we're
sure of is that they

00:02:56.380 --> 00:02:58.570
must be linearly dependent.

00:02:58.570 --> 00:03:01.750
You can't have more than three
linearly-independent vectors

00:03:01.750 --> 00:03:04.060
in three-dimensional space.

00:03:04.060 --> 00:03:09.820
Secondly, fewer than n
elements cannot span v. Again,

00:03:09.820 --> 00:03:12.640
in terms of our
three-dimensional example,

00:03:12.640 --> 00:03:16.570
no two vectors in three space,
no two vectors in three space,

00:03:16.570 --> 00:03:18.760
can span three space.

00:03:18.760 --> 00:03:22.150
In other words, then, a
basis has two properties.

00:03:22.150 --> 00:03:27.920
If you have too many vectors,
you cannot have linear

00:03:27.920 --> 00:03:30.290
independence, and
if you have too few,

00:03:30.290 --> 00:03:32.340
you can't span the space.

00:03:32.340 --> 00:03:35.810
So what is it, then,
that a basis must have?

00:03:35.810 --> 00:03:38.960
If one basis has n
elements, every basis

00:03:38.960 --> 00:03:40.370
must have n elements.

00:03:40.370 --> 00:03:42.410
Again, by way of review, why?

00:03:42.410 --> 00:03:45.830
More than n couldn't be
linearly independent.

00:03:45.830 --> 00:03:49.340
Fewer than n could
not span the space.

00:03:49.340 --> 00:03:52.400
So every basis for
v has n elements

00:03:52.400 --> 00:03:56.300
once we know that one
basis has n elements.

00:03:56.300 --> 00:04:01.160
Now, this, of course, does not
mean that any set of n elements

00:04:01.160 --> 00:04:05.540
will be a basis, again, in terms
of three-dimensional space.

00:04:05.540 --> 00:04:07.970
Suppose, for example, that
I take the following three

00:04:07.970 --> 00:04:10.200
vectors of
three-dimensional space.

00:04:10.200 --> 00:04:14.810
Oh, heck, let's say
i, j, and i plus j.

00:04:14.810 --> 00:04:17.510
Those are three vectors,
i, j, and i plus j,

00:04:17.510 --> 00:04:20.339
but they only span
two-dimensional space.

00:04:20.339 --> 00:04:22.190
The trouble with
i, j, and i plus j

00:04:22.190 --> 00:04:24.440
is that they were
linearly dependent.

00:04:24.440 --> 00:04:27.470
You see, all we know is
that every basis for v

00:04:27.470 --> 00:04:28.580
has n elements.

00:04:28.580 --> 00:04:31.010
It does not mean that
every set of n elements

00:04:31.010 --> 00:04:33.470
will be a basis for
v. However, what

00:04:33.470 --> 00:04:35.750
is true is, that
if we have a set

00:04:35.750 --> 00:04:39.125
of n linearly-independent
elements, or else

00:04:39.125 --> 00:04:42.770
a set of n elements
which span v, then

00:04:42.770 --> 00:04:46.490
if either of those two
criteria are obeyed,

00:04:46.490 --> 00:04:49.640
then the set of n elements
will be a basis for v. Again,

00:04:49.640 --> 00:04:51.650
in three-dimensional
space, if you have

00:04:51.650 --> 00:04:54.650
three linearly-independent
vectors in three space,

00:04:54.650 --> 00:04:55.950
they will be a basis.

00:04:55.950 --> 00:04:58.110
They will automatically
span the space.

00:04:58.110 --> 00:05:01.040
And if you have
three vectors which

00:05:01.040 --> 00:05:03.080
span the space in
three space, they

00:05:03.080 --> 00:05:05.980
must be linearly independent.

00:05:05.980 --> 00:05:06.980
That's all we're saying.

00:05:06.980 --> 00:05:10.910
In other words, to say that
the dimensions of v equals n

00:05:10.910 --> 00:05:12.080
is unambiguous.

00:05:12.080 --> 00:05:15.740
In other words, if we define
the dimension of a space

00:05:15.740 --> 00:05:20.090
to be the number of
elements in any basis,

00:05:20.090 --> 00:05:24.100
then what we're saying is
that that is unambiguous.

00:05:24.100 --> 00:05:27.040
That once one basis
has n elements,

00:05:27.040 --> 00:05:30.940
all bases will have n elements.

00:05:30.940 --> 00:05:33.580
And now, with respect
to a particular basis,

00:05:33.580 --> 00:05:34.750
what we're saying this.

00:05:34.750 --> 00:05:37.420
Suppose we know the
dimensions of v is n,

00:05:37.420 --> 00:05:40.030
and we have a
particular basis for v,

00:05:40.030 --> 00:05:43.870
say, u1 up to un, a particular
basis that we single out,

00:05:43.870 --> 00:05:48.610
then with respect to that basis,
each vector, v, in the vector

00:05:48.610 --> 00:05:51.850
space, v, has a
unique representation

00:05:51.850 --> 00:05:54.380
as a linear
combination of the us.

00:05:54.380 --> 00:05:57.930
In other words, if the
us are a basis for v,

00:05:57.930 --> 00:06:01.180
a particular vector
in v can be written

00:06:01.180 --> 00:06:06.550
in one and only one way, as a
linear combination of the us.

00:06:06.550 --> 00:06:10.030
Which means, you see,
that relative to the us,

00:06:10.030 --> 00:06:15.870
v may be written unambiguously
as the n-tuple c1 up to cn,

00:06:15.870 --> 00:06:19.190
where that's an abbreviation
for c1, u1, plus, et

00:06:19.190 --> 00:06:21.430
cetera, c1, un.

00:06:21.430 --> 00:06:26.110
And in this case, we also
write that v is equal to--

00:06:26.110 --> 00:06:28.120
and to indicate
that we're talking

00:06:28.120 --> 00:06:31.150
about the n-dimensional
space, v, with respect

00:06:31.150 --> 00:06:33.910
to a particular
basis, u1 up to un,

00:06:33.910 --> 00:06:37.750
we simply enclose the
set of basis vectors

00:06:37.750 --> 00:06:39.130
in square brackets.

00:06:39.130 --> 00:06:41.350
In other words, this
expression is read,

00:06:41.350 --> 00:06:45.310
v is being viewed as the
n-dimensional space that

00:06:45.310 --> 00:06:48.280
has u1 up to un as its basis.

00:06:48.280 --> 00:06:51.820
And unless otherwise
specified, every time we

00:06:51.820 --> 00:06:55.030
write an n-tuple in
v, it's understood

00:06:55.030 --> 00:06:58.030
that that n-tuple
is being abbreviated

00:06:58.030 --> 00:07:01.770
relative to the
basis u1 up to un.

00:07:01.770 --> 00:07:04.090
And I think, again, the
best way to illustrate

00:07:04.090 --> 00:07:06.490
this is by means of an example.

00:07:06.490 --> 00:07:09.310
And, in fact, the
remainder of today's lesson

00:07:09.310 --> 00:07:13.930
will be one example wherein
we will take one problem

00:07:13.930 --> 00:07:16.840
and try to look at it from as
many different points of view

00:07:16.840 --> 00:07:20.230
as possible so that we get a
broad spectrum as to what's

00:07:20.230 --> 00:07:24.040
involved in constructing
bases, looking at n-tuples,

00:07:24.040 --> 00:07:27.520
and how the n-tuple depends
on the basis, et cetera.

00:07:27.520 --> 00:07:30.518
So the example I have in
mind is the following.

00:07:30.518 --> 00:07:31.310
Let's suppose that.

00:07:31.310 --> 00:07:35.090
All I know is that I have a
four-dimensional vector space.

00:07:35.090 --> 00:07:36.700
What does that mean again?

00:07:36.700 --> 00:07:39.700
It means if the
dimensions is four,

00:07:39.700 --> 00:07:42.190
that any basis
has four elements.

00:07:42.190 --> 00:07:44.740
Let me now pick a
particular basis, which

00:07:44.740 --> 00:07:48.040
I will call u1, u2, u3 and u4.

00:07:48.040 --> 00:07:49.690
And then notice
that notation now.

00:07:49.690 --> 00:07:53.290
I'm saying that v is the vector
space, which has u1, u2, u3,

00:07:53.290 --> 00:07:55.330
and u4 as a basis.

00:07:55.330 --> 00:07:57.520
What that means
is, if I now elect

00:07:57.520 --> 00:08:00.220
to use the 4-tuple
notation for v,

00:08:00.220 --> 00:08:02.840
that unless anything is
said to the contrary,

00:08:02.840 --> 00:08:07.060
it means that that 4-tuple is
relative to the vectors u1, u2,

00:08:07.060 --> 00:08:08.750
u3, and u4.

00:08:08.750 --> 00:08:11.860
For example, let's suppose
I was to say to you,

00:08:11.860 --> 00:08:16.290
describe the subspace
of v spanned by the four

00:08:16.290 --> 00:08:20.800
vectors alpha 1, alpha 2, alpha
3, alpha 4, where alpha 1 is

00:08:20.800 --> 00:08:25.840
the 4-tuple 1, 1, 2, 3, alpha
2 is the 4-tuple 2, 3, 4,

00:08:25.840 --> 00:08:30.640
5, alpha 3 is the 4-tuple
3, 7, 6, 5, and alpha 4

00:08:30.640 --> 00:08:34.294
is the 4-tuple 4, 5, 9, 9.

00:08:34.294 --> 00:08:35.919
Notice that what I'm
really saying here

00:08:35.919 --> 00:08:44.560
is that alpha 1 is 1u1 plus
1u2 plus 2u3 plus 3u4, alpha 2

00:08:44.560 --> 00:08:50.080
is 2u1 plus 3u2
plus 4u3 plus 5u4.

00:08:50.080 --> 00:08:52.150
In essence, what I'm
saying then is what?

00:08:52.150 --> 00:08:55.000
Once I've specified
a particular basis,

00:08:55.000 --> 00:08:59.140
every 4-tuple notation is
relative to that basis.

00:08:59.140 --> 00:09:02.950
And by the way, what do I mean
by being vague over here when I

00:09:02.950 --> 00:09:05.140
say, describe the space?

00:09:05.140 --> 00:09:09.370
What I mean is, for example,
is the subspace all of v?

00:09:09.370 --> 00:09:13.120
In other words, we know that
the dimension of v is four.

00:09:13.120 --> 00:09:14.650
I have four vectors.

00:09:14.650 --> 00:09:17.590
If those four vectors
are linearly independent,

00:09:17.590 --> 00:09:21.400
they will span all of v. I guess
an equivalent question would

00:09:21.400 --> 00:09:25.570
be, therefore, are the
alphas linearly independent?

00:09:25.570 --> 00:09:27.010
I can make this even more vague.

00:09:27.010 --> 00:09:31.385
I can say, if w doesn't
equal v, what does w equal?

00:09:31.385 --> 00:09:35.770
In other words, what subspace is
spanned by the vectors alpha 1,

00:09:35.770 --> 00:09:38.630
alpha 2, alpha 3, and alpha 4?

00:09:38.630 --> 00:09:41.020
Now, what I'd like to do
is to introduce to you

00:09:41.020 --> 00:09:44.580
at this time a rather nice
computational technique.

00:09:44.580 --> 00:09:46.850
It's nice for two reasons.

00:09:46.850 --> 00:09:49.990
The first reason is that it
gets the job done very nicely,

00:09:49.990 --> 00:09:52.210
which is perhaps the
best reason of all.

00:09:52.210 --> 00:09:54.670
The second reason,
which is also very nice,

00:09:54.670 --> 00:09:57.670
is the fact that we've already
had the technique before.

00:09:57.670 --> 00:10:01.720
Keep in mind the following
property of spanning vectors.

00:10:01.720 --> 00:10:05.500
If we have a set of vectors and
we talk about the space spanned

00:10:05.500 --> 00:10:08.680
by those vectors, notice
from our previous homework

00:10:08.680 --> 00:10:12.100
exercises that we have
shown, that if you replace

00:10:12.100 --> 00:10:15.370
any member of that
spanning set by itself

00:10:15.370 --> 00:10:19.130
plus a multiple of any other
member of the spanning set,

00:10:19.130 --> 00:10:23.280
you do not change the space
spanned by those vectors.

00:10:23.280 --> 00:10:25.290
Oh, again, by means
of an example--

00:10:25.290 --> 00:10:27.360
because as I say,
this sounds very

00:10:27.360 --> 00:10:29.490
difficult from an
abstract point of view--

00:10:29.490 --> 00:10:32.640
but if you use three-dimensional
space as an analogy,

00:10:32.640 --> 00:10:34.290
as a reference
point, I think you'll

00:10:34.290 --> 00:10:36.330
see more clearly what
these things mean.

00:10:36.330 --> 00:10:39.420
For example, i, j,
and k are a basis

00:10:39.420 --> 00:10:42.300
for three-dimensional space.

00:10:42.300 --> 00:10:45.030
i, j, and k span
three-dimensional space.

00:10:45.030 --> 00:10:50.700
Suppose I replace i, or for the
sake of argument, by i plus 3j.

00:10:50.700 --> 00:10:52.110
Look at the three vectors--

00:10:52.110 --> 00:10:55.950
i plus 3j, j, and k.

00:10:55.950 --> 00:10:58.400
Those three vectors
span the same space

00:10:58.400 --> 00:11:01.500
as i, j, and k, namely, all
of three-dimensional space.

00:11:01.500 --> 00:11:06.180
In other words, i plus 3j and
j are non-parallel vectors

00:11:06.180 --> 00:11:07.620
in the x, y plane.

00:11:07.620 --> 00:11:10.740
Consequently, they spend
the entire x, y plane.

00:11:10.740 --> 00:11:14.250
And then with the k vector,
all of three space is spanned.

00:11:14.250 --> 00:11:19.260
So the idea is, that if ever
we replace a vector by itself

00:11:19.260 --> 00:11:23.460
plus a multiple of any other
factor in the spanning space,

00:11:23.460 --> 00:11:26.370
we do not change the space
spanned by the vectors.

00:11:26.370 --> 00:11:30.180
And my claim is that this
suggests the row reduced

00:11:30.180 --> 00:11:31.680
matrix technique.

00:11:31.680 --> 00:11:33.060
Now, why is that?

00:11:33.060 --> 00:11:35.730
Well, the best way
to see this is let's

00:11:35.730 --> 00:11:40.660
write, as a coding system,
the alphas as a matrix.

00:11:40.660 --> 00:11:42.870
In other words, what
we'll do is is we

00:11:42.870 --> 00:11:47.760
will label the columns of our
matrix, u1, u2, u3, and then

00:11:47.760 --> 00:11:50.060
the rows of our matrix
will simply be 1,

00:11:50.060 --> 00:11:56.010
1, 2, 3, 2, 3, 4, 5,
3, 7, 6, 5, 4, 5, 9, 9.

00:11:56.010 --> 00:11:58.980
In other words, in terms
of our code, we have what?

00:11:58.980 --> 00:12:04.795
Alpha 1 is 1u1 plus 1u2
plus 2u3 plus u4, et cetera.

00:12:04.795 --> 00:12:07.770
So this is my coding matrix.

00:12:07.770 --> 00:12:10.710
Now, what did we do
when we row reduced?

00:12:10.710 --> 00:12:14.010
For example, to get
a 0 in this entry--

00:12:14.010 --> 00:12:15.330
remember our old technique?

00:12:15.330 --> 00:12:18.540
We said something like,
let's take the second row

00:12:18.540 --> 00:12:22.080
and replace it by the second
minus twice the first.

00:12:22.080 --> 00:12:24.320
In terms of our
coding system, this

00:12:24.320 --> 00:12:27.870
says, let's take the spanning
vectors, alpha 1, alpha 2,

00:12:27.870 --> 00:12:31.440
alpha 3, alpha 4, and
let's replace alpha 2

00:12:31.440 --> 00:12:36.120
by alpha 2 minus twice alpha 1.

00:12:36.120 --> 00:12:39.690
You see, we are replacing
alpha 2 by alpha 2

00:12:39.690 --> 00:12:42.450
plus a scalar multiple-- the
scalar happens to be minus 2,

00:12:42.450 --> 00:12:46.470
but that's irrelevant-- plus
a scalar multiple of alpha 1.

00:12:46.470 --> 00:12:49.960
So the space spanned
will not have changed.

00:12:49.960 --> 00:12:52.558
In other words, if I now go
through this row reduction,

00:12:52.558 --> 00:12:53.100
what do I do?

00:12:53.100 --> 00:12:54.820
I get 0s every place here.

00:12:54.820 --> 00:12:56.280
How do I do that?

00:12:56.280 --> 00:12:58.350
I replace the second
row by the second minus

00:12:58.350 --> 00:13:01.350
twice the first, the third
row by the third minus 3

00:13:01.350 --> 00:13:05.040
times the first, the fourth
row by the fourth minus 4 times

00:13:05.040 --> 00:13:05.730
the first.

00:13:05.730 --> 00:13:08.230
In terms of the coding
system, what am I doing?

00:13:08.230 --> 00:13:12.030
I'm replacing alpha 2 by
alpha 2 minus twice alpha 1.

00:13:12.030 --> 00:13:16.660
I'm replacing alpha 3 by
alpha 3 minus 3 times alpha 1.

00:13:16.660 --> 00:13:21.510
I'm replacing alpha 4 by
alpha 4 minus 4 times alpha 1.

00:13:21.510 --> 00:13:25.700
When I do that, my resulting
matrix looks like this.

00:13:25.700 --> 00:13:28.350
See, notice now what's
happened is these columns

00:13:28.350 --> 00:13:31.440
are still u1, u2, u3, and u4.

00:13:31.440 --> 00:13:35.790
But notice now, that whereas
this vector here is still

00:13:35.790 --> 00:13:40.240
alpha 1, the vector 0, 1,
0, minus 1, in other words,

00:13:40.240 --> 00:13:44.160
what, u2 minus u4,
is no longer alpha 2.

00:13:44.160 --> 00:13:45.660
In fact, what is it?

00:13:45.660 --> 00:13:46.860
How do we get this row?

00:13:46.860 --> 00:13:50.880
It was alpha 2
minus twice alpha 1.

00:13:50.880 --> 00:13:54.354
In a similar way,
this would be what?

00:13:54.354 --> 00:13:56.760
0, 4, 0, minus 4.

00:13:56.760 --> 00:13:58.110
But it's also what?

00:13:58.110 --> 00:14:04.530
Alpha 3 minus 3 alpha 1, and
the vector 0, 1, 1, minus 3

00:14:04.530 --> 00:14:08.220
is alpha 4 minus 4 alpha 4.

00:14:08.220 --> 00:14:11.010
What we're saying is
these four vectors

00:14:11.010 --> 00:14:13.740
may not look the same
as our original vectors,

00:14:13.740 --> 00:14:15.990
but the thing that
we're sure of is

00:14:15.990 --> 00:14:17.820
that they span the same space.

00:14:17.820 --> 00:14:20.130
Now, at this point, let
me pause for a moment

00:14:20.130 --> 00:14:22.710
and try to give you some
pseudo motivation as to why

00:14:22.710 --> 00:14:24.360
I'm doing this.

00:14:24.360 --> 00:14:26.940
You see, in the same way
that we solved systems

00:14:26.940 --> 00:14:28.980
of linear equations,
when we said

00:14:28.980 --> 00:14:32.790
that the same
system of equations

00:14:32.790 --> 00:14:36.390
could be represented in
different ways, in other words,

00:14:36.390 --> 00:14:40.260
two different systems could
have the same solution set,

00:14:40.260 --> 00:14:43.260
but one of the systems was
easier to solve than the other.

00:14:43.260 --> 00:14:46.380
See, one thing I'm saying over
here is that, somehow or other,

00:14:46.380 --> 00:14:50.610
these four vectors look
perhaps a bit simpler

00:14:50.610 --> 00:14:52.560
than these four
because of the fact

00:14:52.560 --> 00:14:54.780
that I have 0s
appearing over here.

00:14:54.780 --> 00:14:58.090
Well, I'll go into that
in more detail later.

00:14:58.090 --> 00:14:59.640
The other thing is this.

00:14:59.640 --> 00:15:02.610
Suppose, by row
reducing this way,

00:15:02.610 --> 00:15:05.640
suppose I were to eventually
wind up with the 4

00:15:05.640 --> 00:15:07.660
by 4 identity matrix.

00:15:07.660 --> 00:15:14.670
In other words, 1, 0, 0, 0, 0,
1, 0, 0, 0, 0, 1, 0, 0, 0, 0,

00:15:14.670 --> 00:15:15.450
1--

00:15:15.450 --> 00:15:17.520
what would that
matrix represent?

00:15:17.520 --> 00:15:21.255
Notice, in terms of this
coding system that 1, 0, 0,

00:15:21.255 --> 00:15:24.080
0 would just be u1.

00:15:24.080 --> 00:15:27.900
0, 1, 0, 0 would just
be u2, et cetera.

00:15:27.900 --> 00:15:30.420
In other words, if
by row reducing this

00:15:30.420 --> 00:15:33.798
I could ultimately wind up
with the identity matrix,

00:15:33.798 --> 00:15:35.340
that would say that
the space spanned

00:15:35.340 --> 00:15:38.400
by alpha 1, alpha 2,
alpha 3, and alpha 4

00:15:38.400 --> 00:15:42.720
is the same as the space
spanned by u1, u2, u3, and u4.

00:15:42.720 --> 00:15:47.070
But by definition of the
us, those four vectors

00:15:47.070 --> 00:15:50.050
span my entire
four-dimensional space.

00:15:50.050 --> 00:15:53.130
In other words, if in
row reducing my alphas

00:15:53.130 --> 00:15:55.350
I wind up with the
identity matrix,

00:15:55.350 --> 00:15:58.140
that will be proof, in
terms of my coding system,

00:15:58.140 --> 00:16:01.110
that the alphas span
all of v, because they

00:16:01.110 --> 00:16:05.520
will span the same space
as u1, u2, u3, and u4.

00:16:05.520 --> 00:16:08.340
So maybe that's a more immediate
reason for proceeding the way

00:16:08.340 --> 00:16:09.180
we're going.

00:16:09.180 --> 00:16:11.400
At any rate, what
I'm going to do now

00:16:11.400 --> 00:16:15.310
is to continue on with
my row reduction scheme.

00:16:15.310 --> 00:16:18.450
In other words, what will I
do now in terms of reduction?

00:16:18.450 --> 00:16:23.430
I will replace the first
vector here by the first minus

00:16:23.430 --> 00:16:23.940
the second.

00:16:23.940 --> 00:16:26.460
In other words, I'm
replacing alpha 1

00:16:26.460 --> 00:16:29.280
by alpha 1 minus
this vector, which

00:16:29.280 --> 00:16:31.350
is alpha 2 minus 2 alpha 1.

00:16:31.350 --> 00:16:33.060
The important point being what?

00:16:33.060 --> 00:16:36.450
I'm replacing a spanning
vector by itself

00:16:36.450 --> 00:16:39.040
plus a scalar multiple
of another one.

00:16:39.040 --> 00:16:42.280
In any event, going
through this operation

00:16:42.280 --> 00:16:47.610
what I will end up with now is
the following 4 by 4 matrix.

00:16:47.610 --> 00:16:50.160
And you see, again,
what I'm saying

00:16:50.160 --> 00:16:57.835
is that the 4-tuples 1, 0, 2,
4, 0, 1, 0, minus 1, 0, 0, 0, 0,

00:16:57.835 --> 00:17:04.170
and 0, 0, 1, minus 2 span
the same space as alpha 1,

00:17:04.170 --> 00:17:06.119
alpha 2, alpha 3, alpha 4.

00:17:06.119 --> 00:17:08.010
Now let me keep
emphasizing that.

00:17:08.010 --> 00:17:10.319
Even though I said
a 4-tuple always

00:17:10.319 --> 00:17:14.550
means with respect to
u1, u2, u3, u4, unless

00:17:14.550 --> 00:17:16.619
otherwise specified,
I think I will always

00:17:16.619 --> 00:17:20.880
specify it so we make sure that
we get this idea hammered home.

00:17:20.880 --> 00:17:23.760
Now, here's the first key point.

00:17:23.760 --> 00:17:27.810
My dream of having this matrix
row reduced to the identity

00:17:27.810 --> 00:17:29.760
matrix is now shattered.

00:17:29.760 --> 00:17:31.080
Why is it shattered?

00:17:31.080 --> 00:17:34.740
The third row is already
all 0s, so I can't possibly

00:17:34.740 --> 00:17:36.800
get a 1 into this position here.

00:17:36.800 --> 00:17:39.750
In other words, I can no longer
hope to get the identity matrix

00:17:39.750 --> 00:17:40.710
here.

00:17:40.710 --> 00:17:43.510
But this tells me something
much more than that.

00:17:43.510 --> 00:17:47.280
In other words, even failure
is success in this situation.

00:17:47.280 --> 00:17:50.700
Namely, the fact that
this is a 0 vector

00:17:50.700 --> 00:17:52.460
tells me that the space--

00:17:52.460 --> 00:17:56.070
the space spanned by alpha 1,
alpha 2, alpha 3, and alpha 4

00:17:56.070 --> 00:17:57.510
is certainly the
same as the space

00:17:57.510 --> 00:18:00.570
spanned by these four vectors.

00:18:00.570 --> 00:18:03.060
But one of these
vectors is the 0 vector,

00:18:03.060 --> 00:18:06.630
and the 0 vector spans no
space, as we've already seen.

00:18:06.630 --> 00:18:09.600
In other words, the 0
vector is always redundant,

00:18:09.600 --> 00:18:12.150
because any scalar
multiple of the 0 vector

00:18:12.150 --> 00:18:13.590
is still the 0 vector.

00:18:13.590 --> 00:18:17.190
So that doesn't change what any
other linear combination would

00:18:17.190 --> 00:18:18.090
be.

00:18:18.090 --> 00:18:21.690
So I immediately know now that
the space spanned by alpha 1,

00:18:21.690 --> 00:18:26.220
alpha 2, and alpha 3 can't be
any more than three-dimensional

00:18:26.220 --> 00:18:26.740
space.

00:18:26.740 --> 00:18:30.180
In other words, it's also
spanned by these three vectors.

00:18:30.180 --> 00:18:32.437
By the way, let me
just continue to row

00:18:32.437 --> 00:18:34.270
reduce this for the
sake of argument anyway.

00:18:34.270 --> 00:18:37.380
In other words, let me
now replace the first row

00:18:37.380 --> 00:18:40.450
by the first minus
twice the fourth.

00:18:40.450 --> 00:18:42.330
Or if I delete this,
twice the third,

00:18:42.330 --> 00:18:43.500
but that's not important.

00:18:43.500 --> 00:18:46.860
If I do this, notice
that the matrix I get now

00:18:46.860 --> 00:18:53.130
is 1, 0, 0, 8, 0, 1, 0, minus
1, a 0 row, and then 0, 0, 1,

00:18:53.130 --> 00:18:54.210
minus 2.

00:18:54.210 --> 00:18:58.320
Let me give the three non-zero
vectors here special names.

00:18:58.320 --> 00:19:01.770
Let me call this vector
beta 1, this vector, beta 2,

00:19:01.770 --> 00:19:03.220
this vector, beta 3.

00:19:03.220 --> 00:19:04.577
And what does that mean?

00:19:04.577 --> 00:19:05.160
It means what?

00:19:05.160 --> 00:19:07.830
That beta 1 is u1 plus 8, u4.

00:19:07.830 --> 00:19:10.020
Beta 2 is u2 minus u4.

00:19:10.020 --> 00:19:13.290
Beta 3 is u3 minus 2u, 4.

00:19:13.290 --> 00:19:16.680
In other words, this is
beta 1, beta 2, and beta 3.

00:19:16.680 --> 00:19:19.650
What do we know about beta
1, beta 2, and beta 3?

00:19:19.650 --> 00:19:22.830
Because they were obtained
from the matrix of the alphas

00:19:22.830 --> 00:19:26.550
by row reduction, they span
the same space as alpha 1,

00:19:26.550 --> 00:19:28.810
alpha 2, alpha 3, alpha 4.

00:19:28.810 --> 00:19:30.780
In other words, the
first thing we know

00:19:30.780 --> 00:19:33.570
is that the space spanned by
alpha 1, alpha 2, alpha 3,

00:19:33.570 --> 00:19:36.720
and alpha 4 is not
four-dimensional space,

00:19:36.720 --> 00:19:38.610
but rather, it's
the space spanned

00:19:38.610 --> 00:19:42.547
by beta 1, beta 2, and beta 3.

00:19:42.547 --> 00:19:44.130
By the way, that
immediately tells me,

00:19:44.130 --> 00:19:47.880
since beta 1, beta 2, and
beta 3 span my space, w,

00:19:47.880 --> 00:19:50.640
that I'm looking for, that
the dimension of that space

00:19:50.640 --> 00:19:54.690
can be no greater than 3,
because 3 vectors span it.

00:19:54.690 --> 00:19:56.910
Now, at this stage of
the game, the question

00:19:56.910 --> 00:19:59.790
might come up, what's so
great about the betas?

00:19:59.790 --> 00:20:03.150
Why do we have the betas
rather than the alphas?

00:20:03.150 --> 00:20:05.020
Do the betas help us at all?

00:20:05.020 --> 00:20:08.160
And my claim is, making this
metaphysical for a moment,

00:20:08.160 --> 00:20:10.680
if you just look at what the
betas look like over here, just

00:20:10.680 --> 00:20:12.055
look at what the
betas look like,

00:20:12.055 --> 00:20:14.490
forget about the u4
component, notice

00:20:14.490 --> 00:20:17.640
that the betas without
the u4 component

00:20:17.640 --> 00:20:19.940
look like the identity matrix.

00:20:19.940 --> 00:20:23.830
See, 1, 0, 0, 0, 1, 0, 0, 0, 1.

00:20:23.830 --> 00:20:28.110
My claim is that the betas are,
indeed, a very special basis.

00:20:28.110 --> 00:20:29.990
And let me show you
what I mean by that.

00:20:29.990 --> 00:20:33.430
What does it mean for a vector
to be in the space spanned

00:20:33.430 --> 00:20:35.830
by beta 1, beta 2, and beta 3?

00:20:35.830 --> 00:20:39.280
Well it means that that vector
must be a linear combination

00:20:39.280 --> 00:20:41.590
of beta 1, beta 2, and beta 3.

00:20:41.590 --> 00:20:43.930
Let me write down that linear
combination in the form

00:20:43.930 --> 00:20:49.820
x1 beta 1 plus x2 beta 2
plus x3 beta 3, where x1, x2,

00:20:49.820 --> 00:20:53.230
x3 represent arbitrary
constants here.

00:20:53.230 --> 00:20:55.630
By the way, don't be upset
that I've used xs now

00:20:55.630 --> 00:20:58.180
for the first time
instead of cs.

00:20:58.180 --> 00:20:59.890
I've essentially
done the same thing

00:20:59.890 --> 00:21:03.080
that we did when we were dealing
with arrows in the plane.

00:21:03.080 --> 00:21:05.980
When we were talking
about a typical arrow,

00:21:05.980 --> 00:21:09.700
we refer to it as
being xi plus yj

00:21:09.700 --> 00:21:12.220
rather than refer to
it as being ai plus

00:21:12.220 --> 00:21:16.660
bj to indicate, somehow how or
other, that we had arbitrarily

00:21:16.660 --> 00:21:19.360
chosen the constants,
the coefficients.

00:21:19.360 --> 00:21:20.920
It's sort of like in algebra.

00:21:20.920 --> 00:21:24.520
There's no law that says, when
you have a constant, that you

00:21:24.520 --> 00:21:27.580
couldn't call the constant
x, or if you have a variable,

00:21:27.580 --> 00:21:29.440
you couldn't call
the variable c.

00:21:29.440 --> 00:21:31.570
But somehow or other,
when we see a c,

00:21:31.570 --> 00:21:33.700
we assume it's a
constant in algebra.

00:21:33.700 --> 00:21:35.830
When we see an x, we
assume it's a variable.

00:21:35.830 --> 00:21:38.380
The xs are just thrown
in here to suggest

00:21:38.380 --> 00:21:41.620
that I'm looking at all linear
combinations of beta 1, beta

00:21:41.620 --> 00:21:43.000
2, and beta 3.

00:21:43.000 --> 00:21:46.630
And now, watch how beautifully
the form of the betas

00:21:46.630 --> 00:21:48.070
comes to help us now.

00:21:48.070 --> 00:21:52.060
Let's look explicitly to see
what x1 beta 1 plus x2 beta 2

00:21:52.060 --> 00:21:54.340
plus x3 beta 3 really is.

00:21:54.340 --> 00:21:57.460
Let's come back to
what our betas were.

00:21:57.460 --> 00:22:01.630
To multiply beta 1 by x1 means
that we multiply each component

00:22:01.630 --> 00:22:02.860
by x1.

00:22:02.860 --> 00:22:06.310
So this will be
what? x1, 0, 0, 8x1.

00:22:06.310 --> 00:22:09.810
We multiply each
component of beta 2 by x2.

00:22:09.810 --> 00:22:13.000
That's 0, x2, 0, minus x2.

00:22:13.000 --> 00:22:16.450
We multiply each
component of beta 3 by x3.

00:22:16.450 --> 00:22:19.810
So I'll get 0, 0, x3 minus 2x3.

00:22:19.810 --> 00:22:22.930
Notice, again, that these
components as 4-tuples

00:22:22.930 --> 00:22:24.400
are relative to the us.

00:22:24.400 --> 00:22:30.310
In other words, x1 beta 1
plus x2 beta 2 plus x3 beta 3

00:22:30.310 --> 00:22:33.730
are the three
4-tuples given here,

00:22:33.730 --> 00:22:35.920
where it's understood
that the columns values

00:22:35.920 --> 00:22:38.800
are u1, u2, u3, and u4.

00:22:38.800 --> 00:22:41.230
Now, I want to add these up.

00:22:41.230 --> 00:22:44.470
If I add them up, I add
component by component.

00:22:44.470 --> 00:22:47.440
Here's the beauty of that
row reduced matrix form

00:22:47.440 --> 00:22:48.790
that yielded the betas.

00:22:48.790 --> 00:22:50.530
Notice, that when
I add these up,

00:22:50.530 --> 00:22:53.260
x1 appears only in
the first vector.

00:22:53.260 --> 00:22:56.950
There are 0s every place
else, x2 in the second,

00:22:56.950 --> 00:22:58.600
x3 only in the third.

00:22:58.600 --> 00:23:00.760
Notice, that when I add
these up, I get what?

00:23:00.760 --> 00:23:07.510
x1, x2, x3, 8x1
minus x2 minus 2x3.

00:23:07.510 --> 00:23:09.580
In other words, any
linear combination

00:23:09.580 --> 00:23:13.480
of the betas in terms of the
us has a very interesting

00:23:13.480 --> 00:23:14.740
representation.

00:23:14.740 --> 00:23:19.680
Namely, x1 beta 1 plus
x2 beta 2 plus x3 beta 3

00:23:19.680 --> 00:23:25.390
is simply x1, u1 plus
x2, u2 plus x3, u3.

00:23:25.390 --> 00:23:30.310
Then plus 8x1 minus
x2 minus 2x3, x4.

00:23:30.310 --> 00:23:32.740
By the way, as an aside,
notice that I can now

00:23:32.740 --> 00:23:36.400
very quickly show you that the
betas are linearly independent.

00:23:36.400 --> 00:23:38.920
Namely, for linear
independence, notice

00:23:38.920 --> 00:23:41.770
that I want to show that
the only way this can be 0

00:23:41.770 --> 00:23:44.080
is if all the xs are 0.

00:23:44.080 --> 00:23:46.570
But notice that since
this combination comes out

00:23:46.570 --> 00:23:49.300
to be this, the only
way this can be 0

00:23:49.300 --> 00:23:51.040
is to have 0s every place.

00:23:51.040 --> 00:23:56.140
That says 0 must equal x1,
0 equals x2, 0 equals x3.

00:23:56.140 --> 00:23:59.080
In other words, writing this
out in more detail, x1 beta

00:23:59.080 --> 00:24:03.160
1 plus x2 beta 2 plus
x3 beta 3 equals 0

00:24:03.160 --> 00:24:07.960
means this, which in turn means
that x1, x2, and x3 must all

00:24:07.960 --> 00:24:08.770
be 0.

00:24:08.770 --> 00:24:10.900
That proves, in
particular, that the betas

00:24:10.900 --> 00:24:12.490
are linearly independent.

00:24:12.490 --> 00:24:15.550
And therefore, my
space, w, not only

00:24:15.550 --> 00:24:18.370
is spanned by beta 1,
beta 2, and beta 3,

00:24:18.370 --> 00:24:19.850
but they are a basis.

00:24:19.850 --> 00:24:21.790
That's why I write the
square brackets here.

00:24:21.790 --> 00:24:26.500
And so my dimensions
of w is actually 3.

00:24:26.500 --> 00:24:30.010
And by the way, let me show you,
again, what this thing means.

00:24:30.010 --> 00:24:32.590
It means that, you see,
if something isn't w,

00:24:32.590 --> 00:24:36.160
If it's written as a
4-tuple, all I have to do

00:24:36.160 --> 00:24:38.890
is know what the first
three components are,

00:24:38.890 --> 00:24:41.590
because the fourth
one is expressed

00:24:41.590 --> 00:24:43.030
in terms of the other three.

00:24:43.030 --> 00:24:47.960
For example, the u1 cannot
belong to my space, w.

00:24:47.960 --> 00:24:48.610
Why?

00:24:48.610 --> 00:24:55.170
Because u1 has x1 equal to 1,
x2 equal to 0, x3 equal to 0.

00:24:55.170 --> 00:24:57.010
And this tells us what?

00:24:57.010 --> 00:25:01.840
That when x1 is 1, and x2
and x3 are 0, x4 must be 8.

00:25:01.840 --> 00:25:05.860
In other words, the only
member of w that begins with 1,

00:25:05.860 --> 00:25:11.253
0, 0, is 1, 0, 0, 8, and
that's exactly what beta 1 is.

00:25:11.253 --> 00:25:12.670
In other words, I
leave it for you

00:25:12.670 --> 00:25:18.340
the check that u1, u2, and u3
do not belong to us space, w.

00:25:18.340 --> 00:25:19.560
Well, so much for that.

00:25:19.560 --> 00:25:22.620
Let me review now very
quickly what we've shown.

00:25:22.620 --> 00:25:25.480
These betas are a
rather remarkable basis.

00:25:25.480 --> 00:25:28.980
In other words, I claim
that beta 1, beta 2, beta 3

00:25:28.980 --> 00:25:31.410
is a natural basis
for w, you see,

00:25:31.410 --> 00:25:33.030
much nicer than the alphas.

00:25:33.030 --> 00:25:34.110
Why is that?

00:25:34.110 --> 00:25:37.050
Well, let me pick
any 4-tuple in w.

00:25:37.050 --> 00:25:40.530
Let me call it x1, x2, x3, x4.

00:25:40.530 --> 00:25:45.180
My claim is that once I know
that that 4-tuple is in w,

00:25:45.180 --> 00:25:48.420
I can write down the linear
combination of the betas

00:25:48.420 --> 00:25:50.880
that this vector
is by inspection.

00:25:50.880 --> 00:25:54.510
Namely, what I just showed
was that that 4-tuple is what?

00:25:54.510 --> 00:26:00.270
It's x1 beta 1 plus x2
beta 2 plus x3 beta 3.

00:26:00.270 --> 00:26:02.280
Or equivalently, if
you want to see it

00:26:02.280 --> 00:26:07.140
in terms of the 4-tuple of
notation in terms of the us,

00:26:07.140 --> 00:26:10.020
the first three components
can be chosen at random,

00:26:10.020 --> 00:26:13.210
and then the fourth
component is given by this.

00:26:13.210 --> 00:26:15.570
And by way of a
quick example, notice

00:26:15.570 --> 00:26:18.570
that as a 4-tuple
alpha 1 was what?

00:26:18.570 --> 00:26:21.100
It was 1, 1, 2, 3.

00:26:21.100 --> 00:26:26.390
In other words, it was u1
plus u2 plus 2u3 plus 3u4.

00:26:26.390 --> 00:26:29.520
Notice that because the
first three coefficients were

00:26:29.520 --> 00:26:33.360
1, 1, 2 relative to the
betas, the coefficients

00:26:33.360 --> 00:26:35.320
are also 1, 1, 2.

00:26:35.320 --> 00:26:38.880
In other words, I can write
alpha 1 as the 3-tuple 1,

00:26:38.880 --> 00:26:43.470
1, 2, provided I
tacitly understand here

00:26:43.470 --> 00:26:45.840
that I'm making reference
to the special betas

00:26:45.840 --> 00:26:47.430
as being my basis.

00:26:47.430 --> 00:26:49.890
You see, in other words,
referring to the alpha 1,

00:26:49.890 --> 00:26:52.860
alpha 2, alpha 3, alpha 4
that we're talking about,

00:26:52.860 --> 00:26:55.350
just drop the fourth--

00:26:55.350 --> 00:27:01.750
in terms of the 4-tuples, drop
the use of four coefficient

00:27:01.750 --> 00:27:03.760
and just write down
the remaining 3-tuple.

00:27:03.760 --> 00:27:06.100
In other words,
alpha 2 is 2 beta 1

00:27:06.100 --> 00:27:08.440
plus 3 beta 2 plus 4 beta 3.

00:27:08.440 --> 00:27:12.520
Alpha 3 is 3 beta 1 plus
7 beta 2 plus 6 beta 3.

00:27:12.520 --> 00:27:17.120
Alpha 4 is 4 beta 1 plus
5 beta 2 plus 9 beta 3.

00:27:17.120 --> 00:27:19.510
You see, the betas
are a very nice basis,

00:27:19.510 --> 00:27:21.310
because they're
that special basis

00:27:21.310 --> 00:27:23.170
that once I know
what the vector looks

00:27:23.170 --> 00:27:26.140
like as a 4-tuple with
respect to the us,

00:27:26.140 --> 00:27:29.050
I can immediately write down
what it looks like with respect

00:27:29.050 --> 00:27:29.980
to the betas.

00:27:29.980 --> 00:27:31.960
Let me give you another example.

00:27:31.960 --> 00:27:34.377
Suppose I just pick at random--

00:27:34.377 --> 00:27:35.710
well, it's not picked at random.

00:27:35.710 --> 00:27:36.970
I picked one that works here.

00:27:36.970 --> 00:27:41.215
But let's suppose I just
take the 4-tuple 2, 5, 3, 5,

00:27:41.215 --> 00:27:43.000
and I want to know
whether that's in w.

00:27:43.000 --> 00:27:44.860
And by the way, again,
let me remind you

00:27:44.860 --> 00:27:48.110
just one more time that
4-tuple stands for what?

00:27:48.110 --> 00:27:52.360
2u1 plus 5u2 plus 3u3 plus 5u4.

00:27:52.360 --> 00:27:54.490
Does that 4-tuple belong to w?

00:27:54.490 --> 00:27:57.820
The answer is, it
belongs to w if and only

00:27:57.820 --> 00:28:00.120
if it's equal to what?

00:28:00.120 --> 00:28:04.690
2 beta 1 plus 5 beta
2 plus 3 beta 3.

00:28:04.690 --> 00:28:08.320
That's the beauty of that
special basis of the betas.

00:28:08.320 --> 00:28:12.400
Well, 2 beta 1 is
simply 2, 0, 0, 16.

00:28:12.400 --> 00:28:17.140
5 beta 2 is 0, 5, 0,
minus 5, and 3 beta 3

00:28:17.140 --> 00:28:19.090
is 0, 0, 3, minus 6.

00:28:19.090 --> 00:28:22.900
Recalling, of course, that
beta 1 was 1, 0, 0, 8.

00:28:22.900 --> 00:28:26.320
Beta 2 was 0, 1, 0,
minus 1, and that beta 3

00:28:26.320 --> 00:28:28.400
was 0, 0, 1, minus 2.

00:28:28.400 --> 00:28:30.400
So again, this is
all with respect--

00:28:30.400 --> 00:28:32.710
as 4-tuples with
respect to the us.

00:28:32.710 --> 00:28:34.630
If I add these up, I get what?

00:28:34.630 --> 00:28:39.130
2, 5, 3, 5, which is exactly
the vector I'm dealing with.

00:28:39.130 --> 00:28:41.680
So 2, 5, 3, 5 belongs to w.

00:28:41.680 --> 00:28:45.210
In fact, another way of looking
at this is once the 2, 5,

00:28:45.210 --> 00:28:49.300
and the 3 are given as the first
three components, the only way

00:28:49.300 --> 00:28:51.730
that the 4-tuple
can belong to w is

00:28:51.730 --> 00:28:53.927
if that fourth component is 5.

00:28:53.927 --> 00:28:55.510
In other words,
again, looking at this

00:28:55.510 --> 00:28:57.670
from one more point
of view, remember over

00:28:57.670 --> 00:29:01.090
here we showed that the fourth
component in terms of the us

00:29:01.090 --> 00:29:04.600
had to be eight times the first
minus the second minus twice

00:29:04.600 --> 00:29:06.040
the third.

00:29:06.040 --> 00:29:09.790
And given 2, 5, 3, the only
way that can happen is what?

00:29:09.790 --> 00:29:13.540
8 times 2 minus 5
minus twice three

00:29:13.540 --> 00:29:16.630
and that happens to be five.

00:29:16.630 --> 00:29:18.460
Now we come to the home stretch.

00:29:18.460 --> 00:29:22.810
And that is, knowing
now what the basis looks

00:29:22.810 --> 00:29:25.120
like in terms of the
betas, we come back

00:29:25.120 --> 00:29:26.560
to a more crucial question.

00:29:26.560 --> 00:29:29.110
And that is, look it, we
were given alpha 1, alpha

00:29:29.110 --> 00:29:30.910
2, alpha 3, alpha 4.

00:29:30.910 --> 00:29:33.070
Those were the vectors
that we were given.

00:29:33.070 --> 00:29:35.170
Maybe for the problem
that we're dealing with,

00:29:35.170 --> 00:29:36.700
it's important to
have everything

00:29:36.700 --> 00:29:38.200
relative to the alphas.

00:29:38.200 --> 00:29:43.030
So now what we're saying is,
knowing what 2, 5, 3, 5 looks

00:29:43.030 --> 00:29:45.430
like as a linear
combination of the betas,

00:29:45.430 --> 00:29:48.970
how can we conveniently express
that as a linear combination

00:29:48.970 --> 00:29:50.020
of the alphas?

00:29:50.020 --> 00:29:53.440
And again, the answer comes
from row reduced matrices.

00:29:53.440 --> 00:29:55.720
In other words, all we're
going to say is this.

00:29:55.720 --> 00:29:58.060
Look it, we know what
this vector looks

00:29:58.060 --> 00:29:59.590
like in terms of the betas.

00:29:59.590 --> 00:30:03.820
It's 2 beta 1 plus 5
beta 2 plus 3 beta 3.

00:30:03.820 --> 00:30:08.110
Suppose we could now express the
betas in terms of the alphas.

00:30:08.110 --> 00:30:10.150
See, sort of like before
with the matrices.

00:30:10.150 --> 00:30:12.430
We sort of want to
talk about inverting--

00:30:12.430 --> 00:30:15.040
interchanging the
roles of the vectors.

00:30:15.040 --> 00:30:16.130
Here's what I'm saying.

00:30:16.130 --> 00:30:19.240
Look it, we already
know from over here

00:30:19.240 --> 00:30:23.560
that alpha 1 is beta 1 plus
beta 2 plus 2 beta 3, et cetera.

00:30:23.560 --> 00:30:25.270
Let me do the following thing.

00:30:25.270 --> 00:30:27.820
Let me write down
an augmented matrix.

00:30:27.820 --> 00:30:29.350
The first three
columns will stand

00:30:29.350 --> 00:30:33.340
for beta 1, beta 2, and beta
3, and the last four columns

00:30:33.340 --> 00:30:37.130
will stand for alpha 1, alpha
2, alpha 3, and alpha 4.

00:30:37.130 --> 00:30:40.430
Notice that I can write alpha
1 by two different names.

00:30:40.430 --> 00:30:44.460
It's 1, 1, 2 relative to
the betas and 1, 0, 0,

00:30:44.460 --> 00:30:46.360
0 relative to the alphas.

00:30:46.360 --> 00:30:49.300
And similarly, alpha
2, alpha 3, alpha 4

00:30:49.300 --> 00:30:52.370
can be represented as I've
written these things over here.

00:30:52.370 --> 00:30:53.440
Now, what have I done?

00:30:53.440 --> 00:30:57.350
I have written each vector
in two different ways--

00:30:57.350 --> 00:31:01.000
one relative to the betas and
one relative to the alphas.

00:31:01.000 --> 00:31:03.530
If I now row reduce
this matrix--

00:31:03.530 --> 00:31:06.040
notice that I'm
dealing with vectors--

00:31:06.040 --> 00:31:09.070
whatever vector
I get by one name

00:31:09.070 --> 00:31:12.610
must be the same vector with
respect to the other name.

00:31:12.610 --> 00:31:16.300
In other words, if I start row
reducing now in the usual way,

00:31:16.300 --> 00:31:18.940
this matrix becomes this matrix.

00:31:18.940 --> 00:31:21.010
And again, to show
what we're saying is,

00:31:21.010 --> 00:31:23.340
this is just another
way of saying what?

00:31:23.340 --> 00:31:27.070
That, for example,
this is beta 2,

00:31:27.070 --> 00:31:30.010
and this says that the vector
beta 2 is the same as alpha 2

00:31:30.010 --> 00:31:32.140
minus 2 alpha 1.

00:31:32.140 --> 00:31:33.295
This happens to be--

00:31:33.295 --> 00:31:34.420
oh, let's look at this one.

00:31:34.420 --> 00:31:37.290
This is beta 2 plus beta 3.

00:31:37.290 --> 00:31:38.530
And that's the same as what?

00:31:38.530 --> 00:31:41.650
Minus 4 alpha 1 plus alpha 4.

00:31:41.650 --> 00:31:43.390
And you see, what I'm
going to try to do

00:31:43.390 --> 00:31:46.720
is row reduce this part
here and hopefully be

00:31:46.720 --> 00:31:49.360
able to express the betas
in terms of the alphas.

00:31:49.360 --> 00:31:53.860
So what I now do is continue
my row reduction technique.

00:31:53.860 --> 00:31:58.150
And you say, if I do that,
my next step gives me this,

00:31:58.150 --> 00:32:00.640
and this is a rather
remarkable thing.

00:32:00.640 --> 00:32:04.270
Because you'll now notice
that reading my first three

00:32:04.270 --> 00:32:08.380
components here, this tells
me that the third vector,

00:32:08.380 --> 00:32:11.860
at least in terms of the
betas, is the 0 vector.

00:32:11.860 --> 00:32:13.360
By the way, what's
another name--

00:32:13.360 --> 00:32:14.777
see, what I'm
saying this is what?

00:32:14.777 --> 00:32:18.480
0 beta 1 plus 0 beta
2 plus 0 beta 3.

00:32:18.480 --> 00:32:20.230
What's another name
for that vector?

00:32:20.230 --> 00:32:24.500
It's 5 alpha 1 minus 4
alpha 2 plus alpha 3.

00:32:24.500 --> 00:32:26.980
In other words, as
an aside, 5 alpha

00:32:26.980 --> 00:32:31.000
1 minus 4 alpha 2 plus
alpha 3 is the 0 vector.

00:32:31.000 --> 00:32:37.450
Therefore, by transposing, alpha
3 is 4 alpha 2 minus 5 alpha 1.

00:32:37.450 --> 00:32:39.670
And now, indeed,
we have not only

00:32:39.670 --> 00:32:42.880
seen that the alphas
were linearly dependent,

00:32:42.880 --> 00:32:44.440
we have found the redundancy.

00:32:44.440 --> 00:32:47.770
That in the order given, alpha
3 is a linear combination

00:32:47.770 --> 00:32:49.360
of alpha 1 and alpha 2.

00:32:49.360 --> 00:32:52.120
By the way, just as a
computational check,

00:32:52.120 --> 00:32:56.140
notice by our definitions of
alpha 1 alpha 2 that 4 alpha 2

00:32:56.140 --> 00:32:58.510
is 8, 12, 16, 20.

00:32:58.510 --> 00:33:03.670
Minus 5 alpha 1 is minus 5,
minus 5, minus 10, minus 15.

00:33:03.670 --> 00:33:08.350
If I add these two,
I get 3, 7, 6, 5,

00:33:08.350 --> 00:33:10.540
which, as you will
recall from looking

00:33:10.540 --> 00:33:14.050
at our definition of alpha
3, is, indeed, alpha 3.

00:33:14.050 --> 00:33:16.090
At any rate, what I'd
not like to point out

00:33:16.090 --> 00:33:18.010
is that what this
piece of information

00:33:18.010 --> 00:33:22.920
tells me is that this is the
redundant piece of information.

00:33:22.920 --> 00:33:27.310
That what we really know is that
the betas do not need alpha 3

00:33:27.310 --> 00:33:28.120
to express them.

00:33:28.120 --> 00:33:28.900
Why?

00:33:28.900 --> 00:33:30.370
Because the betas
could originally

00:33:30.370 --> 00:33:32.500
be expressed in terms
of alpha 1, alpha 2,

00:33:32.500 --> 00:33:34.000
alpha 3, and alpha 4.

00:33:34.000 --> 00:33:35.910
So you don't lose track of that.

00:33:35.910 --> 00:33:38.080
The space spanned
by the betas is

00:33:38.080 --> 00:33:40.600
the same as the space
spanned by the alphas.

00:33:40.600 --> 00:33:42.880
So, in particular,
each of the betas

00:33:42.880 --> 00:33:45.670
must be a linear combination
of the alphas by definition

00:33:45.670 --> 00:33:48.160
of spanning space, just
as each of the alphas

00:33:48.160 --> 00:33:50.410
must be a linear
combination of the betas.

00:33:50.410 --> 00:33:52.240
So I know that the
base can be expressed

00:33:52.240 --> 00:33:53.620
in terms of the alphas.

00:33:53.620 --> 00:33:56.620
But now, I've seen that
alpha 3 is redundant,

00:33:56.620 --> 00:33:59.260
because alpha 3 can be
expressed in terms of alpha 1

00:33:59.260 --> 00:34:00.370
and alpha 2.

00:34:00.370 --> 00:34:02.350
So what I now have is what?

00:34:02.350 --> 00:34:05.050
That beta 1, beta
2, and beta 3 can

00:34:05.050 --> 00:34:08.389
be expressed in terms of
alpha 1, alpha 2, and alpha 4.

00:34:08.389 --> 00:34:11.260
See, notice that with
this row deleted,

00:34:11.260 --> 00:34:14.650
the alpha 3 column
has all 0s in it.

00:34:14.650 --> 00:34:19.210
And by the way, if I now finally
complete my row reduction,

00:34:19.210 --> 00:34:25.000
you see, I wind up with this
matrix, this 3 by 7 matrix.

00:34:25.000 --> 00:34:27.320
And this tells me,
in particular, what?

00:34:27.320 --> 00:34:30.880
How to express beta 1,
beta 2, and beta 3 in terms

00:34:30.880 --> 00:34:33.460
of the alphas, in
particular, beta 1

00:34:33.460 --> 00:34:37.060
is the 4-tuple 7, 1, 0, minus 2.

00:34:37.060 --> 00:34:40.870
And notice now, I
don't want to say this

00:34:40.870 --> 00:34:43.630
as a 4-tuple in the
following sense.

00:34:43.630 --> 00:34:48.400
Notice, if I now were to
write 7, 1, 0, minus 2,

00:34:48.400 --> 00:34:49.600
that would be redundant.

00:34:49.600 --> 00:34:53.560
Because now I'm talking relative
to the alphas, not the us.

00:34:53.560 --> 00:34:54.760
The important thing is what?

00:34:54.760 --> 00:34:59.470
That beta 1 is 7 alpha 1
plus alpha 2 minus 2 alpha 4.

00:34:59.470 --> 00:35:03.253
Beta 2 is minus 2
alpha 1 plus alpha 2--

00:35:03.253 --> 00:35:04.420
well, just that's all it is.

00:35:04.420 --> 00:35:08.810
And beta 3 is minus 2 alpha
1 minus alpha 2 plus alpha 4.

00:35:08.810 --> 00:35:11.110
This tells me that
the betas are a basis,

00:35:11.110 --> 00:35:14.260
the alphas weren't the
basis, but alpha 1, alpha 2,

00:35:14.260 --> 00:35:16.240
and alpha 4 as a basis.

00:35:16.240 --> 00:35:18.410
Getting back to our
original problem,

00:35:18.410 --> 00:35:21.670
now that we're expressed
beta 1, beta 2, and beta 3

00:35:21.670 --> 00:35:24.460
in terms of alpha 1,
alpha 2, and alpha 4,

00:35:24.460 --> 00:35:30.010
knowing that 2, 5, 3, 5 is 2
beta 1 plus 5 beta 2 plus 3

00:35:30.010 --> 00:35:32.920
beta 3, we can
now replace beta 1

00:35:32.920 --> 00:35:36.630
by what it's equal to in
terms of the alphas, beta 2

00:35:36.630 --> 00:35:40.930
by what it's equal to in
terms of the alphas, beta 3--

00:35:40.930 --> 00:35:45.130
well, beta 2 is equal to
minus 2 alpha 1 plus alpha 2.

00:35:45.130 --> 00:35:49.300
Beta 3 is minus 2 alpha 1
minus alpha 2 plus alpha 4.

00:35:49.300 --> 00:35:51.310
Replacing the betas
by what they're

00:35:51.310 --> 00:35:55.330
equal to in terms of the alphas,
I wind up with this expression.

00:35:55.330 --> 00:35:58.900
And I find that 2, 5,
3, 5 is the following

00:35:58.900 --> 00:36:02.080
linear combination of alpha
1, alpha 2, and alpha 4.

00:36:02.080 --> 00:36:06.790
Namely, minus 2 alpha 1 plus
4 alpha 2 minus alpha 4.

00:36:06.790 --> 00:36:09.730
And I leave it for you to check
that, if you actually take

00:36:09.730 --> 00:36:12.670
alpha 1, alpha 2,
and alpha 4 as given

00:36:12.670 --> 00:36:14.600
at the beginning
of this example,

00:36:14.600 --> 00:36:18.100
you will indeed find that this
linear combination, minus 2

00:36:18.100 --> 00:36:21.370
alpha 1 plus 4 alpha
2 minus alpha 4,

00:36:21.370 --> 00:36:26.250
is indeed the vector 2, 5, 3,
5 that we're talking about.

00:36:26.250 --> 00:36:28.520
Well, as I mentioned
to you, I want

00:36:28.520 --> 00:36:30.850
you to get an overview of
what we're talking about.

00:36:30.850 --> 00:36:33.190
There are going to be
plenty of exercises on this.

00:36:33.190 --> 00:36:35.260
Let me just
summarize, or at least

00:36:35.260 --> 00:36:38.050
give a partial summary,
of what we have really

00:36:38.050 --> 00:36:41.080
done computationally
in this example.

00:36:41.080 --> 00:36:43.780
We started with
four-dimensional space, v,

00:36:43.780 --> 00:36:47.920
relative to a basis
u1, u2, u3, u4.

00:36:47.920 --> 00:36:49.420
We picked four vectors--

00:36:49.420 --> 00:36:52.930
alpha 1, alpha 2, alpha 3,
alpha 4-- in that space,

00:36:52.930 --> 00:36:56.530
and asked to see what space was
spanned by those four vectors.

00:36:56.530 --> 00:36:59.715
And we showed that there were
three very special vectors--

00:36:59.715 --> 00:37:01.340
they had a very nice form--

00:37:01.340 --> 00:37:05.990
called beta 1, beta 2,
beta 3, such that v had--

00:37:05.990 --> 00:37:09.640
the w had beta 1, beta
2, and beta 3 as a basis

00:37:09.640 --> 00:37:11.870
so that the dimension w was 3.

00:37:11.870 --> 00:37:14.900
We also showed in this
particular problem

00:37:14.900 --> 00:37:17.060
that not only was
the dimension three,

00:37:17.060 --> 00:37:22.790
but once you picked the u1, u2,
and u3 components arbitrarily,

00:37:22.790 --> 00:37:26.090
the u4 component was
determined by these

00:37:26.090 --> 00:37:27.450
in this particular way.

00:37:27.450 --> 00:37:29.330
In other words, another
way of saying this

00:37:29.330 --> 00:37:35.360
is that w consisted of
all linear combinations

00:37:35.360 --> 00:37:42.160
of the betas, where these are
the same xs that appear here.

00:37:42.160 --> 00:37:44.470
And as a case in
point, we showed

00:37:44.470 --> 00:37:49.180
that a particular vector,
2, 5, 3, 5, belonged to w.

00:37:49.180 --> 00:37:52.570
That when we wrote that
vector relative to the betas,

00:37:52.570 --> 00:37:54.880
that vector was 2, 5, 3.

00:37:54.880 --> 00:37:57.620
When we wrote that same
vector relative to the alphas,

00:37:57.620 --> 00:37:59.960
it was minus 2, 4, minus 1.

00:37:59.960 --> 00:38:04.510
Notice, by the way, a
very important thing here.

00:38:04.510 --> 00:38:08.860
You see, every single time that
we talked about two vectors are

00:38:08.860 --> 00:38:12.670
equal if and only if they were
equal component by component,

00:38:12.670 --> 00:38:15.700
when we wrote them as
n-tuples, it was assumed

00:38:15.700 --> 00:38:17.650
that the basis never changed.

00:38:17.650 --> 00:38:21.820
Look it, forget about the
betas and the alphas here.

00:38:21.820 --> 00:38:25.690
Look at the 3-tuple 2, 5,
3 and the 3-tuple minus 2,

00:38:25.690 --> 00:38:27.330
4, minus 1.

00:38:27.330 --> 00:38:29.620
Certainly, they are
different 3-tuples,

00:38:29.620 --> 00:38:32.410
but they happen to
name the same vector,

00:38:32.410 --> 00:38:36.730
because one is a 3-tuple
coded relative to the betas

00:38:36.730 --> 00:38:40.630
and the other is a 3-tuple
coded relative to the alphas.

00:38:40.630 --> 00:38:43.930
In other words, once we
pick a particular basis,

00:38:43.930 --> 00:38:46.360
we must remember that
our coding system

00:38:46.360 --> 00:38:48.130
is relative to that basis.

00:38:48.130 --> 00:38:52.240
If, for some reason, it becomes
convenient to change the basis,

00:38:52.240 --> 00:38:54.400
then we have to be
very, very careful

00:38:54.400 --> 00:38:57.620
and remember that, therefore,
our coding system has changed.

00:38:57.620 --> 00:39:01.080
And that's why, in most advanced
applications using vector

00:39:01.080 --> 00:39:03.430
spaces, a great
degree of difficulty

00:39:03.430 --> 00:39:05.230
comes in, because
what we've done

00:39:05.230 --> 00:39:07.300
is we've changed basis vectors.

00:39:07.300 --> 00:39:11.560
And people who are so rigid that
they keep visualizing that you

00:39:11.560 --> 00:39:14.470
are using the same n-tuples
over and over again

00:39:14.470 --> 00:39:17.530
get confused as to how
two different n-tuples can

00:39:17.530 --> 00:39:18.880
name the same vector.

00:39:18.880 --> 00:39:21.460
Well, at any rate, I think
that's more than enough

00:39:21.460 --> 00:39:22.780
for one session.

00:39:22.780 --> 00:39:25.180
Do the exercises very carefully.

00:39:25.180 --> 00:39:25.930
Try your best.

00:39:25.930 --> 00:39:28.300
As I say, if you have any
trouble after the exercises,

00:39:28.300 --> 00:39:29.950
review the film again.

00:39:29.950 --> 00:39:31.490
Listen to the lecture again.

00:39:31.490 --> 00:39:34.030
And what we will do
next time is pick up

00:39:34.030 --> 00:39:36.460
some consequences
of vector spaces

00:39:36.460 --> 00:39:38.800
that tie-in with other
aspects of the course

00:39:38.800 --> 00:39:40.000
that we've already studied.

00:39:40.000 --> 00:39:42.180
But at any rate, until
next time, goodbye.

00:39:44.690 --> 00:39:47.090
Funding for the
publication of this video

00:39:47.090 --> 00:39:51.950
was provided by the Gabriella
and Paul Rosenbaum Foundation.

00:39:51.950 --> 00:39:56.120
Help OCW continue to provide
free and open access to MIT

00:39:56.120 --> 00:40:01.555
courses by making a donation
at ocw.mit.edu/donate.