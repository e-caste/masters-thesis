WEBVTT

00:00:00.060 --> 00:00:01.780
The following
content is provided

00:00:01.780 --> 00:00:04.019
under a Creative
Commons license.

00:00:04.019 --> 00:00:06.870
Your support will help MIT
OpenCourseWare continue

00:00:06.870 --> 00:00:10.730
to offer high-quality
educational resources for free.

00:00:10.730 --> 00:00:13.330
To make a donation or
view additional materials

00:00:13.330 --> 00:00:15.780
from hundreds of
MIT courses, visit

00:00:15.780 --> 00:00:26.370
MIT OpenCourseWare
at ocw.mit.edu

00:00:26.370 --> 00:00:27.980
PROFESSOR: Thank you.

00:00:27.980 --> 00:00:29.700
And please feel
free to interrupt.

00:00:29.700 --> 00:00:33.370
I'd just as soon run this as
a discussion, if you'd like.

00:00:33.370 --> 00:00:34.664
Is that permitted, do you know?

00:00:34.664 --> 00:00:35.580
MODERATOR: Absolutely.

00:00:35.580 --> 00:00:38.210
PROFESSOR: OK, so
these are conflicts

00:00:38.210 --> 00:00:40.160
of interests for
those of you who care,

00:00:40.160 --> 00:00:46.650
or you can get it in more detail
here by going to this website.

00:00:46.650 --> 00:00:52.070
And I thought I will talk
about this topic of causality.

00:00:52.070 --> 00:00:54.330
You've learned quite a
bit already in this course

00:00:54.330 --> 00:01:01.120
about tools for analyzing
genomes from various aspects,

00:01:01.120 --> 00:01:03.180
but what you do after
you analyze it is you

00:01:03.180 --> 00:01:05.010
want to test your hypotheses.

00:01:05.010 --> 00:01:11.340
And this is a very richly
enabling idea, in the sense

00:01:11.340 --> 00:01:13.600
that you can go to very
small cohort sizes,

00:01:13.600 --> 00:01:16.480
as we'll see-- N of
one cohort sizes--

00:01:16.480 --> 00:01:20.370
and your false positives
are less of a concern

00:01:20.370 --> 00:01:22.690
if you have a high throughput
way of testing them.

00:01:22.690 --> 00:01:24.150
And so I think
it's very important

00:01:24.150 --> 00:01:28.060
to know the possibilities
for testing causality.

00:01:28.060 --> 00:01:30.620
And that gets us into
engineering genomes--

00:01:30.620 --> 00:01:33.520
and, in a particular, about
computer-aided design.

00:01:33.520 --> 00:01:36.180
So you've talked about
computer-aided analysis;

00:01:36.180 --> 00:01:38.340
now let's talk about
computer-aided design

00:01:38.340 --> 00:01:43.020
of genomes, both
bacterial and human.

00:01:43.020 --> 00:01:45.770
So I just want to
illustrate the idea.

00:01:45.770 --> 00:01:50.060
You might say, well, why would
we want to design genomes?

00:01:50.060 --> 00:01:51.790
You can test
causality, typically,

00:01:51.790 --> 00:01:53.580
by changing one base pair.

00:01:53.580 --> 00:01:56.270
Why would you want to change
more than one base pair?

00:01:56.270 --> 00:01:58.200
If you have a SNP, that's great.

00:01:58.200 --> 00:02:00.840
Well, sometimes you have
multiple SNPs interacting

00:02:00.840 --> 00:02:05.740
in multigenic-- and we'll
get to humans in a moment.

00:02:05.740 --> 00:02:07.873
But here's a radical
example, something

00:02:07.873 --> 00:02:09.289
from the extreme
edge, where you'd

00:02:09.289 --> 00:02:11.850
want to change almost every
base pair in the genome--

00:02:11.850 --> 00:02:14.523
not make a copy of a
genome but actually design,

00:02:14.523 --> 00:02:19.660
in an intelligent way--
semi-intelligent--

00:02:19.660 --> 00:02:22.460
combinatorial as
well-- a genome that

00:02:22.460 --> 00:02:24.240
has new functions,
new properties.

00:02:24.240 --> 00:02:26.760
And the four functions I
submit for your consideration

00:02:26.760 --> 00:02:29.055
here is that you might
want to be genetically

00:02:29.055 --> 00:02:33.040
and metabolically
isolated for safety

00:02:33.040 --> 00:02:37.180
reasons or public
relations reasons or both.

00:02:37.180 --> 00:02:39.150
You want to have new
chemistry, new protein

00:02:39.150 --> 00:02:40.830
chemistry, new amino acids.

00:02:40.830 --> 00:02:44.590
And finally, you want to
have multi-virus resistance.

00:02:44.590 --> 00:02:47.250
This is probably the most
powerful of the four,

00:02:47.250 --> 00:02:50.540
where imagine that you have
an organism-- whether it's

00:02:50.540 --> 00:02:53.940
industrial, agricultural,
or even human-- that

00:02:53.940 --> 00:02:58.010
was resistant to all viruses,
past and present-- even ones

00:02:58.010 --> 00:02:59.995
you haven't analyzed.

00:02:59.995 --> 00:03:00.870
So how do we do this?

00:03:00.870 --> 00:03:02.390
How do we get new functionality?

00:03:02.390 --> 00:03:06.330
How do we design a genome in
such a way that doesn't break?

00:03:06.330 --> 00:03:09.390
Because if you change
the genome enough,

00:03:09.390 --> 00:03:10.819
you get your comeuppance.

00:03:10.819 --> 00:03:13.110
You learn you don't know as
much as you think you know.

00:03:13.110 --> 00:03:16.330
You have your beautiful computer
simulations from your analysis,

00:03:16.330 --> 00:03:21.030
and as soon as you test them,
you start getting surprises.

00:03:21.030 --> 00:03:26.530
So anyway, I'm going to focus
on this process of designing

00:03:26.530 --> 00:03:29.360
and building and then testing.

00:03:29.360 --> 00:03:30.860
And then, so this
part of the design

00:03:30.860 --> 00:03:32.276
has to have an
analytic component.

00:03:32.276 --> 00:03:35.160
So we'll get back to your
old friends in analytics.

00:03:35.160 --> 00:03:39.690
So as I go down this list, maybe
just show of hands of how many

00:03:39.690 --> 00:03:44.670
have been exposed to these
computational tools already.

00:03:44.670 --> 00:03:47.450
So Bowtie, anybody?

00:03:47.450 --> 00:03:48.150
OK, good.

00:03:48.150 --> 00:03:51.400
See, you covered that, so
I don't need to cover that.

00:03:51.400 --> 00:03:54.150
Number two-- no?

00:03:54.150 --> 00:03:54.910
Some?

00:03:54.910 --> 00:03:57.300
SnpEff?

00:03:57.300 --> 00:03:59.410
JBrowse-- SQL, you've
all heard of SQL, right?

00:03:59.410 --> 00:04:01.455
OK, good.

00:04:01.455 --> 00:04:02.940
Let's see.

00:04:02.940 --> 00:04:05.200
So the point is
each of these things

00:04:05.200 --> 00:04:09.360
is integrated into this system
we call "Millstone," which

00:04:09.360 --> 00:04:12.130
is all about design
and analysis.

00:04:12.130 --> 00:04:14.630
So it's this loop that goes
around and around, as you'll

00:04:14.630 --> 00:04:17.440
see in just a moment--
actually, may have seen already

00:04:17.440 --> 00:04:19.209
back here.

00:04:19.209 --> 00:04:20.760
So we design it.

00:04:20.760 --> 00:04:21.260
We build it.

00:04:21.260 --> 00:04:22.110
We test it.

00:04:22.110 --> 00:04:22.930
And we analyze it.

00:04:22.930 --> 00:04:28.080
And the analysis--
sometimes when you build it,

00:04:28.080 --> 00:04:29.540
you build a large number.

00:04:29.540 --> 00:04:31.560
You build a combinatorial set.

00:04:31.560 --> 00:04:35.530
So this is something
that's fairly unique

00:04:35.530 --> 00:04:37.550
to biological
engineering-- or even

00:04:37.550 --> 00:04:39.710
to certain branches of
biological engineering--

00:04:39.710 --> 00:04:43.720
that you don't see every
day in civil engineering

00:04:43.720 --> 00:04:45.340
or aeronautics.

00:04:45.340 --> 00:04:49.970
You don't build a
trillion different 787s

00:04:49.970 --> 00:04:53.720
and see which one
works the best.

00:04:53.720 --> 00:04:54.840
But you can in biology.

00:04:54.840 --> 00:04:56.507
And I'll give you
some examples of that.

00:04:56.507 --> 00:04:58.131
And part of the reason
we could do this

00:04:58.131 --> 00:05:00.170
is just as there's
next-generation sequencing,

00:05:00.170 --> 00:05:04.080
which you've heard
about in this course--

00:05:04.080 --> 00:05:07.430
and we were also involved
in next-generation synthesis

00:05:07.430 --> 00:05:11.040
and next-generation inserting
synthetic DNA into genomes.

00:05:11.040 --> 00:05:12.357
And you'll see all about that.

00:05:12.357 --> 00:05:13.940
There are four
different ways of doing

00:05:13.940 --> 00:05:20.120
next-generation
synthesis, and it's not

00:05:20.120 --> 00:05:22.602
important for this
particular class.

00:05:22.602 --> 00:05:24.810
And there are various ways
of doing error correction.

00:05:24.810 --> 00:05:27.645
And these are kind of analogous
to the kind of error correction

00:05:27.645 --> 00:05:31.980
that you have in electronics
and computational systems,

00:05:31.980 --> 00:05:35.100
but we won't stress
that analogy too much.

00:05:35.100 --> 00:05:37.360
Here's an example,
just practically,

00:05:37.360 --> 00:05:40.460
what you get when you build
these oligonucleotides

00:05:40.460 --> 00:05:41.430
on chips.

00:05:41.430 --> 00:05:45.520
You might get oligos up
to 300 nucleotides long.

00:05:45.520 --> 00:05:49.660
As they get longer, they tend to
accumulate errors a little bit

00:05:49.660 --> 00:05:52.570
more towards the end.

00:05:52.570 --> 00:05:55.360
And so you can see that with
the length, the number of errors

00:05:55.360 --> 00:06:01.310
goes up from 1 in 1,300
raw error rate to 1

00:06:01.310 --> 00:06:04.450
in 250 raw error rate.

00:06:04.450 --> 00:06:08.350
And then we can get rid
of some of those errors

00:06:08.350 --> 00:06:11.650
with a enzymatic system called
ErASE-- it doesn't really

00:06:11.650 --> 00:06:12.800
matter in this case.

00:06:12.800 --> 00:06:14.942
We can get to 1 in 6,000
without sequencing.

00:06:14.942 --> 00:06:16.400
And then with
sequencing, if you're

00:06:16.400 --> 00:06:18.620
willing to clone
in sequence, you

00:06:18.620 --> 00:06:20.660
can get error rates even lower.

00:06:20.660 --> 00:06:24.440
And it's important to know
that fundamental limitation.

00:06:24.440 --> 00:06:29.910
You always need to think about
background error in computing

00:06:29.910 --> 00:06:32.770
as well as synthesis.

00:06:32.770 --> 00:06:36.900
You can now do combined
synthesis and sequencing

00:06:36.900 --> 00:06:40.120
very closely by making
cis-regulatory elements, which

00:06:40.120 --> 00:06:47.290
we did in this paper that's
published-- Sri Kosuri and Dan

00:06:47.290 --> 00:06:50.250
Goodman, in particular-- where
you could basically synthesize

00:06:50.250 --> 00:06:54.940
cis-regulatory elements in
the genome or in a plasmid.

00:06:54.940 --> 00:06:57.680
And then you could read out the
RNA simply by RNA sequencing.

00:06:57.680 --> 00:06:59.896
The number of times you see
this bar code in the RNA

00:06:59.896 --> 00:07:02.270
tells you how many times that
particular construct, which

00:07:02.270 --> 00:07:05.910
could be heavily
engineered-- it isn't like

00:07:05.910 --> 00:07:09.801
randomers-- you're making
interesting, cis-regulatory

00:07:09.801 --> 00:07:10.300
elements.

00:07:10.300 --> 00:07:11.590
And you can make
10s of thousands

00:07:11.590 --> 00:07:13.256
of these-- millions
of these constructs.

00:07:13.256 --> 00:07:14.380
We did 10s of thousands.

00:07:17.060 --> 00:07:18.930
Then you can measure
protein levels

00:07:18.930 --> 00:07:20.180
as a result of cis-regulatory.

00:07:20.180 --> 00:07:22.450
So you can have
promoter elements,

00:07:22.450 --> 00:07:25.750
ribosome binding sites,
and coding region mutations

00:07:25.750 --> 00:07:30.460
that you think might
influence RNA and protein.

00:07:30.460 --> 00:07:33.230
And here we do
proteins by having

00:07:33.230 --> 00:07:35.990
two fluorescent proteins--
a red and a green.

00:07:35.990 --> 00:07:38.950
The red is the control, and it
has a very tight distribution,

00:07:38.950 --> 00:07:41.000
as you can see here.

00:07:41.000 --> 00:07:44.610
And then the green is subject
to this cis-regulatory mutations

00:07:44.610 --> 00:07:46.100
made on chips.

00:07:46.100 --> 00:07:47.570
And it has a big distribution.

00:07:47.570 --> 00:07:50.410
And you divide it up in a
fluorescence-activated sorter.

00:07:50.410 --> 00:07:51.650
And you can read it out.

00:07:51.650 --> 00:07:55.590
So here, every pixel on these
two plots for RNA and protein

00:07:55.590 --> 00:07:58.050
is a separate experiment.

00:07:58.050 --> 00:08:01.132
And you can drill down and
get some more information

00:08:01.132 --> 00:08:01.840
on each of these.

00:08:01.840 --> 00:08:04.940
But the basic idea is each
of these was individually

00:08:04.940 --> 00:08:10.520
synthesized on the chip and
individually sequenced later

00:08:10.520 --> 00:08:11.950
to determine.

00:08:11.950 --> 00:08:16.010
And the bar codes can be
read out of proportion

00:08:16.010 --> 00:08:18.302
to the RNA and
protein expression.

00:08:18.302 --> 00:08:20.510
And here's an example of
some surprises that come out

00:08:20.510 --> 00:08:27.480
of such studies-- and we're not
just doing this for our health.

00:08:27.480 --> 00:08:29.490
So, for example, when
we went into this,

00:08:29.490 --> 00:08:32.390
it was well known that
codon usage effect

00:08:32.390 --> 00:08:37.990
was correlated with, and could
even causally influence--

00:08:37.990 --> 00:08:39.990
so here's an example
of causality--

00:08:39.990 --> 00:08:42.390
the expression of a protein.

00:08:42.390 --> 00:08:47.230
If you have very commonly
used codons, which typically

00:08:47.230 --> 00:08:49.920
have high levels of the
corresponding transfer

00:08:49.920 --> 00:08:54.180
RNA in the cell, that the
observation-- and it makes

00:08:54.180 --> 00:08:56.770
sense-- is that
those proteins would

00:08:56.770 --> 00:08:58.950
be expressed at higher levels.

00:08:58.950 --> 00:09:00.810
The thing that was
new was we discovered

00:09:00.810 --> 00:09:04.370
that at the end terminus, close
to the cis-regulatory elements,

00:09:04.370 --> 00:09:05.040
it flips.

00:09:05.040 --> 00:09:06.200
It's the opposite.

00:09:06.200 --> 00:09:11.190
There's almost no correlation
with abundant codons,

00:09:11.190 --> 00:09:13.310
and there's essentially
a negative correlation

00:09:13.310 --> 00:09:18.900
here with an r squared
of 0.73, right here,

00:09:18.900 --> 00:09:27.740
that shows that there's a
higher expression with very

00:09:27.740 --> 00:09:28.890
rare codons.

00:09:28.890 --> 00:09:30.500
This was published in Science.

00:09:30.500 --> 00:09:35.340
And so a lot of them
tend to be AT-rich,

00:09:35.340 --> 00:09:38.580
but we can separate
out that component.

00:09:38.580 --> 00:09:40.840
We can separate out things
like ribosome binding

00:09:40.840 --> 00:09:43.690
sites, which are AG-rich.

00:09:43.690 --> 00:09:48.540
And there's just a general
trend where rare codons help

00:09:48.540 --> 00:09:51.086
expression if they're at
the beginning of the gene.

00:09:51.086 --> 00:09:53.460
And you could find that out
from this kind of experiment.

00:09:57.190 --> 00:10:05.430
So now we want, if we're going
to build the genome that's

00:10:05.430 --> 00:10:08.360
radically different-- let's say
"radically different," here,

00:10:08.360 --> 00:10:14.000
defined as 7 to 13 codons,
chains, genome-wide freed up--

00:10:14.000 --> 00:10:19.310
liberated-- meaning
that we use the synonyms

00:10:19.310 --> 00:10:21.360
in the genetic code.

00:10:24.480 --> 00:10:27.340
So there's anywhere
from one to six codons

00:10:27.340 --> 00:10:31.230
for each amino acid-- three
codons for stop codons.

00:10:31.230 --> 00:10:35.910
We can use that synonymous
substitution table

00:10:35.910 --> 00:10:37.590
to move things
around and completely

00:10:37.590 --> 00:10:39.755
free up-- get rid of
every instance of a UAG

00:10:39.755 --> 00:10:41.620
and turn it into UAA.

00:10:41.620 --> 00:10:43.180
That's the first example.

00:10:43.180 --> 00:10:46.300
And we did that genome-wide
and thereby derisked it.

00:10:46.300 --> 00:10:48.750
We can now build on
top of that, because we

00:10:48.750 --> 00:10:52.660
can get genomes that grow well
under a variety of conditions.

00:10:52.660 --> 00:10:54.640
They're still
genetically engineerable.

00:10:54.640 --> 00:10:57.710
And everywhere
there's a bar there,

00:10:57.710 --> 00:11:03.740
this refers to a
successful mutation

00:11:03.740 --> 00:11:05.310
in the height of
the bar as refers

00:11:05.310 --> 00:11:07.615
to the efficiency of
introducing those mutations.

00:11:10.470 --> 00:11:16.500
Now we wanted to derisk another
special category-- remember,

00:11:16.500 --> 00:11:20.710
I said AGA and AGG are
special, in that they're

00:11:20.710 --> 00:11:24.480
the rarest coding codons.

00:11:24.480 --> 00:11:26.360
So UGA is a stop codon.

00:11:26.360 --> 00:11:31.432
AGA and AGG are
arginine-encoding codons.

00:11:31.432 --> 00:11:32.390
And they're the rarest.

00:11:32.390 --> 00:11:34.590
And they also are
complicated, because they

00:11:34.590 --> 00:11:36.660
tend to represent
Shine-Dalgarno sites, which

00:11:36.660 --> 00:11:40.765
tend to be AG-rich regions
that are involved in initiation

00:11:40.765 --> 00:11:42.960
of protein synthesis.

00:11:42.960 --> 00:11:46.910
Anyway, so there, the
number was a little large

00:11:46.910 --> 00:11:50.480
to do genome-wide, so we
focused on essential genes.

00:11:50.480 --> 00:11:55.000
And so you can computationally
find all the essential genes

00:11:55.000 --> 00:12:01.770
and design strategies for
getting all the AGG and AGAs.

00:12:01.770 --> 00:12:04.925
And then when you
synthesize those genomes,

00:12:04.925 --> 00:12:07.050
you can do them one at a
time with a process called

00:12:07.050 --> 00:12:10.330
[? MAIDS, ?] which we won't
go into-- too experimental.

00:12:10.330 --> 00:12:12.130
But basically, you
can essentially just

00:12:12.130 --> 00:12:14.280
go straight from
oligos into the genome,

00:12:14.280 --> 00:12:16.834
and you can do multiple
ones simultaneously.

00:12:16.834 --> 00:12:18.625
And you can see which
ones are hard to make

00:12:18.625 --> 00:12:21.350
and which ones are easy-- again,
that's the sort of efficiency

00:12:21.350 --> 00:12:22.352
number there.

00:12:22.352 --> 00:12:24.560
You can see which ones-- if
they're selected against.

00:12:24.560 --> 00:12:26.559
And some of them were
actually selected against.

00:12:26.559 --> 00:12:28.510
We could not find them.

00:12:28.510 --> 00:12:30.550
And so these are discoveries.

00:12:30.550 --> 00:12:35.480
These are examples where
synonymous is not synonymous.

00:12:35.480 --> 00:12:39.740
It could mean that there's
some other function, hidden,

00:12:39.740 --> 00:12:43.850
layered on top of
the synonyms-- might

00:12:43.850 --> 00:12:45.300
be a ribosome binding site.

00:12:45.300 --> 00:12:49.810
And so what we find is
that we can try other,

00:12:49.810 --> 00:12:51.900
let's say other arginine
codons, rather than

00:12:51.900 --> 00:12:53.440
the one we targeted.

00:12:53.440 --> 00:12:55.700
Or you sometimes can
try out other codons

00:12:55.700 --> 00:12:58.440
that are not even synonymous.

00:12:58.440 --> 00:13:01.460
And eventually we found
every single one of them.

00:13:01.460 --> 00:13:03.510
So there were about a dozen.

00:13:03.510 --> 00:13:05.220
They were hard at
first, and then

00:13:05.220 --> 00:13:08.930
we eventually found an
engineering workaround.

00:13:08.930 --> 00:13:12.400
And that illustrates a
number of interesting points.

00:13:12.400 --> 00:13:14.640
So those were all successful
in essential genes.

00:13:14.640 --> 00:13:17.432
And it's our
observation that if you

00:13:17.432 --> 00:13:18.890
get it to work for
essential genes,

00:13:18.890 --> 00:13:20.765
getting it to work for
the nonessential genes

00:13:20.765 --> 00:13:21.900
is even easier.

00:13:21.900 --> 00:13:25.520
So then we went on, and so
that's one codon at a time,

00:13:25.520 --> 00:13:26.470
two more at time.

00:13:26.470 --> 00:13:29.130
So we've derisked three
codons at this point.

00:13:29.130 --> 00:13:35.770
So we went on to derisk all
13 codons-- or 13 of the 64.

00:13:35.770 --> 00:13:39.280
And we did that in even
smaller set of genes.

00:13:39.280 --> 00:13:42.400
So there are 290 essential
genes in E. coli.

00:13:42.400 --> 00:13:44.610
We did 42.

00:13:44.610 --> 00:13:50.200
And in that case,
there were 400.

00:13:50.200 --> 00:13:53.080
And some examples of those--
and every one of them

00:13:53.080 --> 00:13:54.490
worked except for one.

00:13:54.490 --> 00:13:58.620
And just like the arginine
codons-- that one,

00:13:58.620 --> 00:14:00.210
we tried a number
of different codons,

00:14:00.210 --> 00:14:03.760
and they worked-- including
non-synonymous codons.

00:14:03.760 --> 00:14:08.970
So in almost every case, you
can find something that works.

00:14:08.970 --> 00:14:13.045
And then we do biological
assays that the four functions

00:14:13.045 --> 00:14:17.440
that we felt should be
changed were actually changed.

00:14:17.440 --> 00:14:22.290
And here's two slides
on the virus resistance.

00:14:22.290 --> 00:14:24.340
You can do, in a
variety of ways,

00:14:24.340 --> 00:14:29.800
of determining how effective
the virus resistance is.

00:14:29.800 --> 00:14:32.260
Here you have about
a factor of 1,000

00:14:32.260 --> 00:14:36.705
for phage lambda,
which has been mutated

00:14:36.705 --> 00:14:39.000
to be highly
virulent in E. coli.

00:14:39.000 --> 00:14:42.310
This is a very pathogenic
version of phage lambda.

00:14:42.310 --> 00:14:46.010
This is T7, which is
naturally quite lytic.

00:14:46.010 --> 00:14:50.717
And you can show that this is
resistant to two of the three

00:14:50.717 --> 00:14:52.200
viruses that we tested.

00:14:52.200 --> 00:14:55.260
And our hypothesis is
if we change more codons

00:14:55.260 --> 00:14:57.620
than just-- that
was just one codon.

00:14:57.620 --> 00:15:02.090
If we change seven or so,
which is what we're doing now,

00:15:02.090 --> 00:15:03.840
then it will be resistant
to all viruses--

00:15:03.840 --> 00:15:05.730
and very heavily
resistant-- so resistant

00:15:05.730 --> 00:15:10.710
that the population
of viruses can't

00:15:10.710 --> 00:15:13.432
mutate enough to
become resistant.

00:15:13.432 --> 00:15:14.890
So all of you should
be questioning

00:15:14.890 --> 00:15:18.500
that-- do I really believe that?

00:15:18.500 --> 00:15:21.200
And we can talk about
that in the discussion.

00:15:21.200 --> 00:15:23.680
So now the other
big functionality

00:15:23.680 --> 00:15:28.870
is-- can we genetically,
metabolically isolate these?

00:15:28.870 --> 00:15:32.650
And to do this,
we took advantage

00:15:32.650 --> 00:15:34.765
of its new genetic code.

00:15:34.765 --> 00:15:37.690
Not only we've
freed up a codon, we

00:15:37.690 --> 00:15:41.862
can now make that codon
code for a new amino acid

00:15:41.862 --> 00:15:44.260
by another set of biochemistry.

00:15:44.260 --> 00:15:47.720
And here's some examples.

00:15:47.720 --> 00:15:51.030
The amino acids look kind of
like tyrosine or phenylalanine.

00:15:51.030 --> 00:15:54.510
Here's one that's
a biphenylalanine,

00:15:54.510 --> 00:15:57.330
so it's got two benzene
rings instead of one.

00:15:57.330 --> 00:15:58.470
And so it's bulkier.

00:15:58.470 --> 00:16:00.650
It's bulkier than any
other amino acid, any

00:16:00.650 --> 00:16:01.910
naturally occurring one.

00:16:01.910 --> 00:16:04.487
And we wanted to ask-- can
we make those essential genes

00:16:04.487 --> 00:16:06.070
that we've been
talking about-- can we

00:16:06.070 --> 00:16:09.080
make them addicted
to this amino acid?

00:16:09.080 --> 00:16:13.660
And so we did by this
computational protein design

00:16:13.660 --> 00:16:14.340
strategy.

00:16:14.340 --> 00:16:18.840
And the idea is we looked
through every crystal structure

00:16:18.840 --> 00:16:24.120
of every essential protein in E.
coli-- there's 129 or something

00:16:24.120 --> 00:16:29.950
like that, 120
crystal structures--

00:16:29.950 --> 00:16:32.490
and systematically
ask, were there

00:16:32.490 --> 00:16:37.030
any places where we could
fit in a larger amino acid

00:16:37.030 --> 00:16:41.300
by carving away
adjacent amino acids,

00:16:41.300 --> 00:16:46.560
such that when we then replace
that larger one with a smaller

00:16:46.560 --> 00:16:50.270
one-- still keeping its
surroundings mutated,

00:16:50.270 --> 00:16:55.210
so we could mutate it two,
three, four, eight times--

00:16:55.210 --> 00:16:56.730
however many amino
acids nearby you

00:16:56.730 --> 00:16:59.090
need to accommodate the
big amino acid-- if it

00:16:59.090 --> 00:17:01.244
no longer accommodates
the small amino acids?

00:17:01.244 --> 00:17:02.660
So you basically
systematically go

00:17:02.660 --> 00:17:08.069
through every amino acid
for every crystal structure

00:17:08.069 --> 00:17:11.380
and found a short list
of a half dozen or so

00:17:11.380 --> 00:17:12.880
that looked promising.

00:17:12.880 --> 00:17:16.420
And so the idea is, you put
in these 2-phenol groups--

00:17:16.420 --> 00:17:20.210
and now, when you accommodate
it and shrink it down,

00:17:20.210 --> 00:17:22.203
it won't work.

00:17:22.203 --> 00:17:24.020
OK, that's the basic idea.

00:17:27.400 --> 00:17:28.920
And in context,
we wanted to have

00:17:28.920 --> 00:17:30.394
a really tough test for this.

00:17:30.394 --> 00:17:33.060
We wanted to say, not only do we
want it to be addicted to this,

00:17:33.060 --> 00:17:37.515
but we don't want it to be able
to escape-- either by mutation

00:17:37.515 --> 00:17:39.609
and evolution, we don't
want it to escape.

00:17:39.609 --> 00:17:41.150
We don't want it to
be able to escape

00:17:41.150 --> 00:17:48.960
by eating it's fellow-- its
classmates-- its other E. coli.

00:17:48.960 --> 00:17:52.050
And so the test
we do is we do a--

00:17:52.050 --> 00:17:55.100
did you have a
question, anybody?

00:17:55.100 --> 00:18:01.165
We would lyse the cells--
lyse cells of a wild-type E.

00:18:01.165 --> 00:18:05.500
coli or certain
mutant strains that

00:18:05.500 --> 00:18:07.410
would produce large
amounts of these.

00:18:07.410 --> 00:18:11.550
And one of the more classic ways
of making an organism that's

00:18:11.550 --> 00:18:13.990
metabolically isolated so it
can't survive in the wild--

00:18:13.990 --> 00:18:16.680
it can only survive
in an industrial plant

00:18:16.680 --> 00:18:19.020
or in a laboratory--
and we did this

00:18:19.020 --> 00:18:22.340
with the classic ones,
which people have avoided

00:18:22.340 --> 00:18:24.640
using lysates, because it
gives them bad news, which

00:18:24.640 --> 00:18:30.116
is if you grow them on lysates,
you get a lot of survivors.

00:18:30.116 --> 00:18:31.240
These are the classic ones.

00:18:31.240 --> 00:18:37.870
The deletions of these
two genes makes them--

00:18:37.870 --> 00:18:39.760
they will still grow.

00:18:39.760 --> 00:18:45.330
But this is an example of one
of our designed, nonstandard

00:18:45.330 --> 00:18:47.080
amino acid strains.

00:18:47.080 --> 00:18:51.310
And we get much
lower escape rates.

00:18:51.310 --> 00:18:53.090
And you'll say, even
this low number here,

00:18:53.090 --> 00:18:54.680
we want to get
that down to zero.

00:18:54.680 --> 00:18:56.670
And you'll see how
we do that a moment.

00:18:56.670 --> 00:18:59.050
This is Mike Mee as
a graduate student.

00:18:59.050 --> 00:19:02.720
So here's a close-up of-- this
is not of the active site.

00:19:02.720 --> 00:19:05.030
This just could be any
place in the protein

00:19:05.030 --> 00:19:08.560
where putting in a big amino
acid is going to be disruptive.

00:19:08.560 --> 00:19:12.890
So we change this
leucine, innocent leucine,

00:19:12.890 --> 00:19:15.480
that's packed all around
with other amino acids.

00:19:15.480 --> 00:19:19.295
Have you guys done protein
design in this class at all?

00:19:19.295 --> 00:19:19.795
Yeah?

00:19:19.795 --> 00:19:21.570
OK, so you know what
I'm talking about.

00:19:21.570 --> 00:19:22.910
Rosetta, right?

00:19:22.910 --> 00:19:23.597
OK.

00:19:23.597 --> 00:19:24.930
So that's what we're using here.

00:19:24.930 --> 00:19:27.970
We had to modify it to use
nonstandard amino acids,

00:19:27.970 --> 00:19:31.180
because normally people design
proteins with 20 amino acids.

00:19:31.180 --> 00:19:34.705
So we took this leucine--
we made it into this bipA.

00:19:34.705 --> 00:19:36.330
And you can see now,
it's got all kinds

00:19:36.330 --> 00:19:38.390
of clashes-- three
initial clashes.

00:19:38.390 --> 00:19:40.120
That's not good.

00:19:40.120 --> 00:19:44.270
So we identify those clashes
and we make them smaller--

00:19:44.270 --> 00:19:45.135
no clashes anymore.

00:19:45.135 --> 00:19:46.510
This is all done
in the computer.

00:19:46.510 --> 00:19:47.670
This is all theoretical.

00:19:47.670 --> 00:19:50.775
Can you believe that?

00:19:50.775 --> 00:19:51.275
We'll see.

00:19:53.850 --> 00:19:58.842
So then-- this is putting
back in a small amino acid.

00:19:58.842 --> 00:20:00.550
These are some of the
people that did it.

00:20:00.550 --> 00:20:05.010
So Marc and Dan are
post-docs in the lab,

00:20:05.010 --> 00:20:09.420
and Ryo and Barry did
the crystallography.

00:20:09.420 --> 00:20:10.880
I'm a crystallographer
by training,

00:20:10.880 --> 00:20:13.750
but I'm a little
out of practice.

00:20:13.750 --> 00:20:18.760
So here is the design again, and
there's the electron density.

00:20:18.760 --> 00:20:20.160
So now you can
believe it, right?

00:20:20.160 --> 00:20:21.784
Because it's not just
a computer model.

00:20:21.784 --> 00:20:24.900
Well, it's still a computer
model, but it's based on data.

00:20:24.900 --> 00:20:27.670
And here's a comparison of
the design with the X-ray

00:20:27.670 --> 00:20:29.640
structure-- not too shabby.

00:20:29.640 --> 00:20:30.920
OK.

00:20:30.920 --> 00:20:37.330
But the question is, how well
does this work in living cells?

00:20:37.330 --> 00:20:41.440
So these are cells where we've
gone-- changed the whole genome

00:20:41.440 --> 00:20:45.260
so that now the stop
codon, UAG, is free.

00:20:45.260 --> 00:20:50.340
It's never used, which means
we can delete the release

00:20:50.340 --> 00:20:52.970
factor that normally recognizes
a stop codon, which otherwise

00:20:52.970 --> 00:20:54.070
would have been lethal.

00:20:54.070 --> 00:20:55.970
And we can replace it
with a transfer RNA

00:20:55.970 --> 00:21:00.220
in a tRNA synthetase that brings
in this [INAUDIBLE] amino acid.

00:21:00.220 --> 00:21:03.270
And now-- this is the one
we were just looking at,

00:21:03.270 --> 00:21:05.600
the crystal structure
in bold here.

00:21:05.600 --> 00:21:08.480
And it has an escape
frequency which

00:21:08.480 --> 00:21:14.240
is higher-- we can
crank up mutagenesis

00:21:14.240 --> 00:21:16.497
by putting it in a
mutS minus background.

00:21:16.497 --> 00:21:18.580
Basically, one of the
mismatched repair proteins--

00:21:18.580 --> 00:21:21.690
we can knock it out, which
increases, sort of accelerates,

00:21:21.690 --> 00:21:23.080
evolution.

00:21:23.080 --> 00:21:27.230
And it has a noticeable
escape frequency.

00:21:27.230 --> 00:21:32.654
So a more realistic scenario
would be this mutS plus.

00:21:32.654 --> 00:21:34.570
And we can get escape
frequencies as low as 10

00:21:34.570 --> 00:21:35.540
to the minus 8th.

00:21:35.540 --> 00:21:38.520
These are for other mutations
in that same protein.

00:21:38.520 --> 00:21:41.540
And here are mutations
in another protein.

00:21:41.540 --> 00:21:44.330
So then we said, OK, but
none of these are perfect.

00:21:44.330 --> 00:21:48.580
We want something that's
undetectable levels of escape.

00:21:48.580 --> 00:21:53.510
So how would we, how
would you, fix this?

00:21:53.510 --> 00:21:55.857
Anybody?

00:21:55.857 --> 00:21:57.690
I'm trying to encourage
you to interrupt me,

00:21:57.690 --> 00:22:00.480
so I'm interrupting you.

00:22:00.480 --> 00:22:01.980
Anybody?

00:22:01.980 --> 00:22:08.000
You've got these things
that are escaping

00:22:08.000 --> 00:22:09.350
at very low frequencies.

00:22:09.350 --> 00:22:10.590
We should be proud of that.

00:22:10.590 --> 00:22:12.131
But we want to
drive it even more.

00:22:12.131 --> 00:22:13.630
Rather than 10 to
the minus 8th, you

00:22:13.630 --> 00:22:16.050
want get down to 10 to minus
10th, or something like that.

00:22:16.050 --> 00:22:16.760
Suggestions?

00:22:16.760 --> 00:22:18.731
AUDIENCE: So this is
reversion of the mutations

00:22:18.731 --> 00:22:20.270
of the [INAUDIBLE].

00:22:20.270 --> 00:22:25.440
PROFESSOR: Well, so this means
that you can take the bipA,

00:22:25.440 --> 00:22:27.935
and you mutate the codon so it
doesn't encode bipA anymore.

00:22:27.935 --> 00:22:29.060
It encodes something else.

00:22:29.060 --> 00:22:32.710
So it doesn't need
bipA from the media.

00:22:32.710 --> 00:22:35.320
And it puts in another amino
acid, and it somehow survives.

00:22:35.320 --> 00:22:37.810
So even though it's
not a perfect fit,

00:22:37.810 --> 00:22:43.190
it does well enough
that the enzyme is made.

00:22:43.190 --> 00:22:46.070
AUDIENCE: So then modified
multiple essential genes?

00:22:46.070 --> 00:22:48.320
PROFESSOR: Multiple
essential genes-- wow.

00:22:48.320 --> 00:22:50.100
Couldn't have said
it better myself.

00:22:50.100 --> 00:22:52.200
That's what we did.

00:22:52.200 --> 00:22:57.980
So before we could choose
which two we wanted

00:22:57.980 --> 00:23:01.080
to use-- or three-- we wanted
to know what the spectrum was.

00:23:01.080 --> 00:23:04.860
So we forced in all 20
standard amino acids

00:23:04.860 --> 00:23:06.750
to replace the bipA.

00:23:06.750 --> 00:23:10.690
So we said, let's mutate them
intentionally-- synthetically--

00:23:10.690 --> 00:23:12.800
and see what the spectrum is.

00:23:12.800 --> 00:23:15.620
Now this is not going to be
the natural spectrum, the sort

00:23:15.620 --> 00:23:20.000
of mutagenic spectrum--
this is our intentional--

00:23:20.000 --> 00:23:22.190
so what we do is, we
put in each of the 20.

00:23:22.190 --> 00:23:26.340
And then we do a quick
selection at 20 doublings.

00:23:26.340 --> 00:23:29.910
It's a very fast evolution,
not three billion years.

00:23:29.910 --> 00:23:32.470
My students didn't want to wait.

00:23:32.470 --> 00:23:34.610
So in 20 doublings,
you get a spectrum

00:23:34.610 --> 00:23:37.147
of which amino acids
will substitute for bipA.

00:23:37.147 --> 00:23:38.730
In an ideal world,
none of them would.

00:23:38.730 --> 00:23:41.960
But we forced them to, and
these are the survivors.

00:23:41.960 --> 00:23:45.210
And so the ones we've
been talking about here,

00:23:45.210 --> 00:23:47.892
W, tryptofan, is what
we'll substitute for bipA.

00:23:47.892 --> 00:23:49.100
And that kind of makes sense.

00:23:49.100 --> 00:23:51.390
It's the biggest amino acid.

00:23:51.390 --> 00:23:53.335
And that works for
the [? tyrS ?],

00:23:53.335 --> 00:23:56.440
which happens to be
the tRNA sythetase.

00:23:56.440 --> 00:23:57.880
And then we picked
this other one

00:23:57.880 --> 00:24:06.130
under this big red arrow
for AdK-- adenosine kinase--

00:24:06.130 --> 00:24:08.540
[INAUDIBLE] kinase--
where there's

00:24:08.540 --> 00:24:10.950
very little tryptophan
that will work in that one.

00:24:10.950 --> 00:24:12.990
But you get some
escapees if you force

00:24:12.990 --> 00:24:16.140
it to take these hydrophobic
aliphatics like leucine.

00:24:18.710 --> 00:24:24.620
So we made the double mutant of
the-- we don't have it here--

00:24:24.620 --> 00:24:29.690
but we've made the double
mutant of the AdK and the tyrS,

00:24:29.690 --> 00:24:33.230
and it's vanishingly small.

00:24:33.230 --> 00:24:34.230
We're probably not done.

00:24:34.230 --> 00:24:35.400
We'll keep doing this.

00:24:35.400 --> 00:24:40.249
But this is the way that
you do a radical recoding

00:24:40.249 --> 00:24:41.165
and get new functions.

00:24:47.705 --> 00:24:48.830
Any questions on that part?

00:24:48.830 --> 00:24:51.468
We're going to move onto
human genome engineering.

00:24:51.468 --> 00:24:51.968
Yeah.

00:24:51.968 --> 00:24:54.129
AUDIENCE: [INAUDIBLE]
and recognize

00:24:54.129 --> 00:24:55.170
the different amino acid.

00:24:55.170 --> 00:24:57.041
PROFESSOR: Yeah, I skipped
over that because that's

00:24:57.041 --> 00:24:58.957
a little more on the
biological, a little less

00:24:58.957 --> 00:25:00.840
on the computational side.

00:25:00.840 --> 00:25:05.200
So this was a work from Peter
Shultz' lab and other groups.

00:25:05.200 --> 00:25:10.235
And what you do is you take a
synthetase that's orthogonal,

00:25:10.235 --> 00:25:12.360
meaning it's from a completely
different organism--

00:25:12.360 --> 00:25:14.920
in this case,
Methanococcus jannaschii,

00:25:14.920 --> 00:25:17.290
which is a hyperthermalphile.

00:25:17.290 --> 00:25:21.620
You take that synthetase--
it's about as far as you

00:25:21.620 --> 00:25:24.235
can get on the evolutionary
phylogenetic tree-- you bring

00:25:24.235 --> 00:25:26.420
it into E. coli.

00:25:26.420 --> 00:25:29.220
You bring in its cognate, tRNA.

00:25:29.220 --> 00:25:30.870
You change the
anticodon so that it

00:25:30.870 --> 00:25:35.910
will recognize UAG, which
is not what typically

00:25:35.910 --> 00:25:39.976
any tRNA normally recognizes.

00:25:39.976 --> 00:25:41.850
And that only works with
certain synthetases.

00:25:41.850 --> 00:25:46.780
So only certain synthetases are
blind to the anticodon-- mainly

00:25:46.780 --> 00:25:50.350
serine and leucine
synthetase is in E. coli.

00:25:50.350 --> 00:25:58.170
Anyway, so you can now
evolve the active site

00:25:58.170 --> 00:26:02.400
that binds to the
amino acid and the ATP.

00:26:02.400 --> 00:26:06.280
So the amino acid and
ATP cause the amino acid

00:26:06.280 --> 00:26:08.910
to be [INAUDIBLE]
the transfer RNA.

00:26:08.910 --> 00:26:10.730
Anyway, you can
change the active site

00:26:10.730 --> 00:26:12.540
so that now it
recognizes any amino acid

00:26:12.540 --> 00:26:14.649
you want to a first
approximation.

00:26:14.649 --> 00:26:16.440
And you could do that
through a combination

00:26:16.440 --> 00:26:22.600
of intelligent design
and random mutagenesis,

00:26:22.600 --> 00:26:25.750
and there are selections
for that as well.

00:26:25.750 --> 00:26:27.490
So in general, if
you're going to be

00:26:27.490 --> 00:26:30.690
doing random or
semirandom mutagenesis,

00:26:30.690 --> 00:26:32.322
it's always great
to have a selection

00:26:32.322 --> 00:26:34.030
so there are selections
for these things.

00:26:34.030 --> 00:26:36.840
And there now are
dozens of amino acids

00:26:36.840 --> 00:26:38.675
that work fairly well
in that scenario.

00:26:41.454 --> 00:26:43.120
The main thing that
was limiting was not

00:26:43.120 --> 00:26:45.610
the synthetase-- I mean,
you could get synthetases.

00:26:45.610 --> 00:26:47.910
It's the tRNA then had to
compete with the release

00:26:47.910 --> 00:26:51.060
factor in the stop codon or had
to compete with another tRNA

00:26:51.060 --> 00:26:53.240
if you use a
different anticodon.

00:26:53.240 --> 00:26:58.680
And so freeing up this codon
means there's no competition.

00:26:58.680 --> 00:27:03.120
And now it works about as
well as a regular amino acid.

00:27:03.120 --> 00:27:06.770
But when it has to compete,
it's at a great disadvantage.

00:27:06.770 --> 00:27:07.527
Yeah.

00:27:07.527 --> 00:27:10.866
AUDIENCE: Can you explain
why changing the genetic code

00:27:10.866 --> 00:27:14.450
will cause all virus resistance?

00:27:14.450 --> 00:27:16.450
PROFESSOR: I planted that,
but thank you anyway.

00:27:23.940 --> 00:27:26.320
So there's a genetic code
up there in circular form--

00:27:26.320 --> 00:27:29.200
probably you're more used
to seeing it in rectangular.

00:27:29.200 --> 00:27:37.900
But imagine that we've now
derisked this UAG stop codon

00:27:37.900 --> 00:27:43.580
and these AGA and AGG codons
here-- R for arginine.

00:27:43.580 --> 00:27:47.150
And we're in the process
of putting all those three

00:27:47.150 --> 00:27:51.309
codons together with another
four for serine and leucine.

00:27:51.309 --> 00:27:53.600
And remember, I said serine
and leucine is interesting,

00:27:53.600 --> 00:27:56.570
because you could swap
out the anticodon--

00:27:56.570 --> 00:27:58.310
the synthetase doesn't care.

00:27:58.310 --> 00:28:02.750
So that's why we picked those
ones-- the three rarest ones,

00:28:02.750 --> 00:28:05.480
plus four where you can
swap out the anticodon.

00:28:05.480 --> 00:28:09.600
So we could swap serine
and leucine, for example.

00:28:09.600 --> 00:28:13.110
So serine and leucine
also are examples of tRNAs

00:28:13.110 --> 00:28:15.980
that bind to six
different codons.

00:28:15.980 --> 00:28:18.920
So moving two of them
is not a big deal.

00:28:18.920 --> 00:28:20.750
So you still got four left.

00:28:20.750 --> 00:28:24.290
So anyway, imagine that we
remove them or swap them

00:28:24.290 --> 00:28:26.320
and do weird stuff with them.

00:28:26.320 --> 00:28:27.770
Every time the
phage comes in, it

00:28:27.770 --> 00:28:31.370
has lots of serines and
leucines that are using these,

00:28:31.370 --> 00:28:32.950
and arginines and stops.

00:28:32.950 --> 00:28:37.200
And every time it wants
to put in a leucine,

00:28:37.200 --> 00:28:40.580
the ribosome puts in a serine.

00:28:40.580 --> 00:28:44.570
Well, you can note, leucine
and serine aren't that similar,

00:28:44.570 --> 00:28:47.400
and that's going to cause a
mess for every single protein it

00:28:47.400 --> 00:28:48.370
makes.

00:28:48.370 --> 00:28:52.570
And there might be dozens--
maybe even hundreds

00:28:52.570 --> 00:28:55.700
for big phage-- of those codons.

00:28:55.700 --> 00:28:59.700
And so you can do the math--
that the chance of mutating

00:28:59.700 --> 00:29:03.730
one of those codons to something
that will work is fairly high.

00:29:03.730 --> 00:29:08.180
Two is squared, three
to the n power, where

00:29:08.180 --> 00:29:10.100
n is the number of
changes it has to make.

00:29:10.100 --> 00:29:15.610
And so if you make
enough changes,

00:29:15.610 --> 00:29:18.100
population sizes have to
become astronomical in order

00:29:18.100 --> 00:29:23.710
to contain one member that
has changed all of its codons

00:29:23.710 --> 00:29:25.500
the right way and
hasn't changed a bunch

00:29:25.500 --> 00:29:27.726
of codons that would be lethal.

00:29:27.726 --> 00:29:30.141
AUDIENCE: So the ones
that you chose, were they

00:29:30.141 --> 00:29:32.080
the rarest of the codons--

00:29:32.080 --> 00:29:34.412
PROFESSOR: So the first
three were the rarest.

00:29:34.412 --> 00:29:35.870
And part of that
is because we felt

00:29:35.870 --> 00:29:38.665
we would run into the
most trouble there.

00:29:38.665 --> 00:29:40.260
They may be rare for a reason.

00:29:40.260 --> 00:29:42.210
And we wanted to
discover those reasons,

00:29:42.210 --> 00:29:44.450
both for biological
curiosity, but also

00:29:44.450 --> 00:29:49.070
to derisk the
subsequent engineering.

00:29:49.070 --> 00:29:51.320
But the leucine and
serine ones are normal.

00:29:51.320 --> 00:29:53.930
They're not that rare.

00:29:53.930 --> 00:29:54.960
But we derisked them.

00:29:54.960 --> 00:29:59.780
And remember that one
where we did 13 codons

00:29:59.780 --> 00:30:01.200
on 42 essential genes?

00:30:01.200 --> 00:30:03.910
That's how we showed
that, in general, it's

00:30:03.910 --> 00:30:06.114
not toxic to individual genes.

00:30:06.114 --> 00:30:08.280
But there are examples of
things where you derisk it

00:30:08.280 --> 00:30:11.434
on individual genes and you
start making lots of them,

00:30:11.434 --> 00:30:13.350
and then you get so-called
"synthetic lethals"

00:30:13.350 --> 00:30:17.780
where various pairs
of genes conspire.

00:30:17.780 --> 00:30:21.780
But so far, most of
the deleterious nature

00:30:21.780 --> 00:30:24.360
of the genomes-- where the
genomes are a little bit slower

00:30:24.360 --> 00:30:27.020
growing-- it's usually due
to hitchhiker mutations,

00:30:27.020 --> 00:30:31.274
not due to our design-- except
in cases where it's completely

00:30:31.274 --> 00:30:32.690
not working, in
which case we have

00:30:32.690 --> 00:30:36.000
to find an alternative codon.

00:30:36.000 --> 00:30:38.160
But we have to deal
with all these things--

00:30:38.160 --> 00:30:42.180
design errors, biological
discovery, and hitchhikers.

00:30:45.550 --> 00:30:46.130
Yeah.

00:30:46.130 --> 00:30:47.505
AUDIENCE: If you've
already found

00:30:47.505 --> 00:30:50.549
that multiple, simultaneous
mutations is unlikely,

00:30:50.549 --> 00:30:52.927
works, if they all had
happened at the same time,

00:30:52.927 --> 00:30:54.843
but if you have this
engineered system, if you

00:30:54.843 --> 00:30:58.405
have some way of migrating
code to other-- you

00:30:58.405 --> 00:31:01.964
could end up with the spreading
of your non-secret codes

00:31:01.964 --> 00:31:04.250
so that you can mutate
things, one of them at a time,

00:31:04.250 --> 00:31:06.530
and accumulate.

00:31:06.530 --> 00:31:09.170
PROFESSOR: Well, so,
first of all, a phage

00:31:09.170 --> 00:31:13.120
doesn't carry
along its own code.

00:31:13.120 --> 00:31:21.060
If it did, we could preempt
that by making lethal genes--

00:31:21.060 --> 00:31:24.540
that if you bring in the
tRNA that has the old code,

00:31:24.540 --> 00:31:27.040
you activate the lethal gene.

00:31:27.040 --> 00:31:30.140
But I think you were
talking about more

00:31:30.140 --> 00:31:31.910
a Darwinian
perspective, where you

00:31:31.910 --> 00:31:34.990
have incremental changes
that allow you to slog along

00:31:34.990 --> 00:31:36.930
well enough that you
can get more mutations.

00:31:36.930 --> 00:31:40.780
The problem is, this
collection of mutations--

00:31:40.780 --> 00:31:43.340
there is no growth.

00:31:43.340 --> 00:31:46.880
Every protein is
majorly messed up.

00:31:46.880 --> 00:31:50.940
And so you're not talking about,
say, antibiotic resistance,

00:31:50.940 --> 00:31:54.070
where there will be kind of
a gradient of antibiotics.

00:31:54.070 --> 00:31:55.820
And somewhere on the
edge of the gradient,

00:31:55.820 --> 00:31:59.320
there will be just enough
antibiotic to be selective,

00:31:59.320 --> 00:32:00.720
but not enough to kill it.

00:32:00.720 --> 00:32:03.610
This is something where, the
instant they get into the cell,

00:32:03.610 --> 00:32:04.450
there's no gradient.

00:32:04.450 --> 00:32:08.445
They only have one code choice,
and that code is something--

00:32:08.445 --> 00:32:10.820
I think the difference between
this and regular evolution

00:32:10.820 --> 00:32:14.680
is, regular evolution-- if the
bacteria tried this strategy,

00:32:14.680 --> 00:32:16.560
it would be changing
a little bit at a time

00:32:16.560 --> 00:32:18.380
and the phage be
keeping up with it.

00:32:18.380 --> 00:32:22.900
But we took it offline, so to
speak, did major code revision,

00:32:22.900 --> 00:32:24.190
and moved it back.

00:32:24.190 --> 00:32:27.880
And the phage was not watching.

00:32:27.880 --> 00:32:31.750
And the phage isn't as
intelligent as hackers are.

00:32:31.750 --> 00:32:35.564
OK, any other questions?

00:32:35.564 --> 00:32:36.730
We could stay on this topic.

00:32:36.730 --> 00:32:39.540
We don't have to
go on to humans.

00:32:39.540 --> 00:32:43.170
OK, just for fun let's
go on to human genome.

00:32:43.170 --> 00:32:46.860
How many people here want
to have their genome edited?

00:32:46.860 --> 00:32:47.805
All right.

00:32:47.805 --> 00:32:50.180
We'll ask in just a moment
what you want to have changed.

00:32:53.170 --> 00:32:56.170
So these are some of the
tools that my colleagues and I

00:32:56.170 --> 00:32:57.350
have worked on.

00:32:57.350 --> 00:32:59.480
I've been doing this
most of my career,

00:32:59.480 --> 00:33:01.860
is coming up with new tools
for engineering genomes

00:33:01.860 --> 00:33:03.430
and sequencing genomes.

00:33:03.430 --> 00:33:05.620
And the one I've been
talking about so far

00:33:05.620 --> 00:33:09.795
is down here at the bottom--
is Rec A and Red Beta.

00:33:12.810 --> 00:33:17.760
And the star for going
forward is this Cas9 protein.

00:33:17.760 --> 00:33:22.410
But we color-coded them here
so that the recognition--

00:33:22.410 --> 00:33:24.100
the critical thing
about genome editing

00:33:24.100 --> 00:33:25.750
is finding the needle
in the haystack.

00:33:25.750 --> 00:33:27.124
You want to change
one base pair.

00:33:27.124 --> 00:33:29.510
You don't want to
change anything else.

00:33:29.510 --> 00:33:31.430
And so something has
to do that recognition.

00:33:31.430 --> 00:33:33.380
That recognition
can be Watson-Crick,

00:33:33.380 --> 00:33:36.670
so you can have
DNA-DNA-- searching

00:33:36.670 --> 00:33:40.070
through the entire genome
with DNA-DNA interactions,

00:33:40.070 --> 00:33:42.670
or RNA-DNA interactions,
or Watson-Crick,

00:33:42.670 --> 00:33:44.620
or protein-DNA
interactions, which

00:33:44.620 --> 00:33:46.370
I'm sure you've learned
about quite a bit.

00:33:46.370 --> 00:33:49.150
And so we have examples of
each of these-- two examples

00:33:49.150 --> 00:33:53.950
are RNA, in blue; two examples
of DNA, down in the box;

00:33:53.950 --> 00:33:55.470
and then all the
rest are protein,

00:33:55.470 --> 00:33:58.570
where the protein-- the
amino acid side chains

00:33:58.570 --> 00:34:00.790
are recognizing, typically,
some kind of alpha

00:34:00.790 --> 00:34:02.690
helix in the major groove.

00:34:06.670 --> 00:34:11.010
OK, so Cas9 was
something that was

00:34:11.010 --> 00:34:13.750
a nice case of computational
biology, in my opinion.

00:34:13.750 --> 00:34:20.500
It was found in 1987 in E.
coli by Ishino and colleagues.

00:34:20.500 --> 00:34:23.730
And it was essentially junk DNA.

00:34:23.730 --> 00:34:25.389
It was not conserved.

00:34:25.389 --> 00:34:28.210
It was repetitive,
which were two

00:34:28.210 --> 00:34:30.690
of the hallmarks
of junk DNA, which

00:34:30.690 --> 00:34:32.371
were very popular
talk about in 1987.

00:34:32.371 --> 00:34:34.370
They were trying to shut
down the Genome Project

00:34:34.370 --> 00:34:37.310
before it started, three
years before it started--

00:34:37.310 --> 00:34:40.120
before the NIH part of it
started-- because they didn't

00:34:40.120 --> 00:34:44.120
want to sequence anything
in the human genome that

00:34:44.120 --> 00:34:46.124
wasn't coding for proteins.

00:34:46.124 --> 00:34:46.624
I'm serious.

00:34:50.239 --> 00:34:53.570
So anyway, this languished
as junk DNA for many years.

00:34:53.570 --> 00:34:57.820
It eventually became
clear to the cognoscenti

00:34:57.820 --> 00:35:01.560
bacteriologists that it might
be an interesting, adaptive

00:35:01.560 --> 00:35:03.920
immunity-- kind of
like antibodies--

00:35:03.920 --> 00:35:06.729
rather than the fixed or
native immunity, which

00:35:06.729 --> 00:35:07.770
were restriction enzymes.

00:35:07.770 --> 00:35:10.542
So this is kind of the adaptive
version of restriction enzymes.

00:35:10.542 --> 00:35:12.000
But it still didn't
really catch on

00:35:12.000 --> 00:35:17.570
until 2013, when a
couple of my post-docs

00:35:17.570 --> 00:35:23.150
and ex-post-doc and
graduate students in January

00:35:23.150 --> 00:35:24.950
got it to work in
humans-- so moved it

00:35:24.950 --> 00:35:28.070
from bacteria to humans--
kind of a big jump.

00:35:28.070 --> 00:35:31.660
And then it became
surprisingly easy,

00:35:31.660 --> 00:35:34.950
once it made that jump, to get
it to work in every organism

00:35:34.950 --> 00:35:37.270
that we and others have tried.

00:35:37.270 --> 00:35:39.830
So now 20 different
organisms, at least,

00:35:39.830 --> 00:35:43.750
that this works in-- fungi,
plants, and even elephants.

00:35:47.220 --> 00:35:48.850
We haven't published
the elephant yet,

00:35:48.850 --> 00:35:53.150
but we have our
reasons for doing that.

00:35:53.150 --> 00:35:56.200
And the most frequently asked
question-- and this, of course,

00:35:56.200 --> 00:36:00.320
should appeal to computational
biologists trying

00:36:00.320 --> 00:36:03.780
to do design-- is,
what about off-target?

00:36:03.780 --> 00:36:06.590
And it turns out now there
are many ways of dealing

00:36:06.590 --> 00:36:10.090
with off-target-- so much
so that I would be so bold--

00:36:10.090 --> 00:36:12.560
and this is a
slight speculation--

00:36:12.560 --> 00:36:14.680
but I would say we're
currently at the point

00:36:14.680 --> 00:36:18.410
where it's almost not
measurable, the off-target.

00:36:18.410 --> 00:36:20.540
And these are the different
ways you can do it.

00:36:20.540 --> 00:36:24.700
So we started out,
in our January 2013,

00:36:24.700 --> 00:36:26.780
with theoretical, where
you would basically

00:36:26.780 --> 00:36:29.980
look for-- anybody in this
room would know immediately

00:36:29.980 --> 00:36:33.490
how to do this-- would look
for potential off-targets that

00:36:33.490 --> 00:36:35.840
are off by one or
two nucleotides

00:36:35.840 --> 00:36:38.590
and ban those from
consideration.

00:36:38.590 --> 00:36:41.920
And then you take a shorter
list and do an empirical search,

00:36:41.920 --> 00:36:43.490
because this is so inexpensive.

00:36:43.490 --> 00:36:49.070
Basically, you
have this guide RNA

00:36:49.070 --> 00:36:50.400
which is making a triple helix.

00:36:50.400 --> 00:36:52.025
It's binding the one
strand of the DNA.

00:36:52.025 --> 00:36:53.608
It's so easy to make
those guide RNAs.

00:36:53.608 --> 00:36:55.440
It's just 20 nucleotides
you have to make.

00:36:55.440 --> 00:36:57.360
You pop it into a vector
where everything else

00:36:57.360 --> 00:36:58.460
is taken care of.

00:36:58.460 --> 00:37:01.369
It's so easy to do that that
you can make a lot of them,

00:37:01.369 --> 00:37:02.660
and you do an empirical search.

00:37:02.660 --> 00:37:04.430
You find places that
are particularly

00:37:04.430 --> 00:37:09.060
hot for the right sites and very
cold for the wrong off-targets.

00:37:09.060 --> 00:37:10.930
So those are the
first two methods.

00:37:10.930 --> 00:37:16.210
Then paired nickases--
they don't make

00:37:16.210 --> 00:37:17.890
a double-strand
break, which is what

00:37:17.890 --> 00:37:19.600
it does out of the
box from nature.

00:37:19.600 --> 00:37:21.020
It makes a double-strand break.

00:37:21.020 --> 00:37:22.730
You have it make a
single-strand nick.

00:37:22.730 --> 00:37:25.190
Then you require two of these
to be coincident and near one

00:37:25.190 --> 00:37:25.690
another.

00:37:25.690 --> 00:37:27.550
It's like the concept of PCR.

00:37:27.550 --> 00:37:30.144
You have to have two primers
that are near one another.

00:37:30.144 --> 00:37:31.060
So it's a coincidence.

00:37:31.060 --> 00:37:35.290
So it's like a p squared--
if the probability is

00:37:35.290 --> 00:37:41.182
one is off by one or two
or however many it takes,

00:37:41.182 --> 00:37:43.390
the chances of getting two
such sites near each other

00:37:43.390 --> 00:37:47.050
is roughly p squared.

00:37:47.050 --> 00:37:48.970
Truncated guide RNA
is not something

00:37:48.970 --> 00:37:51.880
that you would necessarily guess
that, if you make the guide RNA

00:37:51.880 --> 00:37:53.660
smaller, it's
going to be better.

00:37:53.660 --> 00:37:55.160
But there's obviously
some optimum.

00:37:55.160 --> 00:38:00.790
If you make it too long, then
it can bind by any subset--

00:38:00.790 --> 00:38:03.390
any kind of mismatched subset.

00:38:03.390 --> 00:38:08.750
If you make it too short, then
from informatics standpoint,

00:38:08.750 --> 00:38:11.380
it doesn't have enough
bits to recognize

00:38:11.380 --> 00:38:12.490
a place in the genome.

00:38:12.490 --> 00:38:14.660
So it turned out that
the optimal length

00:38:14.660 --> 00:38:16.784
was a little bit different
from the natural length.

00:38:16.784 --> 00:38:18.100
It was about two shorter.

00:38:18.100 --> 00:38:20.810
And finally-- and
this just came out.

00:38:20.810 --> 00:38:27.080
And this is from Keith
Joung and David Liu's lab,

00:38:27.080 --> 00:38:33.190
where you get rid of the
beautiful, double-strand break

00:38:33.190 --> 00:38:34.330
capacity.

00:38:34.330 --> 00:38:36.490
You can turn into
a nickase, or you

00:38:36.490 --> 00:38:39.410
can make it completely
nonfunctinal as a nucleus

00:38:39.410 --> 00:38:41.260
and then add nucleus
domains back.

00:38:41.260 --> 00:38:43.567
And you say, well, it
seems kind of bizarre

00:38:43.567 --> 00:38:45.650
that you're doing all that
work-- that you get rid

00:38:45.650 --> 00:38:47.150
of the nucleus and
you add it back--

00:38:47.150 --> 00:38:51.030
add in a different one, the
FokI bacterial restriction

00:38:51.030 --> 00:38:52.080
in the nucleus.

00:38:52.080 --> 00:38:55.561
But it turns out this
is the way that people

00:38:55.561 --> 00:38:57.560
have taken other DNA-binding
proteins-- the zinc

00:38:57.560 --> 00:38:59.890
fingers and then
the tau proteins.

00:38:59.890 --> 00:39:04.792
And so it had to be tried,
and it works extremely well.

00:39:04.792 --> 00:39:06.250
And it's like the
paired nickases--

00:39:06.250 --> 00:39:10.260
you need two of these sites
in order to get cleavage.

00:39:10.260 --> 00:39:11.040
And stay tuned.

00:39:11.040 --> 00:39:13.240
I'm sure there's more.

00:39:13.240 --> 00:39:16.690
So I just want to close on
this idea of causality again.

00:39:16.690 --> 00:39:17.510
I opened on it.

00:39:17.510 --> 00:39:19.030
I'll close on it.

00:39:19.030 --> 00:39:24.200
Here's an example of a
double null-- myostatin

00:39:24.200 --> 00:39:28.420
double null, as the both
maternal and paternal copies

00:39:28.420 --> 00:39:29.167
are missing.

00:39:29.167 --> 00:39:31.000
There are a lot of
examples of double nulls.

00:39:31.000 --> 00:39:35.240
We could talk about some later.

00:39:35.240 --> 00:39:36.460
And they're often rare.

00:39:36.460 --> 00:39:38.454
So at one point, there
was only one person

00:39:38.454 --> 00:39:40.370
in the world that was
characterized with this.

00:39:40.370 --> 00:39:47.580
And it's hard to do a
large cohort study on this.

00:39:47.580 --> 00:39:49.150
And they weren't really sick.

00:39:49.150 --> 00:39:54.570
The phenotype-- this little
baby had heavy musculature,

00:39:54.570 --> 00:39:58.490
as if he was working out next
to Arnold Schwarzenegger.

00:39:58.490 --> 00:40:03.050
But he came out this way,
and he stayed that way.

00:40:03.050 --> 00:40:04.472
But it's striking.

00:40:04.472 --> 00:40:05.930
You look at the
genome and you say,

00:40:05.930 --> 00:40:08.940
wow-- a double null and a
highly conserved protein.

00:40:08.940 --> 00:40:10.634
That's got to mean something.

00:40:10.634 --> 00:40:12.050
And then you can
have a hypothesis

00:40:12.050 --> 00:40:15.950
of what it means based on what
was known about that pathway.

00:40:15.950 --> 00:40:17.490
And it coincides
with the phenotype.

00:40:17.490 --> 00:40:18.990
And so you have a
strong hypothesis,

00:40:18.990 --> 00:40:20.490
and you can test it in animals.

00:40:20.490 --> 00:40:23.490
And so here, you
don't normally test it

00:40:23.490 --> 00:40:24.920
in three different
animal species.

00:40:24.920 --> 00:40:30.040
But this one, there happened to
be either preexisting or easy

00:40:30.040 --> 00:40:33.190
tests in cows, dogs, and mice.

00:40:36.750 --> 00:40:39.030
So that's one thing you
can do to get a causality.

00:40:39.030 --> 00:40:40.404
And the other
thing is, there are

00:40:40.404 --> 00:40:42.385
cases where the animal
models don't work.

00:40:42.385 --> 00:40:44.010
Either you knew in
advance they weren't

00:40:44.010 --> 00:40:47.860
going to work because they
don't have that brain structure.

00:40:47.860 --> 00:40:49.522
There's nothing
other than humans

00:40:49.522 --> 00:40:51.480
that have a particular
kind of brain structure,

00:40:51.480 --> 00:40:55.030
so it's hard to make mutants,
because you're already

00:40:55.030 --> 00:40:57.400
a mutant.

00:40:57.400 --> 00:41:03.490
And so another option is
organs on chips or organoids,

00:41:03.490 --> 00:41:06.690
because they're not really
fully physiologically faithful.

00:41:06.690 --> 00:41:11.590
And this, at least, is human,
but just like animal models

00:41:11.590 --> 00:41:13.860
can have artifacts,
human organoids

00:41:13.860 --> 00:41:15.372
can have artifacts as well.

00:41:15.372 --> 00:41:16.830
Here's an example
of something that

00:41:16.830 --> 00:41:21.490
will be coming out in a few
days that we did together

00:41:21.490 --> 00:41:25.780
with Keith Parker's
lab and Bill Pu's lab.

00:41:25.780 --> 00:41:28.250
And I think this
is a nice example

00:41:28.250 --> 00:41:30.870
of where you can take a
hypothesis, where one base here

00:41:30.870 --> 00:41:37.300
is changed-- this G
right here, is deleted--

00:41:37.300 --> 00:41:40.950
and that's putatively what
causes this cardiomyopathy that

00:41:40.950 --> 00:41:42.920
affects mitochondrial function.

00:41:42.920 --> 00:41:47.260
And you can mutate that
using the CRISPR technology

00:41:47.260 --> 00:41:49.510
I was talking about, where
you use homologous remedies

00:41:49.510 --> 00:41:51.710
to go in, find that
one base, change it.

00:41:51.710 --> 00:41:53.850
Or you can just make
a mess near there.

00:41:53.850 --> 00:41:56.190
So one control is
to not change it,

00:41:56.190 --> 00:41:59.670
and the other control is to put
a little insertion, deletion

00:41:59.670 --> 00:42:01.020
in there.

00:42:01.020 --> 00:42:04.250
And of course that
messes it up as well.

00:42:04.250 --> 00:42:11.390
And so you've now constructed
three isogenic strains.

00:42:11.390 --> 00:42:12.940
These are actually my cells.

00:42:12.940 --> 00:42:17.480
In the Personal Genome Project,
we take volunteers like myself

00:42:17.480 --> 00:42:18.974
and establish stem cell lines.

00:42:18.974 --> 00:42:20.390
And then from the
stem cell lines,

00:42:20.390 --> 00:42:23.620
we can establish, in this
case, very well-ordered

00:42:23.620 --> 00:42:26.680
cardiac tissue we'll
see in the next slide.

00:42:26.680 --> 00:42:31.860
And that cardiac tissue, you
can test for lipid biochemistry,

00:42:31.860 --> 00:42:35.990
for other physiological
parameters,

00:42:35.990 --> 00:42:39.160
for the morphology and
the contractility-- so

00:42:39.160 --> 00:42:43.609
diastole and systole that you
get in the cardiac muscle.

00:42:43.609 --> 00:42:45.650
So you basically make
something where you've only

00:42:45.650 --> 00:42:47.470
changed one base
pair in my genome,

00:42:47.470 --> 00:42:51.210
and we've made, essentially,
a version of me that's mutant.

00:42:51.210 --> 00:42:55.120
Unfortunately, I don't think
I had the picture of that.

00:42:55.120 --> 00:42:56.160
I thought I did.

00:43:03.390 --> 00:43:04.480
Oh, there it is.

00:43:07.070 --> 00:43:08.950
So here's an
example-- how you get

00:43:08.950 --> 00:43:11.790
this beautiful, ribbon-like
striated pattern

00:43:11.790 --> 00:43:14.620
that you expect
of cardiac muscle.

00:43:14.620 --> 00:43:17.540
This is programmed from
my fibroblast turned

00:43:17.540 --> 00:43:19.795
into stem cells into muscle.

00:43:19.795 --> 00:43:21.670
And then if you introduce
the two mutations--

00:43:21.670 --> 00:43:25.120
either the one that corresponds
to a patient or one that's just

00:43:25.120 --> 00:43:28.920
a mess-- you get a
morphological mess.

00:43:28.920 --> 00:43:32.020
And then you can restore those
by putting in the messenger

00:43:32.020 --> 00:43:36.580
RNA that will cover
for the mutation.

00:43:36.580 --> 00:43:41.330
So I'm going to open it up
for questions at that point.

00:43:41.330 --> 00:43:45.576
That's causality-- I think.

00:43:45.576 --> 00:43:46.075
Questions?

00:43:48.870 --> 00:43:50.556
While we're waiting,
anybody wants

00:43:50.556 --> 00:43:51.930
to volunteer what
they would like

00:43:51.930 --> 00:43:54.860
to change about themselves?

00:43:54.860 --> 00:43:56.970
You can mention a
specific base pair or kind

00:43:56.970 --> 00:44:02.122
of a general idea of what
you'd like to change,

00:44:02.122 --> 00:44:04.580
whether you think there's any
safety considerations that we

00:44:04.580 --> 00:44:05.720
should keep in mind.

00:44:09.224 --> 00:44:10.890
AUDIENCE: The problem's
delivery, right?

00:44:10.890 --> 00:44:11.370
That's the--

00:44:11.370 --> 00:44:11.825
PROFESSOR: Delivery.

00:44:11.825 --> 00:44:12.757
AUDIENCE: Yeah.

00:44:12.757 --> 00:44:14.190
PROFESSOR: Yeah, fair enough.

00:44:14.190 --> 00:44:21.190
So gene therapy had a crack.

00:44:21.190 --> 00:44:22.565
People were a
little overanxious,

00:44:22.565 --> 00:44:27.280
a little overambitious
about over a decade ago.

00:44:27.280 --> 00:44:34.000
And a small number of
patients died from cancers,

00:44:34.000 --> 00:44:36.000
because there was
random integration.

00:44:36.000 --> 00:44:37.902
Rather than this precise
genome manipulation

00:44:37.902 --> 00:44:39.360
we're talking about
here, there was

00:44:39.360 --> 00:44:41.370
kind of random
lentiviral integration

00:44:41.370 --> 00:44:43.580
of extra copies of genes.

00:44:43.580 --> 00:44:45.150
And if you land in
the wrong place,

00:44:45.150 --> 00:44:48.500
then your lentiviral
or retroviral promoter

00:44:48.500 --> 00:44:51.920
will go off into
oncogenes, like LMO2.

00:44:51.920 --> 00:44:54.060
So that delivery
was viral delivery,

00:44:54.060 --> 00:44:55.990
and it was random integration.

00:44:55.990 --> 00:44:57.710
We now have delivery
mechanisms that

00:44:57.710 --> 00:45:01.180
are nonintegrative or
integrative in a specific place

00:45:01.180 --> 00:45:05.642
or, in this case, can make
precise base pair changes.

00:45:05.642 --> 00:45:07.100
So there's two
levels of delivery--

00:45:07.100 --> 00:45:08.440
one is to get it to
the right tissue,

00:45:08.440 --> 00:45:10.580
and the other is to get
it to the right base pair.

00:45:10.580 --> 00:45:14.580
I think both are
semisolved problems.

00:45:14.580 --> 00:45:17.970
So you can do ex vivo delivery.

00:45:17.970 --> 00:45:20.100
So you can take T
cells out of a body.

00:45:20.100 --> 00:45:23.370
You can use a previous
generation-- the zinc finger

00:45:23.370 --> 00:45:26.700
nucleus-- to cleave both
copies of the CCR5 gene.

00:45:26.700 --> 00:45:31.120
And now people that
had full-blown AIDS,

00:45:31.120 --> 00:45:33.220
you put these T cells
back in their body,

00:45:33.220 --> 00:45:35.800
and then now they're
AIDS resistant.

00:45:35.800 --> 00:45:38.990
Those T cells that have
both copies of the CCR5 gene

00:45:38.990 --> 00:45:46.810
missing, which is the AIDS
coreceptor, are now resistant.

00:45:46.810 --> 00:45:48.040
So that's ex vivo.

00:45:48.040 --> 00:45:49.980
That's one way to do it.

00:45:49.980 --> 00:45:51.970
Delivery to the
liver is quite easy.

00:45:51.970 --> 00:45:54.780
You can do that with
nonviral vectors,

00:45:54.780 --> 00:45:57.290
and a [INAUDIBLE] virus is
one that's very popular.

00:45:57.290 --> 00:45:59.970
You can get it to go to
almost every cell in the body,

00:45:59.970 --> 00:46:02.826
either selectively or generally.

00:46:02.826 --> 00:46:05.075
So you just want to make
sure that once it goes there,

00:46:05.075 --> 00:46:08.626
it doesn't cause any
damage other than the base

00:46:08.626 --> 00:46:09.625
pair you want to change.

00:46:12.930 --> 00:46:16.740
So there are now 2,000
gene therapy trials

00:46:16.740 --> 00:46:19.396
in phase one, two, and three.

00:46:19.396 --> 00:46:21.520
It's a big change
from a decade ago,

00:46:21.520 --> 00:46:25.645
where I think people had pretty
much given up on gene therapy.

00:46:25.645 --> 00:46:27.520
There's now 2,000
clinical trials.

00:46:27.520 --> 00:46:31.920
And one has emerged all
the way out of phase three

00:46:31.920 --> 00:46:35.690
into full approval in Europe.

00:46:35.690 --> 00:46:40.580
Ironically, they now have
genetically engineered humans

00:46:40.580 --> 00:46:43.950
in a land where they don't eat
genetically modified foods.

00:46:47.010 --> 00:46:50.550
But I think they're
better for it So far, it's

00:46:50.550 --> 00:46:52.910
curing diseases.

00:46:52.910 --> 00:46:53.410
Yeah.

00:46:53.410 --> 00:46:56.812
AUDIENCE: For your
noncanonical amino acids,

00:46:56.812 --> 00:46:59.890
does this open up
enzymatic reactions that

00:46:59.890 --> 00:47:02.158
would be, say,
impossible, do you think,

00:47:02.158 --> 00:47:07.020
with if you add a new amino
acid that can [INAUDIBLE]?

00:47:07.020 --> 00:47:10.270
PROFESSOR: So I'll just repeat
the question for our viewing

00:47:10.270 --> 00:47:12.820
audience.

00:47:12.820 --> 00:47:16.480
Do nonstandard amino acids open
up new enzymatic reactions?

00:47:16.480 --> 00:47:20.160
And there's already a couple
of examples in the literature.

00:47:20.160 --> 00:47:23.352
This was done prior to this
wonderful strain, where

00:47:23.352 --> 00:47:24.310
there's no competition.

00:47:24.310 --> 00:47:26.162
It was done at low efficiency.

00:47:26.162 --> 00:47:28.370
But putting in one amino
acid at low efficiency-- you

00:47:28.370 --> 00:47:30.190
could still get an enzyme.

00:47:30.190 --> 00:47:33.870
So even if it's,
like, 10% efficiency,

00:47:33.870 --> 00:47:36.350
you produce 10 times as
much enzyme, and it works.

00:47:36.350 --> 00:47:39.220
So there were some
redox-coumarin derivatives

00:47:39.220 --> 00:47:40.920
of amino acids.

00:47:40.920 --> 00:47:43.420
So coumarin-redox
capabilities is not

00:47:43.420 --> 00:47:46.040
present in any of the
other amino acids.

00:47:46.040 --> 00:47:51.730
And they took a protein that
was very well studied-- where

00:47:51.730 --> 00:47:55.980
they had by protein design,
and by random mutagenesis,

00:47:55.980 --> 00:47:58.610
and they threw the book
at it-- and they could not

00:47:58.610 --> 00:48:03.220
budge the activity beyond
the apparently optimal,

00:48:03.220 --> 00:48:05.900
naturally occurring activity.

00:48:05.900 --> 00:48:08.410
They put in this amino
acid, which was not randomly

00:48:08.410 --> 00:48:11.600
chosen-- it was a redox-coumarin
derivative-- they put it

00:48:11.600 --> 00:48:15.380
in the active site.

00:48:15.380 --> 00:48:18.562
I think they tried out a
few different things that

00:48:18.562 --> 00:48:20.020
made a small
combinatorial library.

00:48:20.020 --> 00:48:23.370
But the point is, they
got a tenfold improvement

00:48:23.370 --> 00:48:25.740
in the catalytic rate constants.

00:48:25.740 --> 00:48:27.170
So that's an example.

00:48:27.170 --> 00:48:29.370
Another example, which
isn't really catalytic,

00:48:29.370 --> 00:48:33.400
but it's very popular, is that
you can put in polyethylene

00:48:33.400 --> 00:48:40.290
glycol-modified amino
acids wherever you want

00:48:40.290 --> 00:48:41.510
rather than kind of randomly.

00:48:41.510 --> 00:48:42.760
You can put it in precisely.

00:48:42.760 --> 00:48:47.480
And this will greatly
extend the serum half-life,

00:48:47.480 --> 00:48:51.910
so that normal proteins like
human growth hormone, which

00:48:51.910 --> 00:48:55.655
is a approved pharmaceutical
for certain uses--

00:48:55.655 --> 00:48:58.920
not all the uses that you find
on the internet, but other

00:48:58.920 --> 00:49:03.010
uses-- but it turns over
very quickly in the serum.

00:49:03.010 --> 00:49:05.540
And so if you put a polyethylene
glycol in the right place

00:49:05.540 --> 00:49:08.190
on human growth hormone--
or other human protein

00:49:08.190 --> 00:49:11.040
pharmaceuticals--
they last longer.

00:49:11.040 --> 00:49:14.580
Those are two examples-- one
of them definitely active site.

00:49:17.050 --> 00:49:17.550
Yeah.

00:49:17.550 --> 00:49:19.258
AUDIENCE: This is
actually a small detail

00:49:19.258 --> 00:49:22.144
from your [INAUDIBLE]
study, where

00:49:22.144 --> 00:49:26.369
you looked at the structure and
mutated one of the amino acids

00:49:26.369 --> 00:49:28.348
to this phenyl
thing, and then you

00:49:28.348 --> 00:49:29.848
changed a bunch of
other amino acids

00:49:29.848 --> 00:49:31.836
to compensate for that size.

00:49:31.836 --> 00:49:36.425
So I noticed most of the changes
were to either [INAUDIBLE],

00:49:36.425 --> 00:49:37.800
but one of them
was a tryptophan.

00:49:37.800 --> 00:49:39.241
So why was that?

00:49:39.241 --> 00:49:40.615
PROFESSOR: Let's
go back to that,

00:49:40.615 --> 00:49:43.267
and see if we can find that.

00:49:43.267 --> 00:49:44.758
AUDIENCE: It was
a previous slide.

00:49:44.758 --> 00:49:45.752
Yeah, this one.

00:49:45.752 --> 00:49:50.730
So it was amino acid 271.

00:49:50.730 --> 00:49:51.580
PROFESSOR: Yeah, OK.

00:49:51.580 --> 00:49:54.666
So in each of these lines--
I didn't spend much time

00:49:54.666 --> 00:49:56.040
on this-- in each
of these lines,

00:49:56.040 --> 00:49:59.410
there's one amino acid
we've changed to bipA.

00:49:59.410 --> 00:50:02.670
So these three are
all the same protein,

00:50:02.670 --> 00:50:06.890
and it's all the same
mutation-- leucine 303 to bipA.

00:50:06.890 --> 00:50:09.420
And then all the other
ones are compensating.

00:50:09.420 --> 00:50:14.010
And then here, you can see
it's a different leucine

00:50:14.010 --> 00:50:16.570
and a different protein.

00:50:16.570 --> 00:50:18.600
They're all leucines--
different proteins.

00:50:18.600 --> 00:50:20.595
Now what's your question about?

00:50:20.595 --> 00:50:22.920
AUDIENCE: My question
was the compensating

00:50:22.920 --> 00:50:25.710
mutations are generally all
the smaller amino acids, right?

00:50:25.710 --> 00:50:26.623
PROFESSOR: Oh, I see.

00:50:26.623 --> 00:50:28.122
So why phenylalanine
and tryptophan?

00:50:28.122 --> 00:50:29.358
AUDIENCE: Yeah.

00:50:29.358 --> 00:50:32.990
PROFESSOR: Well, those
are pretty close.

00:50:32.990 --> 00:50:36.600
So these are done by
energy, not by eyeball.

00:50:36.600 --> 00:50:40.130
They're done all by
COMP ROSETTA, where

00:50:40.130 --> 00:50:43.990
we combinatorially go
through lots of side chains.

00:50:43.990 --> 00:50:45.750
So we combinatorially
went through lots

00:50:45.750 --> 00:50:49.650
of proteins, lots of positions
to substitute amino acid,

00:50:49.650 --> 00:50:53.200
then lots of accommodating
mutations-- which

00:50:53.200 --> 00:50:56.840
is not necessarily the typical
way you use this software.

00:50:56.840 --> 00:50:59.410
Anyway, that probably
is some stacking

00:50:59.410 --> 00:51:05.656
of one of the two aromatic
rings onto the tryptophan.

00:51:05.656 --> 00:51:06.156
Yeah.

00:51:10.490 --> 00:51:12.360
And we tried many combinations.

00:51:12.360 --> 00:51:14.780
No doubt, we tried
the phenylalanine

00:51:14.780 --> 00:51:16.750
and the tryptophan in
various combinations

00:51:16.750 --> 00:51:18.410
with the other ones, and
the tryptophan empirically

00:51:18.410 --> 00:51:19.010
works better.

00:51:22.310 --> 00:51:24.160
MODERATOR: Are there
any more questions?