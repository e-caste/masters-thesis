WEBVTT

00:00:06.770 --> 00:00:42.070
[MUSIC PLAYING]

00:00:42.070 --> 00:00:46.020
PROFESSOR: Last time, we
began the discussion of

00:00:46.020 --> 00:00:50.510
discreet-time processing of
continuous-time signals.

00:00:50.510 --> 00:00:56.170
And, as a reminder, let me
review the basic notion.

00:00:56.170 --> 00:01:03.880
The idea was that we convert
from a continuous-time signal

00:01:03.880 --> 00:01:09.900
to a sequence through an
operation which I represent as

00:01:09.900 --> 00:01:12.890
a continuous to discrete
time converter.

00:01:12.890 --> 00:01:22.740
And then that sequence is used
as the input to an appropriate

00:01:22.740 --> 00:01:25.000
discreet-time system.

00:01:25.000 --> 00:01:29.250
And after appropriate
discreet-time processing, that

00:01:29.250 --> 00:01:35.820
sequence is converted back to
a continuous-time signal

00:01:35.820 --> 00:01:40.960
through an operation which
I label as a discrete to

00:01:40.960 --> 00:01:44.180
continuous time converter.

00:01:44.180 --> 00:01:49.630
Now, in the lecture last time,
we carried out some analysis

00:01:49.630 --> 00:01:54.910
which related for us the spectra
in the first step of

00:01:54.910 --> 00:01:56.250
this operation.

00:01:56.250 --> 00:02:00.730
Namely in the transformation
from a continuous-time time

00:02:00.730 --> 00:02:03.520
signal to a sequence.

00:02:03.520 --> 00:02:07.290
And let me, by the way, draw
your attention to the fact

00:02:07.290 --> 00:02:12.970
that, in the real world, this
operation is essentially

00:02:12.970 --> 00:02:17.540
implemented by what you would
typically label as an analog

00:02:17.540 --> 00:02:21.430
to digital converter, if in
fact the discreet-time

00:02:21.430 --> 00:02:23.990
processing is being
done digitally.

00:02:23.990 --> 00:02:26.290
Now, it's important to emphasize
that it's not

00:02:26.290 --> 00:02:30.290
exactly what an analog to
digital converter does, but,

00:02:30.290 --> 00:02:34.060
in some sense at least, you
should think of this mapping

00:02:34.060 --> 00:02:37.180
from continuous-time to
discreet-time in very much the

00:02:37.180 --> 00:02:39.070
same way that one would
think of an

00:02:39.070 --> 00:02:40.760
analog to digital converter.

00:02:40.760 --> 00:02:47.790
And the mapping back then
corresponds, in some sense, to

00:02:47.790 --> 00:02:52.330
what would happen with a digital
to analog converter.

00:02:52.330 --> 00:02:56.620
Well, let me review what is
involved in the mapping from

00:02:56.620 --> 00:02:59.460
the continuous-time signal
to the sequence.

00:02:59.460 --> 00:03:04.470
And, let me stress again that,
this operation is basically--

00:03:04.470 --> 00:03:07.400
in the continuous to
discreet-time conversion--

00:03:07.400 --> 00:03:10.170
a two-step process.

00:03:10.170 --> 00:03:13.940
In the first part of the
process, the continuous-time

00:03:13.940 --> 00:03:20.740
signal is modulated with impulse
train, where the

00:03:20.740 --> 00:03:25.510
period of the impulse train is
capital T. And so we have a

00:03:25.510 --> 00:03:29.980
continuous-time time impulse
train signal which captures

00:03:29.980 --> 00:03:35.470
the samples of the original
continuous-time signal.

00:03:35.470 --> 00:03:42.280
That impulse train is then put
through an operation which,

00:03:42.280 --> 00:03:49.100
essentially, re-labels the
samples so that the sample

00:03:49.100 --> 00:03:55.400
values, the impulse areas, are
re-labeled as sequence values.

00:03:55.400 --> 00:03:59.520
And the result of that
conversion is then the

00:03:59.520 --> 00:04:02.020
sequence x of n.

00:04:02.020 --> 00:04:06.930
So the overall process, then,
is a sampling process,

00:04:06.930 --> 00:04:10.610
followed by what is simply,
in this box,

00:04:10.610 --> 00:04:12.510
a re-labeling process.

00:04:12.510 --> 00:04:18.110
And, although as I indicated
just a minute ago, that is

00:04:18.110 --> 00:04:21.100
essentially what an analog to
digital converter does.

00:04:21.100 --> 00:04:24.770
An analog to digital converter
doesn't necessarily carry it

00:04:24.770 --> 00:04:30.280
out in those two steps, but
particularly, in terms of

00:04:30.280 --> 00:04:33.610
carrying through an analysis,
thinking of it as a two-step

00:04:33.610 --> 00:04:36.890
process is particularly
convenient.

00:04:36.890 --> 00:04:43.200
Now we talked last time about
what this mapping from

00:04:43.200 --> 00:04:46.370
continuous-time to discreet-time
means, both in

00:04:46.370 --> 00:04:49.210
the time domain, and terms
of the spectra.

00:04:49.210 --> 00:04:53.530
And in particular, in the time
domain we begin with the

00:04:53.530 --> 00:04:58.550
continuous-time signal, which
is then sampled with an

00:04:58.550 --> 00:05:04.010
impulse train and converted
to a sequence by simply

00:05:04.010 --> 00:05:08.020
generating a sequence
whose values are the

00:05:08.020 --> 00:05:10.490
areas of the impulses.

00:05:10.490 --> 00:05:14.420
And I stress the fact that
what this corresponds to,

00:05:14.420 --> 00:05:17.620
essentially, is a normalization
of the time

00:05:17.620 --> 00:05:23.950
axis, essentially, by dividing
the time axis by capital T.

00:05:23.950 --> 00:05:29.430
In the frequency domain, then,
we had the spectrum of the

00:05:29.430 --> 00:05:33.150
original signal, which, because
of the sampling

00:05:33.150 --> 00:05:40.210
process, is replicated at
integer multiples of the

00:05:40.210 --> 00:05:45.780
sampling frequency omega sub s,
or 2 pi over capital T. And

00:05:45.780 --> 00:05:51.480
then, in converting the impulses
to a sequence, we are

00:05:51.480 --> 00:05:57.150
essentially normalizing the
frequency axis, so that the

00:05:57.150 --> 00:06:01.970
frequency 2 pi over capital
T gets re-labeled as 2 pi.

00:06:01.970 --> 00:06:05.130
And the resulting discreet-time
spectrum looks

00:06:05.130 --> 00:06:07.110
like I indicate here.

00:06:07.110 --> 00:06:12.310
Which really is nothing more
than a frequency scaling

00:06:12.310 --> 00:06:15.140
corresponding to the associated
time scaling.

00:06:15.140 --> 00:06:19.070
So the mapping from the impulse
train spectrum to the

00:06:19.070 --> 00:06:23.450
discreet-time spectrum
corresponds to a mapping

00:06:23.450 --> 00:06:27.620
specified by capital omega equal
to small omega times

00:06:27.620 --> 00:06:29.800
capital T.

00:06:29.800 --> 00:06:35.470
And equivalently, it's the
frequency 2 pi over capital T,

00:06:35.470 --> 00:06:39.670
which is, of course, the
sampling frequency which gets

00:06:39.670 --> 00:06:44.730
normalized to the
frequency 2 pi.

00:06:44.730 --> 00:06:49.070
And so, in the frequency domain,
there is a frequency

00:06:49.070 --> 00:06:55.620
normalization associated with
the fact that corresponding to

00:06:55.620 --> 00:07:01.290
this spectrum is a time sequence
or discreet-time

00:07:01.290 --> 00:07:05.030
sequence, as I showed
previously, and the

00:07:05.030 --> 00:07:10.900
discreet-time sequence is
related to the original

00:07:10.900 --> 00:07:16.600
continuous-time signal through
a time normalization.

00:07:16.600 --> 00:07:22.840
In other words, these sequence
values are simply samples of

00:07:22.840 --> 00:07:26.510
the continuous-time signal
with the time axis

00:07:26.510 --> 00:07:27.760
renormalized.

00:07:30.090 --> 00:07:31.910
Now, what we want
to consider--

00:07:31.910 --> 00:07:34.070
this is the conversion from
continuous-time to

00:07:34.070 --> 00:07:35.260
discreet-time--

00:07:35.260 --> 00:07:39.960
what we want to consider now
is the overall system which

00:07:39.960 --> 00:07:42.960
implements not just the
conversion, but filtering, and

00:07:42.960 --> 00:07:45.360
then coming back out of
the conversion back to

00:07:45.360 --> 00:07:47.630
continuous-time.

00:07:47.630 --> 00:07:51.400
So let's look at the
overall system.

00:07:51.400 --> 00:07:55.610
And the overall system, of
course, as I've stressed

00:07:55.610 --> 00:08:01.080
several times in the past,
consists of first, the

00:08:01.080 --> 00:08:09.980
sampling process, conversion to
an impulse train, and the

00:08:09.980 --> 00:08:13.530
impulse train converted
to a sequence.

00:08:13.530 --> 00:08:18.430
That sequence is then processed
through our

00:08:18.430 --> 00:08:21.180
discreet-time filter.

00:08:21.180 --> 00:08:25.770
And after the discreet-time time
processing, the result of

00:08:25.770 --> 00:08:30.700
that is converted back
to an impulse train.

00:08:30.700 --> 00:08:35.710
So this resulting process
sequence is then converted

00:08:35.710 --> 00:08:37.980
back to an impulse train.

00:08:37.980 --> 00:08:43.700
And then, finally, we carry out
the desampling process by

00:08:43.700 --> 00:08:49.900
simply using a low-pass filter
with a cutoff associated with

00:08:49.900 --> 00:08:53.170
the sampling frequency
that we used.

00:08:53.170 --> 00:08:57.620
Now, typically in a system like
that-- which implements

00:08:57.620 --> 00:09:01.690
discreet-time processing of
continuous-time time signals--

00:09:01.690 --> 00:09:07.030
we need to ensure in one way or
another that the bandwidth

00:09:07.030 --> 00:09:10.100
of the input is sufficiently
limited, so

00:09:10.100 --> 00:09:12.010
that we avoid aliasing.

00:09:12.010 --> 00:09:16.300
One way to do that is to force
it one way or another, or

00:09:16.300 --> 00:09:19.190
simply know that our signal
satisfies the bandwidth

00:09:19.190 --> 00:09:20.160
constraint.

00:09:20.160 --> 00:09:24.190
Although, a fairly typical thing
to do in addition to

00:09:24.190 --> 00:09:30.770
this sampling process is to
include what is referred to an

00:09:30.770 --> 00:09:33.440
anti-aliasing filter.

00:09:33.440 --> 00:09:37.580
In other words, this is a filter
that would band-limit

00:09:37.580 --> 00:09:43.090
the input at at least half the
sampling frequency, so that we

00:09:43.090 --> 00:09:47.850
are guaranteed, then, that there
is no aliasing that's

00:09:47.850 --> 00:09:50.400
carried out in this process.

00:09:50.400 --> 00:09:55.000
And it's important to stress
that, in this kind of

00:09:55.000 --> 00:09:55.610
processing--

00:09:55.610 --> 00:09:59.190
discreet-time processing of
continuous-time signals--

00:09:59.190 --> 00:10:02.400
except in certain special
situations, it's very

00:10:02.400 --> 00:10:06.750
important to avoid aliasing
because we're going to want to

00:10:06.750 --> 00:10:09.660
do a reconstruction after
we do the sampling and

00:10:09.660 --> 00:10:10.910
processing.

00:10:13.260 --> 00:10:17.070
OK, now, this is the sequence
of steps in the time domain.

00:10:17.070 --> 00:10:20.610
Let's examine what happens as
a consequence of this in the

00:10:20.610 --> 00:10:23.240
frequency domain.

00:10:23.240 --> 00:10:26.730
Well, let's choose some
type of simple

00:10:26.730 --> 00:10:28.500
representative spectrum.

00:10:28.500 --> 00:10:32.320
And, of course, what's important
about it is that the

00:10:32.320 --> 00:10:35.620
spectrum we choose is
band-limited, or that there's

00:10:35.620 --> 00:10:37.470
an anti-aliasing filter.

00:10:37.470 --> 00:10:41.080
And it's not the shape, of
course, that is critical.

00:10:41.080 --> 00:10:45.140
And as we work our way through
the system, this is the

00:10:45.140 --> 00:10:47.460
continuous-time spectrum.

00:10:47.460 --> 00:10:53.530
After sampling, that spectrum is
replicated at multiples of

00:10:53.530 --> 00:10:54.690
the sampling frequency--

00:10:54.690 --> 00:10:56.840
integer multiples of the
sampling frequency--

00:10:56.840 --> 00:10:59.560
and so there would be another
one over here, and another one

00:10:59.560 --> 00:11:01.380
over here, et cetera.

00:11:01.380 --> 00:11:05.370
And then, in converting to a
discreet-time sequence, there

00:11:05.370 --> 00:11:10.500
is the associated frequency
normalization, so that the

00:11:10.500 --> 00:11:14.360
sampling frequency gets
normalized to a

00:11:14.360 --> 00:11:17.230
frequency of 2 pi.

00:11:17.230 --> 00:11:26.670
OK, now, at that point, where
we are in the system is at

00:11:26.670 --> 00:11:30.750
this point, so that we've
converted to a sequence.

00:11:30.750 --> 00:11:34.350
We now want to carry out some
filtering, and then, after

00:11:34.350 --> 00:11:40.060
that filtering, convert back to
a continuous-time signal.

00:11:40.060 --> 00:11:45.790
All right, so, here we are at
the spectrum associated with

00:11:45.790 --> 00:11:49.040
the sequence.

00:11:49.040 --> 00:11:53.410
And now, the processing that
we're carrying out is linear

00:11:53.410 --> 00:11:57.380
time and variant filtering in
the discreet-time domain.

00:11:57.380 --> 00:12:01.560
And what that corresponds to,
then, is multiplying this

00:12:01.560 --> 00:12:05.080
spectrum by the filter
frequency response.

00:12:05.080 --> 00:12:08.250
And I've chosen a particular
shape.

00:12:08.250 --> 00:12:10.430
And again, it's not the shape
that's important to the

00:12:10.430 --> 00:12:14.310
discussion, but the fact, for
example, that it has a

00:12:14.310 --> 00:12:18.070
particular cutoff frequency,
which we will track as we work

00:12:18.070 --> 00:12:19.790
through this.

00:12:19.790 --> 00:12:24.550
And so now, the spectrum of
y of n, the output of the

00:12:24.550 --> 00:12:30.120
digital filter, is the product
of this spectrum, and the

00:12:30.120 --> 00:12:32.940
Fourier transform, or frequency
response, of the

00:12:32.940 --> 00:12:34.190
digital filter.

00:12:36.320 --> 00:12:39.060
Now, in working our way through,
we're going to take

00:12:39.060 --> 00:12:43.880
the output of the filter and
undo the two-step process.

00:12:43.880 --> 00:12:46.700
So we now want to take that
sequence, convert it to an

00:12:46.700 --> 00:12:50.600
impulse train, and then take
that impulse train and

00:12:50.600 --> 00:12:53.460
desample through a
low-pass filter.

00:12:53.460 --> 00:12:59.220
So, here we are now at the
output of the digital filter.

00:12:59.220 --> 00:13:02.340
We then convert that to
an impulse train.

00:13:02.340 --> 00:13:05.730
Well that's really undoing the
original time normalization.

00:13:05.730 --> 00:13:10.520
And so, what that means, is
that we are undoing the

00:13:10.520 --> 00:13:12.080
frequency normalization.

00:13:12.080 --> 00:13:17.320
In particular, we're dividing
the frequency axis by capital

00:13:17.320 --> 00:13:24.610
T. Whereas, this point in y of
omega was 2 pi, now it's 2 pi

00:13:24.610 --> 00:13:29.540
over capital T. What that means
is that, equivalently,

00:13:29.540 --> 00:13:33.550
we're multiplying this spectrum
by the frequency

00:13:33.550 --> 00:13:36.270
response of the digital
filter, but now

00:13:36.270 --> 00:13:40.225
linearly-scaled in frequency,
so that what was a cutoff

00:13:40.225 --> 00:13:44.830
frequency of omega sub c is now
cutoff frequency of omega

00:13:44.830 --> 00:13:48.590
sub c, divided by capital T.

00:13:48.590 --> 00:13:53.760
So now, the next step in the
process is the reconstructing

00:13:53.760 --> 00:13:55.290
low-pass filter.

00:13:55.290 --> 00:13:59.090
And what that extracts is simply
the portion of this

00:13:59.090 --> 00:14:02.020
periodic spectrum around
the origin.

00:14:02.020 --> 00:14:06.550
And so finally, then, the
spectrum of the output of the

00:14:06.550 --> 00:14:11.920
overall system will be the
spectrum of the input

00:14:11.920 --> 00:14:19.680
multiplied by a frequency
response, which is the digital

00:14:19.680 --> 00:14:25.040
filter frequency response
frequency scaled by dividing

00:14:25.040 --> 00:14:30.360
that digital filter frequency
axis by capital T.

00:14:30.360 --> 00:14:35.580
OK, now, what we can ask is,
we've got this processing--

00:14:35.580 --> 00:14:37.390
we've converted to
discreet-time, and we've gone

00:14:37.390 --> 00:14:41.590
back to continuous-time, and
one can ask now what

00:14:41.590 --> 00:14:45.010
equivalent, overall
continuous-time system does

00:14:45.010 --> 00:14:46.970
that correspond to?

00:14:46.970 --> 00:14:48.550
In other words, if we--

00:14:48.550 --> 00:14:50.730
that, of course, is a
continuous-time system, it's a

00:14:50.730 --> 00:14:53.790
continuous-time input and
continuous-time time output--

00:14:53.790 --> 00:14:58.980
and the overall system, then,
would be one that would give

00:14:58.980 --> 00:15:02.540
us exactly the same output
spectrum as we're getting.

00:15:02.540 --> 00:15:04.200
Well, what is that?

00:15:04.200 --> 00:15:08.480
What we have is an output
spectrum, which is the product

00:15:08.480 --> 00:15:12.790
of the input spectrum and the
digital filter frequency

00:15:12.790 --> 00:15:16.150
characteristic frequency-scaled.

00:15:16.150 --> 00:15:23.420
And so, in fact, the resulting
continuous-time time filter is

00:15:23.420 --> 00:15:27.210
simply the digital
filter with an

00:15:27.210 --> 00:15:29.120
appropriate frequency scaling.

00:15:29.120 --> 00:15:31.710
In other words, with the
frequency axis divided by

00:15:31.710 --> 00:15:42.200
capital T. So said another
way, if we show here the

00:15:42.200 --> 00:15:51.090
frequency response of the
original digital filter, then

00:15:51.090 --> 00:15:56.150
the corresponding
continuous-time filter would

00:15:56.150 --> 00:15:59.470
be this, frequency-scaled.

00:15:59.470 --> 00:16:02.930
And then, because of the
associated low-pass filtering

00:16:02.930 --> 00:16:06.810
and the reconstruction, we would
select out just one of

00:16:06.810 --> 00:16:10.070
these periods-- in particular,
the portion around the origin.

00:16:10.070 --> 00:16:13.270
And the essential consequence
of that is that the

00:16:13.270 --> 00:16:15.900
corresponding continuous-time
filter,

00:16:15.900 --> 00:16:18.790
then, is given by this.

00:16:18.790 --> 00:16:24.150
And these two are related simply
by a linear scaling of

00:16:24.150 --> 00:16:25.840
the frequency axis.

00:16:25.840 --> 00:16:28.830
And note that, where the digital
filter has a cutoff

00:16:28.830 --> 00:16:33.100
frequency of omega sub c, the
continuous-time filter has a

00:16:33.100 --> 00:16:38.560
cutoff frequency of omega sub
c divided by capital T.

00:16:38.560 --> 00:16:41.750
So that's the linear
frequency scaling.

00:16:41.750 --> 00:16:45.690
And, by the way, plant away for
now-- and we'll return to

00:16:45.690 --> 00:16:48.170
this point later--

00:16:48.170 --> 00:16:52.960
the observation that even if the
digital filter frequency

00:16:52.960 --> 00:16:57.720
response is fixed, which we
would assume it is, by

00:16:57.720 --> 00:17:00.740
changing the sampling frequency,
in fact, what we're

00:17:00.740 --> 00:17:05.510
able to do is affect a linear
scaling all of the equivalent

00:17:05.510 --> 00:17:09.170
continuous-time filter.

00:17:09.170 --> 00:17:12.960
OK, well, this is pretty much
the process and the analysis,

00:17:12.960 --> 00:17:17.390
but to highlight a number of the
issues and emphasize these

00:17:17.390 --> 00:17:24.530
points, what I'd like to do is
illustrate some of this with a

00:17:24.530 --> 00:17:29.840
videotape demonstration that,
in fact, was made originally

00:17:29.840 --> 00:17:35.390
as part of another course-- a
course devoted entirely to

00:17:35.390 --> 00:17:38.120
digital signal processing,
which essentially is

00:17:38.120 --> 00:17:41.200
discreet-time time processing,
whether or not it's related to

00:17:41.200 --> 00:17:43.060
continuous-time signals.

00:17:43.060 --> 00:17:48.240
And what I'd like to now focus
on are some of the details of

00:17:48.240 --> 00:17:50.980
that demonstration.

00:17:50.980 --> 00:17:57.450
In the demonstration, the
specific impulse response that

00:17:57.450 --> 00:18:01.600
is used for the digital filter,
or discreet-time

00:18:01.600 --> 00:18:06.160
filter, is the one
that I show here.

00:18:06.160 --> 00:18:12.360
And the associated frequency
response is the frequency

00:18:12.360 --> 00:18:16.460
response of a discreet-time,
low-pass filter,

00:18:16.460 --> 00:18:18.800
as I indicate below.

00:18:18.800 --> 00:18:21.520
And the cutoff frequency
of that filter--

00:18:21.520 --> 00:18:24.890
as I indicate, the filter was
designed as a discreet-time

00:18:24.890 --> 00:18:28.680
filter with a cutoff frequency
of pi over 5.

00:18:28.680 --> 00:18:32.540
And let me just draw your
attention to the fact that pi

00:18:32.540 --> 00:18:39.200
over 5 is also a 10th of 2 pi.

00:18:39.200 --> 00:18:44.140
And so in fact the digital or
discreet-time filter cutoff

00:18:44.140 --> 00:18:47.250
frequency is a 10th of 2 pi.

00:18:47.250 --> 00:18:51.230
And as I'll stress again
shortly, remember that, in the

00:18:51.230 --> 00:18:55.670
frequency normalization or
unnormalization, 2 pi

00:18:55.670 --> 00:18:58.940
represents, in effect, the
sampling frequency.

00:18:58.940 --> 00:19:03.080
And so the consequence of that
is that the cutoff frequency

00:19:03.080 --> 00:19:06.750
really, is going to be
associated with a 10th of the

00:19:06.750 --> 00:19:07.760
sampling frequency.

00:19:07.760 --> 00:19:09.720
But, for now, keep in
mind that it's just

00:19:09.720 --> 00:19:13.040
simply a 10th of 2 pi.

00:19:13.040 --> 00:19:19.040
Now, the equivalent
continuous-time system, in

00:19:19.040 --> 00:19:23.600
terms of the impulse response,
is, of course, a band-limited

00:19:23.600 --> 00:19:31.350
interpolation of the impulse
response associated with the

00:19:31.350 --> 00:19:33.380
discreet-time filter.

00:19:33.380 --> 00:19:37.080
And in the frequency domain,
the frequency response is

00:19:37.080 --> 00:19:44.380
correspondingly a time-scaled,
frequency scaled version of

00:19:44.380 --> 00:19:46.290
the frequency response.

00:19:46.290 --> 00:19:50.900
So, in fact, in the frequency
domain and in the time domain

00:19:50.900 --> 00:19:57.320
related to the continuous-time
signal, the associated impulse

00:19:57.320 --> 00:20:00.540
response is what I
indicate here--

00:20:00.540 --> 00:20:04.950
a band-limited interpolation of
the discreet-time impulse

00:20:04.950 --> 00:20:09.340
response and time
scale, in fact.

00:20:09.340 --> 00:20:11.000
And the frequency response--

00:20:11.000 --> 00:20:12.680
following the discussion
that we've

00:20:12.680 --> 00:20:14.410
previously gone through--

00:20:14.410 --> 00:20:18.390
is a frequency-scaled version of
the one associated with the

00:20:18.390 --> 00:20:20.630
digital filter.

00:20:20.630 --> 00:20:24.190
Well, the first thing that I'll
want to look at is the

00:20:24.190 --> 00:20:25.980
impulse response.

00:20:25.980 --> 00:20:32.370
And when we do, let me just
indicate that in the actual

00:20:32.370 --> 00:20:36.350
implementation things are
slightly different than they

00:20:36.350 --> 00:20:39.720
are associated with the
ideal analysis.

00:20:39.720 --> 00:20:46.920
In particular, in converting
from a discreet-time sequence

00:20:46.920 --> 00:20:52.070
to the continuous-time signal,
whereas this way of looking at

00:20:52.070 --> 00:20:56.530
it is convenient in the context
of the analysis, in

00:20:56.530 --> 00:21:02.830
fact, the way it's done is using
a more or less standard

00:21:02.830 --> 00:21:04.840
digital to analog converter.

00:21:04.840 --> 00:21:08.530
And what a digital to analog
converter does, as I indicated

00:21:08.530 --> 00:21:13.900
in the previous lecture, is to
convert the sequence not to an

00:21:13.900 --> 00:21:17.400
impulse train but, in fact,
to go directly through a

00:21:17.400 --> 00:21:18.930
zero-order hold.

00:21:18.930 --> 00:21:22.140
And so, usually what comes out
of a digital to analog

00:21:22.140 --> 00:21:27.590
converter is a staircase type
of signal associated with a

00:21:27.590 --> 00:21:29.150
zero-order hold.

00:21:29.150 --> 00:21:33.260
And then, the result of that is
low-pass filtered to do the

00:21:33.260 --> 00:21:34.590
reconstruction.

00:21:34.590 --> 00:21:39.410
So what we'll want to look at,
then, is that reconstruction,

00:21:39.410 --> 00:21:42.170
first with just an
impulse input.

00:21:42.170 --> 00:21:47.420
And so, what we'll see after the
low-pass filter, for the

00:21:47.420 --> 00:21:52.900
impulse response, is a smooth
curve like this.

00:21:52.900 --> 00:21:57.320
But also, as part of the
demonstration, what I'll do,

00:21:57.320 --> 00:22:01.300
just to show the zero-order
hold, is to take the low-pass

00:22:01.300 --> 00:22:05.610
filter out temporarily and
then put it back in.

00:22:05.610 --> 00:22:11.010
So first, let's just look at the
filter impulse response.

00:22:11.010 --> 00:22:14.790
What we see here is the impulse
response of the

00:22:14.790 --> 00:22:17.040
overall system.

00:22:17.040 --> 00:22:20.600
And we observe, for one thing,
that it's a symmetrical

00:22:20.600 --> 00:22:21.620
impulse response.

00:22:21.620 --> 00:22:25.170
In other words, corresponds
to a linear phase filter.

00:22:25.170 --> 00:22:28.190
We could also look at the
impulse response before the

00:22:28.190 --> 00:22:31.340
desampling low-pass filter--
let's take out the desampling

00:22:31.340 --> 00:22:34.050
low-pass filter slowly--

00:22:34.050 --> 00:22:38.700
and what we observe is,
basically, the output of the

00:22:38.700 --> 00:22:40.570
digital to analog converter.

00:22:40.570 --> 00:22:43.440
Which, of course, is a
staircase, or boxcar,

00:22:43.440 --> 00:22:45.425
function, not an
impulse train.

00:22:45.425 --> 00:22:48.640
In the real world, the output
of a D to A converter,

00:22:48.640 --> 00:22:51.590
generally, is a boxcar
type of function.

00:22:51.590 --> 00:22:55.990
We can put the desampling filter
back in now and notice

00:22:55.990 --> 00:22:58.330
that the effect of the
desampling filter is,

00:22:58.330 --> 00:23:04.210
basically, to smooth out the
rough edges in the boxcar

00:23:04.210 --> 00:23:05.605
output from the D
to A converter.

00:23:08.570 --> 00:23:12.210
OK, so, that's the impulse
response of the system.

00:23:12.210 --> 00:23:15.910
Now, what I'd like to show
is the frequency

00:23:15.910 --> 00:23:17.650
response of the system.

00:23:17.650 --> 00:23:20.390
And to measure the frequency
response, of course, what we

00:23:20.390 --> 00:23:28.260
can do is put a sine wave into
the system and look at the

00:23:28.260 --> 00:23:29.780
sinusoidal output.

00:23:29.780 --> 00:23:33.590
So, in particular now, what will
happen is that, with the

00:23:33.590 --> 00:23:38.540
system, we will put in a
continuous-time sinusoid,

00:23:38.540 --> 00:23:43.350
which is sampled, converted
to a sequence.

00:23:43.350 --> 00:23:46.630
The sampled continuous-time
sinusoid is a

00:23:46.630 --> 00:23:48.670
discreet-time sinusoid.

00:23:48.670 --> 00:23:52.650
That goes through the digital
filter and gets attenuated, or

00:23:52.650 --> 00:23:55.110
amplified appropriately.

00:23:55.110 --> 00:23:59.400
And then the output of that is
converted back-- and that's,

00:23:59.400 --> 00:24:01.450
again, a sinusoidal output--

00:24:01.450 --> 00:24:08.000
that gets converted back to a
continuous-time sinusoid.

00:24:08.000 --> 00:24:11.110
Theoretically, as I indicate
here-- but again, as we just

00:24:11.110 --> 00:24:15.520
saw, really, represented by a
zero-order hold, followed by a

00:24:15.520 --> 00:24:17.680
low-pass filter.

00:24:17.680 --> 00:24:22.120
So, that's the overall
operation, with one

00:24:22.120 --> 00:24:25.310
modification from the diagram
that we have here.

00:24:25.310 --> 00:24:30.430
In this particular diagram
I've included and

00:24:30.430 --> 00:24:32.540
anti-aliasing filter.

00:24:32.540 --> 00:24:35.540
In fact, in the demonstration
there is no

00:24:35.540 --> 00:24:37.510
anti-aliasing filter.

00:24:37.510 --> 00:24:43.750
And so, in fact, the input is
a sinusoidal input which is

00:24:43.750 --> 00:24:48.990
not band-limited by virtue of
an anti-aliasing filter.

00:24:48.990 --> 00:24:53.610
It's only, of course,
band-limited appropriately if

00:24:53.610 --> 00:24:57.530
we choose the sinusoidal
frequency that way.

00:24:57.530 --> 00:24:59.900
So, there is no anti-aliasing
filter,

00:24:59.900 --> 00:25:02.070
and this is the system.

00:25:02.070 --> 00:25:09.020
And one consequence of that is
that, in fact, if we sweep the

00:25:09.020 --> 00:25:13.900
input sinusoid only up to half
the sampling frequency, we'll

00:25:13.900 --> 00:25:15.490
see no aliasing.

00:25:15.490 --> 00:25:17.360
But if we let it sweep
past that, we're

00:25:17.360 --> 00:25:19.100
going to get aliasing.

00:25:19.100 --> 00:25:23.560
Now, in the demonstration, the
sampling rate that's picked

00:25:23.560 --> 00:25:25.950
for this part of the
demonstration is a 20

00:25:25.950 --> 00:25:28.790
kilohertz sampling rate.

00:25:28.790 --> 00:25:31.950
That means, based on the
sampling theorem, that as long

00:25:31.950 --> 00:25:34.940
as the input frequency
is below 10

00:25:34.940 --> 00:25:39.300
kilohertz we get no aliasing.

00:25:39.300 --> 00:25:43.900
When the input frequency goes
beyond 10 kilohertz , that

00:25:43.900 --> 00:25:46.760
higher frequency is going
to get aliased down

00:25:46.760 --> 00:25:48.670
into a lower frequency.

00:25:48.670 --> 00:25:51.590
A consequence of that, then, is
that as we go through the

00:25:51.590 --> 00:25:55.910
processing, and we demonstrate
the frequency response of the

00:25:55.910 --> 00:26:02.310
system, what we'll see in the
output is no aliasing when the

00:26:02.310 --> 00:26:04.660
input is below 10 kilohertz.

00:26:04.660 --> 00:26:08.310
As the input sweeps past
10 kilohertz--

00:26:08.310 --> 00:26:10.450
when we let it, which we
will eventually in the

00:26:10.450 --> 00:26:11.880
demonstration--

00:26:11.880 --> 00:26:16.460
then, in fact, that frequency,
as it finally shows up here,

00:26:16.460 --> 00:26:21.870
will begin to be aliased down
into a lower frequency.

00:26:21.870 --> 00:26:26.640
Another way of thinking about
that is that, when we watch

00:26:26.640 --> 00:26:33.090
the frequency response of the
system, as we look at the

00:26:33.090 --> 00:26:37.750
digital filter frequency
response, what we're sweeping

00:26:37.750 --> 00:26:45.180
as we go from 0 up to 10
kilohertz in the input

00:26:45.180 --> 00:26:49.010
frequency is this portion of
the frequency response.

00:26:49.010 --> 00:26:53.170
As we sweep from 10 kilohertz
out to 20 kilohertz, what

00:26:53.170 --> 00:26:57.170
we'll see is this portion of
the frequency response.

00:26:57.170 --> 00:27:00.880
In other words, we'll see it
periodically replicated.

00:27:00.880 --> 00:27:06.520
Or, if we look at the
corresponding continuous-time

00:27:06.520 --> 00:27:10.350
frequency response, what it
means, really, is that

00:27:10.350 --> 00:27:14.510
sweeping from 0 to
10 kilohertz is

00:27:14.510 --> 00:27:16.190
moving up this way.

00:27:16.190 --> 00:27:20.360
And then sweeping from 10
kilohertz to 20 kilohertz on

00:27:20.360 --> 00:27:26.330
the input, really because of the
aliasing, reflects itself

00:27:26.330 --> 00:27:30.460
in the digital filter by looking
back toward lower

00:27:30.460 --> 00:27:31.590
frequencies.

00:27:31.590 --> 00:27:36.310
And so the continuous-time
filter sweeps back down from

00:27:36.310 --> 00:27:40.520
10 kilohertz back to 0.

00:27:40.520 --> 00:27:44.020
OK, so, that's what we'll see,
and we'll see it in several

00:27:44.020 --> 00:27:46.560
different ways as explained
in the demonstration.

00:27:46.560 --> 00:27:49.130
So now let's look
at the frequency

00:27:49.130 --> 00:27:51.930
response of the filter.

00:27:51.930 --> 00:27:54.440
Now what we'd like to illustrate
is the frequency

00:27:54.440 --> 00:27:58.610
response of the equivalent
continuous-time filter.

00:27:58.610 --> 00:28:01.010
And we can do that by
sweeping the filter

00:28:01.010 --> 00:28:02.880
with sinusoidal input.

00:28:02.880 --> 00:28:06.890
So, what we'll see in this
demonstration is, on the upper

00:28:06.890 --> 00:28:10.180
trace, the input sinusoid, on
the lower trace, the output

00:28:10.180 --> 00:28:14.740
sinusoid, using a 20 kilohertz
sampling rate, and a sweep

00:28:14.740 --> 00:28:16.420
from 0 to 10 kilohertz.

00:28:16.420 --> 00:28:21.080
In other words, a sweep from 0
to, effectively, pi, in terms

00:28:21.080 --> 00:28:23.320
of the digital filter.

00:28:23.320 --> 00:28:28.430
So what we'll observe as the
input frequency increases, is

00:28:28.430 --> 00:28:31.450
that the output sinusoid will
have, essentially, constant

00:28:31.450 --> 00:28:35.020
amplitude up to the cutoff
frequency of the filter, and

00:28:35.020 --> 00:28:38.170
then approximately zero
amplitude past.

00:28:38.170 --> 00:28:41.525
So let's now sweep the filter
frequency response.

00:28:46.580 --> 00:28:50.410
And there is the filter
cutoff frequency.

00:28:55.300 --> 00:28:59.310
Now, we can also observe the
filter frequency response in

00:28:59.310 --> 00:29:00.840
several other ways.

00:29:00.840 --> 00:29:04.180
One way in which we can observe
it is by looking,

00:29:04.180 --> 00:29:09.880
also, at the amplitude of the
output sinusoid as a function

00:29:09.880 --> 00:29:12.980
of frequency, rather than
as a function of time.

00:29:12.980 --> 00:29:16.530
And so we'll observe that
on the left-hand scope.

00:29:16.530 --> 00:29:19.280
While on the right-hand scope,
we'll have the same trace the

00:29:19.280 --> 00:29:21.760
we just saw, namely
two traces--

00:29:21.760 --> 00:29:24.990
the upper trace is the inputs
sinusoid, the lower trace is

00:29:24.990 --> 00:29:26.800
the output sinusoid.

00:29:26.800 --> 00:29:30.730
And, in addition to observing
the frequency response, let's

00:29:30.730 --> 00:29:35.430
also listen to the output
sinusoid and observe the

00:29:35.430 --> 00:29:38.730
attenuation in the output as we
go from the filter passband

00:29:38.730 --> 00:29:40.520
to the filter stopband.

00:29:40.520 --> 00:29:44.550
Again, a 20 kilohertz sampling
rate and a sweep range from 0

00:29:44.550 --> 00:29:45.800
to 10 kilohertz.

00:29:53.290 --> 00:29:54.850
Now, of course, we're in
the filter stopband.

00:29:58.360 --> 00:30:04.310
Now, if we increase the sweep
range from 10 kilohertz the 20

00:30:04.310 --> 00:30:07.880
kilohertz, so that the sweep
range is equal to the sampling

00:30:07.880 --> 00:30:11.310
frequency, in essence, that
corresponds to sweeping out

00:30:11.310 --> 00:30:15.110
the digital filter
from 0 to 2 pi.

00:30:15.110 --> 00:30:18.810
And, in that case, we'll begin
to see some of the periodicity

00:30:18.810 --> 00:30:21.210
in the digital filter
frequency response.

00:30:21.210 --> 00:30:25.890
So let's do that now with a 20
kilohertz sampling rate and a

00:30:25.890 --> 00:30:27.870
sweep range of 0 to
20 kilohertz.

00:30:32.790 --> 00:30:41.140
Now as we come near 2 pi, we
get back the past-band.

00:30:41.140 --> 00:30:45.780
And, finally, back to a 0 to
10 kilohertz sweep, so that

00:30:45.780 --> 00:30:50.130
we're again sweeping only from
0 to pi with regard to the

00:30:50.130 --> 00:30:51.380
digital filter.

00:31:05.070 --> 00:31:10.560
Now, an important observation
is that, with the digital or

00:31:10.560 --> 00:31:15.040
discreet-time filter cutoff
frequency fixed as I've

00:31:15.040 --> 00:31:16.130
indicated here--

00:31:16.130 --> 00:31:20.110
and I remind you that what
the cutoff frequency is,

00:31:20.110 --> 00:31:22.370
is a 10th of 2 pi--

00:31:22.370 --> 00:31:26.060
with that cutoff frequency
fixed, because of the

00:31:26.060 --> 00:31:30.470
normalization that we get
as we come back to a

00:31:30.470 --> 00:31:35.335
continuous-time filter, in fact,
what we have is a cutoff

00:31:35.335 --> 00:31:41.140
frequency that is dependent on
the sampling frequency or on

00:31:41.140 --> 00:31:42.620
the sampling period.

00:31:42.620 --> 00:31:46.580
And, more specifically, since
the discreet-time, or digital,

00:31:46.580 --> 00:31:50.010
filter or has a cutoff frequency
which is a 10th of 2

00:31:50.010 --> 00:31:56.630
pi, the normalization, as you
recall, is that 2 pi, in

00:31:56.630 --> 00:32:00.780
discreet-time frequency,
corresponds to omega sub s,

00:32:00.780 --> 00:32:02.750
the sampling frequency,
in terms of

00:32:02.750 --> 00:32:05.180
continuous-time frequency.

00:32:05.180 --> 00:32:09.540
The consequence is that this
cutoff frequency, in

00:32:09.540 --> 00:32:13.970
fact, is 1/10 of--

00:32:13.970 --> 00:32:16.680
not 2 pi now because of
the normalization--

00:32:16.680 --> 00:32:20.180
it's 1/10 of the sampling
frequency.

00:32:20.180 --> 00:32:25.980
So, consequently, as we change
the sampling frequency, what

00:32:25.980 --> 00:32:29.010
will happen is that, even with
the discreet-time filter

00:32:29.010 --> 00:32:33.870
cutoff fixed, the cutoff
frequency of the equivalent

00:32:33.870 --> 00:32:37.810
continuous-time filter
will change.

00:32:37.810 --> 00:32:40.570
Now, that's what I want
to demonstrate.

00:32:40.570 --> 00:32:44.790
But let me again stress and ask
you to keep in mind that

00:32:44.790 --> 00:32:47.010
this demonstration is
done without an

00:32:47.010 --> 00:32:49.480
anti-aliasing filter in.

00:32:49.480 --> 00:32:53.590
And we are going to be
changing the sampling

00:32:53.590 --> 00:33:00.650
frequency and, so keep in mind
that, as we look at this, as

00:33:00.650 --> 00:33:04.940
the input frequency sweeps
past half the sampling

00:33:04.940 --> 00:33:05.560
frequency--

00:33:05.560 --> 00:33:08.680
whatever sampling frequency we
happen to be looking at--

00:33:08.680 --> 00:33:11.550
then, because of the fact that
there's no anti-aliasing

00:33:11.550 --> 00:33:14.360
filter we'll get aliasing.

00:33:14.360 --> 00:33:17.230
In other words, the frequency
and the digital filter, or

00:33:17.230 --> 00:33:21.040
discreet-time filter, as we
sweep the input frequency up,

00:33:21.040 --> 00:33:25.280
will move up in frequency until
we get past half the

00:33:25.280 --> 00:33:28.130
sampling frequency and then
essentially will move back

00:33:28.130 --> 00:33:31.170
down in frequency.

00:33:31.170 --> 00:33:33.570
Consequently, what
we'll get, then--

00:33:33.570 --> 00:33:36.340
or what we'll see-- are periodic
replications of the

00:33:36.340 --> 00:33:39.370
frequency response when
we swept past half

00:33:39.370 --> 00:33:40.910
the sampling frequency.

00:33:40.910 --> 00:33:45.440
All right, so now, let's look
at the same digital filter,

00:33:45.440 --> 00:33:50.040
but the frequency response,
as we change

00:33:50.040 --> 00:33:52.980
the sampling frequency.

00:33:52.980 --> 00:33:56.070
Now, what we would like to
demonstrate is the effect of

00:33:56.070 --> 00:33:58.450
changing the sampling
frequency.

00:33:58.450 --> 00:34:03.930
And we know that the effective
filter cutoff frequency is

00:34:03.930 --> 00:34:08.139
tied to the sampling frequency
and, for this particular

00:34:08.139 --> 00:34:12.719
filter, corresponds to a 10th
of the sampling frequency.

00:34:12.719 --> 00:34:15.690
Consequently, if we double the
sampling frequency, we should

00:34:15.690 --> 00:34:20.690
double the effective filter
passband width, or double the

00:34:20.690 --> 00:34:22.730
filter cutoff frequency.

00:34:22.730 --> 00:34:25.100
And, so, let's do that now.

00:34:25.100 --> 00:34:29.070
Again a 0 to 10 kilohertz
sweep range, but a 40

00:34:29.070 --> 00:34:30.355
kilohertz sampling frequency.

00:34:34.690 --> 00:34:38.560
And we should observe that the
filter cutoff frequency has

00:34:38.560 --> 00:34:40.574
now doubled out to
four kilohertz.

00:34:43.469 --> 00:34:47.889
Now, let's begin to decrease the
filter sampling frequency.

00:34:47.889 --> 00:34:50.110
So from 40, let's change
the sampling

00:34:50.110 --> 00:34:52.730
frequency to 20 kilohertz.

00:34:52.730 --> 00:34:55.489
We should see the cutoff
frequency cut in half.

00:35:05.970 --> 00:35:07.710
Now, we can go even further.

00:35:07.710 --> 00:35:08.810
We can cut the sampling

00:35:08.810 --> 00:35:10.650
frequency down to 10 kilohertz.

00:35:10.650 --> 00:35:13.800
And remember that the sweep
range is 0 to 10 kilohertz.

00:35:13.800 --> 00:35:16.080
So now we'll be sweeping
from 0 to 2 pi.

00:35:23.830 --> 00:35:29.240
So as we get close to 2 pi,
we'll see the passband again.

00:35:29.240 --> 00:35:33.040
And, now, let's cut down the
sampling frequency even

00:35:33.040 --> 00:35:34.965
further, to 5 kilohertz.

00:35:40.990 --> 00:35:42.240
Here we are at 2 pi.

00:35:45.020 --> 00:35:46.830
And then at 4pi.

00:35:49.390 --> 00:35:52.110
All right, so, that illustrates
the effect of

00:35:52.110 --> 00:35:54.610
changing the sampling
frequency.

00:35:54.610 --> 00:35:57.920
Now let's conclude this
demonstration of the effect of

00:35:57.920 --> 00:36:01.180
the sampling frequency on the
filter cutoff frequency by

00:36:01.180 --> 00:36:04.810
carrying out some filtering
on some live audio.

00:36:04.810 --> 00:36:09.870
What we'll watch, in this case,
is the output audio

00:36:09.870 --> 00:36:15.220
waveform as a function of time
on the single tray scope, and

00:36:15.220 --> 00:36:18.220
also we'll listen
to the output.

00:36:18.220 --> 00:36:21.870
We'll begin it with a 40
kilohertz sampling rate, then

00:36:21.870 --> 00:36:23.870
reduce that to 20 kilohertz, 10

00:36:23.870 --> 00:36:26.100
kilohertz, and then 5 kilohertz.

00:36:26.100 --> 00:36:29.040
And in each of those cases, the
effective filter cutoff

00:36:29.040 --> 00:36:33.130
frequency, then, is cut in half
from 4 kilohertz, to 2

00:36:33.130 --> 00:36:37.080
kilohertz, to 1 kilohertz,
and then to 500 cycles.

00:36:37.080 --> 00:36:40.120
So let's begin with a 40
kilohertz sampling frequency,

00:36:40.120 --> 00:36:43.375
or an effective filter cutoff
frequency of 4 kilohertz.

00:36:49.950 --> 00:36:54.090
Now, let's reduce that a 20
kilohertz sampling frequency,

00:36:54.090 --> 00:36:55.340
or a 2 kilohertz filter.

00:37:00.090 --> 00:37:02.655
Then a 10 kilohertz sampling
frequency.

00:37:07.950 --> 00:37:11.130
And, finally, a 5 kilohertz
sampling frequency

00:37:11.130 --> 00:37:15.615
corresponding to a 500 cycle
equivalent analog filter.

00:37:20.280 --> 00:37:24.760
Alright, now, let's finally
conclude by returning to a

00:37:24.760 --> 00:37:27.916
little higher quality ragtime
by changing the sampling

00:37:27.916 --> 00:37:30.406
frequency back to
40 kilohertz.

00:37:37.880 --> 00:37:40.700
Alright, well, hopefully
what you've seen in the

00:37:40.700 --> 00:37:46.775
demonstration and in this
lecture gives you a sense and

00:37:46.775 --> 00:37:52.780
a feeling for the analysis and
the use of discreet-time

00:37:52.780 --> 00:37:56.160
filters for processing
continuous-time signals.

00:37:56.160 --> 00:38:00.480
And as you may be aware, and
as I've tried to indicate

00:38:00.480 --> 00:38:04.020
previously in the past, this,
in fact, is one very

00:38:04.020 --> 00:38:08.670
important-- but not the only--
but one very important context

00:38:08.670 --> 00:38:12.000
in which discreet-time
filtering is used.

00:38:12.000 --> 00:38:16.480
And this, in fact, is an area
that is developing rapidly

00:38:16.480 --> 00:38:20.800
because of the fact that
microprocessors, digital

00:38:20.800 --> 00:38:25.100
technology, computers, et cetera
afford considerable

00:38:25.100 --> 00:38:30.710
flexibility in carrying out
digital processing of signals.

00:38:30.710 --> 00:38:37.540
And when digital processing
is used, that naturally

00:38:37.540 --> 00:38:44.190
corresponds to implementing the
processing and analyzing

00:38:44.190 --> 00:38:45.440
it in discreet-time.

00:38:48.100 --> 00:38:52.120
Now, in the next lecture
we'll be

00:38:52.120 --> 00:38:54.980
continuing on another aspect--

00:38:54.980 --> 00:38:56.460
developing another aspect--

00:38:56.460 --> 00:38:58.400
of sampling.

00:38:58.400 --> 00:39:02.550
And, in particular, what we'll
be talking about is sampling

00:39:02.550 --> 00:39:04.760
of discreet-time signals.

00:39:04.760 --> 00:39:08.440
As I'll indicate there, one
of the contexts in which

00:39:08.440 --> 00:39:12.890
discreet-time sampling, in fact,
plays an important role

00:39:12.890 --> 00:39:18.180
is in the context in which we
are processing continuous-time

00:39:18.180 --> 00:39:21.170
signals using discreet-time
processing.

00:39:21.170 --> 00:39:24.510
Where, in fact, one step that
we might want to take-- in

00:39:24.510 --> 00:39:27.130
addition to the steps so we've
talked about here--

00:39:27.130 --> 00:39:31.470
is an additional sampling
process following whatever

00:39:31.470 --> 00:39:33.770
kinds of filtering that we do.

00:39:33.770 --> 00:39:36.650
Well, that's a discussion and
a topic that we'll be going

00:39:36.650 --> 00:39:37.930
into in the next lecture.

00:39:37.930 --> 00:39:39.180
Thank you.