WEBVTT

00:00:00.000 --> 00:00:02.465 align:middle line:90%
[SQUEAKING]

00:00:02.465 --> 00:00:04.437 align:middle line:90%
[RUSTLING]

00:00:04.437 --> 00:00:11.840 align:middle line:90%
[CLICKING]

00:00:11.840 --> 00:00:14.510 align:middle line:84%
ROBERT TOWNSEND:
OK, so let's look

00:00:14.510 --> 00:00:16.590 align:middle line:90%
at where we are in the class.

00:00:16.590 --> 00:00:19.960 align:middle line:90%
So this is the class calendar.

00:00:19.960 --> 00:00:23.500 align:middle line:84%
So you can see today is
virtually kind of the midpoint

00:00:23.500 --> 00:00:25.610 align:middle line:90%
of the semester.

00:00:25.610 --> 00:00:27.880 align:middle line:84%
Now, the other thing
is the reading list.

00:00:27.880 --> 00:00:31.990 align:middle line:84%
So today, again, contract
theory and mechanism design.

00:00:31.990 --> 00:00:33.880 align:middle line:84%
There's only one
starred reading.

00:00:33.880 --> 00:00:36.280 align:middle line:84%
It's "Rentals with
Unobserved Outputs,"

00:00:36.280 --> 00:00:38.410 align:middle line:90%
this chapter 5 of Medville.

00:00:38.410 --> 00:00:42.820 align:middle line:84%
There is a non-starred
reading, and I have material

00:00:42.820 --> 00:00:45.460 align:middle line:90%
on that in the lecture today.

00:00:45.460 --> 00:00:50.285 align:middle line:84%
It's this distributed ledger
MIT book, this chapter.

00:00:50.285 --> 00:00:51.910 align:middle line:84%
Although I've learned
a little bit more

00:00:51.910 --> 00:00:54.730 align:middle line:84%
since I wrote the book, which
was published yesterday,

00:00:54.730 --> 00:00:58.750 align:middle line:84%
and I'll share with you a little
bit of that in the lecture.

00:00:58.750 --> 00:01:00.550 align:middle line:90%
Anyway, this is all optional.

00:01:00.550 --> 00:01:02.410 align:middle line:84%
I'm not quite sure
how many of you

00:01:02.410 --> 00:01:04.819 align:middle line:84%
have been following
Bitcoin and so on.

00:01:04.819 --> 00:01:08.350 align:middle line:84%
But as I keep saying, every
time an economic topic

00:01:08.350 --> 00:01:10.600 align:middle line:84%
comes up that
relates to Bitcoin,

00:01:10.600 --> 00:01:13.000 align:middle line:84%
as it did with the
ledgers last time,

00:01:13.000 --> 00:01:14.990 align:middle line:84%
then I weave that
into the lecture.

00:01:14.990 --> 00:01:16.940 align:middle line:84%
So this is going
to be about today.

00:01:16.940 --> 00:01:20.680 align:middle line:84%
The second half of the lecture
is about smart contracts.

00:01:20.680 --> 00:01:25.200 align:middle line:84%
And then for the
study guide today, I

00:01:25.200 --> 00:01:29.700 align:middle line:84%
can call on a few of
you or get volunteers.

00:01:29.700 --> 00:01:33.900 align:middle line:84%
Can someone define for me the
concept of a household balance

00:01:33.900 --> 00:01:36.900 align:middle line:84%
sheet, and also, the
income statement?

00:01:36.900 --> 00:01:40.200 align:middle line:84%
Just say a few
words about what's

00:01:40.200 --> 00:01:44.590 align:middle line:90%
on those financial statements.

00:01:44.590 --> 00:01:46.465 align:middle line:84%
Armando, do you want to
take a crack at that?

00:01:46.465 --> 00:01:50.598 align:middle line:90%


00:01:50.598 --> 00:01:51.640 align:middle line:90%
AUDIENCE: Uh, yeah, sure.

00:01:51.640 --> 00:01:57.440 align:middle line:84%
So the balance sheet is where
you keep track of everything

00:01:57.440 --> 00:01:57.940 align:middle line:90%
that--

00:01:57.940 --> 00:02:01.470 align:middle line:90%


00:02:01.470 --> 00:02:03.990 align:middle line:84%
so I'm actually not
sure which is which,

00:02:03.990 --> 00:02:06.450 align:middle line:84%
but I know one of
them involves that you

00:02:06.450 --> 00:02:09.600 align:middle line:84%
keep track of your assets
and your liabilities.

00:02:09.600 --> 00:02:11.370 align:middle line:84%
I believe, yeah, that's
the balance sheet.

00:02:11.370 --> 00:02:12.000 align:middle line:90%
ROBERT TOWNSEND: Yes.

00:02:12.000 --> 00:02:13.440 align:middle line:84%
AUDIENCE: The
statement of income

00:02:13.440 --> 00:02:18.330 align:middle line:84%
is like all the money in and
as well as all the money that

00:02:18.330 --> 00:02:20.750 align:middle line:90%
goes out, expenditures.

00:02:20.750 --> 00:02:22.000 align:middle line:90%
ROBERT TOWNSEND: That's right.

00:02:22.000 --> 00:02:23.170 align:middle line:90%
Good.

00:02:23.170 --> 00:02:24.060 align:middle line:90%
OK.

00:02:24.060 --> 00:02:29.080 align:middle line:84%
Yeah, the balance sheet has
assets on one side, liabilities

00:02:29.080 --> 00:02:29.840 align:middle line:90%
on the other.

00:02:29.840 --> 00:02:32.080 align:middle line:90%
They don't necessarily balance.

00:02:32.080 --> 00:02:34.510 align:middle line:84%
Hopefully, the assets are
greater than the liabilities,

00:02:34.510 --> 00:02:36.650 align:middle line:90%
and the difference is equity.

00:02:36.650 --> 00:02:38.440 align:middle line:84%
So the liability side
of the balance sheet

00:02:38.440 --> 00:02:40.390 align:middle line:84%
also has an equity
component, which

00:02:40.390 --> 00:02:46.180 align:middle line:84%
is how much wealth you own that
you do not owe to other people

00:02:46.180 --> 00:02:47.230 align:middle line:90%
through debt.

00:02:47.230 --> 00:02:51.100 align:middle line:84%
The income statement, you
stated it properly, yes.

00:02:51.100 --> 00:02:53.710 align:middle line:90%
You have revenues and expenses.

00:02:53.710 --> 00:02:55.390 align:middle line:84%
Now if you take the
difference, you'll

00:02:55.390 --> 00:02:58.840 align:middle line:84%
have profits or net
income, and then

00:02:58.840 --> 00:03:01.270 align:middle line:84%
a couple of other lines
on that income statement

00:03:01.270 --> 00:03:06.220 align:middle line:84%
were how you dispose
of your net income

00:03:06.220 --> 00:03:11.170 align:middle line:84%
in terms of either
consuming it or saving it.

00:03:11.170 --> 00:03:14.190 align:middle line:84%
But your answer was
great, thank you.

00:03:14.190 --> 00:03:17.730 align:middle line:84%
Then we talked about, in
class, life cycle planning.

00:03:17.730 --> 00:03:20.550 align:middle line:84%
Can someone tell me
what it is exactly?

00:03:20.550 --> 00:03:23.153 align:middle line:84%
What we mean by
life cycle planning?

00:03:23.153 --> 00:03:24.570 align:middle line:84%
AUDIENCE: Can I
take a shot at it?

00:03:24.570 --> 00:03:26.040 align:middle line:90%
ROBERT TOWNSEND: Yeah, sure.

00:03:26.040 --> 00:03:28.680 align:middle line:84%
AUDIENCE: So it's planning
what you're actually,

00:03:28.680 --> 00:03:32.350 align:middle line:84%
like what choices you're going
to make over your entire life.

00:03:32.350 --> 00:03:36.930 align:middle line:84%
So you're sort of planning
ahead for how much you're

00:03:36.930 --> 00:03:40.530 align:middle line:84%
going to spend, like based on
your information about what you

00:03:40.530 --> 00:03:43.770 align:middle line:84%
expect your income is going
to be and stuff like that.

00:03:43.770 --> 00:03:45.270 align:middle line:84%
ROBERT TOWNSEND:
Yeah, that's good.

00:03:45.270 --> 00:03:45.770 align:middle line:90%
Yeah.

00:03:45.770 --> 00:03:48.900 align:middle line:84%
It's like and now
to, when you die

00:03:48.900 --> 00:03:53.620 align:middle line:84%
or when you bequest to
your kids or something.

00:03:53.620 --> 00:03:58.390 align:middle line:84%
And typically,
it's year by year.

00:03:58.390 --> 00:03:59.500 align:middle line:90%
And it's kind of--

00:03:59.500 --> 00:04:01.940 align:middle line:84%
I guess I would say the
point, I didn't ask this,

00:04:01.940 --> 00:04:05.170 align:middle line:84%
but the point of
life cycle planning

00:04:05.170 --> 00:04:08.200 align:middle line:84%
is to manage your
assets in such a way

00:04:08.200 --> 00:04:12.010 align:middle line:84%
that your consumption would
be as smooth as possible

00:04:12.010 --> 00:04:15.860 align:middle line:90%
over the years of your life.

00:04:15.860 --> 00:04:18.640 align:middle line:84%
And sometimes you can't
achieve that exactly.

00:04:18.640 --> 00:04:21.370 align:middle line:84%
The other thing that people
associate with a life cycle

00:04:21.370 --> 00:04:25.320 align:middle line:84%
planning is an outcome
of that process,

00:04:25.320 --> 00:04:29.160 align:middle line:84%
namely you have a peak where
you're accumulating assets

00:04:29.160 --> 00:04:35.700 align:middle line:84%
early on as a young saver with
consumption less than income,

00:04:35.700 --> 00:04:40.920 align:middle line:84%
and then you start spending down
those assets when your income

00:04:40.920 --> 00:04:44.220 align:middle line:84%
sources diminish,
especially if you retire.

00:04:44.220 --> 00:04:47.490 align:middle line:90%


00:04:47.490 --> 00:04:48.030 align:middle line:90%
OK.

00:04:48.030 --> 00:04:50.880 align:middle line:84%
And then we applied
it to Thailand.

00:04:50.880 --> 00:04:55.590 align:middle line:84%
I'm not sure exactly
what to ask about.

00:04:55.590 --> 00:04:58.380 align:middle line:84%
Well, maybe if one
of you could tell me

00:04:58.380 --> 00:05:03.270 align:middle line:84%
a special feature of the
economic life of Thai villagers

00:05:03.270 --> 00:05:07.140 align:middle line:84%
that somehow we incorporated
into the life cycle planner

00:05:07.140 --> 00:05:09.330 align:middle line:84%
that you would not
typically see in the US.

00:05:09.330 --> 00:05:13.040 align:middle line:90%


00:05:13.040 --> 00:05:16.520 align:middle line:90%
AUDIENCE: The gift giving?

00:05:16.520 --> 00:05:17.840 align:middle line:90%
ROBERT TOWNSEND: Say it again.

00:05:17.840 --> 00:05:20.465 align:middle line:84%
AUDIENCE: The gift giving
with or without the income.

00:05:20.465 --> 00:05:21.590 align:middle line:90%
ROBERT TOWNSEND: Excellent.

00:05:21.590 --> 00:05:24.420 align:middle line:90%
That's what I was looking for.

00:05:24.420 --> 00:05:24.920 align:middle line:90%
Yeah.

00:05:24.920 --> 00:05:28.010 align:middle line:84%
So it looks like an individual
operating in isolation,

00:05:28.010 --> 00:05:31.820 align:middle line:84%
or at least in most borrowing
or lending and acquiring

00:05:31.820 --> 00:05:33.860 align:middle line:84%
financial assets,
but in Thai villages,

00:05:33.860 --> 00:05:36.500 align:middle line:84%
those households
interact with one another

00:05:36.500 --> 00:05:38.190 align:middle line:90%
by giving gifts and so on.

00:05:38.190 --> 00:05:40.850 align:middle line:84%
So the way it was
in the equation

00:05:40.850 --> 00:05:44.300 align:middle line:84%
was that it smoothed out
the downfalls in income

00:05:44.300 --> 00:05:45.980 align:middle line:84%
because the gifts
would be coming in,

00:05:45.980 --> 00:05:49.890 align:middle line:84%
and likewise smoothed
over the peaks

00:05:49.890 --> 00:05:53.250 align:middle line:84%
because you give those
peaks away in terms

00:05:53.250 --> 00:05:56.105 align:middle line:90%
of gifts to other people.

00:05:56.105 --> 00:05:56.605 align:middle line:90%
OK.

00:05:56.605 --> 00:06:01.880 align:middle line:90%


00:06:01.880 --> 00:06:06.105 align:middle line:84%
Can someone tell me what is
the concept of a distributed

00:06:06.105 --> 00:06:06.605 align:middle line:90%
ledger?

00:06:06.605 --> 00:06:09.680 align:middle line:90%


00:06:09.680 --> 00:06:12.890 align:middle line:84%
AUDIENCE: Is it basically
just like a publicly recorded,

00:06:12.890 --> 00:06:16.460 align:middle line:84%
like where you can have
financial transactions be

00:06:16.460 --> 00:06:20.520 align:middle line:84%
recorded and available
to other people to see?

00:06:20.520 --> 00:06:22.070 align:middle line:90%
ROBERT TOWNSEND: Yeah.

00:06:22.070 --> 00:06:26.090 align:middle line:84%
So it's a ledger as in
an accounting ledger.

00:06:26.090 --> 00:06:29.420 align:middle line:84%
It includes a list
of transactions.

00:06:29.420 --> 00:06:34.150 align:middle line:84%
But in addition to that
applying to a given individual,

00:06:34.150 --> 00:06:39.460 align:middle line:84%
it's consolidated so that
it includes the transactions

00:06:39.460 --> 00:06:43.570 align:middle line:84%
in and out as if it were on a
common ledger, a ledger that

00:06:43.570 --> 00:06:46.030 align:middle line:84%
would apply to
all the households

00:06:46.030 --> 00:06:48.640 align:middle line:90%
that are participating.

00:06:48.640 --> 00:06:51.790 align:middle line:84%
The twist in that is
the word distributed.

00:06:51.790 --> 00:06:53.980 align:middle line:84%
So although it's
common, it's not

00:06:53.980 --> 00:06:57.160 align:middle line:84%
supposed to be held
by one central party.

00:06:57.160 --> 00:07:00.400 align:middle line:84%
Everyone's supposed to have an
identical copy of that ledger.

00:07:00.400 --> 00:07:03.490 align:middle line:90%


00:07:03.490 --> 00:07:05.470 align:middle line:84%
And in class I
complained a little bit

00:07:05.470 --> 00:07:10.600 align:middle line:84%
about when we tried to
create one for the Thai data.

00:07:10.600 --> 00:07:12.070 align:middle line:90%
It didn't quite work.

00:07:12.070 --> 00:07:13.315 align:middle line:90%
Does someone remember why?

00:07:13.315 --> 00:07:22.280 align:middle line:90%


00:07:22.280 --> 00:07:25.370 align:middle line:84%
Dixon, you want to
take a stab at it?

00:07:25.370 --> 00:07:29.660 align:middle line:90%


00:07:29.660 --> 00:07:32.967 align:middle line:84%
AUDIENCE: I'm actually not
really sure why it didn't work.

00:07:32.967 --> 00:07:33.800 align:middle line:90%
ROBERT TOWNSEND: OK.

00:07:33.800 --> 00:07:35.210 align:middle line:90%
That's fine.

00:07:35.210 --> 00:07:35.990 align:middle line:90%
Anyone else?

00:07:35.990 --> 00:07:40.720 align:middle line:90%


00:07:40.720 --> 00:07:42.730 align:middle line:84%
Well, to be fair it
was only on one slide

00:07:42.730 --> 00:07:44.450 align:middle line:90%
and there was a lot of material.

00:07:44.450 --> 00:07:45.580 align:middle line:90%
So let me highlight.

00:07:45.580 --> 00:07:48.350 align:middle line:90%


00:07:48.350 --> 00:07:50.840 align:middle line:84%
We didn't have the
distributed ledger running

00:07:50.840 --> 00:07:52.350 align:middle line:90%
when I collected the data.

00:07:52.350 --> 00:07:55.820 align:middle line:84%
Instead, we took the answers
the households gave us

00:07:55.820 --> 00:08:00.200 align:middle line:84%
to the questionnaires and
created financial accounts out

00:08:00.200 --> 00:08:02.200 align:middle line:90%
of the answers--

00:08:02.200 --> 00:08:05.330 align:middle line:84%
income statement, balance sheet,
and statement of cash flow.

00:08:05.330 --> 00:08:08.830 align:middle line:84%
So we had the financial
accounts for all the households,

00:08:08.830 --> 00:08:11.590 align:middle line:84%
but we didn't try to reconcile
them to see if they were

00:08:11.590 --> 00:08:14.650 align:middle line:90%
consistent with one another.

00:08:14.650 --> 00:08:18.960 align:middle line:84%
So in fact, when they
buy something for cash,

00:08:18.960 --> 00:08:22.980 align:middle line:84%
they tell us who it was,
potentially in the village.

00:08:22.980 --> 00:08:27.370 align:middle line:84%
I buy something from
J, J should show up

00:08:27.370 --> 00:08:32.860 align:middle line:84%
with the same transection
where J is selling and getting

00:08:32.860 --> 00:08:35.870 align:middle line:90%
cash in return.

00:08:35.870 --> 00:08:37.715 align:middle line:84%
So it's one common
transection, it

00:08:37.715 --> 00:08:39.340 align:middle line:84%
should show up on a
distributed ledger.

00:08:39.340 --> 00:08:46.610 align:middle line:84%
But because the data didn't try
to reconcile all the entries

00:08:46.610 --> 00:08:51.490 align:middle line:84%
as they were reported, it was
not unusual for one household

00:08:51.490 --> 00:08:53.980 align:middle line:84%
to report a transaction
with another household

00:08:53.980 --> 00:08:58.890 align:middle line:84%
that the other household
did not in turn report back.

00:08:58.890 --> 00:09:03.270 align:middle line:84%
The point being that distributed
ledgers are an excellent way

00:09:03.270 --> 00:09:08.530 align:middle line:84%
of reconciling transactions
live in real time

00:09:08.530 --> 00:09:11.070 align:middle line:84%
so that they become
more accurate.

00:09:11.070 --> 00:09:14.380 align:middle line:90%


00:09:14.380 --> 00:09:15.580 align:middle line:90%
OK.

00:09:15.580 --> 00:09:19.660 align:middle line:84%
And then we went to Thailand
and talked about currency,

00:09:19.660 --> 00:09:22.680 align:middle line:90%
and there was this--

00:09:22.680 --> 00:09:27.090 align:middle line:84%
the whole lecture was about
solving planning problems.

00:09:27.090 --> 00:09:29.100 align:middle line:84%
Can someone tell
me in words a bit

00:09:29.100 --> 00:09:34.330 align:middle line:84%
about this Miller-Orr
model of cash management?

00:09:34.330 --> 00:09:36.540 align:middle line:84%
AUDIENCE: So in the
Miller-Orr model,

00:09:36.540 --> 00:09:40.320 align:middle line:84%
the net expenditures are
the sum of smaller recurrent

00:09:40.320 --> 00:09:43.920 align:middle line:84%
expenditures and
infrequent larger ones that

00:09:43.920 --> 00:09:46.800 align:middle line:90%
have a lower probability.

00:09:46.800 --> 00:09:50.820 align:middle line:84%
And so the goal of the household
would be to minimize the cost.

00:09:50.820 --> 00:09:54.632 align:middle line:84%
And I remember there was a
Bellman equation for that.

00:09:54.632 --> 00:09:55.840 align:middle line:90%
ROBERT TOWNSEND: That's good.

00:09:55.840 --> 00:10:00.310 align:middle line:84%
You remember the two
components of the cost?

00:10:00.310 --> 00:10:05.050 align:middle line:84%
AUDIENCE: There was the flow
opportunity cost and also

00:10:05.050 --> 00:10:06.463 align:middle line:90%
adjustment cost.

00:10:06.463 --> 00:10:07.630 align:middle line:90%
ROBERT TOWNSEND: Yeah, yeah.

00:10:07.630 --> 00:10:12.430 align:middle line:84%
So the flow opportunity cost
is the foregone interest

00:10:12.430 --> 00:10:13.317 align:middle line:90%
from holding cash.

00:10:13.317 --> 00:10:15.650 align:middle line:84%
If you have currency in the
house, it's not in the bank,

00:10:15.650 --> 00:10:18.160 align:middle line:90%
it's not earning interest.

00:10:18.160 --> 00:10:20.380 align:middle line:84%
So that's kind of the
flow of opportunity cost.

00:10:20.380 --> 00:10:23.160 align:middle line:84%
And then every time
you go to a bank,

00:10:23.160 --> 00:10:26.280 align:middle line:84%
either deposit or
withdraw the currency,

00:10:26.280 --> 00:10:28.965 align:middle line:84%
there is a real
transaction cost.

00:10:28.965 --> 00:10:31.790 align:middle line:90%


00:10:31.790 --> 00:10:32.290 align:middle line:90%
OK.

00:10:32.290 --> 00:10:41.860 align:middle line:90%


00:10:41.860 --> 00:10:46.110 align:middle line:84%
So finally, we get
to Kenya and M-Pesa.

00:10:46.110 --> 00:10:51.200 align:middle line:90%
Can someone describe for me--

00:10:51.200 --> 00:10:53.345 align:middle line:90%
let's see, who's online here--

00:10:53.345 --> 00:10:56.840 align:middle line:90%


00:10:56.840 --> 00:11:01.410 align:middle line:84%
what exactly is M-Pesa
and how it works?

00:11:01.410 --> 00:11:02.630 align:middle line:90%
I'll take a volunteer.

00:11:02.630 --> 00:11:07.620 align:middle line:90%


00:11:07.620 --> 00:11:12.780 align:middle line:84%
AUDIENCE: I think it's a mobile
phone-based money transfer

00:11:12.780 --> 00:11:13.470 align:middle line:90%
service.

00:11:13.470 --> 00:11:15.690 align:middle line:84%
And you like, pay a
small fee and then

00:11:15.690 --> 00:11:20.350 align:middle line:84%
you can transfer
money to someone else.

00:11:20.350 --> 00:11:24.820 align:middle line:84%
It requires trust in
the service, I guess.

00:11:24.820 --> 00:11:27.640 align:middle line:84%
ROBERT TOWNSEND: What are they
actually transferring around

00:11:27.640 --> 00:11:28.720 align:middle line:90%
electronically?

00:11:28.720 --> 00:11:31.612 align:middle line:90%


00:11:31.612 --> 00:11:43.130 align:middle line:84%
AUDIENCE: Uh, is it not just
like, I guess like e-money?

00:11:43.130 --> 00:11:44.380 align:middle line:90%
ROBERT TOWNSEND: It's e-money.

00:11:44.380 --> 00:11:45.500 align:middle line:90%
It's actually--

00:11:45.500 --> 00:11:47.938 align:middle line:84%
AUDIENCE: It's a
telephone, isn't it?

00:11:47.938 --> 00:11:49.480 align:middle line:84%
ROBERT TOWNSEND:
It's a cell account.

00:11:49.480 --> 00:11:50.440 align:middle line:90%
Yes.

00:11:50.440 --> 00:11:51.010 align:middle line:90%
That's right.

00:11:51.010 --> 00:11:53.050 align:middle line:90%
It's actually credits.

00:11:53.050 --> 00:11:57.760 align:middle line:84%
Like you buy credits for
phone usage in advance

00:11:57.760 --> 00:12:00.640 align:middle line:90%
from Safaricom.

00:12:00.640 --> 00:12:03.813 align:middle line:84%
So it's just like you would pay
a bill at the end of the month,

00:12:03.813 --> 00:12:05.230 align:middle line:84%
they're kind of
like paying a bill

00:12:05.230 --> 00:12:06.480 align:middle line:90%
at the beginning of the month.

00:12:06.480 --> 00:12:08.770 align:middle line:84%
They're buying
cell phone credits,

00:12:08.770 --> 00:12:12.010 align:middle line:84%
but they don't intend to
use it on their cell phone.

00:12:12.010 --> 00:12:14.530 align:middle line:90%
Not necessarily.

00:12:14.530 --> 00:12:18.690 align:middle line:84%
Instead, they transfer
it around, buy things.

00:12:18.690 --> 00:12:22.320 align:middle line:84%
And people cash out, they
reverse the transaction.

00:12:22.320 --> 00:12:23.445 align:middle line:90%
So it's like you can--

00:12:23.445 --> 00:12:28.770 align:middle line:90%


00:12:28.770 --> 00:12:33.930 align:middle line:84%
it's like mileage that
you get on an airplane,

00:12:33.930 --> 00:12:36.900 align:middle line:84%
but then you can
sell your miles.

00:12:36.900 --> 00:12:39.680 align:middle line:84%
So they can cash out by
selling their e-credit back

00:12:39.680 --> 00:12:40.305 align:middle line:90%
to the company.

00:12:40.305 --> 00:12:44.490 align:middle line:90%


00:12:44.490 --> 00:12:47.910 align:middle line:84%
So in some respects,
it's not so novel.

00:12:47.910 --> 00:12:51.110 align:middle line:84%
It's just an electronic
account, in this case,

00:12:51.110 --> 00:12:54.800 align:middle line:84%
denominated in terms of
credits on your cell phone.

00:12:54.800 --> 00:12:57.920 align:middle line:84%
But what is novel
about it is that it

00:12:57.920 --> 00:13:00.860 align:middle line:84%
can be transferred
around at very low cost

00:13:00.860 --> 00:13:03.300 align:middle line:84%
and you can cash
in and cash out.

00:13:03.300 --> 00:13:05.930 align:middle line:84%
So it kind of looks like
money because you can use it

00:13:05.930 --> 00:13:08.460 align:middle line:90%
on your phone like money.

00:13:08.460 --> 00:13:12.680 align:middle line:84%
Which then you start to think
about it, what is money really?

00:13:12.680 --> 00:13:17.220 align:middle line:84%
It doesn't have to be fiat
money, the paper stuff.

00:13:17.220 --> 00:13:20.640 align:middle line:84%
Like you can have
a checking account

00:13:20.640 --> 00:13:24.530 align:middle line:84%
in a commercial bank
in the US and pay bills

00:13:24.530 --> 00:13:28.100 align:middle line:90%
online out of that account.

00:13:28.100 --> 00:13:30.500 align:middle line:84%
It's not central bank
reserves or fiat money,

00:13:30.500 --> 00:13:33.860 align:middle line:84%
but it is money in
the sense that it's

00:13:33.860 --> 00:13:36.890 align:middle line:84%
used widely in exchange
and has a high velocity.

00:13:36.890 --> 00:13:39.620 align:middle line:90%


00:13:39.620 --> 00:13:41.610 align:middle line:84%
OK, the trust thing
was a good comment

00:13:41.610 --> 00:13:44.100 align:middle line:84%
because we're going
to come to that today

00:13:44.100 --> 00:13:50.110 align:middle line:84%
in the lecture in terms
of, in this case, people

00:13:50.110 --> 00:13:53.620 align:middle line:84%
trust Safaricom to enter
the transactions properly

00:13:53.620 --> 00:13:57.730 align:middle line:84%
and to not cheat after the
fact, not to steal the money,

00:13:57.730 --> 00:14:01.190 align:middle line:84%
and to allow them
to cash it out.

00:14:01.190 --> 00:14:02.990 align:middle line:84%
But a lot of people
are more paranoid

00:14:02.990 --> 00:14:06.900 align:middle line:84%
about third party providers,
depending on the context.

00:14:06.900 --> 00:14:13.490 align:middle line:84%
So we'll get to how to
solve that problem today.

00:14:13.490 --> 00:14:16.580 align:middle line:84%
So this lecture
comes in two halves.

00:14:16.580 --> 00:14:19.610 align:middle line:84%
Contract theory and mechanism
design is all of it.

00:14:19.610 --> 00:14:21.410 align:middle line:84%
The first half is
going to feature

00:14:21.410 --> 00:14:25.130 align:middle line:84%
an application in-- back to
our favorite stomping ground--

00:14:25.130 --> 00:14:26.780 align:middle line:90%
the medieval village economy.

00:14:26.780 --> 00:14:28.790 align:middle line:84%
And then as I've
already anticipated,

00:14:28.790 --> 00:14:30.350 align:middle line:84%
the second half
is going to focus

00:14:30.350 --> 00:14:34.520 align:middle line:84%
on generalizing the concepts and
talking about smart contracts

00:14:34.520 --> 00:14:37.510 align:middle line:90%
and validation and trust.

00:14:37.510 --> 00:14:43.380 align:middle line:84%
So if you looked at this map,
in this case, it's not England,

00:14:43.380 --> 00:14:47.790 align:middle line:84%
it's France, you would see
these solid filled in circles,

00:14:47.790 --> 00:14:51.900 align:middle line:84%
the little Cheerios,
and the empty circles,

00:14:51.900 --> 00:14:53.820 align:middle line:90%
and small dependent settlements.

00:14:53.820 --> 00:14:59.010 align:middle line:84%
So these stand for villas with
only demesne, so to speak,

00:14:59.010 --> 00:15:01.170 align:middle line:84%
which means everyone
worked for the lord

00:15:01.170 --> 00:15:02.760 align:middle line:90%
and didn't own their own land.

00:15:02.760 --> 00:15:05.820 align:middle line:84%
There are mixed villages
that have demesne,

00:15:05.820 --> 00:15:08.890 align:middle line:84%
but the households own some
of their own land as well.

00:15:08.890 --> 00:15:11.040 align:middle line:84%
And then villages
where the lord--

00:15:11.040 --> 00:15:12.810 align:middle line:84%
like the Bishop of
Winchester in England

00:15:12.810 --> 00:15:15.310 align:middle line:84%
doesn't own any of
the land at all.

00:15:15.310 --> 00:15:17.400 align:middle line:84%
And these are just
scattered little hamlets.

00:15:17.400 --> 00:15:22.290 align:middle line:84%
So you can start to
spot some patterns here.

00:15:22.290 --> 00:15:24.360 align:middle line:84%
This is kind of
the chief of state

00:15:24.360 --> 00:15:27.240 align:middle line:84%
of the lord, the
lord of this area;

00:15:27.240 --> 00:15:29.730 align:middle line:84%
these little Cheerios
surrounding it or halfway

00:15:29.730 --> 00:15:33.900 align:middle line:84%
filled in with some land
directly farmed for the lord;

00:15:33.900 --> 00:15:35.610 align:middle line:84%
and then a little
further out you

00:15:35.610 --> 00:15:39.720 align:middle line:84%
get these open circles where
the lord does not directly

00:15:39.720 --> 00:15:43.290 align:middle line:84%
have a claim on the land,
although there may be taxes

00:15:43.290 --> 00:15:43.980 align:middle line:90%
due.

00:15:43.980 --> 00:15:47.520 align:middle line:84%
So that's summarized
in this first slide

00:15:47.520 --> 00:15:50.400 align:middle line:84%
under alternative
forms of organization.

00:15:50.400 --> 00:15:53.970 align:middle line:84%
When it's held in demesne only,
then essentially the peasant

00:15:53.970 --> 00:15:57.000 align:middle line:90%
population are entirely slaves.

00:15:57.000 --> 00:15:59.340 align:middle line:84%
And others there was
no land like that.

00:15:59.340 --> 00:16:02.190 align:middle line:84%
Instead, there were
not labor obligations,

00:16:02.190 --> 00:16:06.150 align:middle line:84%
but households were obliged
to pay rent to the lord

00:16:06.150 --> 00:16:08.230 align:middle line:84%
a certain amount of
grain that was due.

00:16:08.230 --> 00:16:10.980 align:middle line:84%
And we'll come back to
what that contract might

00:16:10.980 --> 00:16:11.950 align:middle line:90%
have looked like.

00:16:11.950 --> 00:16:15.090 align:middle line:84%
And those empty, open
circles were really far away

00:16:15.090 --> 00:16:17.340 align:middle line:90%
from the central monastery.

00:16:17.340 --> 00:16:20.130 align:middle line:84%
So we got three different
kinds of organization here.

00:16:20.130 --> 00:16:22.990 align:middle line:84%
And theory that we're about
to write down is going to say,

00:16:22.990 --> 00:16:25.590 align:middle line:84%
well, maybe these
forms of organization

00:16:25.590 --> 00:16:27.540 align:middle line:84%
varied from one
village to the next,

00:16:27.540 --> 00:16:30.390 align:middle line:84%
depending on how close
they were to the manor,

00:16:30.390 --> 00:16:33.220 align:middle line:84%
in particular because
there's private information.

00:16:33.220 --> 00:16:34.770 align:middle line:84%
And if you're very
close up, then

00:16:34.770 --> 00:16:36.545 align:middle line:84%
essentially the lord
sees everything.

00:16:36.545 --> 00:16:37.920 align:middle line:84%
And if you're very
far away, it's

00:16:37.920 --> 00:16:41.830 align:middle line:84%
extremely costly and difficult
for the lord to see everything.

00:16:41.830 --> 00:16:44.970 align:middle line:84%
And so those exchanges
have to be incentive,

00:16:44.970 --> 00:16:47.370 align:middle line:84%
compatible, and
induced, concepts

00:16:47.370 --> 00:16:49.260 align:middle line:90%
we're going to define today.

00:16:49.260 --> 00:16:52.500 align:middle line:84%
Or you may see nothing except
with a cost where there's

00:16:52.500 --> 00:16:56.010 align:middle line:84%
an audit, like a tax authority
going in to actually take

00:16:56.010 --> 00:16:58.360 align:middle line:90%
a close look, but at some cost.

00:16:58.360 --> 00:17:02.710 align:middle line:84%
So here's the model
for simplicity.

00:17:02.710 --> 00:17:05.450 align:middle line:84%
Just imagine there
are two agents,

00:17:05.450 --> 00:17:09.740 align:middle line:84%
only one lord named
agent 2 and one agent

00:17:09.740 --> 00:17:14.240 align:middle line:84%
named agent 1 that's a
stand-in for the entire villa

00:17:14.240 --> 00:17:15.329 align:middle line:90%
population.

00:17:15.329 --> 00:17:18.710 align:middle line:84%
So agent 1 here is seeing
his or her endowment,

00:17:18.710 --> 00:17:20.569 align:middle line:84%
1 stands for the
household number,

00:17:20.569 --> 00:17:23.810 align:middle line:84%
epsilon for the fact
that the endowments are

00:17:23.810 --> 00:17:27.349 align:middle line:84%
the yields of crops grown on
the land farmed by agent 1

00:17:27.349 --> 00:17:28.190 align:middle line:90%
and a random.

00:17:28.190 --> 00:17:29.990 align:middle line:84%
And furthermore,
at least initially,

00:17:29.990 --> 00:17:32.840 align:middle line:90%
only seen by agent 1, the villa.

00:17:32.840 --> 00:17:34.100 align:middle line:90%
We can simplify.

00:17:34.100 --> 00:17:35.900 align:middle line:84%
This notation was
here deliberately

00:17:35.900 --> 00:17:37.760 align:middle line:84%
to try to remind
you a bit of things

00:17:37.760 --> 00:17:40.460 align:middle line:84%
that we've done earlier
in other lectures

00:17:40.460 --> 00:17:42.110 align:middle line:90%
where epsilon was a shock.

00:17:42.110 --> 00:17:45.800 align:middle line:84%
We talked about portfolios of
land as a function of shocks,

00:17:45.800 --> 00:17:46.470 align:middle line:90%
and so on.

00:17:46.470 --> 00:17:49.580 align:middle line:84%
But in fact, this whole
object can be just summarized

00:17:49.580 --> 00:17:53.330 align:middle line:84%
by theta, a value
lying in some sum

00:17:53.330 --> 00:17:57.590 align:middle line:84%
set capital theta, occurring
with realizations p of theta.

00:17:57.590 --> 00:18:00.860 align:middle line:84%
Agent 2, the lord,
we're going to simplify.

00:18:00.860 --> 00:18:04.190 align:middle line:84%
The endowment is public, there's
no private information there.

00:18:04.190 --> 00:18:06.680 align:middle line:84%
Agent 2 is, again,
the central monastery.

00:18:06.680 --> 00:18:10.700 align:middle line:84%
Both these endowments,
the e1 of epsilon,

00:18:10.700 --> 00:18:13.370 align:middle line:84%
or theta on the one
hand and W on the other,

00:18:13.370 --> 00:18:15.140 align:middle line:90%
can be more than one crop.

00:18:15.140 --> 00:18:16.910 align:middle line:90%
It can be multiple crops.

00:18:16.910 --> 00:18:20.340 align:middle line:84%
So K is the dimension
of the vector.

00:18:20.340 --> 00:18:21.710 align:middle line:90%
So what do these guys do?

00:18:21.710 --> 00:18:26.970 align:middle line:84%
The two agents agree to a plan,
a resource allocation rule,

00:18:26.970 --> 00:18:31.070 align:middle line:84%
which allows agent 1, the guy
with the private information,

00:18:31.070 --> 00:18:35.090 align:middle line:84%
to be sending
messages to agent 2,

00:18:35.090 --> 00:18:40.940 align:middle line:84%
and as a result of the message,
some tax is paid from agent 1

00:18:40.940 --> 00:18:42.080 align:middle line:90%
to agent 2.

00:18:42.080 --> 00:18:44.780 align:middle line:84%
So little m is a
particular message,

00:18:44.780 --> 00:18:48.080 align:middle line:84%
big M here is the set
of all possible messages

00:18:48.080 --> 00:18:49.580 align:middle line:90%
or the message space.

00:18:49.580 --> 00:18:51.560 align:middle line:84%
This is quite an
abstract concept.

00:18:51.560 --> 00:18:55.250 align:middle line:84%
It could be something like,
it rained today, or, how's

00:18:55.250 --> 00:18:59.990 align:middle line:84%
the weather over there,
or, I lost my plow.

00:18:59.990 --> 00:19:02.090 align:middle line:90%
This abstract message space.

00:19:02.090 --> 00:19:04.430 align:middle line:84%
But we're going to
give it some meaning.

00:19:04.430 --> 00:19:07.640 align:middle line:84%
The meaning happens through
this allocation rule.

00:19:07.640 --> 00:19:11.180 align:middle line:84%
Namely, if theta is
the true endowment

00:19:11.180 --> 00:19:14.330 align:middle line:84%
of agent 1, how
much of the tax, f,

00:19:14.330 --> 00:19:16.610 align:middle line:84%
is a function of
what is said, M.

00:19:16.610 --> 00:19:19.250 align:middle line:84%
And they all agree to this
abstract message space

00:19:19.250 --> 00:19:21.260 align:middle line:90%
and to this allocation rule f.

00:19:21.260 --> 00:19:27.810 align:middle line:84%
So agent 1 can map what he
says into his overall outcome.

00:19:27.810 --> 00:19:31.070 align:middle line:84%
So let's suppose the
agent 1 knows exactly

00:19:31.070 --> 00:19:33.050 align:middle line:90%
what he or she wants to do.

00:19:33.050 --> 00:19:36.230 align:middle line:84%
Namely, when his or
her endowment is theta.

00:19:36.230 --> 00:19:38.360 align:middle line:84%
The best possible
message that could

00:19:38.360 --> 00:19:42.470 align:middle line:84%
be sent in that abstract
space is, we'll put a star on,

00:19:42.470 --> 00:19:43.980 align:middle line:90%
an m star of theta.

00:19:43.980 --> 00:19:48.320 align:middle line:84%
This is the maximizing message
sent by agent 1 to agent 2

00:19:48.320 --> 00:19:51.650 align:middle line:84%
when his endowment
is actually theta.

00:19:51.650 --> 00:19:55.430 align:middle line:84%
This is way to write the
fact that it's maximizing.

00:19:55.430 --> 00:20:00.290 align:middle line:84%
Namely, the overall outcome for
agent 1 in terms of agent 1's

00:20:00.290 --> 00:20:03.620 align:middle line:84%
utility is as high
as it can possibly

00:20:03.620 --> 00:20:07.190 align:middle line:84%
be relative to any other
possible message that

00:20:07.190 --> 00:20:08.450 align:middle line:90%
could be sent.

00:20:08.450 --> 00:20:11.840 align:middle line:84%
There may be ties, but at
least m star is maximal.

00:20:11.840 --> 00:20:14.820 align:middle line:84%
The inequality doesn't
go the other way.

00:20:14.820 --> 00:20:16.820 align:middle line:84%
If it went the other way,
less than or equal to,

00:20:16.820 --> 00:20:19.190 align:middle line:84%
there would be a message
m that did better

00:20:19.190 --> 00:20:21.050 align:middle line:84%
than what we said
is the maximum,

00:20:21.050 --> 00:20:23.100 align:middle line:84%
and that would be
a contradiction.

00:20:23.100 --> 00:20:26.000 align:middle line:84%
So 83 is just a statement
of maximization.

00:20:26.000 --> 00:20:30.740 align:middle line:84%
Now, this holds for any other
possible message, little m.

00:20:30.740 --> 00:20:33.260 align:middle line:84%
And in particular,
if the reality

00:20:33.260 --> 00:20:37.640 align:middle line:84%
had been something else, say
theta tilde and not theta,

00:20:37.640 --> 00:20:41.390 align:middle line:84%
m star would still denote
the maximizing message,

00:20:41.390 --> 00:20:44.150 align:middle line:84%
but it would maximize
that theta tilde.

00:20:44.150 --> 00:20:46.190 align:middle line:84%
The role that it
plays here is that is

00:20:46.190 --> 00:20:51.170 align:middle line:84%
a particular message like m,
a particular counterfactual

00:20:51.170 --> 00:20:51.860 align:middle line:90%
message.

00:20:51.860 --> 00:20:54.260 align:middle line:84%
But because it's
a valid message,

00:20:54.260 --> 00:20:57.320 align:middle line:84%
although it would have been
sent in different circumstances,

00:20:57.320 --> 00:20:59.900 align:middle line:84%
we just can substitute
m star of theta

00:20:59.900 --> 00:21:03.770 align:middle line:84%
tilde up on the right-hand
side as a particular m since 83

00:21:03.770 --> 00:21:06.200 align:middle line:84%
holds for all
possible m, and that

00:21:06.200 --> 00:21:08.930 align:middle line:90%
gives us this expression 84.

00:21:08.930 --> 00:21:13.070 align:middle line:84%
So the way to read this is that
when the agent's true endowment

00:21:13.070 --> 00:21:15.690 align:middle line:84%
is theta, see theta
on both sides,

00:21:15.690 --> 00:21:19.400 align:middle line:84%
and m star theta is maximal,
that weakly dominates,

00:21:19.400 --> 00:21:23.750 align:middle line:84%
saying what that actual
dominates what the agent would

00:21:23.750 --> 00:21:26.720 align:middle line:84%
have said in the
counterfactual situation, where

00:21:26.720 --> 00:21:28.790 align:middle line:84%
though his endowment
were theta he could have

00:21:28.790 --> 00:21:32.420 align:middle line:90%
said m star of theta tilde.

00:21:32.420 --> 00:21:33.392 align:middle line:90%
With me so far?

00:21:33.392 --> 00:21:34.850 align:middle line:84%
So these are just
simple statements

00:21:34.850 --> 00:21:37.220 align:middle line:90%
of maximization and notation.

00:21:37.220 --> 00:21:40.010 align:middle line:84%
Now we're going to make
a bigger move here,

00:21:40.010 --> 00:21:42.740 align:middle line:84%
although it seems
rather innocuous.

00:21:42.740 --> 00:21:44.900 align:middle line:84%
We're going to change
the message space

00:21:44.900 --> 00:21:47.450 align:middle line:84%
and we're going to change
the allocation rule.

00:21:47.450 --> 00:21:50.060 align:middle line:84%
The way we're going to
specialize the message space

00:21:50.060 --> 00:21:53.930 align:middle line:84%
is to require that the agent
announce values of theta.

00:21:53.930 --> 00:21:58.880 align:middle line:84%
They're still not seen
by the monastery agent 2,

00:21:58.880 --> 00:22:02.660 align:middle line:84%
but the message space is my
output was high this year,

00:22:02.660 --> 00:22:06.170 align:middle line:84%
my output was low, et cetera,
for as many possible values

00:22:06.170 --> 00:22:08.660 align:middle line:90%
of endowment as there might be.

00:22:08.660 --> 00:22:10.590 align:middle line:90%
So we change the message space.

00:22:10.590 --> 00:22:15.890 align:middle line:84%
The next thing we do is
change to transfer rule.

00:22:15.890 --> 00:22:19.970 align:middle line:84%
Well, for one thing, we have
to define the transfer rule

00:22:19.970 --> 00:22:22.500 align:middle line:90%
over messages about theta.

00:22:22.500 --> 00:22:24.690 align:middle line:90%
So we denote that g of theta.

00:22:24.690 --> 00:22:26.690 align:middle line:84%
But actually, we're not
going to, quote unquote,

00:22:26.690 --> 00:22:27.620 align:middle line:90%
"change the rule."

00:22:27.620 --> 00:22:31.820 align:middle line:84%
We're going to define g
to be the same function f,

00:22:31.820 --> 00:22:34.940 align:middle line:84%
but f used to operate
on abstract messages

00:22:34.940 --> 00:22:39.590 align:middle line:84%
whereas g operates on messages
about the actual endowment.

00:22:39.590 --> 00:22:43.340 align:middle line:84%
So the right-hand side here
is a composite function.

00:22:43.340 --> 00:22:47.030 align:middle line:84%
You have theta tilde, you send
message m star of theta tilde,

00:22:47.030 --> 00:22:48.810 align:middle line:90%
f acts on that.

00:22:48.810 --> 00:22:51.830 align:middle line:84%
So it's a composition
of f and m,

00:22:51.830 --> 00:22:55.940 align:middle line:84%
whereas g operates directly
on messages about output.

00:22:55.940 --> 00:22:57.720 align:middle line:84%
There is another
way to see this,

00:22:57.720 --> 00:23:00.620 align:middle line:84%
which is where we're going
in terms of the result.

00:23:00.620 --> 00:23:03.110 align:middle line:84%
The agent knows the
maximizing action

00:23:03.110 --> 00:23:05.130 align:middle line:90%
for every possible theta.

00:23:05.130 --> 00:23:08.270 align:middle line:84%
So he could program
the computer to do

00:23:08.270 --> 00:23:11.420 align:middle line:84%
what he wants it to do in
terms of sending a message up

00:23:11.420 --> 00:23:14.250 align:middle line:90%
to whatever key gets pushed.

00:23:14.250 --> 00:23:16.260 align:middle line:84%
So effectively,
he starts pushing

00:23:16.260 --> 00:23:20.370 align:middle line:84%
keys that denote the theta,
in this case, theta tilde,

00:23:20.370 --> 00:23:22.230 align:middle line:84%
instead of actually
sending a message.

00:23:22.230 --> 00:23:25.380 align:middle line:84%
The computer sends the message
on behalf of the agent.

00:23:25.380 --> 00:23:29.290 align:middle line:84%
Of course, the agent has,
a 1, has coded it all up.

00:23:29.290 --> 00:23:33.030 align:middle line:84%
So the computer
functions properly

00:23:33.030 --> 00:23:35.670 align:middle line:84%
on behalf of the
agent's best interests.

00:23:35.670 --> 00:23:36.450 align:middle line:90%
All right.

00:23:36.450 --> 00:23:39.390 align:middle line:84%
So now we've changed two
things, the message space

00:23:39.390 --> 00:23:41.580 align:middle line:90%
and the allocation rule.

00:23:41.580 --> 00:23:47.390 align:middle line:84%
And now we go back to
previously derived equation, 84,

00:23:47.390 --> 00:23:52.450 align:middle line:84%
that said this thing,
but start substituting--

00:23:52.450 --> 00:23:55.930 align:middle line:84%
m star of theta
tilde is composed

00:23:55.930 --> 00:24:00.100 align:middle line:84%
with f will be g of theta
tilde on the left-hand side,

00:24:00.100 --> 00:24:04.210 align:middle line:84%
f composed with m star of
theta will be g of theta

00:24:04.210 --> 00:24:08.140 align:middle line:90%
just by the definition of g.

00:24:08.140 --> 00:24:09.100 align:middle line:90%
So we get this.

00:24:09.100 --> 00:24:11.070 align:middle line:90%
We get 85.

00:24:11.070 --> 00:24:13.080 align:middle line:90%
That's just substitution.

00:24:13.080 --> 00:24:15.000 align:middle line:90%
But it's powerful.

00:24:15.000 --> 00:24:15.660 align:middle line:90%
OK?

00:24:15.660 --> 00:24:20.160 align:middle line:84%
So now we can start
calling it, misleadingly,

00:24:20.160 --> 00:24:21.810 align:middle line:90%
a truth-telling constraint.

00:24:21.810 --> 00:24:23.910 align:middle line:84%
Now, no one is choking
this guy to death.

00:24:23.910 --> 00:24:27.190 align:middle line:84%
He gets to say
whatever he wants.

00:24:27.190 --> 00:24:31.710 align:middle line:84%
But under this new message space
with the g allocation rule,

00:24:31.710 --> 00:24:35.070 align:middle line:84%
when theta actually
happens, he wants

00:24:35.070 --> 00:24:38.490 align:middle line:84%
to say it did, as opposed
to when theta actually

00:24:38.490 --> 00:24:42.210 align:middle line:84%
happens, lying and saying
that it's theta tilde.

00:24:42.210 --> 00:24:45.590 align:middle line:84%
So this constraint 85, which
was actually derived just

00:24:45.590 --> 00:24:47.810 align:middle line:84%
from a principle
of maximization,

00:24:47.810 --> 00:24:51.650 align:middle line:84%
actually starts looking like a
truth-telling constraint, where

00:24:51.650 --> 00:24:56.000 align:middle line:84%
the space of messages is the
space of possible outputs,

00:24:56.000 --> 00:24:58.250 align:middle line:84%
and now miraculously,
the agent's

00:24:58.250 --> 00:25:01.040 align:middle line:84%
going to tell the monastery
the truth about it.

00:25:01.040 --> 00:25:03.960 align:middle line:84%
The bill is going to tell the
monastery the truth about it.

00:25:03.960 --> 00:25:06.800 align:middle line:84%
But we're not kind of
insisting on truth telling.

00:25:06.800 --> 00:25:10.460 align:middle line:84%
85 is derived as
a first principle.

00:25:10.460 --> 00:25:14.140 align:middle line:84%
They're called incentive
compatibility constraints.

00:25:14.140 --> 00:25:16.060 align:middle line:84%
Anyway, so once
this mechanism is

00:25:16.060 --> 00:25:18.560 align:middle line:84%
in place, whenever
theta happens,

00:25:18.560 --> 00:25:21.640 align:middle line:84%
the agent will say
so, affecting g.

00:25:21.640 --> 00:25:24.100 align:middle line:84%
The g is actually what
would have happened

00:25:24.100 --> 00:25:26.650 align:middle line:84%
under the old mechanism
when theta happens

00:25:26.650 --> 00:25:30.890 align:middle line:84%
and the agent announced m star
of theta in the abstract space.

00:25:30.890 --> 00:25:35.590 align:middle line:84%
So this is now achieving exactly
the same set of allocations.

00:25:35.590 --> 00:25:38.830 align:middle line:84%
In fact, we could call them
shock contingent allocations.

00:25:38.830 --> 00:25:42.670 align:middle line:84%
If you go back to the
very early notation

00:25:42.670 --> 00:25:44.830 align:middle line:84%
with the shock in
there, it looks

00:25:44.830 --> 00:25:48.740 align:middle line:84%
like the agent is announcing
what those shocks are,

00:25:48.740 --> 00:25:51.610 align:middle line:84%
and under this
allocation rule, will

00:25:51.610 --> 00:25:54.340 align:middle line:84%
be telling the truth
about them as long as 85

00:25:54.340 --> 00:25:56.840 align:middle line:90%
is part of the system.

00:25:56.840 --> 00:26:00.500 align:middle line:84%
So just like before when
we had states of the world,

00:26:00.500 --> 00:26:04.240 align:middle line:84%
we talked about state contingent
allocations, like gift giving,

00:26:04.240 --> 00:26:06.910 align:middle line:84%
the risk sharing rules, and
so on, here, again, we're

00:26:06.910 --> 00:26:10.040 align:middle line:84%
enumerating these states,
epsilon in this case,

00:26:10.040 --> 00:26:13.280 align:middle line:84%
when we talk about state
contingent allocations.

00:26:13.280 --> 00:26:15.250 align:middle line:84%
So the method is
exactly the same

00:26:15.250 --> 00:26:18.760 align:middle line:84%
as before as long as we
append onto the system

00:26:18.760 --> 00:26:20.890 align:middle line:90%
constraints like 85.

00:26:20.890 --> 00:26:24.010 align:middle line:84%
Another way to say that
is all of the consequences

00:26:24.010 --> 00:26:27.130 align:middle line:84%
of private information
are captured by 85.

00:26:27.130 --> 00:26:30.970 align:middle line:84%
So we can go and do our thing
with the programming problems,

00:26:30.970 --> 00:26:33.820 align:middle line:84%
maximizing lambda
weighted sums of utilities

00:26:33.820 --> 00:26:37.750 align:middle line:84%
subject to resource
constraints, and so on, and just

00:26:37.750 --> 00:26:42.410 align:middle line:84%
append on these extra so-called
truth-telling constraints.

00:26:42.410 --> 00:26:46.060 align:middle line:84%
So we don't have to search
over abstract message spaces,

00:26:46.060 --> 00:26:48.310 align:middle line:84%
because what's
the limit of that?

00:26:48.310 --> 00:26:50.650 align:middle line:84%
Anybody can come up
with a message space.

00:26:50.650 --> 00:26:53.930 align:middle line:84%
It's too abstract and
not very specific.

00:26:53.930 --> 00:26:58.570 align:middle line:84%
We restrict the message space,
but without loss of generality.

00:26:58.570 --> 00:27:01.720 align:middle line:84%
And anything we could have
done in an abstract way

00:27:01.720 --> 00:27:04.300 align:middle line:84%
with m and f, we can
now do with theta and g.

00:27:04.300 --> 00:27:07.010 align:middle line:90%


00:27:07.010 --> 00:27:10.400 align:middle line:84%
So here, in fact, would
be a programming problem.

00:27:10.400 --> 00:27:13.100 align:middle line:84%
We're going to maximize
the lambda-weighted sums

00:27:13.100 --> 00:27:14.090 align:middle line:90%
of utilities.

00:27:14.090 --> 00:27:16.550 align:middle line:84%
A little bit of new
notation, I guess,

00:27:16.550 --> 00:27:18.380 align:middle line:90%
if I forgot to say it earlier.

00:27:18.380 --> 00:27:21.360 align:middle line:84%
Theta occurs with
probability P of theta.

00:27:21.360 --> 00:27:25.040 align:middle line:84%
So summing over theta makes
this an expected utility

00:27:25.040 --> 00:27:28.070 align:middle line:84%
representation on
the left-hand side.

00:27:28.070 --> 00:27:30.050 align:middle line:84%
Note that what the
agent gives up,

00:27:30.050 --> 00:27:34.460 align:middle line:84%
minus g, is what the
monastery gets, plus g.

00:27:34.460 --> 00:27:37.970 align:middle line:84%
There is an expected utility
term for the monastery, too.

00:27:37.970 --> 00:27:40.100 align:middle line:90%
This is a two-party contract.

00:27:40.100 --> 00:27:41.930 align:middle line:84%
They're going to
maximize this thing.

00:27:41.930 --> 00:27:45.170 align:middle line:84%
We are going to maximize
it for them to determine

00:27:45.170 --> 00:27:48.860 align:middle line:84%
Pareto-optimal allocations and
make a prediction about what

00:27:48.860 --> 00:27:52.550 align:middle line:84%
they would be doing, subject
to this extra constraint--

00:27:52.550 --> 00:27:56.500 align:middle line:84%
87, the so-called
truth-telling constraint.

00:27:56.500 --> 00:27:58.990 align:middle line:84%
You may say, well, where
is the resource constraint?

00:27:58.990 --> 00:28:02.200 align:middle line:84%
Well, it kind of got substituted
in to the objective function

00:28:02.200 --> 00:28:05.650 align:middle line:84%
because what agent 1 gives
up is what agent 2 gets.

00:28:05.650 --> 00:28:09.190 align:middle line:84%
So there's no reason to talk
about consumption of agent 1

00:28:09.190 --> 00:28:11.080 align:middle line:84%
and consumption of
agent 2, and make sure

00:28:11.080 --> 00:28:13.100 align:middle line:90%
that it adds up to the total.

00:28:13.100 --> 00:28:18.070 align:middle line:84%
That's just a handy
convenience in this setup.

00:28:18.070 --> 00:28:21.430 align:middle line:90%
So more ways to implement it--

00:28:21.430 --> 00:28:23.900 align:middle line:84%
the villa is, at the
end of the year--

00:28:23.900 --> 00:28:26.620 align:middle line:84%
and so far, this is
a static problem--

00:28:26.620 --> 00:28:29.980 align:middle line:84%
the agent just hands over
goods to the monastery.

00:28:29.980 --> 00:28:31.840 align:middle line:84%
Could be a lot, could
be a little-- whatever

00:28:31.840 --> 00:28:33.700 align:middle line:90%
it is, it's totally accepted.

00:28:33.700 --> 00:28:37.390 align:middle line:84%
As a solution to this
problem, instead of saying,

00:28:37.390 --> 00:28:40.690 align:middle line:84%
oh, I'm announcing theta and I'm
going to give you g of theta,

00:28:40.690 --> 00:28:42.460 align:middle line:90%
they just hand it over.

00:28:42.460 --> 00:28:43.710 align:middle line:90%
It's the same thing.

00:28:43.710 --> 00:28:45.250 align:middle line:90%
It's just simpler.

00:28:45.250 --> 00:28:48.680 align:middle line:84%
Now the key is, again,
this incentive constraint,

00:28:48.680 --> 00:28:51.940 align:middle line:84%
which makes sure that
agent 1 has the incentive

00:28:51.940 --> 00:28:54.580 align:middle line:84%
to hand over the right
amount, the right amount being

00:28:54.580 --> 00:28:58.070 align:middle line:84%
the solution to this
programming problem.

00:28:58.070 --> 00:29:02.530 align:middle line:84%
Second consequence-- suppose
there's only one good, wheat.

00:29:02.530 --> 00:29:06.410 align:middle line:84%
When you look at 87, it's
going to simplify to something

00:29:06.410 --> 00:29:09.200 align:middle line:90%
trivial, namely, no trade.

00:29:09.200 --> 00:29:10.370 align:middle line:90%
Why is that?

00:29:10.370 --> 00:29:12.890 align:middle line:84%
This says utility
on the left weakly

00:29:12.890 --> 00:29:15.080 align:middle line:90%
exceeds utility on the right.

00:29:15.080 --> 00:29:20.030 align:middle line:84%
And g of theta on the left
must be less than or equal to g

00:29:20.030 --> 00:29:23.280 align:middle line:84%
of theta tilde on the right
because it's the same function

00:29:23.280 --> 00:29:23.780 align:middle line:90%
u.

00:29:23.780 --> 00:29:26.000 align:middle line:84%
And theta is the same
argument otherwise.

00:29:26.000 --> 00:29:29.150 align:middle line:84%
But you can reverse the
logic, and put theta tilde

00:29:29.150 --> 00:29:31.730 align:middle line:84%
for the actual
situation and theta

00:29:31.730 --> 00:29:34.070 align:middle line:84%
for the counterfactual
situation.

00:29:34.070 --> 00:29:37.040 align:middle line:84%
You'll get another
inequality because this holds

00:29:37.040 --> 00:29:39.245 align:middle line:90%
for all theta and theta tilde.

00:29:39.245 --> 00:29:41.120 align:middle line:84%
And then you're going
to have the consequence

00:29:41.120 --> 00:29:43.730 align:middle line:84%
that g of theta tilde on
the left must be less than

00:29:43.730 --> 00:29:46.250 align:middle line:84%
or equal to g of
theta on the right.

00:29:46.250 --> 00:29:48.898 align:middle line:84%
Now we've got two inequalities--
less than or equal to,

00:29:48.898 --> 00:29:49.940 align:middle line:90%
greater than or equal to.

00:29:49.940 --> 00:29:50.990 align:middle line:90%
It must be equal to.

00:29:50.990 --> 00:29:53.940 align:middle line:84%
So g is the same
regardless of theta.

00:29:53.940 --> 00:29:56.720 align:middle line:84%
So at most, the
villa is paying over

00:29:56.720 --> 00:29:59.180 align:middle line:90%
to the monastery a constant tax.

00:29:59.180 --> 00:30:01.250 align:middle line:84%
But then it's not
state contingent,

00:30:01.250 --> 00:30:05.430 align:middle line:84%
and it could be 0 if we wanted
to make them both better off.

00:30:05.430 --> 00:30:09.350 align:middle line:84%
So that degeneration
does not necessarily

00:30:09.350 --> 00:30:11.810 align:middle line:84%
happen if there's
more than one good.

00:30:11.810 --> 00:30:15.500 align:middle line:84%
And it could be another good
is like labor, not just wheat.

00:30:15.500 --> 00:30:18.800 align:middle line:84%
And the specification
is, you've got to go,

00:30:18.800 --> 00:30:20.300 align:middle line:90%
here's the transfer of wheat.

00:30:20.300 --> 00:30:23.300 align:middle line:84%
And otherwise, I'm
going to go work for you

00:30:23.300 --> 00:30:25.910 align:middle line:84%
on the land in my
village, or trundle off

00:30:25.910 --> 00:30:28.050 align:middle line:90%
to the monastery to work there.

00:30:28.050 --> 00:30:31.520 align:middle line:84%
So there could be a
wheat/labor trade-off,

00:30:31.520 --> 00:30:34.700 align:middle line:84%
as an example of
more than one good.

00:30:34.700 --> 00:30:37.040 align:middle line:90%
And then this is not trivial.

00:30:37.040 --> 00:30:39.330 align:middle line:90%
And some trade is possible.

00:30:39.330 --> 00:30:43.280 align:middle line:84%
Another special
case-- if agent 1

00:30:43.280 --> 00:30:47.240 align:middle line:84%
is risk averse in a
certain way, then we

00:30:47.240 --> 00:30:51.740 align:middle line:84%
may be able to get some trade
even if there's only one good.

00:30:51.740 --> 00:30:54.650 align:middle line:84%
So this is just going to
exploit the possibility

00:30:54.650 --> 00:30:58.170 align:middle line:84%
that if agent 1 has a strictly
concave utility function,

00:30:58.170 --> 00:31:02.270 align:middle line:84%
then the degree of it will
determine his or her adversity

00:31:02.270 --> 00:31:03.260 align:middle line:90%
to lotteries.

00:31:03.260 --> 00:31:07.890 align:middle line:84%
So for example, you
might say I'm high today.

00:31:07.890 --> 00:31:09.650 align:middle line:84%
I would pay a big
tax, but I'm going

00:31:09.650 --> 00:31:12.980 align:middle line:84%
to pretend that I'm low so
that I pay less of a tax.

00:31:12.980 --> 00:31:15.830 align:middle line:84%
But that claim of
having a low value

00:31:15.830 --> 00:31:18.230 align:middle line:90%
may make the tax very random.

00:31:18.230 --> 00:31:22.010 align:middle line:84%
And if he's really high,
and that being a high value

00:31:22.010 --> 00:31:24.890 align:middle line:84%
makes the guy very risk
averse for odd reasons,

00:31:24.890 --> 00:31:26.780 align:middle line:84%
then he may not
want to claim low

00:31:26.780 --> 00:31:30.560 align:middle line:84%
because he prefers to avoid
the randomness associated

00:31:30.560 --> 00:31:32.170 align:middle line:90%
with the lotteries.

00:31:32.170 --> 00:31:34.060 align:middle line:84%
So lotteries in
general are going

00:31:34.060 --> 00:31:37.120 align:middle line:84%
to help sustain trade
because they exploit

00:31:37.120 --> 00:31:39.950 align:middle line:90%
differentiable risk aversion.

00:31:39.950 --> 00:31:44.170 align:middle line:84%
So with that said, we can now
write this program up here

00:31:44.170 --> 00:31:45.730 align:middle line:90%
in lotteries.

00:31:45.730 --> 00:31:48.940 align:middle line:84%
Let's call pi of tau given
theta the probability

00:31:48.940 --> 00:31:54.070 align:middle line:84%
of a transfer from agent 1
to agent 2 of magnitude tau,

00:31:54.070 --> 00:31:56.480 align:middle line:84%
conditioned on the
agent saying theta.

00:31:56.480 --> 00:32:00.040 align:middle line:84%
And then this program
6 over here becomes 7,

00:32:00.040 --> 00:32:04.570 align:middle line:84%
where we're still maximizing
a weighted sum of utilities

00:32:04.570 --> 00:32:07.720 align:middle line:84%
subject to an implicit
resource constraint.

00:32:07.720 --> 00:32:09.400 align:middle line:84%
What one guy gives
up, the other guy

00:32:09.400 --> 00:32:15.070 align:middle line:84%
gets, in the tau, but also
this now-revised incentive

00:32:15.070 --> 00:32:16.520 align:middle line:90%
constraint.

00:32:16.520 --> 00:32:18.040 align:middle line:90%
And let me read it for you--

00:32:18.040 --> 00:32:21.640 align:middle line:84%
when theta comes up,
that's the actual yield.

00:32:21.640 --> 00:32:24.400 align:middle line:84%
Agent 1 says, Yep,
that's my theta.

00:32:24.400 --> 00:32:27.640 align:middle line:84%
That's the message,
tells the truth about it.

00:32:27.640 --> 00:32:32.620 align:middle line:84%
That implements a lottery
with probabilities pi of tau

00:32:32.620 --> 00:32:35.770 align:middle line:84%
so that summing over all the
tau gives the expected utility

00:32:35.770 --> 00:32:39.350 align:middle line:84%
of the agent for having theta
and telling the truth about it.

00:32:39.350 --> 00:32:42.430 align:middle line:84%
And on the right-hand
side is the counterfactual

00:32:42.430 --> 00:32:45.200 align:middle line:84%
that although theta came
up, he lies, and says,

00:32:45.200 --> 00:32:47.950 align:middle line:90%
nope, I'm theta tilde.

00:32:47.950 --> 00:32:51.250 align:middle line:84%
But that comes with this
potential randomness,

00:32:51.250 --> 00:32:54.070 align:middle line:84%
and the expected utility
on the right-hand side

00:32:54.070 --> 00:32:57.910 align:middle line:84%
is not greater than
it is on the left.

00:32:57.910 --> 00:33:01.320 align:middle line:84%
So that's the same kind of truth
telling incentive compatibility

00:33:01.320 --> 00:33:05.160 align:middle line:84%
constraint as before, with
the simple addition that we

00:33:05.160 --> 00:33:08.030 align:middle line:90%
have those lotteries in there.

00:33:08.030 --> 00:33:11.180 align:middle line:84%
You will recognize, because
we've done this before,

00:33:11.180 --> 00:33:15.600 align:middle line:84%
that with the lotteries, things
turn into linear programs.

00:33:15.600 --> 00:33:18.410 align:middle line:84%
So when you look at this,
the control variables

00:33:18.410 --> 00:33:22.280 align:middle line:84%
are these pi of taus, and
in the objective function,

00:33:22.280 --> 00:33:26.760 align:middle line:84%
they're multiplied by
these leading coefficients.

00:33:26.760 --> 00:33:30.540 align:middle line:84%
And in the constraint
set, the control variables

00:33:30.540 --> 00:33:33.510 align:middle line:84%
are, again, the pi
of taus weighted

00:33:33.510 --> 00:33:35.560 align:middle line:90%
by certain coefficients.

00:33:35.560 --> 00:33:38.910 align:middle line:84%
So I won't repeat what we
talked about that day when

00:33:38.910 --> 00:33:40.830 align:middle line:90%
we introduced this concept.

00:33:40.830 --> 00:33:43.140 align:middle line:84%
I'm really just
trying to remind you

00:33:43.140 --> 00:33:45.660 align:middle line:84%
that we've already
seen things like this,

00:33:45.660 --> 00:33:48.720 align:middle line:84%
except that here, we
have added the addition

00:33:48.720 --> 00:33:52.140 align:middle line:84%
of these so-called truth-telling
or incentive compatibility

00:33:52.140 --> 00:33:55.290 align:middle line:84%
constraints, also written
down in lotteries.

00:33:55.290 --> 00:33:57.990 align:middle line:84%
And because it's a linear
programming problem,

00:33:57.990 --> 00:34:01.590 align:middle line:84%
we can compute solutions
to it, which you've

00:34:01.590 --> 00:34:04.020 align:middle line:84%
been doing on some of
your homework problems,

00:34:04.020 --> 00:34:08.110 align:middle line:84%
not with lotteries
per se, but computing.

00:34:08.110 --> 00:34:12.159 align:middle line:84%
Now, there is another twist
here in terms of incentives.

00:34:12.159 --> 00:34:16.540 align:middle line:84%
If it's true, say, that
high-theta guys might

00:34:16.540 --> 00:34:20.170 align:middle line:84%
want to claim to be low because
they would pay less of a tax,

00:34:20.170 --> 00:34:23.409 align:middle line:84%
I should say, where is
that intuition coming from?

00:34:23.409 --> 00:34:27.250 align:middle line:84%
If agent 1 is risk averse
and agent 2 is risk neutral,

00:34:27.250 --> 00:34:30.880 align:middle line:84%
then agent 2 should bear
all the risk, in which case

00:34:30.880 --> 00:34:33.670 align:middle line:84%
when agent 1 has a
high value of theta,

00:34:33.670 --> 00:34:36.730 align:middle line:90%
he would transfer stuff to 2.

00:34:36.730 --> 00:34:39.040 align:middle line:84%
And likewise, if agent 1
has a low value of theta,

00:34:39.040 --> 00:34:42.040 align:middle line:84%
he would receive stuff
from 2, and consumption

00:34:42.040 --> 00:34:44.170 align:middle line:84%
would be constant if it
weren't for these incentive

00:34:44.170 --> 00:34:45.280 align:middle line:90%
constraints.

00:34:45.280 --> 00:34:48.909 align:middle line:84%
But agent 2 doesn't
have to be risk neutral.

00:34:48.909 --> 00:34:51.880 align:middle line:84%
They could both be
strictly concave people.

00:34:51.880 --> 00:34:54.850 align:middle line:84%
We still know that
apart from 94,

00:34:54.850 --> 00:34:59.140 align:middle line:84%
there is this monotonicity
condition, that consumptions

00:34:59.140 --> 00:35:00.950 align:middle line:90%
should co-move together.

00:35:00.950 --> 00:35:05.920 align:middle line:84%
So when theta is high, agent
1's consumption could go up.

00:35:05.920 --> 00:35:08.260 align:middle line:84%
But so also should
agent 2, meaning

00:35:08.260 --> 00:35:12.730 align:middle line:84%
that some of that high value is
being transferred to agent 2.

00:35:12.730 --> 00:35:16.480 align:middle line:84%
So it's the same whether or
not 2 is risk neutral or not.

00:35:16.480 --> 00:35:20.800 align:middle line:84%
Now, that intuition when
the endowment is high,

00:35:20.800 --> 00:35:23.770 align:middle line:84%
agent 1 could claim
that it is low in order

00:35:23.770 --> 00:35:26.140 align:middle line:90%
to avoid paying this transfer.

00:35:26.140 --> 00:35:29.380 align:middle line:84%
But there is a way to
preventing him from doing that.

00:35:29.380 --> 00:35:33.100 align:middle line:84%
It's like-- I don't know,
I'm not a gambler myself--

00:35:33.100 --> 00:35:35.650 align:middle line:84%
like when they call you,
they put it on the table,

00:35:35.650 --> 00:35:37.510 align:middle line:90%
and say, let me see your hand.

00:35:37.510 --> 00:35:41.260 align:middle line:84%
So they say, OK, you're
claiming you're low.

00:35:41.260 --> 00:35:46.250 align:middle line:84%
Actually, let me apologize--
this goes the other way.

00:35:46.250 --> 00:35:50.005 align:middle line:84%
You only need to worry about
high guys claiming to be low.

00:35:50.005 --> 00:35:52.270 align:middle line:84%
Low guys cannot
claim to be high.

00:35:52.270 --> 00:35:53.290 align:middle line:90%
Why?

00:35:53.290 --> 00:35:56.950 align:middle line:84%
Because if they claim to be high
without necessarily taking it

00:35:56.950 --> 00:35:59.320 align:middle line:84%
away, they have to
display their wealth.

00:35:59.320 --> 00:36:03.010 align:middle line:84%
And then it would be
clear, if they can't do it,

00:36:03.010 --> 00:36:04.880 align:middle line:90%
that they were lying.

00:36:04.880 --> 00:36:07.820 align:middle line:84%
So we kind of have a one-way
incentive constraint going on

00:36:07.820 --> 00:36:09.440 align:middle line:90%
here.

00:36:09.440 --> 00:36:12.410 align:middle line:84%
That's not terribly important,
but the show and tell

00:36:12.410 --> 00:36:14.780 align:middle line:90%
is a device that can be used.

00:36:14.780 --> 00:36:16.830 align:middle line:90%
And we'll come back to it later.

00:36:16.830 --> 00:36:20.360 align:middle line:84%
All right, so now let's
get into multiple periods,

00:36:20.360 --> 00:36:23.600 align:middle line:84%
be a little bit more realistic
about this, just slightly--

00:36:23.600 --> 00:36:26.030 align:middle line:90%
two periods rather than one.

00:36:26.030 --> 00:36:30.320 align:middle line:84%
Same actors-- agent 1 having
these random endowments

00:36:30.320 --> 00:36:34.760 align:middle line:84%
in both periods, agent 2
having a potential time-varying

00:36:34.760 --> 00:36:38.450 align:middle line:84%
endowment W. And then these
probabilities of shocks,

00:36:38.450 --> 00:36:41.240 align:middle line:84%
theta 2 to agent 1
in the second period,

00:36:41.240 --> 00:36:44.840 align:middle line:84%
are basically potentially
non-independent they

00:36:44.840 --> 00:36:50.030 align:middle line:84%
could be determined by the shock
that agent 1 incurs at date 1.

00:36:50.030 --> 00:36:51.410 align:middle line:84%
So if you're into
statistics, you

00:36:51.410 --> 00:36:54.510 align:middle line:84%
could call this a Markov
process and be fancy about it,

00:36:54.510 --> 00:36:56.390 align:middle line:84%
but all you really
need to know is

00:36:56.390 --> 00:36:58.710 align:middle line:90%
the state-dependent notation.

00:36:58.710 --> 00:37:01.490 align:middle line:84%
OK, so I want to know what's
an optimal arrangement

00:37:01.490 --> 00:37:02.670 align:middle line:90%
in this world.

00:37:02.670 --> 00:37:06.510 align:middle line:84%
So we write down the
maximization problem,

00:37:06.510 --> 00:37:09.650 align:middle line:84%
which is the lambda-weighted
sum of expected utilities,

00:37:09.650 --> 00:37:12.770 align:middle line:84%
obviously taking into
account both periods

00:37:12.770 --> 00:37:16.970 align:middle line:84%
subject to resource constraints
and to incentive compatibility

00:37:16.970 --> 00:37:18.180 align:middle line:90%
constraints.

00:37:18.180 --> 00:37:21.290 align:middle line:84%
So there's a lot of lines
here, unfortunately,

00:37:21.290 --> 00:37:23.060 align:middle line:90%
but it's not so bad.

00:37:23.060 --> 00:37:27.470 align:middle line:84%
This is lambda 1
weight for agent 1,

00:37:27.470 --> 00:37:29.840 align:middle line:90%
lambda 2 weight for agent 2.

00:37:29.840 --> 00:37:35.360 align:middle line:84%
Otherwise, this is the first
period expected utility

00:37:35.360 --> 00:37:38.240 align:middle line:84%
when the agent is
theta 1 and says so,

00:37:38.240 --> 00:37:40.310 align:middle line:90%
affecting the transfer tau.

00:37:40.310 --> 00:37:43.310 align:middle line:84%
This new term here is
beta, discount rate,

00:37:43.310 --> 00:37:47.210 align:middle line:84%
times the expected
utility in period 2.

00:37:47.210 --> 00:37:49.700 align:middle line:90%
Period 2, agent 1 has theta 2--

00:37:49.700 --> 00:37:51.230 align:middle line:90%
actually says so.

00:37:51.230 --> 00:37:54.560 align:middle line:84%
And then you integrate up
over all possible thetas

00:37:54.560 --> 00:37:56.150 align:middle line:90%
and discount it by beta.

00:37:56.150 --> 00:37:58.700 align:middle line:84%
One little subtlety
I'm about to feature

00:37:58.700 --> 00:38:02.270 align:middle line:84%
is the transfers at day
2 can depend not only

00:38:02.270 --> 00:38:04.640 align:middle line:84%
on what is said about
theta 2, but what

00:38:04.640 --> 00:38:07.220 align:middle line:90%
was said about theta 1--

00:38:07.220 --> 00:38:09.410 align:middle line:84%
the history, as it
were-- in date 1.

00:38:09.410 --> 00:38:10.568 align:middle line:90%
Date 1 is the first day.

00:38:10.568 --> 00:38:11.360 align:middle line:90%
Nothing's happened.

00:38:11.360 --> 00:38:13.370 align:middle line:84%
There's no history,
but there is a history

00:38:13.370 --> 00:38:16.490 align:middle line:90%
to potentially use at day 2.

00:38:16.490 --> 00:38:18.690 align:middle line:84%
So this is the
objective function.

00:38:18.690 --> 00:38:20.240 align:middle line:84%
And again, the
resource constraints

00:38:20.240 --> 00:38:23.150 align:middle line:84%
are loaded in here because
what agent 1 gives up,

00:38:23.150 --> 00:38:24.560 align:middle line:90%
agent 2 is getting.

00:38:24.560 --> 00:38:27.110 align:middle line:84%
So we don't need to worry
about that, for both dates

00:38:27.110 --> 00:38:29.120 align:middle line:84%
and whatever the
outcome of the lottery.

00:38:29.120 --> 00:38:32.900 align:middle line:84%
Now, let's think about
the incentive constraints,

00:38:32.900 --> 00:38:36.080 align:middle line:84%
working backwards, as
in dynamic programming,

00:38:36.080 --> 00:38:37.530 align:middle line:90%
from the last period.

00:38:37.530 --> 00:38:41.930 align:middle line:84%
So say some theta 1 were already
announced, and that's history.

00:38:41.930 --> 00:38:44.120 align:middle line:90%
They arrive at day 2.

00:38:44.120 --> 00:38:47.750 align:middle line:84%
Agent 2 has a choice about
saying the actual value

00:38:47.750 --> 00:38:53.150 align:middle line:84%
of theta, theta sub 2, telling
the truth, or lying about it,

00:38:53.150 --> 00:38:55.320 align:middle line:90%
and saying theta 2 tilde.

00:38:55.320 --> 00:38:58.310 align:middle line:84%
So what does that incentive
constraint look like?

00:38:58.310 --> 00:39:01.880 align:middle line:84%
We're already in the last date,
so there's one period left.

00:39:01.880 --> 00:39:03.590 align:middle line:90%
It's period 2.

00:39:03.590 --> 00:39:08.450 align:middle line:84%
And this is got theta 2,
say so, versus got theta 2

00:39:08.450 --> 00:39:10.970 align:middle line:84%
and lie about it,
saying theta tilde.

00:39:10.970 --> 00:39:15.080 align:middle line:84%
This history, theta 1, is
the past in the archives.

00:39:15.080 --> 00:39:19.010 align:middle line:84%
So it's in both sides because
that's already public record--

00:39:19.010 --> 00:39:22.670 align:middle line:84%
not what theta 1 was per se,
but that it was announced,

00:39:22.670 --> 00:39:23.840 align:middle line:90%
theta tilde.

00:39:23.840 --> 00:39:26.810 align:middle line:84%
Now the incentive
constrain at day 1,

00:39:26.810 --> 00:39:30.170 align:middle line:84%
working backwards from day
2, looks a little bit more

00:39:30.170 --> 00:39:31.230 align:middle line:90%
complicated.

00:39:31.230 --> 00:39:35.598 align:middle line:84%
But it's just going to use
what we already know from 96--

00:39:35.598 --> 00:39:37.640 align:middle line:84%
that they will tell the
truth in the second date,

00:39:37.640 --> 00:39:39.830 align:middle line:84%
regardless of
whatever history was

00:39:39.830 --> 00:39:41.600 align:middle line:90%
announced in the first date.

00:39:41.600 --> 00:39:44.240 align:middle line:84%
So these branches
here, with the beta

00:39:44.240 --> 00:39:49.160 align:middle line:84%
in front of it on both sides,
are here, have theta 2,

00:39:49.160 --> 00:39:55.550 align:middle line:84%
say theta 2 truthfully, versus
have theta 2, and say theta 2

00:39:55.550 --> 00:39:56.450 align:middle line:90%
truthfully.

00:39:56.450 --> 00:39:58.820 align:middle line:84%
So on both the left and
the right-hand side,

00:39:58.820 --> 00:40:01.070 align:middle line:84%
the second period
is not in doubt.

00:40:01.070 --> 00:40:05.000 align:middle line:84%
The agent is going to be
telling the truth because of 96.

00:40:05.000 --> 00:40:07.910 align:middle line:84%
The real action has to
do with the first term

00:40:07.910 --> 00:40:11.000 align:middle line:84%
of the first date,
namely have theta 1

00:40:11.000 --> 00:40:14.240 align:middle line:84%
and say so versus have
theta 1 and lie about it,

00:40:14.240 --> 00:40:16.280 align:middle line:90%
and say theta 1 tilde.

00:40:16.280 --> 00:40:18.920 align:middle line:84%
And this inequality
constraint means

00:40:18.920 --> 00:40:22.820 align:middle line:84%
that a weakly dominant
strategy is to tell the truth--

00:40:22.820 --> 00:40:25.430 align:middle line:90%
have theta 1, say so.

00:40:25.430 --> 00:40:28.010 align:middle line:84%
Now note, again,
the interesting way

00:40:28.010 --> 00:40:30.620 align:middle line:90%
in which this history evolves.

00:40:30.620 --> 00:40:34.940 align:middle line:84%
If they say theta 1, it will be
part of the history of day 2.

00:40:34.940 --> 00:40:38.990 align:middle line:84%
They could say-- they won't--
but they could have said theta

00:40:38.990 --> 00:40:41.300 align:middle line:90%
1 tilde and lied about it.

00:40:41.300 --> 00:40:45.150 align:middle line:84%
And that would also be recorded
on the books as history.

00:40:45.150 --> 00:40:47.660 align:middle line:84%
So the thing that's
varying at the second date

00:40:47.660 --> 00:40:49.640 align:middle line:84%
is this announcement
in the first date,

00:40:49.640 --> 00:40:53.210 align:middle line:84%
as we consider logically
what the agent will

00:40:53.210 --> 00:40:55.190 align:middle line:90%
want to say in the first date.

00:40:55.190 --> 00:40:57.870 align:middle line:84%
So this is another
incentive constraint.

00:40:57.870 --> 00:41:00.090 align:middle line:84%
And again, there's
more than one of them.

00:41:00.090 --> 00:41:03.170 align:middle line:84%
This is for every
possible actual theta 1.

00:41:03.170 --> 00:41:08.540 align:middle line:84%
In any potential counterfactual
announcement theta 1 tilde,

00:41:08.540 --> 00:41:10.160 align:middle line:90%
constraint like this holds.

00:41:10.160 --> 00:41:12.350 align:middle line:84%
So I should have caught
myself earlier on this,

00:41:12.350 --> 00:41:14.720 align:middle line:84%
because I talked
about the incentive

00:41:14.720 --> 00:41:17.780 align:middle line:84%
constraint or the
truth-telling constraint

00:41:17.780 --> 00:41:20.030 align:middle line:90%
as if there were only one.

00:41:20.030 --> 00:41:22.520 align:middle line:84%
But in practice, there
are many because we

00:41:22.520 --> 00:41:25.800 align:middle line:84%
have many possible
realizations of theta.

00:41:25.800 --> 00:41:29.450 align:middle line:84%
So what we've done today so
far is called the "revelation

00:41:29.450 --> 00:41:32.570 align:middle line:84%
principle," meaning that those
truth-telling constraints can

00:41:32.570 --> 00:41:35.960 align:middle line:84%
be imposed without
any loss of generality

00:41:35.960 --> 00:41:38.780 align:middle line:84%
in the search for private
information-constrained

00:41:38.780 --> 00:41:39.470 align:middle line:90%
optimum.

00:41:39.470 --> 00:41:42.320 align:middle line:84%
Now, there's an issue
of language here.

00:41:42.320 --> 00:41:45.980 align:middle line:84%
Instead of talking about a
Pareto-optimal allocation,

00:41:45.980 --> 00:41:51.620 align:middle line:84%
we should be talking about an
information-constrained optimal

00:41:51.620 --> 00:41:52.790 align:middle line:90%
allocation.

00:41:52.790 --> 00:41:56.750 align:middle line:84%
Some people-- I don't love it--
talk about Pareto optimality

00:41:56.750 --> 00:42:00.800 align:middle line:84%
as first best, and this notion
of constrained optimality

00:42:00.800 --> 00:42:03.980 align:middle line:84%
as second best, with the good
intention of distinguishing

00:42:03.980 --> 00:42:05.180 align:middle line:90%
those two cases.

00:42:05.180 --> 00:42:07.070 align:middle line:84%
It's second best
but unavoidable,

00:42:07.070 --> 00:42:10.190 align:middle line:84%
because you cannot get around
these kinds of incentive

00:42:10.190 --> 00:42:11.680 align:middle line:90%
constraints.

00:42:11.680 --> 00:42:13.870 align:middle line:84%
They may or may not be
binding, but you definitely

00:42:13.870 --> 00:42:15.190 align:middle line:90%
should be writing them down.

00:42:15.190 --> 00:42:17.710 align:middle line:84%
And when they're binding,
they constrain the solution,

00:42:17.710 --> 00:42:20.620 align:middle line:84%
and hence the terminology
"constrained optimum."

00:42:20.620 --> 00:42:21.595 align:middle line:90%
Question so far?

00:42:21.595 --> 00:42:25.910 align:middle line:90%


00:42:25.910 --> 00:42:28.550 align:middle line:84%
So what do we know
about the solution?

00:42:28.550 --> 00:42:31.250 align:middle line:84%
One thing I've
already hinted at--

00:42:31.250 --> 00:42:35.780 align:middle line:84%
if there were full information,
then if we go back,

00:42:35.780 --> 00:42:38.460 align:middle line:84%
this is a version of
what you've seen before.

00:42:38.460 --> 00:42:41.030 align:middle line:90%
It's written out as two periods.

00:42:41.030 --> 00:42:44.510 align:middle line:84%
But remember, the way we solve
these things in Debreu decision

00:42:44.510 --> 00:42:48.020 align:middle line:84%
tree, we said for any date
and for any history of states

00:42:48.020 --> 00:42:51.560 align:middle line:84%
leading up to that, we'll have
a risk-sharing rule, a transfer

00:42:51.560 --> 00:42:54.980 align:middle line:84%
rule, which is a function
only of the current aggregate

00:42:54.980 --> 00:42:57.120 align:middle line:90%
endowment and nothing else.

00:42:57.120 --> 00:43:00.020 align:middle line:84%
So the full risk-sharing problem
without the truth-telling

00:43:00.020 --> 00:43:04.260 align:middle line:84%
constraints will devolve into
a series of static problems,

00:43:04.260 --> 00:43:07.070 align:middle line:84%
which means the
transfer rule at day 1

00:43:07.070 --> 00:43:11.210 align:middle line:84%
would be the same as the
transfer rule at day 2.

00:43:11.210 --> 00:43:14.990 align:middle line:84%
But in fact, when we have
this information-constrained

00:43:14.990 --> 00:43:18.830 align:middle line:84%
efficient arrangement,
it's almost surely the case

00:43:18.830 --> 00:43:21.200 align:middle line:84%
that we're not going to be
able to get to the full risk

00:43:21.200 --> 00:43:22.310 align:middle line:90%
sharing.

00:43:22.310 --> 00:43:28.250 align:middle line:84%
And likewise, if you're
already at the second date,

00:43:28.250 --> 00:43:29.900 align:middle line:84%
you're kind of
doomed, especially

00:43:29.900 --> 00:43:32.630 align:middle line:90%
with one good, no lotteries.

00:43:32.630 --> 00:43:35.360 align:middle line:84%
You can't have a theta
2-contingent transfer

00:43:35.360 --> 00:43:36.320 align:middle line:90%
at the second date.

00:43:36.320 --> 00:43:38.810 align:middle line:84%
But possibilities remain
at the first date.

00:43:38.810 --> 00:43:40.100 align:middle line:90%
Why?

00:43:40.100 --> 00:43:43.790 align:middle line:84%
Precisely because you can
tie the allocation rule

00:43:43.790 --> 00:43:45.770 align:middle line:84%
in this lottery
at the second date

00:43:45.770 --> 00:43:48.410 align:middle line:84%
to what is announced
at the first date.

00:43:48.410 --> 00:43:51.740 align:middle line:84%
So this history of
messages starts to matter.

00:43:51.740 --> 00:43:54.140 align:middle line:84%
Or another way to
put that, when it's

00:43:54.140 --> 00:43:57.980 align:middle line:84%
necessary to have that, what
happens at the second date

00:43:57.980 --> 00:44:00.350 align:middle line:90%
is no longer a static problem.

00:44:00.350 --> 00:44:02.810 align:middle line:84%
You have to utilize
what also happened

00:44:02.810 --> 00:44:06.170 align:middle line:84%
at the first date, which you
could call a tie-in of sorts--

00:44:06.170 --> 00:44:10.460 align:middle line:84%
intertemporal cross-period
ties in of the second date

00:44:10.460 --> 00:44:13.260 align:middle line:90%
to the first date.

00:44:13.260 --> 00:44:18.110 align:middle line:84%
It also reminded me of what the
historians are talking about.

00:44:18.110 --> 00:44:21.530 align:middle line:84%
They said, oh, these manners
are terribly inefficient,

00:44:21.530 --> 00:44:23.720 align:middle line:90%
bound by tradition.

00:44:23.720 --> 00:44:26.540 align:middle line:84%
They can't break
away from the past.

00:44:26.540 --> 00:44:30.260 align:middle line:84%
Well, the theory
we're going over

00:44:30.260 --> 00:44:32.930 align:middle line:84%
says that there's a very
good reason why they would

00:44:32.930 --> 00:44:34.970 align:middle line:90%
like to be bound by the past--

00:44:34.970 --> 00:44:38.110 align:middle line:90%
for incentive purposes.

00:44:38.110 --> 00:44:40.890 align:middle line:84%
So one example of that
is borrowing and lending.

00:44:40.890 --> 00:44:43.470 align:middle line:84%
I mean, suppose the
villa has a low output,

00:44:43.470 --> 00:44:45.810 align:middle line:90%
and they say, look, I promise--

00:44:45.810 --> 00:44:48.330 align:middle line:84%
let me pay less or
borrow, and I'll

00:44:48.330 --> 00:44:50.730 align:middle line:90%
repay the loan next period.

00:44:50.730 --> 00:44:52.680 align:middle line:84%
And there's a commitment
device to make sure

00:44:52.680 --> 00:44:54.630 align:middle line:90%
that the loan will be repaid.

00:44:54.630 --> 00:44:59.790 align:middle line:84%
So would the villa want to
claim to be a lender when

00:44:59.790 --> 00:45:00.930 align:middle line:90%
the income is low?

00:45:00.930 --> 00:45:03.480 align:middle line:84%
No, they would want
to be a borrower.

00:45:03.480 --> 00:45:05.257 align:middle line:84%
And conversely, when
the income is high,

00:45:05.257 --> 00:45:07.590 align:middle line:84%
they're going to want to be
a lender, as long as they're

00:45:07.590 --> 00:45:09.400 align:middle line:84%
guaranteed of
getting stuff back.

00:45:09.400 --> 00:45:12.060 align:middle line:90%
So what's going on here?

00:45:12.060 --> 00:45:15.690 align:middle line:84%
You're tying what happens
at the second period

00:45:15.690 --> 00:45:17.880 align:middle line:84%
to what happens at
the first period--

00:45:17.880 --> 00:45:21.000 align:middle line:84%
those so-called
intertemporal connections.

00:45:21.000 --> 00:45:23.460 align:middle line:84%
It's not like you say
a theta, and then you

00:45:23.460 --> 00:45:25.680 align:middle line:90%
pay high or low today.

00:45:25.680 --> 00:45:28.530 align:middle line:84%
You say a theta, you may
pay high or low today,

00:45:28.530 --> 00:45:31.150 align:middle line:84%
but there are
consequences for tomorrow.

00:45:31.150 --> 00:45:35.460 align:middle line:84%
So you choose what
you're saying to give you

00:45:35.460 --> 00:45:37.350 align:middle line:90%
the maximum possible utility.

00:45:37.350 --> 00:45:40.240 align:middle line:84%
And you have an incentive
to smooth consumption.

00:45:40.240 --> 00:45:41.880 align:middle line:84%
So when you're low,
you want to say so.

00:45:41.880 --> 00:45:42.380 align:middle line:90%
Why?

00:45:42.380 --> 00:45:47.400 align:middle line:84%
Because that's better for you
in terms of getting money today,

00:45:47.400 --> 00:45:49.680 align:middle line:84%
where you value it more
than tomorrow, where

00:45:49.680 --> 00:45:52.740 align:middle line:90%
you're likely to be higher.

00:45:52.740 --> 00:45:54.600 align:middle line:90%
That was a bit of a digression.

00:45:54.600 --> 00:45:57.780 align:middle line:84%
It also comes up at the
bottom of the slide.

00:45:57.780 --> 00:46:00.210 align:middle line:84%
So the borrowing
and lending scheme

00:46:00.210 --> 00:46:04.500 align:middle line:84%
is an example of the past
mattering in a very trivial way

00:46:04.500 --> 00:46:05.940 align:middle line:90%
with the borrowing and lending.

00:46:05.940 --> 00:46:07.830 align:middle line:84%
What you've got to pay
today is a function

00:46:07.830 --> 00:46:11.160 align:middle line:84%
of whether you were a
borrower or lender last time.

00:46:11.160 --> 00:46:13.350 align:middle line:90%
It's not time consistent.

00:46:13.350 --> 00:46:16.470 align:middle line:84%
By the time you roll
around to day 2,

00:46:16.470 --> 00:46:22.290 align:middle line:84%
and ask these guys whether
they would like to start over,

00:46:22.290 --> 00:46:26.390 align:middle line:84%
they're, like, yeah, sure,
we can both be better off.

00:46:26.390 --> 00:46:29.030 align:middle line:84%
The incentive
constraint is imposed

00:46:29.030 --> 00:46:34.100 align:middle line:84%
to get them to behave properly,
as best they can, at date 1.

00:46:34.100 --> 00:46:37.910 align:middle line:84%
Once date 1 has happened
and we move to date 2,

00:46:37.910 --> 00:46:41.160 align:middle line:84%
there is no longer a
need for that constraint.

00:46:41.160 --> 00:46:45.800 align:middle line:84%
And if we were to resolve
the problem at day 2,

00:46:45.800 --> 00:46:48.330 align:middle line:84%
they would likely do
something different.

00:46:48.330 --> 00:46:51.760 align:middle line:84%
So it's called
"time inconsistent."

00:46:51.760 --> 00:46:54.760 align:middle line:84%
The arrangement is not going
to be consistently carried out

00:46:54.760 --> 00:46:57.790 align:middle line:90%
over time, voluntarily.

00:46:57.790 --> 00:47:01.400 align:middle line:84%
They're going to be
bound by these rules.

00:47:01.400 --> 00:47:05.570 align:middle line:84%
So then the thing at the
bottom of the slide, claim 1--

00:47:05.570 --> 00:47:08.500 align:middle line:84%
borrowing and lending
is not optimal.

00:47:08.500 --> 00:47:12.750 align:middle line:90%
So let's go back to this.

00:47:12.750 --> 00:47:15.750 align:middle line:84%
Say the solution
to this program 8

00:47:15.750 --> 00:47:17.880 align:middle line:84%
is the borrowing and
lending solution.

00:47:17.880 --> 00:47:20.130 align:middle line:90%
When theta is low, one borrows.

00:47:20.130 --> 00:47:24.952 align:middle line:84%
When theta 1 is high, the
agent lends, and re-pays back,

00:47:24.952 --> 00:47:26.910 align:middle line:84%
with the payment going
in the reverse direction

00:47:26.910 --> 00:47:28.710 align:middle line:90%
in the second period.

00:47:28.710 --> 00:47:31.290 align:middle line:90%
I claim that's not optimal.

00:47:31.290 --> 00:47:33.720 align:middle line:90%
It's probably still mysterious.

00:47:33.720 --> 00:47:35.820 align:middle line:84%
When the agent is
low, he strictly

00:47:35.820 --> 00:47:40.230 align:middle line:84%
prefers to say he's low rather
than saying that he's high.

00:47:40.230 --> 00:47:43.980 align:middle line:84%
That makes this inequality
constraint strict.

00:47:43.980 --> 00:47:45.570 align:middle line:84%
Likewise, when
the agent is high,

00:47:45.570 --> 00:47:47.730 align:middle line:84%
he strictly prefers
to say he's high

00:47:47.730 --> 00:47:49.440 align:middle line:90%
rather than saying he's low.

00:47:49.440 --> 00:47:51.900 align:middle line:84%
That makes this
inequality strict.

00:47:51.900 --> 00:47:55.080 align:middle line:84%
Well, if both
inequalities are strict,

00:47:55.080 --> 00:47:57.600 align:middle line:90%
neither one can be binding.

00:47:57.600 --> 00:47:59.820 align:middle line:84%
We might as well solve
the programming problem

00:47:59.820 --> 00:48:02.010 align:middle line:84%
as if they weren't there
in the first place.

00:48:02.010 --> 00:48:04.120 align:middle line:84%
Because now we know
they're not binding.

00:48:04.120 --> 00:48:06.420 align:middle line:84%
And what happens if
you solve this problem

00:48:06.420 --> 00:48:08.340 align:middle line:90%
without the constraints?

00:48:08.340 --> 00:48:10.410 align:middle line:84%
That's the full
risk-sharing problem.

00:48:10.410 --> 00:48:13.590 align:middle line:84%
And it can't be optimal because
they'll lie their head off

00:48:13.590 --> 00:48:16.690 align:middle line:84%
about their income because
there's no consequences.

00:48:16.690 --> 00:48:20.130 align:middle line:84%
So that's the way to
think through the bottom

00:48:20.130 --> 00:48:21.750 align:middle line:90%
of this slide.

00:48:21.750 --> 00:48:25.200 align:middle line:84%
Full insurance isn't
feasible, not implementable

00:48:25.200 --> 00:48:27.900 align:middle line:84%
because it's going to violate
the incentive constraints.

00:48:27.900 --> 00:48:30.450 align:middle line:84%
And borrowing and lending
is not optimal, either.

00:48:30.450 --> 00:48:32.460 align:middle line:84%
Which means, well,
what is optimal?

00:48:32.460 --> 00:48:34.770 align:middle line:84%
What is the actual
solution to that program?

00:48:34.770 --> 00:48:39.180 align:middle line:84%
Well, actually,
it's a hybrid scheme

00:48:39.180 --> 00:48:42.210 align:middle line:84%
that is a bit like risk-sharing,
and borrowing, and lending.

00:48:42.210 --> 00:48:44.250 align:middle line:84%
When you're low,
you say you're low.

00:48:44.250 --> 00:48:46.733 align:middle line:84%
You borrow, but you actually
get even more money,

00:48:46.733 --> 00:48:48.150 align:middle line:84%
but less money
than you would have

00:48:48.150 --> 00:48:50.250 align:middle line:84%
if it had been
full risk sharing,

00:48:50.250 --> 00:48:53.030 align:middle line:84%
and vice versa for
when you're high.

00:48:53.030 --> 00:48:58.510 align:middle line:84%
So it's a hybrid contract
that is mixing up

00:48:58.510 --> 00:49:01.600 align:middle line:84%
the two aspects,
which makes sense

00:49:01.600 --> 00:49:03.500 align:middle line:84%
because neither extreme
is a good thing.

00:49:03.500 --> 00:49:05.970 align:middle line:90%
So you end up in the middle.

00:49:05.970 --> 00:49:09.360 align:middle line:84%
So this slide is
about the other option

00:49:09.360 --> 00:49:10.890 align:middle line:90%
I alluded to at the beginning.

00:49:10.890 --> 00:49:14.400 align:middle line:84%
Let's revert back
to a static problem.

00:49:14.400 --> 00:49:17.580 align:middle line:84%
There's a cost K,
use of resources,

00:49:17.580 --> 00:49:19.380 align:middle line:84%
which the agent
2, the monastery,

00:49:19.380 --> 00:49:23.010 align:middle line:84%
can incur in order to go
and take a look at agent 1's

00:49:23.010 --> 00:49:23.970 align:middle line:90%
actual outputs.

00:49:23.970 --> 00:49:27.360 align:middle line:84%
So instead of claims about
it, which will also happen,

00:49:27.360 --> 00:49:30.480 align:middle line:84%
there's kind of like this
possibility of an audit.

00:49:30.480 --> 00:49:34.620 align:middle line:84%
It's as if in the US, you
file your income tax returns

00:49:34.620 --> 00:49:37.650 align:middle line:84%
making claims about stuff,
but with a certain probability

00:49:37.650 --> 00:49:41.220 align:middle line:84%
the IRS will audit you, and find
out the truth of the matter.

00:49:41.220 --> 00:49:45.150 align:middle line:84%
And if you're caught
lying, you go to jail.

00:49:45.150 --> 00:49:48.180 align:middle line:84%
That's how they got
Al Capone, actually--

00:49:48.180 --> 00:49:50.010 align:middle line:84%
not for all the
crimes, but because he

00:49:50.010 --> 00:49:51.550 align:middle line:90%
misreported his income.

00:49:51.550 --> 00:49:53.340 align:middle line:90%
So K is this audit cost.

00:49:53.340 --> 00:49:55.020 align:middle line:84%
And we can introduce
another variable

00:49:55.020 --> 00:49:59.250 align:middle line:90%
called d, where d is the dummy.

00:49:59.250 --> 00:50:02.820 align:middle line:84%
d equal 1 for audit or d
equals 0 for not audit.

00:50:02.820 --> 00:50:06.780 align:middle line:84%
And then we could enhance our
transfers or the lotteries

00:50:06.780 --> 00:50:10.200 align:middle line:84%
of transfers to depend
on whether or not

00:50:10.200 --> 00:50:11.550 align:middle line:90%
there's an audit--

00:50:11.550 --> 00:50:14.370 align:middle line:84%
equal 1 for an audit,
equals 0 for not.

00:50:14.370 --> 00:50:16.290 align:middle line:84%
When there's no audit,
they have to rely

00:50:16.290 --> 00:50:19.200 align:middle line:84%
on the filing of the return
or the message that was sent.

00:50:19.200 --> 00:50:22.230 align:middle line:84%
When there is an audit, they
get to compare the message that

00:50:22.230 --> 00:50:25.150 align:middle line:90%
was sent with the actual theta.

00:50:25.150 --> 00:50:27.225 align:middle line:84%
And as you could
imagine, going-- you

00:50:27.225 --> 00:50:30.950 align:middle line:84%
could kill the guy, going
to jail or whatever.

00:50:30.950 --> 00:50:35.920 align:middle line:84%
So I'll spare you this slide
except that the incentive

00:50:35.920 --> 00:50:38.500 align:middle line:84%
constraint will now take
advantage of the fact

00:50:38.500 --> 00:50:41.500 align:middle line:84%
that lying is a pretty
treacherous thing.

00:50:41.500 --> 00:50:43.870 align:middle line:84%
Because with a certain
positive probability,

00:50:43.870 --> 00:50:46.690 align:middle line:84%
you'll get caught in the
lie, and you can make

00:50:46.690 --> 00:50:48.730 align:middle line:90%
the guy's utility really low.

00:50:48.730 --> 00:50:53.020 align:middle line:84%
Later after class, you can look
at this inequality constraint.

00:50:53.020 --> 00:50:57.520 align:middle line:84%
It's this line here that you
can make a very low number.

00:50:57.520 --> 00:51:00.430 align:middle line:84%
Because you would penalize
the guy if he said

00:51:00.430 --> 00:51:03.550 align:middle line:84%
he was theta tilde, and he was
actually revealed to be theta.

00:51:03.550 --> 00:51:05.050 align:middle line:84%
And this is on the
right-hand side

00:51:05.050 --> 00:51:06.790 align:middle line:90%
of the incentive constraint.

00:51:06.790 --> 00:51:09.250 align:middle line:84%
So the lower you can
make this number,

00:51:09.250 --> 00:51:12.497 align:middle line:84%
the easier it is to satisfy
the incentive constraint,

00:51:12.497 --> 00:51:14.080 align:middle line:84%
and the more you're
going to move back

00:51:14.080 --> 00:51:16.960 align:middle line:84%
toward the full
information solution.

00:51:16.960 --> 00:51:20.860 align:middle line:84%
But it comes at a
cost, because this K

00:51:20.860 --> 00:51:25.180 align:middle line:84%
is a cost, a real cost, that
has to get subtracted off

00:51:25.180 --> 00:51:26.270 align:middle line:90%
from resources.

00:51:26.270 --> 00:51:29.350 align:middle line:84%
So when that cost K
is very, very high,

00:51:29.350 --> 00:51:32.230 align:middle line:84%
you will not be
auditing very much.

00:51:32.230 --> 00:51:33.610 align:middle line:90%
The audit will be random.

00:51:33.610 --> 00:51:35.470 align:middle line:84%
And only rarely
will you actually

00:51:35.470 --> 00:51:39.380 align:middle line:84%
carry it out in order to
conserve on resources.

00:51:39.380 --> 00:51:42.640 align:middle line:84%
So at the beginning, I
mentioned the institutional

00:51:42.640 --> 00:51:44.170 align:middle line:90%
configuration.

00:51:44.170 --> 00:51:48.820 align:middle line:84%
Is it true that those outlying
villas doing their own farming

00:51:48.820 --> 00:51:53.140 align:middle line:84%
were audited or audited less
rarely than the ones close

00:51:53.140 --> 00:51:54.490 align:middle line:90%
to the monastery?

00:51:54.490 --> 00:51:56.620 align:middle line:84%
And this theory we
just went through

00:51:56.620 --> 00:52:00.610 align:middle line:84%
allows one to think
about those as maybe what

00:52:00.610 --> 00:52:05.110 align:middle line:84%
happened in practice, consistent
with the institutional data.

00:52:05.110 --> 00:52:08.740 align:middle line:84%
So I want to turn to the second
part of the lecture, which

00:52:08.740 --> 00:52:12.970 align:middle line:84%
has to do with mechanism design
that we just did, but splice

00:52:12.970 --> 00:52:15.700 align:middle line:90%
that into smart contracts.

00:52:15.700 --> 00:52:18.220 align:middle line:84%
The shorthand for this
is, think about a contract

00:52:18.220 --> 00:52:22.240 align:middle line:84%
as a smart contract implemented
with today's modern technology.

00:52:22.240 --> 00:52:24.730 align:middle line:84%
We just talked about
mechanism design

00:52:24.730 --> 00:52:28.030 align:middle line:84%
as delivering contracts
between a villa and a monastery

00:52:28.030 --> 00:52:30.300 align:middle line:90%
as an example.

00:52:30.300 --> 00:52:32.910 align:middle line:84%
And along the way, we'll
talk about encryption,

00:52:32.910 --> 00:52:35.280 align:middle line:84%
and hashes, and
database management,

00:52:35.280 --> 00:52:37.260 align:middle line:90%
and these protocols.

00:52:37.260 --> 00:52:40.500 align:middle line:84%
Encryption-- we've talked
about distributed ledgers.

00:52:40.500 --> 00:52:43.440 align:middle line:84%
Encryption's like
the third part of it.

00:52:43.440 --> 00:52:45.810 align:middle line:84%
We talked about ledgers
as transferring value,

00:52:45.810 --> 00:52:48.090 align:middle line:84%
as in m-Pesa or
other situations.

00:52:48.090 --> 00:52:52.320 align:middle line:84%
We talked about ledgers as
contracts to reconcile trades.

00:52:52.320 --> 00:52:54.570 align:middle line:84%
This third thing
is keeping secrets

00:52:54.570 --> 00:52:57.360 align:middle line:84%
through encryption, which
is logical to have here

00:52:57.360 --> 00:53:01.170 align:middle line:84%
because we just got done talking
about private information.

00:53:01.170 --> 00:53:02.040 align:middle line:90%
Is it new?

00:53:02.040 --> 00:53:03.060 align:middle line:90%
No, not at all.

00:53:03.060 --> 00:53:07.750 align:middle line:84%
Encryption is ancient, literally
thousands of years old.

00:53:07.750 --> 00:53:10.410 align:middle line:84%
If you go back to
Mesopotamia, they

00:53:10.410 --> 00:53:12.030 align:middle line:90%
would be shipping goods around.

00:53:12.030 --> 00:53:14.640 align:middle line:84%
They had created little
tokens which they

00:53:14.640 --> 00:53:16.740 align:middle line:90%
put in clay sealed envelopes.

00:53:16.740 --> 00:53:20.130 align:middle line:84%
If the seal was broken, you'd
know there was some tampering.

00:53:20.130 --> 00:53:22.020 align:middle line:84%
And otherwise, when
the goods arrived,

00:53:22.020 --> 00:53:24.450 align:middle line:84%
the receiver of the
goods can reconcile

00:53:24.450 --> 00:53:26.700 align:middle line:84%
the goods in the shipment
with this invoice,

00:53:26.700 --> 00:53:28.450 align:middle line:90%
after breaking the seal.

00:53:28.450 --> 00:53:30.390 align:middle line:84%
So those are clay
in Mesopotamia,

00:53:30.390 --> 00:53:34.180 align:middle line:84%
and that's where Mesopotamian
writing came from,

00:53:34.180 --> 00:53:37.210 align:middle line:90%
actually, is from these tokens.

00:53:37.210 --> 00:53:39.310 align:middle line:84%
Or in medieval
England, they had what

00:53:39.310 --> 00:53:42.250 align:middle line:84%
they called "tally sticks,"
which were just wood,

00:53:42.250 --> 00:53:44.170 align:middle line:90%
willow sticks.

00:53:44.170 --> 00:53:46.930 align:middle line:84%
The borrower and the lender
would make an agreement.

00:53:46.930 --> 00:53:50.770 align:middle line:84%
The borrower would
promise to repay.

00:53:50.770 --> 00:53:54.040 align:middle line:84%
They would write these
things on wooden ledgers

00:53:54.040 --> 00:53:55.880 align:middle line:90%
and split it in half.

00:53:55.880 --> 00:53:59.980 align:middle line:84%
And so the investor lender
would have half of the stick

00:53:59.980 --> 00:54:01.690 align:middle line:84%
and carry it around,
could present it

00:54:01.690 --> 00:54:05.950 align:middle line:84%
to the borrower for
payment, but could also

00:54:05.950 --> 00:54:07.720 align:middle line:90%
sell it to third parties.

00:54:07.720 --> 00:54:11.680 align:middle line:84%
And so those willow sticks
circulated around like money

00:54:11.680 --> 00:54:13.820 align:middle line:90%
as a means of payment.

00:54:13.820 --> 00:54:16.340 align:middle line:84%
The point of the willow--
it had unique grain,

00:54:16.340 --> 00:54:19.790 align:middle line:84%
so you could match the
stalk with the check.

00:54:19.790 --> 00:54:23.360 align:middle line:84%
And if it didn't match, you know
that the person presenting it

00:54:23.360 --> 00:54:25.140 align:middle line:90%
is trying to commit some fraud.

00:54:25.140 --> 00:54:29.480 align:middle line:84%
So it's another early
example of encryption.

00:54:29.480 --> 00:54:33.600 align:middle line:84%
Encryption today, intuitively--
this isn't quite right--

00:54:33.600 --> 00:54:35.490 align:middle line:90%
can be thought of factoring.

00:54:35.490 --> 00:54:39.440 align:middle line:84%
So as you may know if you're
MIT students trained in Computer

00:54:39.440 --> 00:54:42.110 align:middle line:84%
Science, and Algebra,
and so on, when

00:54:42.110 --> 00:54:44.310 align:middle line:84%
you multiply two prime
numbers together,

00:54:44.310 --> 00:54:46.550 align:middle line:90%
you get another number--

00:54:46.550 --> 00:54:50.390 align:middle line:84%
3 times 7, then 21, and
you know how to factor it.

00:54:50.390 --> 00:54:53.810 align:middle line:84%
But when those primes get
big and are multiplied,

00:54:53.810 --> 00:54:57.380 align:middle line:84%
it's virtually
impossible to know

00:54:57.380 --> 00:55:01.580 align:middle line:84%
what are the two numbers that
were being multiplied together.

00:55:01.580 --> 00:55:05.150 align:middle line:84%
So the output looks like
an encrypted message.

00:55:05.150 --> 00:55:07.460 align:middle line:84%
You can try to solve
it, but you have

00:55:07.460 --> 00:55:09.620 align:middle line:84%
to try all possible
combinations.

00:55:09.620 --> 00:55:12.870 align:middle line:84%
And it gets to be
really hard to do that.

00:55:12.870 --> 00:55:15.780 align:middle line:84%
Another way you can
use factors, though,

00:55:15.780 --> 00:55:18.410 align:middle line:84%
is to give someone
part of the solution.

00:55:18.410 --> 00:55:22.460 align:middle line:84%
Like here's the product
encrypted, multiplied together,

00:55:22.460 --> 00:55:23.960 align:middle line:90%
but I actually know the answer.

00:55:23.960 --> 00:55:25.340 align:middle line:84%
I'll give you one
of the factors.

00:55:25.340 --> 00:55:28.020 align:middle line:84%
You can easily figure
out the other factors.

00:55:28.020 --> 00:55:32.210 align:middle line:90%
And so that's like hashes.

00:55:32.210 --> 00:55:36.170 align:middle line:84%
The hash itself means nothing,
but it is evidence of something

00:55:36.170 --> 00:55:39.410 align:middle line:84%
if someone comes along and
gives you one of both factors.

00:55:39.410 --> 00:55:41.210 align:middle line:84%
Because then you can
rehash the message

00:55:41.210 --> 00:55:44.480 align:middle line:84%
and verify that the underlying
message was the one that

00:55:44.480 --> 00:55:46.740 align:middle line:90%
generated the hash.

00:55:46.740 --> 00:55:49.860 align:middle line:84%
And finally, we come to
cryptographic puzzles,

00:55:49.860 --> 00:55:53.950 align:middle line:84%
which means the factors
are big, but not too big.

00:55:53.950 --> 00:55:56.070 align:middle line:84%
So then, you could
imagine spinning

00:55:56.070 --> 00:55:58.050 align:middle line:84%
the wheels of the
combination of a safe

00:55:58.050 --> 00:56:01.380 align:middle line:84%
to try to figure out which two
factors generated the number.

00:56:01.380 --> 00:56:04.080 align:middle line:84%
It's solvable,
but it takes time.

00:56:04.080 --> 00:56:06.090 align:middle line:90%
That's what Bitcoin uses--

00:56:06.090 --> 00:56:09.010 align:middle line:84%
these cryptographic
puzzles, among other things.

00:56:09.010 --> 00:56:14.250 align:middle line:84%
So the three objects,
three types of things,

00:56:14.250 --> 00:56:17.550 align:middle line:84%
are encryption,
which is done now

00:56:17.550 --> 00:56:18.990 align:middle line:90%
with private and public keys.

00:56:18.990 --> 00:56:21.540 align:middle line:84%
And I'm happy to tell
you more about that.

00:56:21.540 --> 00:56:25.380 align:middle line:84%
I even have a primer that
I wrote with Nicholas, a CS

00:56:25.380 --> 00:56:27.480 align:middle line:90%
student here at MIT.

00:56:27.480 --> 00:56:29.280 align:middle line:84%
Took me quite a
while as an economist

00:56:29.280 --> 00:56:30.870 align:middle line:90%
to understand this stuff.

00:56:30.870 --> 00:56:34.350 align:middle line:84%
You probably heard, though,
about public and private keys.

00:56:34.350 --> 00:56:36.780 align:middle line:84%
The public key is
used for encryption.

00:56:36.780 --> 00:56:40.200 align:middle line:84%
The private key is used
to decrypt the message.

00:56:40.200 --> 00:56:44.580 align:middle line:84%
Hashing I've mentioned already,
like multiplying factors

00:56:44.580 --> 00:56:45.870 align:middle line:90%
together.

00:56:45.870 --> 00:56:49.620 align:middle line:84%
Cryptographic puzzles, I
guess I mentioned again--

00:56:49.620 --> 00:56:51.690 align:middle line:84%
the thing is to
solve the puzzle,

00:56:51.690 --> 00:56:54.150 align:middle line:84%
you don't spin the
wheels of the safe.

00:56:54.150 --> 00:56:55.620 align:middle line:90%
You actually run a computer.

00:56:55.620 --> 00:56:59.830 align:middle line:84%
And that's where Bitcoin is
chewing up all the electricity,

00:56:59.830 --> 00:57:02.770 align:middle line:84%
as all these many
miners are trying

00:57:02.770 --> 00:57:07.810 align:middle line:84%
to find solutions to
find the actual factors.

00:57:07.810 --> 00:57:11.080 align:middle line:90%
So Bitcoin uses all three.

00:57:11.080 --> 00:57:14.090 align:middle line:84%
It's actually pretty amazing
and pretty complicated.

00:57:14.090 --> 00:57:17.140 align:middle line:84%
It's using signature schemes,
cryptographic puzzles,

00:57:17.140 --> 00:57:20.140 align:middle line:84%
and something else I haven't
talked about-- hashes

00:57:20.140 --> 00:57:21.340 align:middle line:90%
with Merkle trees.

00:57:21.340 --> 00:57:26.200 align:middle line:84%
But the entire history of the
transactions on the ledger

00:57:26.200 --> 00:57:31.580 align:middle line:84%
is hashed together
with an identifier,

00:57:31.580 --> 00:57:34.700 align:middle line:84%
allowing what's called Merkle
trees as an economic way

00:57:34.700 --> 00:57:36.500 align:middle line:90%
of storing all that data.

00:57:36.500 --> 00:57:38.090 align:middle line:90%
Bitcoin uses proof of work.

00:57:38.090 --> 00:57:40.490 align:middle line:84%
As I said, you need the
equipment and the electricity

00:57:40.490 --> 00:57:43.070 align:middle line:84%
to try to solve the
cryptographic puzzle.

00:57:43.070 --> 00:57:45.560 align:middle line:84%
The premise here is
that it's kind of random

00:57:45.560 --> 00:57:46.850 align:middle line:90%
who solves the puzzle.

00:57:46.850 --> 00:57:50.600 align:middle line:84%
And the premise is most
of the miners are honest.

00:57:50.600 --> 00:57:53.160 align:middle line:84%
We'll come back to
that momentarily.

00:57:53.160 --> 00:57:55.790 align:middle line:84%
So since the larger
number are honest,

00:57:55.790 --> 00:57:58.940 align:middle line:84%
and the person that solves the
puzzle is chosen at random,

00:57:58.940 --> 00:58:02.150 align:middle line:84%
the guy solving the puzzle
is likely to be honest.

00:58:02.150 --> 00:58:04.700 align:middle line:84%
Hence, they validate
the message.

00:58:04.700 --> 00:58:06.650 align:middle line:90%
Another two objects here--

00:58:06.650 --> 00:58:10.850 align:middle line:84%
homomorphic encryption
allows computation

00:58:10.850 --> 00:58:14.630 align:middle line:84%
on top of cipher text
for individual agents.

00:58:14.630 --> 00:58:18.200 align:middle line:84%
And multiparty
computation is a version

00:58:18.200 --> 00:58:21.200 align:middle line:84%
of that that applies
to multiple agents.

00:58:21.200 --> 00:58:25.290 align:middle line:84%
It's easier to show you a
little bit of the notation.

00:58:25.290 --> 00:58:26.870 align:middle line:90%
So m is the message.

00:58:26.870 --> 00:58:31.770 align:middle line:84%
Oh, yeah, M like message,
like we just did.

00:58:31.770 --> 00:58:35.370 align:middle line:84%
But the message is
supposed to be private.

00:58:35.370 --> 00:58:37.980 align:middle line:84%
On the right-hand side, you
have this allocation rule

00:58:37.980 --> 00:58:40.560 align:middle line:84%
or function, f, that
seems to require

00:58:40.560 --> 00:58:43.980 align:middle line:84%
the actual message, which means
the message, if it's going

00:58:43.980 --> 00:58:46.560 align:middle line:84%
to a third party, is
revealed, whether it's

00:58:46.560 --> 00:58:49.180 align:middle line:90%
Safaricom or something else.

00:58:49.180 --> 00:58:52.180 align:middle line:84%
But on the left-hand
side, there's

00:58:52.180 --> 00:58:56.430 align:middle line:84%
another way to do this, which
is as amazing as it is simple.

00:58:56.430 --> 00:58:58.720 align:middle line:84%
You take the message
m, and you encrypt it.

00:58:58.720 --> 00:59:01.270 align:middle line:84%
Then you take the function
f, which doesn't know what

00:59:01.270 --> 00:59:02.480 align:middle line:90%
it's doing--

00:59:02.480 --> 00:59:04.840 align:middle line:84%
it's operating on the
encrypted message.

00:59:04.840 --> 00:59:07.690 align:middle line:84%
And if you decrypt the
whole thing at the outcome,

00:59:07.690 --> 00:59:10.880 align:middle line:84%
at the end of the day,
you get the right answer.

00:59:10.880 --> 00:59:14.230 align:middle line:84%
You get the stuff on
the right-hand side.

00:59:14.230 --> 00:59:16.240 align:middle line:84%
The encrypted space
looks like junk.

00:59:16.240 --> 00:59:18.970 align:middle line:84%
It's just all a bunch of
bits, zeros, and ones,

00:59:18.970 --> 00:59:21.790 align:middle line:84%
with hashes, and dollar signs,
or whatever you want there.

00:59:21.790 --> 00:59:23.140 align:middle line:90%
No one could possibly read it.

00:59:23.140 --> 00:59:26.060 align:middle line:84%
That's what state of the
art encryption is all about.

00:59:26.060 --> 00:59:28.270 align:middle line:84%
So you take one thing
and do something else.

00:59:28.270 --> 00:59:29.570 align:middle line:90%
You can add them together.

00:59:29.570 --> 00:59:31.340 align:middle line:90%
You can do rank ordering.

00:59:31.340 --> 00:59:33.010 align:middle line:90%
It's like junk compared to junk.

00:59:33.010 --> 00:59:36.280 align:middle line:84%
But it turns out that
all those operations

00:59:36.280 --> 00:59:38.980 align:middle line:84%
have meaning when done
on the encrypted space.

00:59:38.980 --> 00:59:41.980 align:middle line:90%
So homomorphic means isomorphic.

00:59:41.980 --> 00:59:45.640 align:middle line:84%
Those underlying true message
spaces and the encrypted spaces

00:59:45.640 --> 00:59:48.520 align:middle line:90%
are equivalent to each other.

00:59:48.520 --> 00:59:51.610 align:middle line:84%
It's on to
one-to-one, and so on.

00:59:51.610 --> 00:59:54.500 align:middle line:84%
Multi-party computation
is very similar,

00:59:54.500 --> 00:59:56.230 align:middle line:84%
except there are
multiple agents.

00:59:56.230 --> 00:59:58.870 align:middle line:84%
So this means that
what you want to do

00:59:58.870 --> 01:00:01.000 align:middle line:84%
is take inputs from
the different agents,

01:00:01.000 --> 01:00:02.800 align:middle line:90%
like their wealth.

01:00:02.800 --> 01:00:05.020 align:middle line:84%
They want to see who
is the richest guy.

01:00:05.020 --> 01:00:08.440 align:middle line:84%
And they apply a function f,
which is like a rank ordering,

01:00:08.440 --> 01:00:09.580 align:middle line:90%
and get an outcome.

01:00:09.580 --> 01:00:11.950 align:middle line:84%
But these guys don't want
to reveal their wealth.

01:00:11.950 --> 01:00:14.860 align:middle line:84%
They just want to know
who is the richest guy.

01:00:14.860 --> 01:00:17.790 align:middle line:84%
So another way to do this
is take the afferent inputs

01:00:17.790 --> 01:00:19.170 align:middle line:90%
from the agents, and encrypt it.

01:00:19.170 --> 01:00:21.120 align:middle line:84%
Now nobody knows
anything about what

01:00:21.120 --> 01:00:22.560 align:middle line:90%
the other people are saying.

01:00:22.560 --> 01:00:27.090 align:middle line:84%
You apply f to those
encrypted messages--

01:00:27.090 --> 01:00:29.100 align:middle line:90%
fine-- in the encrypted space.

01:00:29.100 --> 01:00:30.210 align:middle line:90%
No harm done.

01:00:30.210 --> 01:00:32.580 align:middle line:84%
And then you decipher
the whole thing,

01:00:32.580 --> 01:00:36.120 align:middle line:84%
allowing, say, summaries
like a rank ordering,

01:00:36.120 --> 01:00:39.360 align:middle line:84%
without them ever knowing
what the amount of wealth

01:00:39.360 --> 01:00:43.320 align:middle line:84%
actually was, just who
is the wealthiest guy.

01:00:43.320 --> 01:00:47.640 align:middle line:84%
So that's called
multiparty computation.

01:00:47.640 --> 01:00:49.740 align:middle line:84%
Now, what's going on
with these algorithms?

01:00:49.740 --> 01:00:52.620 align:middle line:84%
We already talked
about proof of work.

01:00:52.620 --> 01:00:54.300 align:middle line:90%
Proof of work is Bitcoin.

01:00:54.300 --> 01:00:56.520 align:middle line:84%
They're using electricity
for the validation

01:00:56.520 --> 01:00:57.480 align:middle line:90%
among the miners.

01:00:57.480 --> 01:01:02.490 align:middle line:84%
Proof of stake is another one,
where the validation happens,

01:01:02.490 --> 01:01:05.980 align:middle line:84%
but instead of chewing up
electricity, they get to vote.

01:01:05.980 --> 01:01:09.690 align:middle line:84%
And their vote counts more
if they hold more coins.

01:01:09.690 --> 01:01:13.710 align:middle line:84%
Byzantine fault tolerance--
another algorithm--

01:01:13.710 --> 01:01:16.140 align:middle line:84%
this, one especially
the practical one,

01:01:16.140 --> 01:01:18.270 align:middle line:84%
is what I was
alluding to before.

01:01:18.270 --> 01:01:21.330 align:middle line:84%
If there are f failing
nodes that are either

01:01:21.330 --> 01:01:25.530 align:middle line:84%
faulty computers, or
malicious actors like hackers,

01:01:25.530 --> 01:01:31.290 align:middle line:84%
you just need 3 times f
plus 1 replicas in order

01:01:31.290 --> 01:01:34.560 align:middle line:84%
to be sure that you've
got a safe algorithm.

01:01:34.560 --> 01:01:38.280 align:middle line:84%
Because you can
compare across enough

01:01:38.280 --> 01:01:42.270 align:middle line:84%
of the entities who are safe
to be able to figure out who

01:01:42.270 --> 01:01:43.470 align:middle line:90%
was faulty.

01:01:43.470 --> 01:01:46.140 align:middle line:84%
Federated Byzantine
agents decide

01:01:46.140 --> 01:01:50.460 align:middle line:84%
not to rely on a third
party to do the validation.

01:01:50.460 --> 01:01:51.670 align:middle line:90%
They don't trust each other.

01:01:51.670 --> 01:01:54.300 align:middle line:84%
But they can name the
people they trust the most,

01:01:54.300 --> 01:01:57.180 align:middle line:84%
and you have overlapping
circles of trust.

01:01:57.180 --> 01:02:03.510 align:middle line:84%
And Stellar is a version
of that FBA protocol.

01:02:03.510 --> 01:02:06.300 align:middle line:90%
Now, what else about protocols?

01:02:06.300 --> 01:02:09.720 align:middle line:84%
Nakamoto was very clever
in giving Bitcoin miners

01:02:09.720 --> 01:02:13.650 align:middle line:84%
an incentive to mine properly
and not conceal outcomes,

01:02:13.650 --> 01:02:16.000 align:middle line:84%
to be running the
machines, and so on.

01:02:16.000 --> 01:02:18.810 align:middle line:84%
But it turns out it is
subject to some problems

01:02:18.810 --> 01:02:19.770 align:middle line:90%
like collusion.

01:02:19.770 --> 01:02:23.130 align:middle line:84%
So the economists have jumped in
and have become very critical,

01:02:23.130 --> 01:02:25.960 align:middle line:84%
although evidently, collusion
has never actually happened,

01:02:25.960 --> 01:02:28.930 align:middle line:84%
even though the number
of miners is very small.

01:02:28.930 --> 01:02:32.370 align:middle line:84%
Steve Morris, my colleague, and
Hyun Song Shin, now at the BIS,

01:02:32.370 --> 01:02:35.100 align:middle line:84%
looked at a classic problem
in computer science called

01:02:35.100 --> 01:02:36.960 align:middle line:90%
the Byzantine Generals problem.

01:02:36.960 --> 01:02:41.280 align:middle line:84%
And it has the property that
it's not incentive compatible.

01:02:41.280 --> 01:02:44.130 align:middle line:84%
Even though generals
have an incentive

01:02:44.130 --> 01:02:47.400 align:middle line:84%
to truthfully announce messages
and send them to each other,

01:02:47.400 --> 01:02:50.190 align:middle line:84%
it turns out if you put it in
the context of what we just

01:02:50.190 --> 01:02:51.120 align:middle line:90%
did--

01:02:51.120 --> 01:02:54.210 align:middle line:84%
a multi-agent mechanism
design problem--

01:02:54.210 --> 01:02:57.270 align:middle line:84%
they will not follow
the prescribed protocol.

01:02:57.270 --> 01:02:59.490 align:middle line:84%
It's not in their
self interest, when

01:02:59.490 --> 01:03:01.710 align:middle line:84%
they start doing
Bayesian analysis,

01:03:01.710 --> 01:03:04.200 align:middle line:84%
trying to figure out what
the other general knows.

01:03:04.200 --> 01:03:06.960 align:middle line:84%
So you can just impose
the algorithm and hope

01:03:06.960 --> 01:03:08.160 align:middle line:90%
people follow it.

01:03:08.160 --> 01:03:11.230 align:middle line:84%
But from what we did today,
that's a bit treacherous.

01:03:11.230 --> 01:03:14.160 align:middle line:84%
You really want to look at the
incentive of the validators

01:03:14.160 --> 01:03:15.690 align:middle line:90%
to follow the protocol.

01:03:15.690 --> 01:03:18.750 align:middle line:84%
And that's where we come
to mechanism design.

01:03:18.750 --> 01:03:20.280 align:middle line:84%
In fact, with
mechanism design, we

01:03:20.280 --> 01:03:23.400 align:middle line:84%
don't even need to worry about
agents telling the truth.

01:03:23.400 --> 01:03:27.180 align:middle line:84%
We don't need to monitor
or validate their messages.

01:03:27.180 --> 01:03:29.130 align:middle line:84%
The revelation
principle tells us

01:03:29.130 --> 01:03:31.830 align:middle line:84%
that agents will tell
the truth if we set up

01:03:31.830 --> 01:03:33.660 align:middle line:90%
the contract properly.

01:03:33.660 --> 01:03:37.410 align:middle line:84%
And not only that, we can
record past messages the way

01:03:37.410 --> 01:03:39.660 align:middle line:84%
we did in that
multi-agent problem.

01:03:39.660 --> 01:03:42.210 align:middle line:84%
Past messages just
get put on the ledger.

01:03:42.210 --> 01:03:44.640 align:middle line:84%
Because of the
signature schemes,

01:03:44.640 --> 01:03:47.800 align:middle line:84%
we can be sure that
they are valid,

01:03:47.800 --> 01:03:52.320 align:middle line:84%
they haven't been tampered
with over time, and so on.

01:03:52.320 --> 01:03:56.360 align:middle line:84%
So where we're going is to
implement the mechanism design

01:03:56.360 --> 01:03:59.870 align:middle line:84%
problem as a smart
contract with the code,

01:03:59.870 --> 01:04:02.180 align:middle line:84%
meaning like
dynamic programming,

01:04:02.180 --> 01:04:06.200 align:middle line:84%
you just map states into
outcomes with contingencies.

01:04:06.200 --> 01:04:09.110 align:middle line:84%
So you've already seen this
in the dynamic programs

01:04:09.110 --> 01:04:11.000 align:middle line:90%
that we've solved.

01:04:11.000 --> 01:04:14.720 align:middle line:84%
And you can separate out
that contracting part

01:04:14.720 --> 01:04:16.220 align:middle line:90%
from the ledgers.

01:04:16.220 --> 01:04:19.260 align:middle line:84%
We just have people agree to
the code, experiment with it,

01:04:19.260 --> 01:04:23.000 align:middle line:84%
make sure it works, set
up your encryption scheme.

01:04:23.000 --> 01:04:26.360 align:middle line:84%
And then it's like having an
auction without an auctioneer.

01:04:26.360 --> 01:04:28.940 align:middle line:84%
We're implementing that hybrid
borrowing/lending scheme

01:04:28.940 --> 01:04:31.100 align:middle line:90%
without having a third party.

01:04:31.100 --> 01:04:33.720 align:middle line:84%
It's just done by the
parties themselves.

01:04:33.720 --> 01:04:37.160 align:middle line:84%
And encryption, MPC and
homomorphic encryption,

01:04:37.160 --> 01:04:40.130 align:middle line:84%
make sure that all the
messages are private,

01:04:40.130 --> 01:04:43.670 align:middle line:84%
and nobody gets to
see those values.

01:04:43.670 --> 01:04:45.200 align:middle line:84%
And then at the
end of the day, you

01:04:45.200 --> 01:04:47.630 align:middle line:84%
can kick in the borrowing
and lending scheme

01:04:47.630 --> 01:04:51.020 align:middle line:84%
so that for example,
if it's a loan,

01:04:51.020 --> 01:04:53.300 align:middle line:84%
it's going to be repaid
because the loan is

01:04:53.300 --> 01:04:54.380 align:middle line:90%
backed by collateral.

01:04:54.380 --> 01:04:58.040 align:middle line:84%
So that would involve a
transfer on the ledgers.

01:04:58.040 --> 01:05:00.033 align:middle line:84%
So I'm not against the
distributed ledgers.

01:05:00.033 --> 01:05:01.950 align:middle line:84%
As I said, I just wrote
a whole book about it.

01:05:01.950 --> 01:05:03.620 align:middle line:84%
But I just want
to point out what

01:05:03.620 --> 01:05:06.470 align:middle line:84%
we did today, with the
privacy and the messages

01:05:06.470 --> 01:05:09.350 align:middle line:84%
and all of that, can be
done with encryption,

01:05:09.350 --> 01:05:14.930 align:middle line:84%
and allows smart contracts to
be executed on the ledgers.

01:05:14.930 --> 01:05:15.950 align:middle line:90%
All right.

01:05:15.950 --> 01:05:17.630 align:middle line:84%
Well, I went over
by a minute, and I

01:05:17.630 --> 01:05:20.130 align:middle line:90%
was rushing a bit at the end.

01:05:20.130 --> 01:05:23.510 align:middle line:84%
So take a look at these slides,
especially toward the end.

01:05:23.510 --> 01:05:27.080 align:middle line:84%
And see if you can map
this encryption back

01:05:27.080 --> 01:05:29.810 align:middle line:84%
into the earlier
part of the lecture.

01:05:29.810 --> 01:05:31.890 align:middle line:90%
That's really the main point.

01:05:31.890 --> 01:05:34.270 align:middle line:90%
And I will let you go.

01:05:34.270 --> 01:05:40.000 align:middle line:90%