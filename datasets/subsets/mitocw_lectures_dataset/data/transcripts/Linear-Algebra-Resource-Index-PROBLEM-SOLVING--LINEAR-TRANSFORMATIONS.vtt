WEBVTT

00:00:06.371 --> 00:00:07.370
PROFESSOR: Hi, everyone.

00:00:07.370 --> 00:00:10.460
Today, we're going to talk
about linear transformations.

00:00:10.460 --> 00:00:14.500
So, we've seen linear
transformations incognito

00:00:14.500 --> 00:00:17.290
all the time until now.

00:00:17.290 --> 00:00:19.980
We've played around
with matrices.

00:00:19.980 --> 00:00:21.950
Matrices multiplying
vectors, say,

00:00:21.950 --> 00:00:28.030
in R^n and producing
vectors in R^m.

00:00:28.030 --> 00:00:32.870
So really, the language
of linear transformations

00:00:32.870 --> 00:00:35.390
only provides a
nicer framework when

00:00:35.390 --> 00:00:39.410
we want to analyze
linear operations on more

00:00:39.410 --> 00:00:43.600
abstract vector spaces, like
the one we have in this problem

00:00:43.600 --> 00:00:44.950
here.

00:00:44.950 --> 00:00:51.290
We're going to work with the
space of two by two matrices.

00:00:51.290 --> 00:00:56.170
And we're going to analyze the
operation, have the matrix A,

00:00:56.170 --> 00:00:59.260
and we produce its transpose.

00:00:59.260 --> 00:01:00.060
OK.

00:01:00.060 --> 00:01:05.160
So please take a few minutes
to try the problem on your own

00:01:05.160 --> 00:01:05.860
and come back.

00:01:15.260 --> 00:01:16.650
Hi, again.

00:01:16.650 --> 00:01:18.080
OK.

00:01:18.080 --> 00:01:20.500
So the first question
we need to ask ourselves

00:01:20.500 --> 00:01:24.170
is, indeed, why is
T a linear operator?

00:01:24.170 --> 00:01:28.890
So what are the
abstract properties

00:01:28.890 --> 00:01:30.800
that a linear
operator satisfies?

00:01:30.800 --> 00:01:40.330
Well, what happens when T acts
on the sum of two matrices, A

00:01:40.330 --> 00:01:41.760
and B?

00:01:41.760 --> 00:01:48.180
So it produces the matrix
the transpose of A plus B.

00:01:48.180 --> 00:01:53.890
But we know that this is
A transpose, B transpose.

00:01:53.890 --> 00:02:01.390
And so, this is
exactly T(A) plus T(B).

00:02:01.390 --> 00:02:05.770
So the transformation
that we're analyzing

00:02:05.770 --> 00:02:12.870
takes the sum of two
matrices into the sum

00:02:12.870 --> 00:02:15.620
of their transformations.

00:02:15.620 --> 00:02:16.900
OK.

00:02:16.900 --> 00:02:24.570
Similarly, it takes a
multiple of a transformation

00:02:24.570 --> 00:02:30.360
into the multiple of
the transformations.

00:02:33.650 --> 00:02:39.680
So it takes the matrix c times
A to c times A transpose, which

00:02:39.680 --> 00:02:43.090
is c T of A.

00:02:43.090 --> 00:02:43.850
OK.

00:02:43.850 --> 00:02:47.760
So it is a linear operator.

00:02:47.760 --> 00:02:52.190
Now, can we figure out
what its inverse is?

00:02:52.190 --> 00:02:57.480
Well, what does
the transpose do?

00:02:57.480 --> 00:03:03.700
It takes a column and
flips it into a row.

00:03:03.700 --> 00:03:06.810
So what happens if we apply
the operation once again?

00:03:06.810 --> 00:03:09.860
Well, it's going to
take the row and turn it

00:03:09.860 --> 00:03:11.820
back down to the column.

00:03:11.820 --> 00:03:18.140
So applying the
transformation twice,

00:03:18.140 --> 00:03:21.810
we come back to the
original situation.

00:03:21.810 --> 00:03:28.870
So therefore, T squared
is the identity.

00:03:28.870 --> 00:03:32.240
And from this, we
infer that the inverse

00:03:32.240 --> 00:03:33.760
is the transformation itself.

00:03:36.720 --> 00:03:40.160
Now, this was part one.

00:03:40.160 --> 00:03:45.780
Part two, we'll
compute the matrix

00:03:45.780 --> 00:03:51.210
of the linear transformation
in the following two bases.

00:03:51.210 --> 00:03:55.130
So the first basis
is, in fact-- it

00:03:55.130 --> 00:04:01.260
is the standard basis for the
space of two by two matrices.

00:04:01.260 --> 00:04:07.180
And the way we compute
the matrix, we first

00:04:07.180 --> 00:04:12.690
compute what T does to
each of the basis elements.

00:04:12.690 --> 00:04:15.640
So T of v_1.

00:04:15.640 --> 00:04:17.160
Let's go back.

00:04:17.160 --> 00:04:18.020
So here.

00:04:21.350 --> 00:04:25.020
So T takes the transpose
of this matrix.

00:04:25.020 --> 00:04:29.620
And we see that the transpose
of [1, 0; 0, 0] is [1, 0; 0, 0].

00:04:29.620 --> 00:04:31.290
So it's a symmetric matrix.

00:04:31.290 --> 00:04:36.000
So T of v_1 is v_1.

00:04:36.000 --> 00:04:38.960
What about T of v_2?

00:04:38.960 --> 00:04:41.630
Come back here.

00:04:41.630 --> 00:04:44.540
So this 1 comes here.

00:04:44.540 --> 00:04:45.880
0 comes here.

00:04:45.880 --> 00:04:49.300
And so we actually get v_3.

00:04:49.300 --> 00:04:51.740
So T of v_2 is v_3.

00:04:54.740 --> 00:04:57.870
Similarly, T of v_3 is v_2.

00:05:00.810 --> 00:05:03.890
And finally, T of v_4.

00:05:03.890 --> 00:05:08.050
Well, v_4 is a symmetric
matrix as well.

00:05:08.050 --> 00:05:12.630
So the transpose
doesn't change it.

00:05:12.630 --> 00:05:13.130
OK.

00:05:17.940 --> 00:05:25.030
Now, we encode this into a
matrix in the following way.

00:05:32.240 --> 00:05:43.460
Essentially, the first column
will tell us how T of v_1

00:05:43.460 --> 00:05:46.820
is expressed as a linear
combination of the basis

00:05:46.820 --> 00:05:49.340
elements.

00:05:49.340 --> 00:05:51.010
Well, in this case,
it's just v_1.

00:05:51.010 --> 00:05:56.080
So it's going to be 1 times
v_1 plus 0*v_2 plus 0*v_3 plus

00:05:56.080 --> 00:05:58.430
0*v_4.

00:05:58.430 --> 00:06:00.270
T of v_2 is v_3.

00:06:00.270 --> 00:06:08.795
So we have 0, 0, 1, 0.

00:06:08.795 --> 00:06:19.300
T of v_3 is 0*v_1,
1*v_2, 0*v_3, 0*v_4.

00:06:19.300 --> 00:06:27.260
And T of v4 is 0*v_1,
0*v_2, 0*v_3, plus 1*v_4.

00:06:27.260 --> 00:06:28.420
OK.

00:06:28.420 --> 00:06:34.010
So we've written down the matrix
of the linear transformation T

00:06:34.010 --> 00:06:35.820
in the standard basis.

00:06:35.820 --> 00:06:41.140
And you can check that this
is exactly what we want.

00:06:50.960 --> 00:06:56.030
The representation of some
matrix, say, [1, 2; 3, 4]

00:06:56.030 --> 00:07:03.080
in this standard basis is,
it's the vector [1, 2, 3, 4].

00:07:07.560 --> 00:07:15.690
T takes this to its
transpose, [1, 3; 2, 4].

00:07:15.690 --> 00:07:24.990
So this in the basis is
represented as [1, 3, 2, 4].

00:07:24.990 --> 00:07:26.670
Right?

00:07:26.670 --> 00:07:31.843
And it's not hard
to see that when

00:07:31.843 --> 00:07:38.240
M_T multiplies this vector,
we get exactly this vector.

00:07:41.550 --> 00:07:45.810
So we'll pause for a bit,
so that I erase the board.

00:07:45.810 --> 00:07:50.820
And we're going to return
with the representation of T

00:07:50.820 --> 00:07:54.492
in the basis w_1,
w_2, w_3, and w_4.

00:07:57.240 --> 00:07:57.740
OK.

00:07:57.740 --> 00:08:02.230
So let's now
compute the matrix T

00:08:02.230 --> 00:08:06.650
in the basis w_1,
w_2, w_3, and w_4.

00:08:06.650 --> 00:08:08.680
We played the same game.

00:08:08.680 --> 00:08:14.460
We look at how T acts on
each of the basis vectors.

00:08:14.460 --> 00:08:19.040
So T of w_1-- well, w_1
is a symmetric matrix.

00:08:19.040 --> 00:08:23.170
So T of w_1 is w_1.

00:08:23.170 --> 00:08:27.380
Similarly, with w_2 and w_3.

00:08:27.380 --> 00:08:29.040
They're all symmetric.

00:08:29.040 --> 00:08:30.730
What about w_4?

00:08:30.730 --> 00:08:35.929
Well, we see that the
1 comes down here,

00:08:35.929 --> 00:08:38.770
the negative one comes
up here, and in the end,

00:08:38.770 --> 00:08:40.789
we just get the negative of w_4.

00:08:40.789 --> 00:08:43.820
So, let me just write this out.

00:08:43.820 --> 00:08:50.580
We had T of w_1 equal to
w_1, T of w_2 equal to w_2,

00:08:50.580 --> 00:09:00.910
T of w_3 equal to w_3, and T
of w_4, was negative of w_4.

00:09:00.910 --> 00:09:07.860
So therefore, the matrix of
the linear transformation

00:09:07.860 --> 00:09:15.389
T, in this basis-- I'm going
to call the matrix M prime T--

00:09:15.389 --> 00:09:16.680
has a fairly simple expression.

00:09:19.660 --> 00:09:21.890
The only non-zero entries
are on a diagonal.

00:09:21.890 --> 00:09:26.220
And they're precisely
1, 1, 1, and negative 1.

00:09:32.700 --> 00:09:36.435
And finally, let's
tackle the eigenvalues

00:09:36.435 --> 00:09:38.270
slash eigenvectors issue.

00:09:38.270 --> 00:09:46.440
Well, you've seen what an
eigenvector for a matrix is.

00:09:46.440 --> 00:09:50.080
And the idea for an
eigenvalue, eigenvector

00:09:50.080 --> 00:09:53.630
for a linear transformation
is virtually the same.

00:09:53.630 --> 00:09:58.330
And we are looking for the
vectors v and scalars lambda

00:09:58.330 --> 00:10:07.200
such that T of v is lambda*v.
But if you guys look back

00:10:07.200 --> 00:10:12.660
to what we just did with
w_1, w_2, w_3, and w_4,

00:10:12.660 --> 00:10:16.460
you'll see precisely
that w_1, w_2,

00:10:16.460 --> 00:10:22.540
and w_3 are eigenvectors
for T with eigenvalue 1.

00:10:22.540 --> 00:10:27.640
And w_4 is an eigenvector for
T with eigenvalue negative 1.

00:10:27.640 --> 00:10:37.170
So yeah, we essentially have
solved the problem knowing

00:10:37.170 --> 00:10:40.300
a very, very nice
basis in which we

00:10:40.300 --> 00:10:43.380
computed the linear
transformation T.

00:10:43.380 --> 00:10:45.601
So I'll leave it at that.