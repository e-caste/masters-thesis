WEBVTT

00:00:00.090 --> 00:00:02.490
The following content is
provided under a Creative

00:00:02.490 --> 00:00:04.030
Commons license.

00:00:04.030 --> 00:00:06.330
Your support will help
MIT OpenCourseWare

00:00:06.330 --> 00:00:10.720
continue to offer high quality
educational resources for free.

00:00:10.720 --> 00:00:13.320
To make a donation or
view additional materials

00:00:13.320 --> 00:00:17.280
from hundreds of MIT courses,
visit MIT OpenCourseWare

00:00:17.280 --> 00:00:21.132
at ocw.mit.edu

00:00:21.132 --> 00:00:22.340
PROFESSOR: Hello and welcome.

00:00:24.839 --> 00:00:27.380
So today I want to start to talk
about discrete time systems.

00:00:29.940 --> 00:00:33.200
But before beginning there, I
want to say just a quick word

00:00:33.200 --> 00:00:35.479
about homework.

00:00:35.479 --> 00:00:37.520
I tried to stress this
last time that the way you

00:00:37.520 --> 00:00:40.730
get to know this stuff
is by doing the homework,

00:00:40.730 --> 00:00:44.780
and we'd like to provide
positive feedback

00:00:44.780 --> 00:00:48.530
in a direction that
will help you get

00:00:48.530 --> 00:00:50.390
the most out of the homework.

00:00:50.390 --> 00:00:52.700
So to that end, we've
already talked about there's

00:00:52.700 --> 00:00:54.620
two kinds of problems.

00:00:54.620 --> 00:00:56.870
Each homework will have
tutor problems that

00:00:56.870 --> 00:01:01.670
are intended to be problems
like you will see on an exam,

00:01:01.670 --> 00:01:03.140
but they will also
have the feature

00:01:03.140 --> 00:01:04.790
that they can be
automatically graded

00:01:04.790 --> 00:01:08.570
so that you can get immediate
feedback about whether you're

00:01:08.570 --> 00:01:11.170
doing it right or not.

00:01:11.170 --> 00:01:13.760
There will also be harder
questions questions

00:01:13.760 --> 00:01:15.470
that look more like
real world questions

00:01:15.470 --> 00:01:17.300
so you don't think
that this class is only

00:01:17.300 --> 00:01:20.310
about toy problems.

00:01:20.310 --> 00:01:22.370
The idea is to give
you problems that you

00:01:22.370 --> 00:01:25.520
can imagine running into.

00:01:25.520 --> 00:01:29.450
Those are harder to grade
automatically so we won't.

00:01:29.450 --> 00:01:33.500
Instead they'll be
graded by a human.

00:01:33.500 --> 00:01:36.710
Those problems often admit
several different lines

00:01:36.710 --> 00:01:37.920
of reasoning.

00:01:37.920 --> 00:01:40.760
So there isn't
necessarily a unique right

00:01:40.760 --> 00:01:43.460
way to think about it.

00:01:43.460 --> 00:01:47.710
So what we would like to do is
encourage you to-- after you

00:01:47.710 --> 00:01:49.180
finish the homework--

00:01:49.180 --> 00:01:52.014
read the solutions.

00:01:52.014 --> 00:01:54.430
Now we think it's kind of an
impediment to wait for a week

00:01:54.430 --> 00:01:58.090
till you get your graded
homework back because people--

00:01:58.090 --> 00:02:00.760
in my experience--
just don't bother.

00:02:00.760 --> 00:02:03.880
So what we would like to do is
post the solutions immediately

00:02:03.880 --> 00:02:05.980
after your solutions are due.

00:02:05.980 --> 00:02:08.880
Your solutions are due-- if
you submit electronically--

00:02:08.880 --> 00:02:10.160
at 5:00 p.m.

00:02:10.160 --> 00:02:11.170
on the due date.

00:02:11.170 --> 00:02:14.680
So homework one is due
tomorrow, 5:00 p.m.

00:02:14.680 --> 00:02:16.976
electronic submission.

00:02:16.976 --> 00:02:18.100
You can also turn in paper.

00:02:18.100 --> 00:02:20.890
You have to do that
in your recitation.

00:02:20.890 --> 00:02:23.320
Immediately after it
was due at 5:00 p.m.

00:02:23.320 --> 00:02:26.110
we'll post the
solutions, and we'll

00:02:26.110 --> 00:02:31.710
encourage you, in
quotes, to read them,

00:02:31.710 --> 00:02:33.990
because it's good
for you, right?

00:02:33.990 --> 00:02:36.720
We hope that that will help you
find the errors that you made,

00:02:36.720 --> 00:02:40.080
but also expose you to other
ways that maybe will be

00:02:40.080 --> 00:02:42.060
simpler, maybe will be harder.

00:02:42.060 --> 00:02:45.090
Your feedback on your
coming up with a simpler way

00:02:45.090 --> 00:02:47.640
would be greatly appreciated,
so please send me email anytime

00:02:47.640 --> 00:02:49.420
you think you have a
better way of doing things,

00:02:49.420 --> 00:02:50.610
which is entirely possible.

00:02:53.130 --> 00:02:55.770
But as further
encouragement, if you mark up

00:02:55.770 --> 00:02:59.470
all of your errors
and resubmit, we'll

00:02:59.470 --> 00:03:03.190
give you back half of
the points you lost.

00:03:03.190 --> 00:03:05.060
So you get to submit
every homework twice.

00:03:05.060 --> 00:03:09.756
Once for the due date
5:00 p.m. on Wednesday.

00:03:09.756 --> 00:03:11.130
Immediately after
that, you'll be

00:03:11.130 --> 00:03:13.650
able to see the
published solutions.

00:03:13.650 --> 00:03:18.450
You can circle all the errors
and say algebra, or conceptual,

00:03:18.450 --> 00:03:21.480
or I'm an idiot, or whatever
is the right way of thinking

00:03:21.480 --> 00:03:24.670
about what you did.

00:03:24.670 --> 00:03:27.930
And if you get
all of the errors,

00:03:27.930 --> 00:03:30.150
you'll get back half
of the points you lost.

00:03:30.150 --> 00:03:32.950
If you say, I'm
right, you're wrong,

00:03:32.950 --> 00:03:34.690
maybe you won't get
all your points back.

00:03:34.690 --> 00:03:35.190
Yes?

00:03:35.190 --> 00:03:38.450
AUDIENCE: [INAUDIBLE]

00:03:38.450 --> 00:03:42.210
PROFESSOR: The resubmission
is the same rules.

00:03:42.210 --> 00:03:43.710
If you want to
submit by paper, you

00:03:43.710 --> 00:03:46.150
can turn them in on
Friday's recitation.

00:03:46.150 --> 00:03:49.350
You have until Friday
at 5:00 p.m. otherwise.

00:03:49.350 --> 00:03:52.810
Please notice that,
if you're using paper,

00:03:52.810 --> 00:03:58.020
we will not have returned
your solutions in time for you

00:03:58.020 --> 00:04:02.980
to write on them,
so make a copy.

00:04:02.980 --> 00:04:04.650
If you want to do
the paper route,

00:04:04.650 --> 00:04:08.010
make a photocopy before you
turn it in the first time,

00:04:08.010 --> 00:04:11.310
so that you have something to
write on for the second time.

00:04:11.310 --> 00:04:13.460
If you submit
electronically, there's

00:04:13.460 --> 00:04:17.730
a feedback button on the
tutor, so you can see the thing

00:04:17.730 --> 00:04:19.255
that you just submitted.

00:04:19.255 --> 00:04:20.630
So that's not a
problem if you're

00:04:20.630 --> 00:04:22.880
doing the electronic thing,
but if you're doing paper,

00:04:22.880 --> 00:04:27.210
please, make a photocopy
before you submit.

00:04:27.210 --> 00:04:29.650
Otherwise, it will be hard
to mark up your solutions.

00:04:29.650 --> 00:04:30.489
Yes?

00:04:30.489 --> 00:04:35.480
AUDIENCE: [INAUDIBLE]

00:04:35.480 --> 00:04:38.900
PROFESSOR: No, but you
should probably tell us

00:04:38.900 --> 00:04:41.060
what you'd like us to do.

00:04:41.060 --> 00:04:44.920
We would normally try
to make our best guess.

00:04:44.920 --> 00:04:48.450
So if you turn in everything
in the paper copy,

00:04:48.450 --> 00:04:51.480
we will look at your
previous submissions,

00:04:51.480 --> 00:04:55.320
but it would be best if
you said some remark like,

00:04:55.320 --> 00:04:58.830
this overrides the
electronic submission,

00:04:58.830 --> 00:05:03.780
or please ignore problems 1
to 4, just make sure we know.

00:05:03.780 --> 00:05:07.280
We're going to try to do
what you want us to do.

00:05:07.280 --> 00:05:09.440
Other issues about logistics?

00:05:09.440 --> 00:05:10.063
Yes?

00:05:10.063 --> 00:05:13.525
AUDIENCE: So just
to make sure, we

00:05:13.525 --> 00:05:17.118
don't have to submit
homework both electronically

00:05:17.118 --> 00:05:18.555
and in paper?

00:05:18.555 --> 00:05:20.997
PROFESSOR: No, absolutely not.

00:05:20.997 --> 00:05:23.330
If you do the electronic
route-- which is the preferred,

00:05:23.330 --> 00:05:26.680
we like electronic because
it won't get lost--

00:05:26.680 --> 00:05:29.240
the graders will absolutely
have access to it

00:05:29.240 --> 00:05:31.620
because they're
all in one place.

00:05:31.620 --> 00:05:34.241
We like the electronic route,
but if you'd prefer paper,

00:05:34.241 --> 00:05:36.865
just make sure you give us paper
and one or the other suffices.

00:05:40.070 --> 00:05:40.747
Yes?

00:05:40.747 --> 00:05:44.020
AUDIENCE: Did we ever submit
the tutor questions on paper?

00:05:44.020 --> 00:05:46.860
PROFESSOR: You don't need to.

00:05:46.860 --> 00:05:49.200
If you submit the
tutor problems online

00:05:49.200 --> 00:05:52.650
and it says you're 100%
correct, you're done.

00:05:52.650 --> 00:05:54.540
We don't ever need
to see anything else.

00:05:54.540 --> 00:05:55.500
You've got full credit.

00:05:58.560 --> 00:05:59.190
Other issues?

00:06:01.490 --> 00:06:01.990
Yes?

00:06:01.990 --> 00:06:03.798
AUDIENCE: If people are
having technical problems

00:06:03.798 --> 00:06:05.154
with the tutor, please tell us.

00:06:05.154 --> 00:06:06.862
Don't just feel like
you have to kick out

00:06:06.862 --> 00:06:08.380
and do the paper version.

00:06:08.380 --> 00:06:10.313
We're trying make
sure that everything

00:06:10.313 --> 00:06:11.350
is in place this week.

00:06:11.350 --> 00:06:13.224
PROFESSOR: We will try
to be very responsive.

00:06:13.224 --> 00:06:17.020
As I told you, this
is a brand new tutor.

00:06:17.020 --> 00:06:21.550
We're very optimistic about
it, but we're also realistic.

00:06:21.550 --> 00:06:23.429
Software has bugs,
but don't tell

00:06:23.429 --> 00:06:25.720
any of my software people--
my software friends-- that.

00:06:29.650 --> 00:06:32.470
Software has bugs,
so we're trying

00:06:32.470 --> 00:06:35.895
to get rid of all of ours.

00:06:35.895 --> 00:06:37.356
Yeah?

00:06:37.356 --> 00:06:38.820
AUDIENCE: [INAUDIBLE]

00:06:38.820 --> 00:06:39.810
PROFESSOR: I'm sorry?

00:06:39.810 --> 00:06:41.447
AUDIENCE: [INAUDIBLE]

00:06:41.447 --> 00:06:43.780
PROFESSOR: You have to shout
because my hearing is gone.

00:06:43.780 --> 00:06:47.320
AUDIENCE: What happens if you
run out of submits on tutor?

00:06:47.320 --> 00:06:51.220
PROFESSOR: If you run out
of submits, that's bad.

00:06:51.220 --> 00:06:52.860
During this sort
of ramp up phase,

00:06:52.860 --> 00:06:55.240
just send us an email,
because the goal is not

00:06:55.240 --> 00:07:01.270
to have you run
out of submits yet.

00:07:01.270 --> 00:07:02.921
Yes?

00:07:02.921 --> 00:07:04.504
AUDIENCE: So if you
run out of submits

00:07:04.504 --> 00:07:06.504
and your last submission
was an incorrect answer

00:07:06.504 --> 00:07:08.995
and [INAUDIBLE] that
has the correct equation

00:07:08.995 --> 00:07:11.262
for that answer, will you
still get full credit?

00:07:11.262 --> 00:07:12.970
PROFESSOR: If you
continue to hit submit,

00:07:12.970 --> 00:07:16.540
we will continue
to be aware of it.

00:07:16.540 --> 00:07:17.590
It's all in the grade.

00:07:17.590 --> 00:07:20.590
We know everything you've done.

00:07:20.590 --> 00:07:24.990
So just go ahead and hit
submit some more times.

00:07:24.990 --> 00:07:27.130
You can always turn in
paper to override it,

00:07:27.130 --> 00:07:28.960
or you can always
send me an email

00:07:28.960 --> 00:07:32.971
and say, I ran out of
submits, the answer is blah.

00:07:32.971 --> 00:07:34.720
We're going to try to
be very cooperative.

00:07:34.720 --> 00:07:36.830
This is new.

00:07:36.830 --> 00:07:39.500
This is supposed to be helpful.

00:07:39.500 --> 00:07:40.215
Yes?

00:07:40.215 --> 00:07:43.872
AUDIENCE: [INAUDIBLE]

00:07:43.872 --> 00:07:46.080
PROFESSOR: That's not supposed
to be on your website.

00:07:46.080 --> 00:07:48.270
That's supposed to
be on my website.

00:07:48.270 --> 00:07:49.470
I'll have to look into that.

00:07:53.100 --> 00:07:55.580
If it works, use it.

00:07:59.730 --> 00:08:04.830
OK, other obvious
errors that we've made?

00:08:04.830 --> 00:08:07.290
OK, let's go on
and talk about 003.

00:08:07.290 --> 00:08:10.090
What I want to do today--

00:08:10.090 --> 00:08:12.060
last time, I
introduced what I call

00:08:12.060 --> 00:08:21.490
the 6.003 abstraction which
is the idea that we represent

00:08:21.490 --> 00:08:22.060
a system--

00:08:22.060 --> 00:08:30.850
whatever it is-- by the way
it transforms an input signal

00:08:30.850 --> 00:08:31.780
to an output signal.

00:08:34.720 --> 00:08:37.720
The goal for today is
to start to develop

00:08:37.720 --> 00:08:42.390
machinery that takes advantage
of that representation.

00:08:42.390 --> 00:08:44.610
We'll start by
thinking about DT.

00:08:44.610 --> 00:08:47.100
DT is conceptually
easier than CT.

00:08:47.100 --> 00:08:48.740
That's why we start there.

00:08:48.740 --> 00:08:51.180
Algebra is slightly
easier than calculus.

00:08:51.180 --> 00:08:51.950
That's the idea.

00:08:54.720 --> 00:08:57.900
What we learn in DT will
transfer almost verbatim

00:08:57.900 --> 00:09:00.060
into CT.

00:09:00.060 --> 00:09:02.850
CT is like DT but
a little harder

00:09:02.850 --> 00:09:06.470
so there is some extra stuff,
but the things we learned in DT

00:09:06.470 --> 00:09:09.320
will still be applicable in CT.

00:09:09.320 --> 00:09:13.330
Discrete time, continuous time.

00:09:13.330 --> 00:09:15.860
Furthermore, DT
is just important.

00:09:15.860 --> 00:09:19.310
So, increasingly,
applications of this field

00:09:19.310 --> 00:09:21.350
are in discrete time.

00:09:21.350 --> 00:09:24.290
That wasn't necessarily
true 20 years ago.

00:09:24.290 --> 00:09:26.647
It's still the case that
there's lots of applications

00:09:26.647 --> 00:09:28.730
that are intrinsically
married to the physics that

00:09:28.730 --> 00:09:30.290
underlie it.

00:09:30.290 --> 00:09:32.870
That makes it intrinsically
CT, but a lot of stuff

00:09:32.870 --> 00:09:34.910
is done in DT.

00:09:34.910 --> 00:09:37.507
So for a lot of reasons, we're
going to start with DT first,

00:09:37.507 --> 00:09:39.590
and we're going to look
today at several different

00:09:39.590 --> 00:09:42.860
representations of DT.

00:09:42.860 --> 00:09:45.380
In particular, we're going to
look at difference equations

00:09:45.380 --> 00:09:48.360
and block diagrams.

00:09:48.360 --> 00:09:52.170
And we're always interested
in verbal descriptions,

00:09:52.170 --> 00:09:56.750
because that's the way the
real world is described to you.

00:09:56.750 --> 00:09:59.334
So what we want to do
is understand these.

00:09:59.334 --> 00:10:01.250
Understand there are
strengths and weaknesses,

00:10:01.250 --> 00:10:04.249
so that we can capitalize
on their strengths,

00:10:04.249 --> 00:10:05.540
and go around their weaknesses.

00:10:05.540 --> 00:10:07.950
That's the idea.

00:10:07.950 --> 00:10:10.439
So the easiest
possible representation

00:10:10.439 --> 00:10:11.480
is a difference equation.

00:10:11.480 --> 00:10:15.050
Difference equations are good
because they are absolutely

00:10:15.050 --> 00:10:19.610
precise, and they are the
absolutely most concise

00:10:19.610 --> 00:10:22.330
representation we will have.

00:10:22.330 --> 00:10:23.710
Precise and concise.

00:10:23.710 --> 00:10:25.660
Those are good features.

00:10:25.660 --> 00:10:27.460
So here's an example.

00:10:27.460 --> 00:10:35.790
What if my output Y were my
input X minus X, n minus 1.

00:10:35.790 --> 00:10:38.360
Let's say that the
input is a unit sample.

00:10:38.360 --> 00:10:40.940
We will often ask for
the unit sample response.

00:10:40.940 --> 00:10:47.780
The unit sample signal is the
most simple non-trivial signal

00:10:47.780 --> 00:10:49.370
that we can have.

00:10:49.370 --> 00:10:53.900
It is 0 almost everywhere,
and the only place it's not 0

00:10:53.900 --> 00:10:59.060
is at 0, and when
it's not 0 it's 1.

00:10:59.060 --> 00:11:02.817
So that's sort of the
easiest thing we can imagine.

00:11:02.817 --> 00:11:04.400
So what we're going
to want to do then

00:11:04.400 --> 00:11:06.380
is think about what
happens if we put

00:11:06.380 --> 00:11:09.530
this signal into that system.

00:11:09.530 --> 00:11:10.820
OK, that's completely trivial.

00:11:10.820 --> 00:11:12.650
You've done this a
gazillion times before,

00:11:12.650 --> 00:11:14.780
and now is your
chance to prove it.

00:11:14.780 --> 00:11:18.320
How many of those statements
are true about the output

00:11:18.320 --> 00:11:20.784
of this system when
that's the input?

00:11:20.784 --> 00:11:21.700
Talk to your neighbor.

00:11:21.700 --> 00:11:22.910
You've got 15 seconds.

00:11:22.910 --> 00:11:25.580
Is it too simple?

00:11:25.580 --> 00:11:28.100
Figure out how many of
those statements are true.

00:12:30.076 --> 00:12:31.950
OK, you're either all
bored out of your minds

00:12:31.950 --> 00:12:33.240
or paralyzed with fear.

00:12:33.240 --> 00:12:35.366
I can't tell.

00:12:35.366 --> 00:12:36.750
So everybody raise your hand.

00:12:36.750 --> 00:12:38.333
How many of these
statements are true?

00:12:40.461 --> 00:12:41.710
More hands, more hands, c'mon.

00:12:48.550 --> 00:12:56.940
OK, less than half
correct, so I'll just

00:12:56.940 --> 00:13:01.227
assume that you ran out
of time, and I'll go on.

00:13:01.227 --> 00:13:02.310
So this is trivial, right?

00:13:02.310 --> 00:13:02.851
What do I do?

00:13:02.851 --> 00:13:04.190
How do I figure this out?

00:13:04.190 --> 00:13:04.690
Yeah?

00:13:04.690 --> 00:13:05.640
AUDIENCE: Step by step?

00:13:05.640 --> 00:13:07.098
PROFESSOR: Step by
step, of course.

00:13:07.098 --> 00:13:11.730
Yes, so if I think about
applying this equation

00:13:11.730 --> 00:13:16.550
to that input, then I can
think about just substituting

00:13:16.550 --> 00:13:19.455
n equals minus 1, n
equals 0, n equals 1,

00:13:19.455 --> 00:13:23.570
n equals 2, et cetera.

00:13:23.570 --> 00:13:25.550
And you can sort of
see that I'm only

00:13:25.550 --> 00:13:28.790
looking at the input of
two instances of time.

00:13:28.790 --> 00:13:32.649
So there's a finite range
over which the input--

00:13:32.649 --> 00:13:34.190
there's a finite
range of inputs that

00:13:34.190 --> 00:13:36.600
can contribute to the output.

00:13:36.600 --> 00:13:38.780
And in particular,
if I were to say--

00:13:38.780 --> 00:13:41.380
if I were to substitute
n equals minus 1,

00:13:41.380 --> 00:13:45.850
I would see that the output
of time-- y minus 1--

00:13:45.850 --> 00:13:50.000
depends on inputs before
the delta function started.

00:13:52.880 --> 00:13:56.160
So therefore the answer is 0.

00:13:56.160 --> 00:14:03.700
If I look at the output of
time 1, the time 0 input is 1,

00:14:03.700 --> 00:14:05.720
the time minus 1 input is 0.

00:14:05.720 --> 00:14:08.840
So my total answer
is 1, et cetera.

00:14:08.840 --> 00:14:10.260
This is very straightforward.

00:14:10.260 --> 00:14:16.220
It's just plug and chug, and
what you see is a waveform.

00:14:16.220 --> 00:14:18.410
From which is
pretty easy to infer

00:14:18.410 --> 00:14:24.500
that Y2 is bigger than Y1,
so Y2 was bigger than Y1--

00:14:24.500 --> 00:14:27.540
bigger in a math sense.

00:14:27.540 --> 00:14:30.300
And Y3 is bigger than Y2--

00:14:30.300 --> 00:14:31.510
not.

00:14:31.510 --> 00:14:38.500
Y3 and Y2 are identical,
so that's not true.

00:14:38.500 --> 00:14:41.050
Y2 and, in fact,
everything above that is 0.

00:14:41.050 --> 00:14:45.340
That's true, and if you do a
little bit of manipulation,

00:14:45.340 --> 00:14:48.350
you can show that this
must have also been true.

00:14:48.350 --> 00:14:49.230
Everyone see that?

00:14:52.414 --> 00:14:54.705
I'm assuming you've seen all
this sort of stuff before,

00:14:54.705 --> 00:14:56.621
so I'm going to go through
it kind of quickly,

00:14:56.621 --> 00:14:58.160
but the answer was 4.

00:14:58.160 --> 00:15:00.440
4 of those statements were true.

00:15:00.440 --> 00:15:02.110
It was just a refresher
on how to think

00:15:02.110 --> 00:15:04.750
about difference equations.

00:15:04.750 --> 00:15:08.579
By comparison, I want to
contrast a difference equation

00:15:08.579 --> 00:15:09.370
on a block diagram.

00:15:12.550 --> 00:15:16.840
This is the same system but
represented graphically.

00:15:16.840 --> 00:15:18.310
Why would you want to do that?

00:15:18.310 --> 00:15:20.440
Well there's advantages
and disadvantages.

00:15:20.440 --> 00:15:23.950
This is a direct way of
expressing the system

00:15:23.950 --> 00:15:26.350
if you wanted to
implement it in hardware.

00:15:26.350 --> 00:15:30.580
So you can imagine building a
delay box, building an adder,

00:15:30.580 --> 00:15:34.620
building an inverter,
and constructing

00:15:34.620 --> 00:15:37.800
a piece of hardware that
does the computation.

00:15:37.800 --> 00:15:40.410
So this is more like a
hardware realization.

00:15:40.410 --> 00:15:45.420
It's not as compact as
the difference equation.

00:15:45.420 --> 00:15:48.630
It has another idiosyncrasy
that we have to have,

00:15:48.630 --> 00:15:52.000
the notion of rest.

00:15:52.000 --> 00:15:54.550
When we say the system
starts at rest-- which

00:15:54.550 --> 00:15:56.840
we will say all the
time, and in fact,

00:15:56.840 --> 00:15:58.930
you can always assume
that unless we tell you

00:15:58.930 --> 00:16:02.060
something to the contrary.

00:16:02.060 --> 00:16:04.280
When we say a system is
at rest, what we mean

00:16:04.280 --> 00:16:09.320
is that all of the delays in
the system start out being 0.

00:16:09.320 --> 00:16:13.220
So at rest means that this
signal starts out at 0,

00:16:13.220 --> 00:16:14.720
because that's the only--

00:16:14.720 --> 00:16:16.395
there's only one
delay in the system.

00:16:19.020 --> 00:16:21.240
Its output is initially 0.

00:16:21.240 --> 00:16:23.550
So now we think about
the input chugging along.

00:16:23.550 --> 00:16:25.860
So the input starts out being 1.

00:16:25.860 --> 00:16:27.990
That means the inverted
input is minus 1.

00:16:27.990 --> 00:16:30.054
That doesn't propagate
through the delay,

00:16:30.054 --> 00:16:31.470
because we're still
at the instant

00:16:31.470 --> 00:16:35.970
when the input just became
one for the first time.

00:16:35.970 --> 00:16:39.690
So this one goes through, and
adds to this 0 to give us 1,

00:16:39.690 --> 00:16:40.570
and our answer is 1.

00:16:43.300 --> 00:16:47.760
Now the clock goes kachunk,
and at that instant,

00:16:47.760 --> 00:16:50.790
the input changes from
1 to 0, because that's

00:16:50.790 --> 00:16:53.310
what happens here.

00:16:53.310 --> 00:16:55.860
And at precisely
the same instant,

00:16:55.860 --> 00:16:58.920
the delay signal went from 0--

00:16:58.920 --> 00:17:01.080
which it was because
it started at rest--

00:17:01.080 --> 00:17:05.940
to minus 1 which was its
input just before kachunk.

00:17:08.839 --> 00:17:12.710
Then-- after the
signal settle down--

00:17:12.710 --> 00:17:18.950
this becomes 0, and this becomes
minus 1, and that's our output.

00:17:18.950 --> 00:17:23.000
Then, again, kachunk.

00:17:23.000 --> 00:17:24.920
The input doesn't change,
because it was zero.

00:17:24.920 --> 00:17:25.586
It's still zero.

00:17:28.440 --> 00:17:31.750
The output of the delay
goes from minus 1 to 0,

00:17:31.750 --> 00:17:37.899
and after things settle
down, we get 0 at the output,

00:17:37.899 --> 00:17:39.315
and that is a state
that persists.

00:17:42.262 --> 00:17:44.220
So we have these two
different representations.

00:17:44.220 --> 00:17:46.800
We have difference equations
and block diagrams,

00:17:46.800 --> 00:17:47.890
so here's a question.

00:17:47.890 --> 00:17:49.150
How are they different?

00:17:52.492 --> 00:17:54.700
In particular, I've told
you the difference equations

00:17:54.700 --> 00:17:56.880
are concise and precise.

00:18:00.370 --> 00:18:02.550
Are there advantages
to a block diagram?

00:18:05.324 --> 00:18:06.240
Talk to your neighbor.

00:18:06.240 --> 00:18:10.390
Come up with a good hypothesis.

00:18:10.390 --> 00:18:12.250
What's good about a
block diagram, anything?

00:18:48.184 --> 00:18:50.350
So can anybody think of
something good about a block

00:18:50.350 --> 00:18:53.250
diagram?

00:18:53.250 --> 00:18:54.696
Yeah?

00:18:54.696 --> 00:18:57.588
AUDIENCE: It changes
the [INAUDIBLE]

00:18:57.588 --> 00:18:59.516
and it's easy to see
what's happening.

00:18:59.516 --> 00:19:01.690
PROFESSOR: So it's easy to see.

00:19:01.690 --> 00:19:05.420
So that could be something to do
with a graphic representation,

00:19:05.420 --> 00:19:06.560
but it could be deeper too.

00:19:06.560 --> 00:19:09.332
Can somebody say a deeper reason
why it might be easier to see?

00:19:09.332 --> 00:19:11.040
So that might be a
very good-- that might

00:19:11.040 --> 00:19:13.140
be a deep comment too.

00:19:13.140 --> 00:19:15.630
Why might it be easier
to use the block diagram

00:19:15.630 --> 00:19:17.421
than it is to use that
difference equation?

00:19:20.830 --> 00:19:21.357
Yeah?

00:19:21.357 --> 00:19:24.160
AUDIENCE: Because equations
are broken down into steps?

00:19:24.160 --> 00:19:25.220
PROFESSOR: How so?

00:19:25.220 --> 00:19:27.854
AUDIENCE: So there's
[INAUDIBLE] and then

00:19:27.854 --> 00:19:31.926
there's the feedback [INAUDIBLE]
difference equations are

00:19:31.926 --> 00:19:32.890
[INAUDIBLE]

00:19:32.890 --> 00:19:34.610
PROFESSOR: So that's
kind of right.

00:19:34.610 --> 00:19:37.740
I'm wondering if you
could say, I mean,

00:19:37.740 --> 00:19:39.330
you just do this, right?

00:19:39.330 --> 00:19:41.070
You do this, and
then you do that.

00:19:41.070 --> 00:19:42.390
What's the difference?

00:19:44.421 --> 00:19:46.420
There's something very
different about these two

00:19:46.420 --> 00:19:47.710
representations.

00:19:47.710 --> 00:19:49.900
There is more
information in the bottom

00:19:49.900 --> 00:19:52.520
than there is in the top.

00:19:52.520 --> 00:19:54.020
Can somebody tell
me the information

00:19:54.020 --> 00:19:55.561
that's available in
the bottom that's

00:19:55.561 --> 00:19:56.870
not available in the top?

00:19:56.870 --> 00:19:59.066
Yes?

00:19:59.066 --> 00:20:00.533
AUDIENCE: Actually
solving circuits

00:20:00.533 --> 00:20:05.423
it becomes a lot easier to
use graphical representation.

00:20:05.423 --> 00:20:08.390
PROFESSOR: Circuits,
graphical, but is there

00:20:08.390 --> 00:20:12.460
additional information here
that wasn't available there?

00:20:12.460 --> 00:20:12.960
Yes?

00:20:12.960 --> 00:20:15.142
AUDIENCE: The number
of signal paths?

00:20:15.142 --> 00:20:16.350
PROFESSOR: Number of signal--

00:20:16.350 --> 00:20:17.160
AUDIENCE: Paths

00:20:17.160 --> 00:20:17.868
PROFESSOR: Paths.

00:20:17.868 --> 00:20:19.710
Signal paths is a good idea.

00:20:19.710 --> 00:20:20.552
Yes?

00:20:20.552 --> 00:20:23.444
AUDIENCE: Is it that
X and negative 1 is 0?

00:20:23.444 --> 00:20:26.830
[INTERPOSING VOICES]

00:20:26.830 --> 00:20:30.940
PROFESSOR: Well that sort of
goes with specifying X, yes?

00:20:30.940 --> 00:20:32.920
AUDIENCE: The structure
is more emphasized,

00:20:32.920 --> 00:20:36.880
so you can just look at
it, and [INAUDIBLE] or not,

00:20:36.880 --> 00:20:41.350
and it's more easy to
see structure [INAUDIBLE]

00:20:41.350 --> 00:20:44.090
PROFESSOR: It is easier, but
there's a very precise reason

00:20:44.090 --> 00:20:44.770
why it's easier.

00:20:44.770 --> 00:20:45.395
There's arrows.

00:20:49.210 --> 00:20:53.090
Arrows tell you what to do next.

00:20:53.090 --> 00:20:56.150
So the thing that's
different is that.

00:20:56.150 --> 00:21:00.249
From the structure of the
arrows, everything starts here,

00:21:00.249 --> 00:21:02.540
and you should worry about
what goes that way, and what

00:21:02.540 --> 00:21:04.250
goes that way, and
what goes that way,

00:21:04.250 --> 00:21:05.750
and how that comes
together there.

00:21:05.750 --> 00:21:08.540
There's more information.

00:21:08.540 --> 00:21:11.960
In computer science terms, we
would say that the difference

00:21:11.960 --> 00:21:15.110
equation is declarative.

00:21:15.110 --> 00:21:18.200
It tells you a
statement of fact,

00:21:18.200 --> 00:21:22.990
not necessarily what
you can do with it.

00:21:22.990 --> 00:21:26.240
The block diagram is imperative.

00:21:26.240 --> 00:21:29.480
It tells you how
to do something,

00:21:29.480 --> 00:21:31.500
and those are very different.

00:21:31.500 --> 00:21:35.900
So the difference equation
is concise, precise,

00:21:35.900 --> 00:21:38.270
and declarative.

00:21:38.270 --> 00:21:40.760
The block diagram is imperative.

00:21:40.760 --> 00:21:43.190
Do this, do this, do this.

00:21:43.190 --> 00:21:45.140
It shows you the
signal flow path.

00:21:45.140 --> 00:21:49.310
There's no question
about who causes what.

00:21:49.310 --> 00:21:54.230
In this, we could be computing
X from Y or Y from X.

00:21:54.230 --> 00:21:57.620
There's no indication other than
some convention-- some place--

00:21:57.620 --> 00:21:59.480
that the x is the input.

00:21:59.480 --> 00:22:02.270
That make sense?

00:22:02.270 --> 00:22:05.110
So there's a very
big difference.

00:22:05.110 --> 00:22:07.740
There's another step
we want to take.

00:22:07.740 --> 00:22:10.070
So imperative and
declarative is one step.

00:22:10.070 --> 00:22:13.630
Another step is lumping
things in the same sense

00:22:13.630 --> 00:22:17.590
that we lump the coordinates
of a three space point

00:22:17.590 --> 00:22:20.770
into a single thing called
a point, or in the same way

00:22:20.770 --> 00:22:23.560
we make a vector
in linear algebra.

00:22:23.560 --> 00:22:25.270
The idea is going
to be that we're

00:22:25.270 --> 00:22:28.090
going to want to think about
whole signals at a time.

00:22:33.320 --> 00:22:37.150
In the notation that we will
use, we will think about--

00:22:37.150 --> 00:22:42.360
this will be the X signal,
this will be the Y signal,

00:22:42.360 --> 00:22:45.690
and we can re-interpret
the block diagram

00:22:45.690 --> 00:22:51.090
to be operations on signals
rather than operations

00:22:51.090 --> 00:22:54.030
on samples.

00:22:54.030 --> 00:22:58.320
So I'm trying to develop a
level of abstraction that

00:22:58.320 --> 00:23:02.160
helps us predict the
way systems will behave,

00:23:02.160 --> 00:23:05.100
so the next level of abstraction
I want to think about

00:23:05.100 --> 00:23:08.770
is thinking about
whole signals at once.

00:23:08.770 --> 00:23:11.580
So if we take this
signal idea, we

00:23:11.580 --> 00:23:13.050
would say there's an X signal.

00:23:13.050 --> 00:23:14.730
It gets operated
by this inverter

00:23:14.730 --> 00:23:19.070
to give an inverted
signal, then this signal

00:23:19.070 --> 00:23:24.097
goes through a delay box to give
us a delayed inverted signal.

00:23:24.097 --> 00:23:26.680
The delayed inverted signal gets
added to the original signal,

00:23:26.680 --> 00:23:28.138
and that gives us
an output signal.

00:23:28.138 --> 00:23:32.250
So we think about the
nodes being whole signals,

00:23:32.250 --> 00:23:36.240
and the boxes being operators
on signals, not samples.

00:23:36.240 --> 00:23:39.480
That's a huge
difference, and to make

00:23:39.480 --> 00:23:42.960
sure to be explicit about
that we'll develop a notation.

00:23:42.960 --> 00:23:45.390
We will say there's
an operator R--

00:23:45.390 --> 00:23:48.090
the right shift operator--

00:23:48.090 --> 00:23:50.940
that operates on signals.

00:23:50.940 --> 00:23:55.500
So we'll think about if X is the
whole input signal, not the nth

00:23:55.500 --> 00:23:58.720
sample, the whole thing.

00:23:58.720 --> 00:24:02.800
If X is a signal, we can
operate on it by the R operator.

00:24:02.800 --> 00:24:07.000
We can apply R-- the right shift
operator-- to the signal X,

00:24:07.000 --> 00:24:08.560
and generate a whole
new signal which

00:24:08.560 --> 00:24:13.060
I'll call Y which will be
a shifted version of the X

00:24:13.060 --> 00:24:14.350
signal.

00:24:14.350 --> 00:24:17.080
OK, you all got that?

00:24:17.080 --> 00:24:20.380
And that leads us then to
a concise representation

00:24:20.380 --> 00:24:24.460
similar to the
difference equation,

00:24:24.460 --> 00:24:28.360
but that has the features
of the block diagram.

00:24:28.360 --> 00:24:32.750
Because it's imperative,
R operating on X

00:24:32.750 --> 00:24:35.880
tells me start with
X and apply R to it.

00:24:35.880 --> 00:24:37.750
There's a direction.

00:24:37.750 --> 00:24:40.300
R applied to X is imperative.

00:24:40.300 --> 00:24:42.740
It tells me what to do.

00:24:42.740 --> 00:24:48.310
So this is a way that I
can make a notation that

00:24:48.310 --> 00:24:51.640
is as concise as
difference equations,

00:24:51.640 --> 00:24:57.430
but has the same imperative
feature as a block diagram.

00:24:57.430 --> 00:25:01.240
So it's an improved
notation in that sense.

00:25:01.240 --> 00:25:03.040
Make sure that you
know what it means.

00:25:03.040 --> 00:25:05.950
If I said that Y is RX, how
many of the following is true?

00:25:09.360 --> 00:25:10.770
Now you have to redeem yourself.

00:25:10.770 --> 00:25:14.940
You were less than 50% right,
so now I want 90% right.

00:25:25.630 --> 00:25:27.150
Oh, excuse me, not
how many, which?

00:25:48.210 --> 00:25:51.520
OK, everybody raise
your hands, c'mon.

00:25:51.520 --> 00:25:52.790
This is redemption time.

00:25:52.790 --> 00:25:54.170
Wonderful, you're redeemed.

00:25:54.170 --> 00:25:57.080
So you're about 100% correct.

00:25:57.080 --> 00:25:58.970
So to think about that.

00:25:58.970 --> 00:26:01.709
One easy way to think
about it is by example.

00:26:01.709 --> 00:26:03.500
Examples can't prove
that something's true,

00:26:03.500 --> 00:26:06.344
but they can quickly prove
that something's false.

00:26:06.344 --> 00:26:08.510
So if you think about the
simplest possible signal--

00:26:08.510 --> 00:26:10.850
say you had a unit sample.

00:26:10.850 --> 00:26:13.370
If you applied R to that, it
would shift it to the right.

00:26:15.890 --> 00:26:18.200
If it shifts it to the
right, it's pretty clear

00:26:18.200 --> 00:26:25.670
that Y at time 1 is the
same as X at time 0,

00:26:25.670 --> 00:26:30.100
and that's a feature
of this equation

00:26:30.100 --> 00:26:33.050
and none of the others.

00:26:33.050 --> 00:26:35.175
So that proves the
others are wrong,

00:26:35.175 --> 00:26:36.800
and if you think
about it a little bit,

00:26:36.800 --> 00:26:38.508
you can generalize
that argument to prove

00:26:38.508 --> 00:26:42.240
that the second one is actually
true for all the cases.

00:26:45.700 --> 00:26:47.650
So the idea then is
that we want to think

00:26:47.650 --> 00:26:51.669
about this hybrid notation,
this operator notation,

00:26:51.669 --> 00:26:53.460
and we want to think
about how to represent

00:26:53.460 --> 00:26:55.240
simple systems that way.

00:26:55.240 --> 00:26:56.460
So here's an example.

00:26:56.460 --> 00:26:59.640
Say I have this system.

00:26:59.640 --> 00:27:02.880
I can think about that as
the cascade of a system that

00:27:02.880 --> 00:27:08.400
starts with X, X as a
signal, and this whole thing

00:27:08.400 --> 00:27:12.170
gets turned into an operator.

00:27:12.170 --> 00:27:16.040
That operator can be
written mathematically as 1.

00:27:16.040 --> 00:27:20.750
This path added to
minus 1 times a delay

00:27:20.750 --> 00:27:23.930
minus 1 times a delay, so
one minus R operating on X

00:27:23.930 --> 00:27:26.860
gives me Y1.

00:27:26.860 --> 00:27:34.100
Then a very similar system
operates on Y1 to give me Y2

00:27:34.100 --> 00:27:37.510
and if the rules
of math apply, I

00:27:37.510 --> 00:27:43.880
ought to be able to
substitute 1 minus RX for Y1

00:27:43.880 --> 00:27:47.650
and get that expression.

00:27:47.650 --> 00:27:51.910
And if the world
were nice and it is.

00:27:51.910 --> 00:27:54.790
If the world were nice,
then this expression,

00:27:54.790 --> 00:27:58.100
since it looks like
a polynomial in R,

00:27:58.100 --> 00:28:01.056
might behave like
a polynomial in R,

00:28:01.056 --> 00:28:03.680
and it's pretty easy to convince
yourself that that's, in fact,

00:28:03.680 --> 00:28:06.160
true.

00:28:06.160 --> 00:28:09.820
So think about the
primitive definition.

00:28:09.820 --> 00:28:16.402
Sample by sample, difference
equation, what should this do?

00:28:16.402 --> 00:28:18.110
Well, there's a
difference representation

00:28:18.110 --> 00:28:20.342
for this, which is here.

00:28:20.342 --> 00:28:21.800
There's a difference
representation

00:28:21.800 --> 00:28:26.520
for this, which I
can substitute twice

00:28:26.520 --> 00:28:28.650
so I can generate an
equivalent difference

00:28:28.650 --> 00:28:35.330
equation for the whole
thing, and then I

00:28:35.330 --> 00:28:38.000
can think about term wise
translating all of those

00:28:38.000 --> 00:28:40.580
into R expressions.

00:28:40.580 --> 00:28:43.570
And I see that I
have proved the idea

00:28:43.570 --> 00:28:48.480
that this particular
system at least

00:28:48.480 --> 00:28:53.150
behaves as though the
operator expressions follow

00:28:53.150 --> 00:28:54.500
the rules of polynomials.

00:28:57.090 --> 00:29:01.080
So that's important
because you know

00:29:01.080 --> 00:29:04.100
how to deal with polynomials.

00:29:04.100 --> 00:29:07.970
If there's an isomorphism
between these kinds

00:29:07.970 --> 00:29:12.164
of discrete time
signals and polynomials,

00:29:12.164 --> 00:29:13.580
the fact that you
know how to deal

00:29:13.580 --> 00:29:17.030
with polynomials
translates into you

00:29:17.030 --> 00:29:21.120
already know how to
do systems, right?

00:29:21.120 --> 00:29:23.670
So it's a very
powerful kind of thing

00:29:23.670 --> 00:29:26.859
to draw an isomorphism
between two systems,

00:29:26.859 --> 00:29:29.150
especially when you already
know how to do one of them.

00:29:33.602 --> 00:29:35.560
So let's think about
equivalence a little more.

00:29:35.560 --> 00:29:38.180
Here's another example.

00:29:38.180 --> 00:29:41.080
So here is that
same system that's

00:29:41.080 --> 00:29:46.170
composed of two cascaded
difference engines,

00:29:46.170 --> 00:29:48.585
and the hypothesis is
that this is the same.

00:29:53.230 --> 00:29:54.450
Two things I want you to see.

00:29:54.450 --> 00:29:57.250
First, it should be
pretty clear that you

00:29:57.250 --> 00:29:59.410
can see how you would
derive that thinking

00:29:59.410 --> 00:30:04.660
about the system as
operators R. You should also

00:30:04.660 --> 00:30:07.630
be able to derive the
equivalence by thinking

00:30:07.630 --> 00:30:12.510
about the individual blocks
as difference equations,

00:30:12.510 --> 00:30:17.440
but more importantly, I'm hoping
that you can see a caveat.

00:30:17.440 --> 00:30:19.689
Assuming both are
initially at rest--

00:30:19.689 --> 00:30:21.730
that will come up over
and over and over and over

00:30:21.730 --> 00:30:25.980
again for exactly this reason--

00:30:25.980 --> 00:30:30.250
the equivalence is only true
if they started that rest.

00:30:30.250 --> 00:30:33.050
That's not quite the
right way to say it.

00:30:33.050 --> 00:30:36.140
The equivalence is always
true if they start at rest.

00:30:36.140 --> 00:30:39.060
That is precisely right.

00:30:39.060 --> 00:30:41.880
If they start at rest it
will always be equivalent.

00:30:41.880 --> 00:30:44.070
Can you think of why
they have to be at rest?

00:30:49.230 --> 00:30:50.790
Why do they have to be at rest?

00:30:59.990 --> 00:31:02.670
OK, smile.

00:31:02.670 --> 00:31:04.350
It's not torture.

00:31:04.350 --> 00:31:05.124
Yes?

00:31:05.124 --> 00:31:10.932
AUDIENCE: [INAUDIBLE]

00:31:10.932 --> 00:31:15.260
PROFESSOR: So if they weren't at
rest, the outputs of the delays

00:31:15.260 --> 00:31:16.640
wouldn't necessarily be zero.

00:31:20.090 --> 00:31:22.100
There is no simple
correspondence

00:31:22.100 --> 00:31:24.155
between these two delays
and those two delays.

00:31:26.960 --> 00:31:30.260
If I told you what
are these two delays,

00:31:30.260 --> 00:31:34.970
it may or may not be possible to
make an equivalent system where

00:31:34.970 --> 00:31:39.110
there are two
different numbers here.

00:31:39.110 --> 00:31:42.860
Say this delay starts at 1,
and this delay starts at 7.

00:31:42.860 --> 00:31:46.310
There may or may not
be a set of numbers

00:31:46.310 --> 00:31:48.800
for the bottom
delays that will have

00:31:48.800 --> 00:31:56.030
the same behavior as those
numbers did in a top system.

00:31:56.030 --> 00:31:58.610
But what is guaranteed is
if they all start at 0,

00:31:58.610 --> 00:32:00.850
everything's fine.

00:32:00.850 --> 00:32:03.220
That's the reason
we put in the caveat

00:32:03.220 --> 00:32:05.820
initially that both
systems start at rest.

00:32:05.820 --> 00:32:08.350
The equivalence
that we talk about

00:32:08.350 --> 00:32:10.180
is equivalence
starting from rest.

00:32:13.930 --> 00:32:20.530
So think about these systems.

00:32:20.530 --> 00:32:23.594
They are equivalent.

00:32:23.594 --> 00:32:25.260
You can try to convince
yourself they're

00:32:25.260 --> 00:32:32.100
equivalent by thinking about
operations on block diagrams,

00:32:32.100 --> 00:32:34.380
but what I'd like you
to think about is,

00:32:34.380 --> 00:32:40.060
they are a statement of what
property of polynomials?

00:32:40.060 --> 00:32:41.860
The equivalence of
those two systems

00:32:41.860 --> 00:32:47.000
is a statement about what
property of polynomials?

00:32:47.000 --> 00:32:49.400
Is it the commutative property,
the associative property,

00:32:49.400 --> 00:32:52.040
the distributive property, the
transitive property, or none

00:32:52.040 --> 00:32:52.950
of the above?

00:33:10.870 --> 00:33:12.050
OK, you're far too quiet.

00:33:14.630 --> 00:33:16.170
Take a break.

00:33:16.170 --> 00:33:18.110
Turn to your neighbor.

00:33:18.110 --> 00:33:21.500
Tell your neighbor what
living group you're in.

00:33:21.500 --> 00:33:24.320
Become accustomed to
talking to your neighbor,

00:33:24.320 --> 00:33:26.608
and then figure this out.

00:33:26.608 --> 00:34:18.100
[INTERPOSING VOICES]

00:34:18.100 --> 00:34:21.121
PROFESSOR: a equals
b means b equals a.

00:34:21.121 --> 00:34:24.940
AUDIENCE: [INAUDIBLE]

00:34:24.940 --> 00:34:25.630
PROFESSOR: Or 5.

00:34:25.630 --> 00:34:35.760
AUDIENCE: [INAUDIBLE]

00:34:35.760 --> 00:34:39.029
PROFESSOR: OK, what property
is being described here.

00:34:39.029 --> 00:34:40.820
Everybody raise your
hand with some number.

00:34:44.110 --> 00:34:45.520
Excellent, excellent.

00:34:45.520 --> 00:34:47.290
More than 90% correct.

00:34:47.290 --> 00:34:52.850
So the idea is that we write
this as an R expression.

00:34:52.850 --> 00:34:55.719
So this system
says, start with X,

00:34:55.719 --> 00:34:59.080
apply this operator to X. It's
a little confusing that one

00:34:59.080 --> 00:35:01.000
goes left and one goes right.

00:35:01.000 --> 00:35:03.090
So start with X,
apply this to X--

00:35:03.090 --> 00:35:06.610
that's the 1 minus R operator--
then take whatever comes out,

00:35:06.610 --> 00:35:09.850
and apply R again.

00:35:09.850 --> 00:35:14.330
Similarly, down
here, start with X.

00:35:14.330 --> 00:35:18.310
You've got the sum of two
things, an R in the top,

00:35:18.310 --> 00:35:21.140
and an R squared
minus 1 in the bottom,

00:35:21.140 --> 00:35:24.410
and the equivalence of those
is the distributive principle.

00:35:24.410 --> 00:35:28.770
R distributes so
multiplication over addition.

00:35:33.520 --> 00:35:35.850
OK, in the interest of
time, let me skip that.

00:35:35.850 --> 00:35:39.000
That's an exercise that you
can work on on your own.

00:35:39.000 --> 00:35:41.930
It's very straightforward.

00:35:41.930 --> 00:35:46.440
What I want to do is talk about
another more slightly deeper

00:35:46.440 --> 00:35:53.670
issue, and that's the difference
between recipes and constraints

00:35:53.670 --> 00:35:55.005
for whole block diagrams.

00:35:57.600 --> 00:36:03.180
So we can think about this
as a recipe in the sense

00:36:03.180 --> 00:36:07.110
that we can take
the R operators,

00:36:07.110 --> 00:36:11.680
and think about signals as the
composition of other signals.

00:36:11.680 --> 00:36:17.250
So this says, add this
signal to that signal.

00:36:17.250 --> 00:36:19.630
This signal is just the
delay of that signal.

00:36:19.630 --> 00:36:22.230
This signal is just the
minus 1 of that signal.

00:36:22.230 --> 00:36:26.400
So you can think about,
there's a recipe start with X,

00:36:26.400 --> 00:36:32.030
invert it, delay it, add
it to the original, that's

00:36:32.030 --> 00:36:33.810
the output.

00:36:33.810 --> 00:36:35.620
Let's contrast that to this.

00:36:35.620 --> 00:36:36.435
This is harder.

00:36:39.850 --> 00:36:42.800
So let's think about
the R operators.

00:36:42.800 --> 00:36:45.750
What we can say here
is that this output

00:36:45.750 --> 00:36:49.770
is composed of the sum
of two things, the input

00:36:49.770 --> 00:36:51.395
and the delayed
version of the output.

00:36:56.020 --> 00:36:59.165
That's a recipe for finding
the input from the output.

00:37:01.960 --> 00:37:05.380
That's not what we want to do.

00:37:05.380 --> 00:37:11.620
So there's a recipe here that
says, start with the output,

00:37:11.620 --> 00:37:14.650
shift it to the right, subtract
that from the original,

00:37:14.650 --> 00:37:16.030
and that will tell
you the input.

00:37:16.030 --> 00:37:22.030
But I don't know the
output, I know the input.

00:37:22.030 --> 00:37:24.284
What that says is if
you knew the output,

00:37:24.284 --> 00:37:25.450
it would have this property.

00:37:25.450 --> 00:37:26.410
It's declarative.

00:37:29.840 --> 00:37:34.480
Whatever the output is, it
has to have that property

00:37:34.480 --> 00:37:38.290
but it didn't tell
me how to get it.

00:37:38.290 --> 00:37:41.990
The R operator is imperative.

00:37:41.990 --> 00:37:46.270
Start with the input, apply
R to it, you get the output.

00:37:46.270 --> 00:37:52.080
But you can compose systems
using an imperative operator

00:37:52.080 --> 00:37:57.482
that is not-- where the overall
system is not imperative,

00:37:57.482 --> 00:37:59.690
so what are you going to do
with something like that?

00:37:59.690 --> 00:38:02.060
Well it's a constraint,
so the question

00:38:02.060 --> 00:38:05.180
is how do you think about that?

00:38:05.180 --> 00:38:09.830
The thing to do in this case
is the thing you should always

00:38:09.830 --> 00:38:11.060
do in this course.

00:38:11.060 --> 00:38:12.710
Fall back to a simpler method.

00:38:15.207 --> 00:38:17.040
The idea is we're going
to start by teaching

00:38:17.040 --> 00:38:20.460
simple methods, then more
abstract methods and more

00:38:20.460 --> 00:38:21.434
abstract methods.

00:38:21.434 --> 00:38:23.850
The reason being that as the
methods become more abstract,

00:38:23.850 --> 00:38:24.933
they become more powerful.

00:38:24.933 --> 00:38:28.770
You can do things
quicker, but if they fail,

00:38:28.770 --> 00:38:31.090
revert to the easier method.

00:38:31.090 --> 00:38:34.890
So here the easier method
is sample by sample,

00:38:34.890 --> 00:38:37.140
so let's just think
about how signals would

00:38:37.140 --> 00:38:40.120
propagate through this system.

00:38:40.120 --> 00:38:46.580
So think about this as a sample
by sample block diagram system.

00:38:46.580 --> 00:38:49.890
Say that it starts at rest.

00:38:49.890 --> 00:38:52.250
So the output before
any inputs come in

00:38:52.250 --> 00:38:54.530
have to be 0, because
the initial condition was

00:38:54.530 --> 00:38:58.040
that delays were all 0.

00:38:58.040 --> 00:39:02.050
Now the input
comes in at time 1.

00:39:02.050 --> 00:39:07.640
So X of 0 is 1, so the
output becomes one.

00:39:07.640 --> 00:39:12.210
And now because of the way
the feedback path works,

00:39:12.210 --> 00:39:14.370
the output as a
second signal is--

00:39:14.370 --> 00:39:16.090
the second sample is also one.

00:39:18.720 --> 00:39:21.190
Everybody see that?

00:39:21.190 --> 00:39:22.340
And in fact, it's stuck.

00:39:25.280 --> 00:39:28.740
So the idea in this system--
if you think about it

00:39:28.740 --> 00:39:33.810
from a sample by sample point of
view, the signal at the output

00:39:33.810 --> 00:39:35.680
persists long.

00:39:35.680 --> 00:39:38.670
In fact, infinitely long
after the signal as the input

00:39:38.670 --> 00:39:39.910
goes away.

00:39:39.910 --> 00:39:43.110
That's very different from
what we saw in the simpler

00:39:43.110 --> 00:39:47.010
systems that were imperative.

00:39:47.010 --> 00:39:49.380
If in the previous system
you had a finite length

00:39:49.380 --> 00:39:53.240
signal at the input,
any number of operations

00:39:53.240 --> 00:39:55.670
that you did to it and
then combined those

00:39:55.670 --> 00:39:57.380
would give you a
finite length output.

00:39:57.380 --> 00:39:59.240
Maybe bigger than
the last one because

00:39:59.240 --> 00:40:02.510
of extra delays in the system,
but if it started finite,

00:40:02.510 --> 00:40:04.940
it's finite.

00:40:04.940 --> 00:40:06.130
This is different here.

00:40:06.130 --> 00:40:09.400
I'm having a persisting
response persists

00:40:09.400 --> 00:40:14.900
to infinity from a transient
input and that's because--

00:40:14.900 --> 00:40:16.570
it's because of feedback.

00:40:16.570 --> 00:40:19.880
It's because there's a path
that wraps back on itself.

00:40:22.950 --> 00:40:25.950
How do we think about that
in terms of R operators?

00:40:25.950 --> 00:40:28.680
Well having figured out what
the response looks like,

00:40:28.680 --> 00:40:34.050
there's a perfectly valid R
expression for this signal.

00:40:34.050 --> 00:40:39.210
This is just the unit sample
plus R times the unit sample

00:40:39.210 --> 00:40:41.700
plus R squared times the
unit sample plus R cubed

00:40:41.700 --> 00:40:44.370
times the unit
sample, ad infinitum.

00:40:44.370 --> 00:40:46.930
That's that system.

00:40:46.930 --> 00:40:50.870
So I've done something very
powerful and not all that

00:40:50.870 --> 00:40:51.890
obvious.

00:40:51.890 --> 00:40:59.030
I've taken a system
that was not imperative,

00:40:59.030 --> 00:41:01.628
and I've turned it into a
system that is imperative.

00:41:04.440 --> 00:41:07.360
This system gives me a
recipe for how to do things.

00:41:07.360 --> 00:41:09.525
Start with X, delay
it by one, and add

00:41:09.525 --> 00:41:11.920
it delay by another one, and
add it delay by another one,

00:41:11.920 --> 00:41:14.400
and add it delay it by
another one, and add it.

00:41:14.400 --> 00:41:18.660
I've converted a
declarative statement

00:41:18.660 --> 00:41:22.230
about how the system should work
into an imperative statement

00:41:22.230 --> 00:41:24.390
about how the
system should work,

00:41:24.390 --> 00:41:26.760
and I've got an equivalent
system representation

00:41:26.760 --> 00:41:28.020
like this.

00:41:28.020 --> 00:41:32.400
And you should be saying to
yourself, do I really buy that?

00:41:32.400 --> 00:41:34.770
So is it really
going to be the case

00:41:34.770 --> 00:41:40.590
that a system that was
previously described this way?

00:41:40.590 --> 00:41:44.280
Tell me the output operate
on it by 1 minus R,

00:41:44.280 --> 00:41:45.990
and that'll be the
input should that

00:41:45.990 --> 00:41:49.640
be the same as this system.

00:41:49.640 --> 00:41:54.710
If you think about that
mathematically, here's a proof.

00:41:54.710 --> 00:41:57.290
It is OK to think
about it that way.

00:41:57.290 --> 00:41:59.955
Start with the idea
that X2 equals X1.

00:42:02.940 --> 00:42:06.450
This is a statement of
the right hand side.

00:42:06.450 --> 00:42:07.930
Substitute X1 for X2.

00:42:10.830 --> 00:42:15.620
Substitute this equivalent
expression for X1,

00:42:15.620 --> 00:42:16.797
and multiply it out.

00:42:19.600 --> 00:42:22.420
When you do that, you
find Y2 equals Y1.

00:42:22.420 --> 00:42:26.440
It's true, and
what we've done is

00:42:26.440 --> 00:42:28.690
showed a very important thing.

00:42:28.690 --> 00:42:31.690
This and this are reciprocals.

00:42:31.690 --> 00:42:33.710
When you multiply two
polynomials together

00:42:33.710 --> 00:42:39.350
and the answer is one,
they're reciprocals.

00:42:39.350 --> 00:42:43.130
So that implies that we can
treat that first expression--

00:42:43.130 --> 00:42:44.930
we can think about this--

00:42:44.930 --> 00:42:46.320
let's see, backup.

00:42:46.320 --> 00:42:48.680
So here, we had an
expression that said,

00:42:48.680 --> 00:42:54.690
start with the output, operate
on it with this, get the input.

00:42:54.690 --> 00:43:02.630
We can think about that
instead as operate on the input

00:43:02.630 --> 00:43:06.540
by the reciprocal operator.

00:43:06.540 --> 00:43:09.780
Now I've defined what
this reciprocal mean.

00:43:12.530 --> 00:43:15.870
Reciprocal means that
thing in the last slide,

00:43:15.870 --> 00:43:19.230
so now I know from
the last slide

00:43:19.230 --> 00:43:22.790
the reciprocal of 1 minus R
is 1 plus R plus R squared

00:43:22.790 --> 00:43:25.550
plus R cubed, blah,
blah, blah, and that

00:43:25.550 --> 00:43:27.710
follows the normal
rules of polynomials.

00:43:27.710 --> 00:43:29.180
This is not a surprise.

00:43:29.180 --> 00:43:30.290
You could have done that.

00:43:30.290 --> 00:43:32.081
You could have derived
that same expression

00:43:32.081 --> 00:43:35.830
by thinking about
synthetic division.

00:43:35.830 --> 00:43:38.890
You could have thought
about it as a Taylor series.

00:43:38.890 --> 00:43:43.730
Anything you know about
polynomials should have worked.

00:43:43.730 --> 00:43:48.110
So this idea of representing
a signal by a system--

00:43:48.110 --> 00:43:50.650
by an operator R--

00:43:50.650 --> 00:43:53.300
is extraordinarily powerful.

00:43:53.300 --> 00:43:54.890
We've been able
to take advantage

00:43:54.890 --> 00:43:59.180
of non-trivial
properties of polynomials

00:43:59.180 --> 00:44:02.720
by having done that, and
we'll continue that way.

00:44:02.720 --> 00:44:11.465
So the overriding feature of
this system that was not--

00:44:11.465 --> 00:44:15.710
that could not-- so this
system was not a recipe.

00:44:15.710 --> 00:44:16.770
It was a constraint.

00:44:19.370 --> 00:44:21.650
The feature that made
it that way is something

00:44:21.650 --> 00:44:25.190
we'll call feedback,
and we'll be

00:44:25.190 --> 00:44:28.400
able to visualize feedback very
simply by looking at the block

00:44:28.400 --> 00:44:29.240
diagram.

00:44:29.240 --> 00:44:32.060
Feedback means that
there's a cycle somewhere.

00:44:34.680 --> 00:44:37.130
So if there's no
cycles then it has

00:44:37.130 --> 00:44:38.990
to be-- so we call
this the network that

00:44:38.990 --> 00:44:42.220
results when there's no
cycles, we say it's acyclic.

00:44:42.220 --> 00:44:43.820
What a clever word, right?

00:44:43.820 --> 00:44:45.320
So no cycles.

00:44:45.320 --> 00:44:48.230
And when it's a acyclic,
it will have the property

00:44:48.230 --> 00:44:52.380
that transient inputs give
rise to transient outputs.

00:44:52.380 --> 00:44:56.400
If it has a cycle in it, then
it has feedback and feedback has

00:44:56.400 --> 00:44:59.700
the potential-- doesn't always
do it but has the potential--

00:44:59.700 --> 00:45:04.930
to generate a persisting
output to a transient input.

00:45:08.050 --> 00:45:14.650
So if we think about a slightly
more complicated example where

00:45:14.650 --> 00:45:19.060
I've put a number p0 in the
feedback loop that was not

00:45:19.060 --> 00:45:23.740
in the previous example,
we can see that the way

00:45:23.740 --> 00:45:25.210
you can conceive of this--

00:45:25.210 --> 00:45:27.042
since there's a
single time when we're

00:45:27.042 --> 00:45:28.750
thinking about the
unit sample response--

00:45:28.750 --> 00:45:33.020
there's a single
input that's not 0.

00:45:33.020 --> 00:45:35.450
And what you can do is
think about the feedback--

00:45:35.450 --> 00:45:37.220
the block diagram--

00:45:37.220 --> 00:45:41.900
you can think about
it separating times,

00:45:41.900 --> 00:45:46.500
because there's one unit
of delay in every cycle.

00:45:46.500 --> 00:45:48.860
So you can think about
that as the only way

00:45:48.860 --> 00:45:51.510
you can get from the input at
times 0 to the output of times

00:45:51.510 --> 00:45:53.370
0 is through the
straightforward path.

00:45:53.370 --> 00:45:55.610
The one highlighted by red.

00:45:55.610 --> 00:45:57.620
The only way you can get
from the input of times

00:45:57.620 --> 00:46:02.480
0 to the output of times 1 is to
make the circle at least once--

00:46:02.480 --> 00:46:07.300
to make the circle
exactly once there.

00:46:07.300 --> 00:46:11.350
If you make the circle
exactly once then,

00:46:11.350 --> 00:46:12.790
instead of being
height one, it's

00:46:12.790 --> 00:46:16.435
height p0, because you had to
have gone through the p0 once.

00:46:19.320 --> 00:46:22.870
If you go around a third
time, it's p-not squared,

00:46:22.870 --> 00:46:25.170
p-not to the fourth, et cetera.

00:46:25.170 --> 00:46:31.130
So there's a way of thinking
about why the way is there

00:46:31.130 --> 00:46:36.210
this persistent response by
looking at the block diagrams.

00:46:36.210 --> 00:46:38.520
What I'm trying to
emphasize is that it's

00:46:38.520 --> 00:46:42.510
useful to be able to think about
difference equations, block

00:46:42.510 --> 00:46:48.240
diagrams, R operators,
they're all useful.

00:46:48.240 --> 00:46:50.790
What you want to know is the
strengths and limitations

00:46:50.790 --> 00:46:51.420
of each.

00:46:51.420 --> 00:46:53.700
So here what I've showed
is a very good way

00:46:53.700 --> 00:46:58.710
to think about feedback in
terms of block diagrams.

00:47:03.230 --> 00:47:07.480
How many of these
networks are cyclic?

00:47:07.480 --> 00:47:09.360
How many of these
networks are acyclic?

00:47:13.190 --> 00:47:14.300
Is this cyclic?

00:47:14.300 --> 00:47:16.430
This network?

00:47:16.430 --> 00:47:21.250
No, so none of the paths
wrap that back on itself.

00:47:21.250 --> 00:47:22.410
Here's a path.

00:47:22.410 --> 00:47:23.580
Here's a path.

00:47:23.580 --> 00:47:24.290
Here's a path.

00:47:24.290 --> 00:47:25.790
None of those wrap on itself.

00:47:25.790 --> 00:47:28.240
Is this network cyclic?

00:47:28.240 --> 00:47:31.810
Sure, this is cyclic over here.

00:47:31.810 --> 00:47:33.380
This one, Yeah.

00:47:33.380 --> 00:47:35.020
The input, this is cyclic.

00:47:35.020 --> 00:47:36.250
This one?

00:47:36.250 --> 00:47:38.140
Doubly cyclic.

00:47:38.140 --> 00:47:47.150
So that's the idea, and
this gives rise to a notion

00:47:47.150 --> 00:47:48.380
that we will call a pole.

00:47:51.250 --> 00:47:54.250
A pole is the base of
the geometric sequence

00:47:54.250 --> 00:47:58.400
that results in these
simple sequences whenever

00:47:58.400 --> 00:48:02.620
you have feedback, and we'll
be saying a whole lot more

00:48:02.620 --> 00:48:05.470
about those in upcoming times.

00:48:08.320 --> 00:48:11.540
In the interest of time,
I have to stop now,

00:48:11.540 --> 00:48:13.960
but so the idea from
today is supposed

00:48:13.960 --> 00:48:17.370
to have been lots
of representations

00:48:17.370 --> 00:48:22.740
for DT signals, DT signals
and systems, strengths

00:48:22.740 --> 00:48:26.370
and weaknesses of each,
difference equations--

00:48:26.370 --> 00:48:31.020
concise, precise-- block
diagrams, visualizing signals

00:48:31.020 --> 00:48:35.910
flow paths, operators, thinking
about things as polynomials,

00:48:35.910 --> 00:48:39.060
and what we'll do in
the next few sessions

00:48:39.060 --> 00:48:41.640
is try to build on that
polynomial representation

00:48:41.640 --> 00:48:45.990
to gain further insights into
the way that systems will work.

00:48:45.990 --> 00:48:47.720
Thank you.