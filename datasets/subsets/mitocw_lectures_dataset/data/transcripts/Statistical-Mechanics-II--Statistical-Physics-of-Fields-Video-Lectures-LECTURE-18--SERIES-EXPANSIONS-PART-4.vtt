WEBVTT

00:00:00.070 --> 00:00:01.780
The following
content is provided

00:00:01.780 --> 00:00:04.019
under a Creative
Commons license.

00:00:04.019 --> 00:00:06.870
Your support will help MIT
OpenCourseWare continue

00:00:06.870 --> 00:00:10.730
to offer high quality
educational resources for free.

00:00:10.730 --> 00:00:13.340
To make a donation or
view additional materials

00:00:13.340 --> 00:00:17.217
from hundreds of MIT courses,
visit MIT OpenCourseWare

00:00:17.217 --> 00:00:17.842
at ocw.mit.edu.

00:00:22.210 --> 00:00:23.940
PROFESSOR: OK, let's start.

00:00:26.580 --> 00:00:29.970
So back to our Ising model.

00:00:35.870 --> 00:00:40.770
And for this lecture, focusing
mostly on a square like this.

00:00:48.200 --> 00:00:50.765
At each side, we have
a binary variable.

00:00:54.570 --> 00:01:00.110
And a weight that tries
to keep neighboring

00:01:00.110 --> 00:01:05.790
the sides to be parallel.

00:01:05.790 --> 00:01:11.480
So every pair of
neighboring sides

00:01:11.480 --> 00:01:14.980
is subject to a joined
fate such as that.

00:01:14.980 --> 00:01:18.350
You're going to ignore
the magnetic field.

00:01:18.350 --> 00:01:20.780
And to calculate a
partition function,

00:01:20.780 --> 00:01:26.140
we have to sum over r 2 to the
n configuration on both sides.

00:01:26.140 --> 00:01:30.900
And this will be a partition
function that will [INAUDIBLE]

00:01:30.900 --> 00:01:37.070
on this one parameter k, which
is some energy divided by kt.

00:01:37.070 --> 00:01:42.080
So then what we did
was you we rewrote

00:01:42.080 --> 00:01:46.320
each one of these factors as
a hyperbolic cosine 1 plus

00:01:46.320 --> 00:01:50.270
tangent and took out
all of the factors

00:01:50.270 --> 00:01:54.260
of the hyperbolic
cosine in the outside.

00:01:54.260 --> 00:01:56.670
And for the case of
this square lattice,

00:01:56.670 --> 00:02:00.890
each side has two bonds
going out of that.

00:02:00.890 --> 00:02:04.430
So there's 2 to the n,
and I'll have to sum r 2

00:02:04.430 --> 00:02:10.030
to the n configurations
product of what all bonds.

00:02:10.030 --> 00:02:15.870
These factors of 1
plus t sigma i sigma j,

00:02:15.870 --> 00:02:18.670
where this T is, of
course, my shorthand

00:02:18.670 --> 00:02:20.100
for hyperbolic function.

00:02:25.680 --> 00:02:30.890
Now we saw that basically
what we need to do

00:02:30.890 --> 00:02:35.620
is either we take 1--
that's the t right there--

00:02:35.620 --> 00:02:40.080
or terms that have these
factors of t sigma sigma.

00:02:40.080 --> 00:02:44.130
But in order to ensure that
they will survive the summation

00:02:44.130 --> 00:02:48.780
over the two possibilities of
sigma, each one of these terms

00:02:48.780 --> 00:02:51.454
has to be matched
with another one.

00:02:51.454 --> 00:02:57.260
And so the most trivial diagram
would be something like this.

00:02:57.260 --> 00:03:01.660
And then sum over the two
possibilities at each side

00:03:01.660 --> 00:03:03.750
will give us a
factor of n per side.

00:03:03.750 --> 00:03:09.660
So you have 2 to the n
[INAUDIBLE] to the power of 2n.

00:03:09.660 --> 00:03:22.540
And then we have a sum over
graphs which have zero, two,

00:03:22.540 --> 00:03:26.950
or four bonds
emanating per site.

00:03:34.040 --> 00:03:36.850
So that this summation
over the sigmas

00:03:36.850 --> 00:03:42.090
will give us a factor of
2 and another factor of 0.

00:03:42.090 --> 00:03:45.390
And then we just have
to count t to the power

00:03:45.390 --> 00:03:47.944
of the number of
1's in the graph.

00:03:52.930 --> 00:03:56.400
Now we said that all
of the exciting things

00:03:56.400 --> 00:04:03.520
have to do with this sum, which
depends on this parameter t,

00:04:03.520 --> 00:04:04.040
of course.

00:04:07.390 --> 00:04:16.089
And this sum, as
written here, has

00:04:16.089 --> 00:04:19.800
graphs such as the one
that I indicated, but also

00:04:19.800 --> 00:04:23.460
potentially graphs that
are more complicated which

00:04:23.460 --> 00:04:27.170
each have these joined pieces.

00:04:27.170 --> 00:04:33.360
And we've attempted to replace
this sum s with another sum, s

00:04:33.360 --> 00:04:45.340
prime, which is the sum
over gas of phantom loops.

00:04:45.340 --> 00:04:48.740
Let's call it multiple
phantom loops.

00:04:55.330 --> 00:04:59.130
Essentially, if I allow
these loops to basically go

00:04:59.130 --> 00:05:07.820
through each other, then I can
exponentiate this and write it

00:05:07.820 --> 00:05:18.611
as a sum over all single
phantom loops thereby removing,

00:05:18.611 --> 00:05:24.270
the factors of n squared,
n cubed, et cetera,

00:05:24.270 --> 00:05:27.970
that will arise by moving
the destroyed pieces

00:05:27.970 --> 00:05:30.670
all over the lattice.

00:05:30.670 --> 00:05:34.930
This sum, since
I can essentially

00:05:34.930 --> 00:05:37.920
pick it apart particular
loop and then slide it once

00:05:37.920 --> 00:05:41.122
over the lattice, is certainly
extensive proportional to n.

00:05:44.290 --> 00:05:45.930
So this would be nice.

00:05:45.930 --> 00:05:50.030
We calculate this sum
as prime last time,

00:05:50.030 --> 00:05:53.630
and we saw that it actually
reproduced for us the Gaussian

00:05:53.630 --> 00:05:54.255
model.

00:05:54.255 --> 00:05:57.368
So this was equivalent
to the Gaussian model.

00:06:01.120 --> 00:06:06.510
And in particular,
because we were allowing

00:06:06.510 --> 00:06:09.880
this phantom condition,
when we went to sufficiently

00:06:09.880 --> 00:06:13.700
low temperature or when t
became sufficiently large,

00:06:13.700 --> 00:06:15.740
essentially the
model was unstable

00:06:15.740 --> 00:06:17.550
and because I
could just continue

00:06:17.550 --> 00:06:20.650
to put more and
more of these loops.

00:06:20.650 --> 00:06:22.855
There was no
condition that would

00:06:22.855 --> 00:06:24.490
say you should have
a finite density.

00:06:24.490 --> 00:06:27.630
And then the density of the
loops would go to infinity.

00:06:27.630 --> 00:06:29.885
And just like the
Gaussian model,

00:06:29.885 --> 00:06:34.330
it doesn't make sense
beyond some point.

00:06:34.330 --> 00:06:40.650
Now mathematically,
it is clear to us

00:06:40.650 --> 00:06:46.600
that s is not equal
to s prime because

00:06:46.600 --> 00:06:53.220
of two important
reasons, one of which

00:06:53.220 --> 00:07:08.090
is obvious is multiple
occupation of a bond that

00:07:08.090 --> 00:07:13.290
is in the original sum
that I have up here.

00:07:13.290 --> 00:07:15.500
You can see that
the contribution

00:07:15.500 --> 00:07:19.430
of each point
connecting neighbors

00:07:19.430 --> 00:07:22.290
is either 1 or one factor of t.

00:07:22.290 --> 00:07:25.530
I cannot have more than that.

00:07:25.530 --> 00:07:30.310
But when I am
calculating phantom loops

00:07:30.310 --> 00:07:32.130
and I have
self-crossings, I have

00:07:32.130 --> 00:07:33.670
some things that are very trial.

00:07:33.670 --> 00:07:37.090
Like I can start and
go back on myself.

00:07:37.090 --> 00:07:39.150
That completes a walk.

00:07:39.150 --> 00:07:42.140
I can have things that
are more complicated.

00:07:42.140 --> 00:07:45.900
I could have a
diagram such as this

00:07:45.900 --> 00:07:51.980
that still involves
crossing something twice.

00:07:51.980 --> 00:07:58.540
Or something like this
is another example.

00:07:58.540 --> 00:08:04.320
Now all of these are
examples where I essentially

00:08:04.320 --> 00:08:09.780
continuously moved my chalk
and drew a closed loop.

00:08:09.780 --> 00:08:12.250
But also from the
exponentiation,

00:08:12.250 --> 00:08:14.430
I can also generate
things that have

00:08:14.430 --> 00:08:18.070
multiple loops, such as this
loop that does not intersect

00:08:18.070 --> 00:08:20.870
itself but may
happen to intersect

00:08:20.870 --> 00:08:24.970
on a bond with another loop.

00:08:24.970 --> 00:08:30.400
So it is partly the presence
of all of these things

00:08:30.400 --> 00:08:33.780
that allow multiple
occupation that ultimately

00:08:33.780 --> 00:08:35.740
leads to the instability.

00:08:40.710 --> 00:08:45.206
But I also hinted last time,
in response to a question,

00:08:45.206 --> 00:08:51.525
that there is another mistake
that is involved not when there

00:08:51.525 --> 00:08:56.505
is intersection at the bond,
but intersection at the site.

00:09:05.340 --> 00:09:07.470
This leads to over-counting.

00:09:16.000 --> 00:09:18.354
It's more subtle.

00:09:18.354 --> 00:09:21.722
Along the diagrams
that I have in s,

00:09:21.722 --> 00:09:25.260
we certainly complete
the good diagram

00:09:25.260 --> 00:09:33.350
such as this one where
I have from this side

00:09:33.350 --> 00:09:37.180
four bonds going out farther
than the usual bonds.

00:09:37.180 --> 00:09:40.030
So this is certainly OK.

00:09:40.030 --> 00:09:43.620
But when I want
to represent that

00:09:43.620 --> 00:09:46.610
in terms of blocks
on the lattice,

00:09:46.610 --> 00:09:48.460
I notice that I can
do the following.

00:09:48.460 --> 00:09:51.750
Let's say in all cases,
I start from here,

00:09:51.750 --> 00:09:59.240
I can start from there, I can
go and do something like this,

00:09:59.240 --> 00:10:02.260
and come back to
my starting point.

00:10:02.260 --> 00:10:13.070
Or I can do something like this,
and back to the starting point.

00:10:13.070 --> 00:10:18.300
Or I could have a
diagram that would appear

00:10:18.300 --> 00:10:23.090
at the second order in the
expansion of the exponential

00:10:23.090 --> 00:10:29.150
that I have that involves two
loops that would correspond

00:10:29.150 --> 00:10:32.210
to the same geometry.

00:10:32.210 --> 00:10:37.190
So this thing that should
have been counted once

00:10:37.190 --> 00:10:41.060
is really being
counted three times.

00:10:41.060 --> 00:10:45.950
And so that's a mistake
to be corrected.

00:10:45.950 --> 00:10:49.990
And actually, the reason
for this factor of three

00:10:49.990 --> 00:10:52.675
goes back to this
Gaussian model that I

00:10:52.675 --> 00:10:56.750
said that essentially
what amounts to is

00:10:56.750 --> 00:11:04.160
that we are replacing
Ising variables over here

00:11:04.160 --> 00:11:08.490
with these Gaussian
variables, s.

00:11:08.490 --> 00:11:12.810
And so we arrange things
such that the average of s

00:11:12.810 --> 00:11:17.440
squared was 1, so that
the sides were reproducing

00:11:17.440 --> 00:11:19.850
the things that I had before.

00:11:19.850 --> 00:11:21.490
But then for
something like this,

00:11:21.490 --> 00:11:25.630
I need to know the
average s to the fourth.

00:11:25.630 --> 00:11:27.690
And if you use
Wick's theorem, you

00:11:27.690 --> 00:11:30.205
can quickly see that the
average of s to the fourth

00:11:30.205 --> 00:11:32.640
is three times
average of s squared,

00:11:32.640 --> 00:11:34.700
so you get a factor of 3 here.

00:11:34.700 --> 00:11:37.740
That's the origin
of the factor of 3.

00:11:37.740 --> 00:11:44.880
And indeed, if you had gone and
done rather than one component,

00:11:44.880 --> 00:11:48.370
s, something that
was n component,

00:11:48.370 --> 00:11:54.830
you could convince yourself
that this becomes n plus 2.

00:11:54.830 --> 00:11:58.580
And that's consistent
whenever you

00:11:58.580 --> 00:12:03.250
see something that has a
loop having a factor of n,

00:12:03.250 --> 00:12:05.170
something that we
had seen in we were

00:12:05.170 --> 00:12:08.760
doing this
diagramatic expansion.

00:12:08.760 --> 00:12:12.030
OK, so that's a problem.

00:12:12.030 --> 00:12:15.020
So s is not equal to s prime.

00:12:17.830 --> 00:12:26.780
But I want to make the
following very nice assertion

00:12:26.780 --> 00:12:47.420
that s is indeed the sum
over multiple phantom loops,

00:12:47.420 --> 00:12:51.540
just like I had written
for s prime with a couple

00:12:51.540 --> 00:12:54.375
of important constraints.

00:12:54.375 --> 00:12:56.900
The constraints are--
maybe I should write them

00:12:56.900 --> 00:12:59.850
in red-- with no U-turns.

00:13:04.970 --> 00:13:08.790
That is, you are not going to
allow anything such as this

00:13:08.790 --> 00:13:14.200
or this when you
would go forward

00:13:14.200 --> 00:13:16.545
and then immediately
step backward.

00:13:16.545 --> 00:13:17.920
That's what I will
call a U-turn.

00:13:17.920 --> 00:13:20.888
No U-turn is allowed.

00:13:20.888 --> 00:13:27.710
And more importantly,
with a factor of minus 1

00:13:27.710 --> 00:13:36.000
to the number of crossings.

00:13:45.310 --> 00:13:48.630
So what do I mean by crossing?

00:13:48.630 --> 00:13:53.630
If you follow what I did
in drawing this diagram,

00:13:53.630 --> 00:13:55.470
you can see that
there was a path

00:13:55.470 --> 00:14:00.870
that I drew that never
crossed itself, whereas here I

00:14:00.870 --> 00:14:03.700
kind of had to jump
over where I was.

00:14:03.700 --> 00:14:06.280
I indicated that.

00:14:06.280 --> 00:14:10.550
So according to this
rule, this diagram

00:14:10.550 --> 00:14:13.190
will get a factor of minus.

00:14:13.190 --> 00:14:16.640
These two diagrams don't
have any self-crossings.

00:14:16.640 --> 00:14:18.970
They give factors of plus.

00:14:18.970 --> 00:14:22.800
And you can see that at
least this particular diagram

00:14:22.800 --> 00:14:24.800
is resolved.

00:14:24.800 --> 00:14:29.130
And you can see
that this continues

00:14:29.130 --> 00:14:31.725
to more complicated things.

00:14:31.725 --> 00:14:36.040
Let's say that I have a
perfectly good diagram that

00:14:36.040 --> 00:14:39.975
is something like this that
involves two crossings.

00:14:42.500 --> 00:14:48.390
And then I can break it
roughly into two process,

00:14:48.390 --> 00:14:53.340
and each piece I can decompose
as I had done before.

00:14:55.920 --> 00:15:09.460
Let's see, the left part I can
either do this without crossing

00:15:09.460 --> 00:15:21.270
or I could cross or I could have
this part as a separate loop

00:15:21.270 --> 00:15:22.160
from this half.

00:15:25.500 --> 00:15:29.655
And then I can join
it on the other side

00:15:29.655 --> 00:15:34.380
with essentially any one of
these things like this, which

00:15:34.380 --> 00:15:45.230
comes with a plus; this,
which comes with a minus;

00:15:45.230 --> 00:15:53.580
or this one that
comes with a plus.

00:15:53.580 --> 00:15:57.580
So you can see that
this particular diagram

00:15:57.580 --> 00:16:05.490
of s in s prime would arise
in nine possible ways.

00:16:05.490 --> 00:16:07.600
So I would have had
an over-counting

00:16:07.600 --> 00:16:13.020
by a factor of a three-paired
crossing or nine total,

00:16:13.020 --> 00:16:19.650
except that now when I
assign these factors,

00:16:19.650 --> 00:16:23.115
some of these diagrams will
come with minus, some of them

00:16:23.115 --> 00:16:24.450
will come with plus.

00:16:24.450 --> 00:16:28.210
But ultimately, only
one will survive.

00:16:28.210 --> 00:16:29.240
This is it.

00:16:29.240 --> 00:16:32.690
All of them survive, then the
net contribution is just 1,

00:16:32.690 --> 00:16:33.720
which is the correct on.

00:16:41.240 --> 00:16:41.840
Now let's see.

00:16:41.840 --> 00:16:55.270
So this removed problem B. so
this was problem B resolved.

00:16:55.270 --> 00:17:01.420
Let's see about our
problem A, which

00:17:01.420 --> 00:17:05.940
had to do with
multiple occupation

00:17:05.940 --> 00:17:09.060
of the particular bond.

00:17:09.060 --> 00:17:13.670
So these are diagrams that
will appear in s prime

00:17:13.670 --> 00:17:18.385
that have no counterpart in s.

00:17:18.385 --> 00:17:21.990
That is, let's say
there is this bond that

00:17:21.990 --> 00:17:26.370
is occupied twice,
so that would be

00:17:26.370 --> 00:17:29.890
a contribution by a
factor of t squared.

00:17:29.890 --> 00:17:33.560
And then this part can go
and join whatever it wants.

00:17:33.560 --> 00:17:36.390
This part can go and
do whatever it wants.

00:17:39.370 --> 00:17:44.770
The point is that for
every diagram such as this,

00:17:44.770 --> 00:17:49.670
I can construct a diagram
where I leave everything out

00:17:49.670 --> 00:17:55.500
here exactly as it
was, everything out

00:17:55.500 --> 00:18:00.310
here exactly as it was,
except that the two terminals

00:18:00.310 --> 00:18:02.820
that I'll have to the
left and the two terminals

00:18:02.820 --> 00:18:07.070
that I have to the right of the
bond, rather than joining them

00:18:07.070 --> 00:18:10.850
this way, I'll join
them like this.

00:18:14.580 --> 00:18:18.930
So this complicated diagram, as
far as this bond is concerned,

00:18:18.930 --> 00:18:27.160
I can prescribe in two different
ways using graphs of s prime.

00:18:27.160 --> 00:18:29.910
And one of them with
respect to the other

00:18:29.910 --> 00:18:33.150
has an additional
factor of minus 1,

00:18:33.150 --> 00:18:36.730
and so they give me this 0.

00:18:36.730 --> 00:18:41.070
And you can convince yourself
that the same construction will

00:18:41.070 --> 00:18:45.430
hold if I have three terminals,
four terminals-- it doesn't

00:18:45.430 --> 00:18:45.930
matter.

00:18:45.930 --> 00:18:50.470
I will do it for one
pair and it will be OK.

00:18:50.470 --> 00:18:53.950
The only time that I
wouldn't have been able to

00:18:53.950 --> 00:18:57.440
is if I have to terminals
on one side and one terminal

00:18:57.440 --> 00:19:02.450
on the other side,
which is these guys.

00:19:02.450 --> 00:19:05.850
And that's what I
said no U-turns.

00:19:05.850 --> 00:19:08.820
So now that's taken
care of first.

00:19:08.820 --> 00:19:11.620
So this problem A is
now also resolved.

00:19:15.270 --> 00:19:18.580
So what do we have?

00:19:18.580 --> 00:19:25.900
We have now established that
s-- let me just get a 0.

00:19:25.900 --> 00:19:45.550
Let's define this loop star to
be the loops with no U-turns

00:19:45.550 --> 00:19:49.840
and minus 1 to the
number of crossings.

00:19:49.840 --> 00:19:53.470
So this star is
going to symbolize

00:19:53.470 --> 00:19:58.100
that these two constraints
of no U-turns and minus 1

00:19:58.100 --> 00:20:00.630
to the power of
number of crossings

00:20:00.630 --> 00:20:04.880
are imposed in construction and
calculation of the contribution

00:20:04.880 --> 00:20:07.390
of these objects.

00:20:07.390 --> 00:20:09.650
So then what do I have?

00:20:09.650 --> 00:20:16.760
I have that s is-- well,
there's possibility of no loop.

00:20:16.760 --> 00:20:19.410
There is the one loop graphs.

00:20:19.410 --> 00:20:21.190
There's the two
loops star graphs.

00:20:21.190 --> 00:20:24.770
My little loop star graphs.

00:20:24.770 --> 00:20:28.680
And just as in the
case of s prime,

00:20:28.680 --> 00:20:37.095
I can exponentiate this as
the sum of all one stars.

00:20:40.010 --> 00:20:42.960
And you may wonder
what happens when

00:20:42.960 --> 00:20:45.350
I go to higher order terms.

00:20:45.350 --> 00:20:47.545
In higher order
terms, potentially I

00:20:47.545 --> 00:20:50.870
will generate two
of these things that

00:20:50.870 --> 00:20:55.270
cross when I go to
a second order term.

00:20:55.270 --> 00:20:59.190
But then any intersection
will involve two, four,

00:20:59.190 --> 00:21:00.840
and even number.

00:21:00.840 --> 00:21:02.950
Minus 1 to an even
number is one,

00:21:02.950 --> 00:21:07.230
so there is really no
additional interaction

00:21:07.230 --> 00:21:13.240
to worry about if multiple
things are crossing each other.

00:21:19.750 --> 00:21:25.190
So we could exponentiate that
s of t that we have over there.

00:21:25.190 --> 00:21:27.430
We are interested
in taking the log

00:21:27.430 --> 00:21:30.670
of the expression for
the partition function.

00:21:30.670 --> 00:21:39.270
I will do the factor of n log
2 hyperbolic cosine squared,

00:21:39.270 --> 00:21:43.490
because there are essentially
two bonds per side.

00:21:43.490 --> 00:21:52.393
And then I have a sum
over these loop stars.

00:22:01.110 --> 00:22:03.260
Essentially, I took the
log of the expression

00:22:03.260 --> 00:22:04.160
that I had before.

00:22:07.370 --> 00:22:11.440
Now this sum-- well,
let's sort of take

00:22:11.440 --> 00:22:14.422
care of this factor of n.

00:22:14.422 --> 00:22:17.640
So I divide by n.

00:22:17.640 --> 00:22:23.966
Log z divided by n is log of 2
hyperbolic cosines [INAUDIBLE]

00:22:23.966 --> 00:22:31.720
k plus-- well, the way to
get rid of the factor of n

00:22:31.720 --> 00:22:36.500
in this sum is to fix
one point of this loop

00:22:36.500 --> 00:22:40.710
so that it doesn't go
all over the place.

00:22:40.710 --> 00:22:50.330
So let's say that I
have the number of loops

00:22:50.330 --> 00:22:54.630
that start and
end at the origin.

00:22:54.630 --> 00:22:59.740
I would have to sum over
the length of those loops,

00:22:59.740 --> 00:23:04.630
and those things will give
me a factor of t to the l.

00:23:04.630 --> 00:23:22.340
So I have defined this n star
of l to be number of loop stars

00:23:22.340 --> 00:23:28.126
from 0 to 0 in l steps.

00:23:34.610 --> 00:23:37.070
So in place of this--
actually, maybe

00:23:37.070 --> 00:23:43.170
I will emphasize it's minus
1 to the number of crossings

00:23:43.170 --> 00:23:44.505
and no U-turns.

00:23:50.010 --> 00:23:55.860
Now gain, so what I have
is my entire lattice.

00:23:58.490 --> 00:24:04.960
Let's say I have in loop
that is of length 4.

00:24:04.960 --> 00:24:12.030
And now I have forced it to
start and end at the origin

00:24:12.030 --> 00:24:17.590
so that I can put
out this factor of n.

00:24:17.590 --> 00:24:21.810
But then I realized that I
could have over-counted this

00:24:21.810 --> 00:24:28.670
because this loop could have
been started from here, here,

00:24:28.670 --> 00:24:32.810
here, here and
translated to the origin.

00:24:32.810 --> 00:24:36.280
So just as we saw for the
case of the random walk loops

00:24:36.280 --> 00:24:43.960
before, there is this
factor of l to correct.

00:24:43.960 --> 00:24:45.830
And then I'm
talking about walks,

00:24:45.830 --> 00:24:50.070
I can either go clockwise
or counterclockwise,

00:24:50.070 --> 00:24:56.110
so I have to divide by a
factor of 2 to get rid of that.

00:25:00.759 --> 00:25:01.550
AUDIENCE: Question?

00:25:01.550 --> 00:25:03.200
PROFESSOR: Yes?

00:25:03.200 --> 00:25:05.632
AUDIENCE: So what
happens if you have when

00:25:05.632 --> 00:25:07.090
you're doing your
exponential loops

00:25:07.090 --> 00:25:09.465
and we have one loop
nested inside another loop

00:25:09.465 --> 00:25:11.340
that you're multiplying
together so that they

00:25:11.340 --> 00:25:12.630
share one of their edges.

00:25:12.630 --> 00:25:15.500
It seems like then they
don't have to cross twice,

00:25:15.500 --> 00:25:19.770
and so you would still need
something to cancel them out.

00:25:19.770 --> 00:25:23.930
PROFESSOR: OK, I should
have maybe explained

00:25:23.930 --> 00:25:26.060
that graph a little bit more.

00:25:26.060 --> 00:25:30.730
But let's do it over here.

00:25:30.730 --> 00:25:40.660
So when I exponentiate s--
what am I calling it?--

00:25:40.660 --> 00:25:47.630
s sum of the loops, among the
terms that I will generate will

00:25:47.630 --> 00:25:50.940
certainly be
something like this.

00:25:50.940 --> 00:25:55.800
And then you say this one is
shared between the two of them.

00:25:55.800 --> 00:25:58.970
At the level of one
loop graphs, there

00:25:58.970 --> 00:26:02.090
was a one-loop object
that went like this.

00:26:09.040 --> 00:26:12.530
So the statement
that I made here

00:26:12.530 --> 00:26:17.140
does not necessarily map the
number of loops to each other,

00:26:17.140 --> 00:26:19.665
but it is correct,
and the cancellation

00:26:19.665 --> 00:26:21.497
occurs at the level of one.

00:26:29.980 --> 00:26:33.320
And actually, I should
have also indicated

00:26:33.320 --> 00:26:34.880
what's happening
with the other graph

00:26:34.880 --> 00:26:40.320
that I have up there
because I have this graph.

00:26:40.320 --> 00:26:44.250
So that's a one-loop graph,
that cancels against this graph.

00:26:50.870 --> 00:26:56.030
So whatever you do, you can just
follow the rule that I gave you

00:26:56.030 --> 00:26:58.556
and ensure that the
cancellation works, of course.

00:26:58.556 --> 00:26:59.410
So Thank.

00:26:59.410 --> 00:27:00.320
You.

00:27:00.320 --> 00:27:02.360
I wanted to say this
and I had forgot.

00:27:08.350 --> 00:27:09.860
OK, any other questions?

00:27:16.570 --> 00:27:24.700
OK, so essentially we are back
to some extent of the formula

00:27:24.700 --> 00:27:28.620
that I had for
ordinary random walks.

00:27:28.620 --> 00:27:35.810
And phantom loops these
are partly phantom loops,

00:27:35.810 --> 00:27:42.080
but I have to take care
of something like this.

00:27:42.080 --> 00:27:46.580
What did I go originally
last lecture, rather than

00:27:46.580 --> 00:27:50.800
my ordinary graphs to
these phantom loops?

00:27:50.800 --> 00:27:53.640
The reason was that
for a phantom loops,

00:27:53.640 --> 00:27:57.060
I said that I had this
Markovian condition.

00:27:57.060 --> 00:28:01.250
I could relate l step walks
to l minus 1 step walks

00:28:01.250 --> 00:28:04.530
because there was no memory.

00:28:04.530 --> 00:28:08.330
I didn't have to know
where I had crossed before.

00:28:08.330 --> 00:28:11.535
But it seems that in order
to give a correct date

00:28:11.535 --> 00:28:14.940
to these new loops,
I have to know

00:28:14.940 --> 00:28:16.800
how many times I cross myself.

00:28:20.880 --> 00:28:25.050
And c by itself is a
non-Markovian thing.

00:28:25.050 --> 00:28:28.350
It requires memory.

00:28:28.350 --> 00:28:31.270
Expect that I don't need any c.

00:28:31.270 --> 00:28:36.080
I need only the parity of
the number of crossings.

00:28:36.080 --> 00:28:40.410
And here is where there's a
beautiful mathematical theorem

00:28:40.410 --> 00:28:46.305
that tells us here in
this memory-like problem

00:28:46.305 --> 00:28:49.310
for something that is Markovian.

00:28:49.310 --> 00:29:01.700
And the statement is a
theorem of Whitney's which

00:29:01.700 --> 00:29:05.330
states that the
parity of a planar

00:29:05.330 --> 00:29:07.430
loop-- the thing
that I've done here--

00:29:07.430 --> 00:29:09.160
whether it's even or odd.

00:29:20.010 --> 00:29:23.550
Parity of the
number of crossings

00:29:23.550 --> 00:29:40.990
is related to the total angle
through which the tangent

00:29:40.990 --> 00:29:49.710
vector turns by the following.

00:29:52.920 --> 00:30:00.280
In C mod 2, which is the
parity of the crossings,

00:30:00.280 --> 00:30:06.300
is 1 plus this
total angle that I

00:30:06.300 --> 00:30:09.926
will call theta
divided by 2 pi mod 2.

00:30:18.870 --> 00:30:23.700
So I'm not going to
give a proof of this,

00:30:23.700 --> 00:30:27.710
but I will show you examples to
make sure you understand what's

00:30:27.710 --> 00:30:35.000
happening by, let's say,
comparing the following two

00:30:35.000 --> 00:30:47.020
graphs, one of which has no
crossing and another one which

00:30:47.020 --> 00:30:52.720
is essentially the same
thing but has a crossing.

00:30:52.720 --> 00:31:06.540
So basically I put
an arrow so that I

00:31:06.540 --> 00:31:11.750
can follow where the
orientation of the bond, which

00:31:11.750 --> 00:31:16.180
is the location of this
tangent s, as I step.

00:31:16.180 --> 00:31:20.950
Let's say from the origin, this
is the first step, second step,

00:31:20.950 --> 00:31:25.450
third step, fourth step,
so on and so forth.

00:31:25.450 --> 00:31:28.830
So let's do this
for the upper graph.

00:31:28.830 --> 00:31:33.710
And what I will do is
I will plot the angle.

00:31:36.290 --> 00:31:44.360
And the first step here, I start
at 0 degrees pointing this way.

00:31:44.360 --> 00:31:47.960
So this is my step number one.

00:31:47.960 --> 00:31:51.200
At the next, I have
gone to 90 degrees,

00:31:51.200 --> 00:31:53.340
so this is where I go to.

00:31:53.340 --> 00:31:57.490
At three, I'm back
to pointing along

00:31:57.490 --> 00:31:59.770
the horizon in the direction.

00:31:59.770 --> 00:32:04.150
At four, I have
gone back up here.

00:32:04.150 --> 00:32:10.462
At five, I go to 180 degrees.

00:32:10.462 --> 00:32:15.676
At six, I go all the way down.

00:32:15.676 --> 00:32:27.080
At seven, I go back
to this horizontal.

00:32:27.080 --> 00:32:32.260
At eight, I go back
to pointing down.

00:32:32.260 --> 00:32:33.720
And then I'm back to one.

00:32:37.150 --> 00:32:39.940
So if you follow what
that tangent is doing,

00:32:39.940 --> 00:32:43.410
it's going woop, woop.

00:32:43.410 --> 00:32:47.260
At the end of the day, it
has turned through 3 pi.

00:32:47.260 --> 00:32:51.395
So in this case, the
total turn is 2 pi.

00:32:54.480 --> 00:32:59.060
1 plus the total turn
divided by 2 pi in this case

00:32:59.060 --> 00:33:05.440
is 1 plus 2 pi over 2
pi, which is 2-- mod

00:33:05.440 --> 00:33:10.630
2 which is the same thing as 0.

00:33:10.630 --> 00:33:13.985
And of course, how many times
has this thing crossed itself?

00:33:13.985 --> 00:33:16.316
Zero times.

00:33:16.316 --> 00:33:18.480
So let's see how
it works if you go

00:33:18.480 --> 00:33:26.490
to apply the same set of
rules to this other one.

00:33:26.490 --> 00:33:33.960
So again, one, two, three,
four, five, six, seven, eight

00:33:33.960 --> 00:33:36.290
are my steps.

00:33:36.290 --> 00:33:42.610
One is pointing in the
horizontal direction.

00:33:42.610 --> 00:33:46.250
Two goes vertical
just as before.

00:33:46.250 --> 00:33:50.250
Three stays the same
place, so two and three

00:33:50.250 --> 00:33:52.320
are at the same point.

00:33:52.320 --> 00:33:54.045
Four, I go back to horizontal.

00:33:56.700 --> 00:34:03.290
Five, I go down to
minus 90 degrees.

00:34:03.290 --> 00:34:08.400
Six, I go all the
way to 180 degrees

00:34:08.400 --> 00:34:10.920
and stay there at seven.

00:34:10.920 --> 00:34:14.719
Eight, I go back to
minus 90 degrees,

00:34:14.719 --> 00:34:17.340
and then rejoin the origin.

00:34:17.340 --> 00:34:25.750
So this goes up, down, back,
never completes a full turn.

00:34:25.750 --> 00:34:30.010
So in this case, theta is 0.

00:34:30.010 --> 00:34:36.989
1 plus theta over 2 pi
is 1, and the number

00:34:36.989 --> 00:34:41.000
of crossings of his graph is 1.

00:34:41.000 --> 00:34:44.090
So you can go and repeat
this for any graph

00:34:44.090 --> 00:34:48.380
that you like and convince
yourself that this rule works.

00:34:54.100 --> 00:34:59.000
Well, how does that help us?

00:34:59.000 --> 00:35:01.280
Well, the diagrams
that I have drawn here

00:35:01.280 --> 00:35:05.000
already tells you
how it helps us

00:35:05.000 --> 00:35:10.800
because in order to
find the total angle,

00:35:10.800 --> 00:35:16.280
all I need to do is to keep
track of local changes.

00:35:16.280 --> 00:35:19.340
So essentially, as I go
along, I carry a bag with me

00:35:19.340 --> 00:35:23.890
which adds the changing
angle at every step.

00:35:23.890 --> 00:35:29.250
I don't need to know where
I was 100 steps before.

00:35:29.250 --> 00:35:32.810
I just add another
changing angle.

00:35:32.810 --> 00:35:36.430
By the time I get
to the last stop,

00:35:36.430 --> 00:35:40.800
I figure out what my total
angle is, and then I'm done.

00:35:44.870 --> 00:35:46.020
AUDIENCE: Yes?

00:35:46.020 --> 00:35:48.240
So is it really the
total angle that

00:35:48.240 --> 00:35:50.520
matters, or is it more
just the number of circles

00:35:50.520 --> 00:35:52.282
that you complete or not?

00:35:52.282 --> 00:35:53.740
PROFESSOR: They
are the same thing.

00:35:53.740 --> 00:35:57.140
So if you prefer
to say it in terms

00:35:57.140 --> 00:36:04.000
of the entanglement of your loop
and the point at the origin,

00:36:04.000 --> 00:36:06.770
that's another way of saying it.

00:36:06.770 --> 00:36:12.050
This entity divided by 2
pi is a topological number,

00:36:12.050 --> 00:36:14.251
which counts essentially
the number of times

00:36:14.251 --> 00:36:15.584
you have gone around the origin.

00:36:31.870 --> 00:36:38.530
So what I'm saying is that minus
1 to the power of the number

00:36:38.530 --> 00:36:44.090
of crossings-- this factor
that I was after-- I can write

00:36:44.090 --> 00:36:50.030
as e to the i pi times
the number of crossings.

00:36:50.030 --> 00:36:53.000
And it is evident that the
only thing that is important

00:36:53.000 --> 00:36:58.300
here is the parity, so I
can replace into the i pi

00:36:58.300 --> 00:37:02.830
the number of crossings with 1
plus this total angle divided

00:37:02.830 --> 00:37:03.590
by 2 pi.

00:37:06.190 --> 00:37:08.440
Which means I have
e to the i pi, which

00:37:08.440 --> 00:37:11.110
is a factor of minus 1.

00:37:11.110 --> 00:37:17.850
And then I have e to
the i theta over 2.

00:37:17.850 --> 00:37:23.020
And my statement is that
this is the same thing as e

00:37:23.020 --> 00:37:30.530
to the i over 2, sum over the
little bits of change of angle

00:37:30.530 --> 00:37:33.154
that people have as
you go along there.

00:37:38.455 --> 00:37:47.510
So what I have to do
is as I am walking

00:37:47.510 --> 00:37:51.240
around this square
lattice, I better

00:37:51.240 --> 00:37:53.820
keep track of
which direction I'm

00:37:53.820 --> 00:37:59.040
pointing so that I know from
one step to the next step

00:37:59.040 --> 00:38:01.690
whether I change by 0
degrees, 90 degrees,

00:38:01.690 --> 00:38:04.260
minus 90 degrees, et cetera.

00:38:04.260 --> 00:38:05.940
So what do I do?

00:38:05.940 --> 00:38:07.325
I define a convention.

00:38:13.600 --> 00:38:24.125
So we are going to introduce
orientation mu of step

00:38:24.125 --> 00:38:25.220
as follows.

00:38:28.050 --> 00:38:32.870
So let's say I'm at some
point on the lattice i.

00:38:32.870 --> 00:38:36.605
Then I can increase the particle
c along one of four directions.

00:38:39.150 --> 00:38:43.700
And I'm going to
label them by mu

00:38:43.700 --> 00:38:47.936
being equal to 1, 2, 3, or 4.

00:38:47.936 --> 00:38:51.150
You can choose any
notation you want.

00:38:51.150 --> 00:38:52.870
This will be the
notation I will use.

00:39:00.490 --> 00:39:06.700
Secondly, I'm going to introduce
the analog of the quantity

00:39:06.700 --> 00:39:11.140
that we had for the phantom
random box, which was I

00:39:11.140 --> 00:39:15.550
introduced a set of
matrices that were counting

00:39:15.550 --> 00:39:19.480
how many base I can
go from one side

00:39:19.480 --> 00:39:23.550
to another side in l steps.

00:39:23.550 --> 00:39:30.320
So I will introduce
the following notation.

00:39:30.320 --> 00:39:34.620
Something that involves the
starred box that involves l

00:39:34.620 --> 00:39:36.720
steps.

00:39:36.720 --> 00:39:40.900
And I say that I start
at some point xy and I

00:39:40.900 --> 00:39:44.085
end at some other
point x prime y prime.

00:39:44.085 --> 00:39:46.380
So again, just
counting how many ways

00:39:46.380 --> 00:39:49.550
I can go from one
to another point.

00:39:49.550 --> 00:39:53.342
Except that I also want to keep
track of these orientations.

00:39:57.680 --> 00:40:01.460
So this quantity is
defined as follows.

00:40:01.460 --> 00:40:21.310
It is the sum over random
walks that start at xy along m.

00:40:21.310 --> 00:40:24.710
That is, if this
is my point, xy,

00:40:24.710 --> 00:40:27.490
and I'm looking at the
second element of this,

00:40:27.490 --> 00:40:30.570
the next step I have to go up.

00:40:30.570 --> 00:40:34.180
If I have specified
that mu equals to 1,

00:40:34.180 --> 00:40:38.340
it means that the first step
I have to go to the right.

00:40:38.340 --> 00:40:41.410
OK, as I go further
on the lattice,

00:40:41.410 --> 00:40:47.040
I ensure that I never
have any U-turns,

00:40:47.040 --> 00:40:55.360
and I keep track
of the factors of e

00:40:55.360 --> 00:41:02.910
to the i theta that changes as
I take one step to the next step

00:41:02.910 --> 00:41:06.490
so that if I took my first
step here and then next

00:41:06.490 --> 00:41:09.410
if I continued here,
there would be no factor.

00:41:09.410 --> 00:41:16.550
But if I went up, I would have
a factor of e to the i pi 4.

00:41:16.550 --> 00:41:19.710
So I keep track
of those factors.

00:41:19.710 --> 00:41:26.480
And then I want to
end at x prime y prime

00:41:26.480 --> 00:41:30.370
and head along mu prime.

00:41:33.390 --> 00:41:40.020
Since I specified that
my first step will then

00:41:40.020 --> 00:41:44.430
go along mu, when I
reach the last step,

00:41:44.430 --> 00:41:47.060
I already know
where I came from.

00:41:47.060 --> 00:41:49.470
But depending on
which direction I

00:41:49.470 --> 00:41:54.340
specify I would turn to
and head for my next step,

00:41:54.340 --> 00:41:56.790
I will get the changing angle.

00:41:56.790 --> 00:42:02.510
So I have to include the
changing angle somewhere so

00:42:02.510 --> 00:42:05.170
that there are l
changes in angle

00:42:05.170 --> 00:42:06.970
so the way that I
have defined it,

00:42:06.970 --> 00:42:08.690
it will be essentially
keeping track

00:42:08.690 --> 00:42:10.690
of where the next
step is headed to.

00:42:13.420 --> 00:42:17.150
So again, if I were
to draw a diagram,

00:42:17.150 --> 00:42:21.900
I'll start with
this xy point, and I

00:42:21.900 --> 00:42:24.180
want to arrive at
some point here--

00:42:24.180 --> 00:42:25.860
let's say x prime y prime.

00:42:28.680 --> 00:42:32.030
And I want to do in l steps.

00:42:32.030 --> 00:42:35.180
And the first step, I
go along the direction

00:42:35.180 --> 00:42:37.800
that is specified by mu.

00:42:37.800 --> 00:42:47.750
So this is step 1, and there's
the 2, 3, 4, 5, 6, 7, 8, 9, 10.

00:42:47.750 --> 00:42:51.980
Let's see, the last one-- so
this would step l minus 1.

00:42:51.980 --> 00:42:57.200
This is the last step, arrives
me at point x prime y prime.

00:42:57.200 --> 00:43:02.320
But then I have to specify what
is the direction of mu prime

00:43:02.320 --> 00:43:06.120
so that I keep track of the
appropriate change of angle

00:43:06.120 --> 00:43:09.370
that I have to do
over here as well.

00:43:09.370 --> 00:43:11.220
So this is the procedure.

00:43:20.690 --> 00:43:25.930
Now this walk, this quantity
that I have defined for you

00:43:25.930 --> 00:43:31.070
here, has the Markovian
property in that

00:43:31.070 --> 00:43:36.870
if I arrive at this
point after l steps,

00:43:36.870 --> 00:43:42.620
then after l minus one
steps, I was at one point--

00:43:42.620 --> 00:43:46.630
x double prime, y double
prime-- from which

00:43:46.630 --> 00:43:52.360
I took one step along some
direction-- mu double prime--

00:43:52.360 --> 00:43:54.670
and arrived at this.

00:43:54.670 --> 00:44:03.120
So I can write that I have to
sum over all possible locations

00:44:03.120 --> 00:44:08.530
and orientations of
the before [INAUDIBLE].

00:44:08.530 --> 00:44:12.620
I start from the point
xy, proceed along

00:44:12.620 --> 00:44:20.850
direction mu for a total
of l minus 1 steps,

00:44:20.850 --> 00:44:26.740
landing on x double
prime y double prime,

00:44:26.740 --> 00:44:29.760
and then going in direction
to mu double prime.

00:44:32.340 --> 00:44:35.810
So then I have a walk that
started at x double prime,

00:44:35.810 --> 00:44:38.520
y double prime along
the direction in double

00:44:38.520 --> 00:44:46.260
prime, which is one step has
to get me to my destination.

00:44:46.260 --> 00:44:48.640
And once I am at
the destination,

00:44:48.640 --> 00:44:50.496
I head along the
direction in prime.

00:44:56.730 --> 00:45:03.170
So this is clearly
a matrix, a product.

00:45:03.170 --> 00:45:06.970
And what I have established
is this matrix, w star

00:45:06.970 --> 00:45:12.110
of l-- which, by the way,
is a 4n by 4n matrix,

00:45:12.110 --> 00:45:14.550
because our n points
and 4 orientation,

00:45:14.550 --> 00:45:19.180
so it's 4n by 4n matrix--
and I have established

00:45:19.180 --> 00:45:23.010
that that is the product
of the matrix that I have

00:45:23.010 --> 00:45:26.790
for one step, and the
product of the matrix that I

00:45:26.790 --> 00:45:30.940
have for l minus 1 step.

00:45:30.940 --> 00:45:40.030
And this object that I will
call t star essentially tells me

00:45:40.030 --> 00:45:44.520
something about the combined
connectivity orientation

00:45:44.520 --> 00:45:47.770
that I have for square lattice.

00:45:47.770 --> 00:45:50.670
And since I can repeat
this many times,

00:45:50.670 --> 00:45:55.745
I can see that I have the result
that I want, that w star of l

00:45:55.745 --> 00:45:59.108
is simply t star raised
to the power of l.

00:46:36.970 --> 00:46:39.672
Questions?

00:46:39.672 --> 00:46:40.658
Yes?

00:46:40.658 --> 00:46:43.100
AUDIENCE: Have we accounted
for loops that [INAUDIBLE]

00:46:43.100 --> 00:46:45.016
we have the square loop
of four steps and then

00:46:45.016 --> 00:46:47.992
the same square loop of
eight steps that are exactly

00:46:47.992 --> 00:46:49.480
on top of the four-step one?

00:46:52.470 --> 00:46:58.334
PROFESSOR: OK, so you want me
to take this and do it again?

00:46:58.334 --> 00:46:59.650
AUDIENCE: Yeah.

00:46:59.650 --> 00:47:01.710
PROFESSOR: OK, so
I can certainly

00:47:01.710 --> 00:47:03.754
do something like this.

00:47:07.466 --> 00:47:08.860
AUDIENCE: I see.

00:47:08.860 --> 00:47:11.020
PROFESSOR: And of course,
I can do the same thing

00:47:11.020 --> 00:47:15.505
over any of the bonds, but
they are always [INAUDIBLE].

00:47:20.550 --> 00:47:21.504
Yes?

00:47:21.504 --> 00:47:23.682
AUDIENCE: Doesn't
[INAUDIBLE] become kind

00:47:23.682 --> 00:47:28.090
of like transfer
matrix [INAUDIBLE]?

00:47:28.090 --> 00:47:30.030
PROFESSOR: No.

00:47:30.030 --> 00:47:32.990
It will reproduce the
result that Onsager had,

00:47:32.990 --> 00:47:37.110
but the transfer
matrix that Onsager had

00:47:37.110 --> 00:47:42.720
was it essentially going
from column to column.

00:47:42.720 --> 00:47:46.580
Its size was 2 to the
n times 2 to the n.

00:47:46.580 --> 00:47:48.585
This is 4n by 4n.

00:47:48.585 --> 00:47:52.396
It is vastly smaller
matrix that I have to do.

00:48:08.710 --> 00:48:14.630
All right, so maybe
we should just

00:48:14.630 --> 00:48:18.500
write down what this
matrix t star is.

00:48:18.500 --> 00:48:24.810
So t star, I said, is
this 4n by 4n matrix

00:48:24.810 --> 00:48:28.520
that tells me how
going from some side

00:48:28.520 --> 00:48:35.270
xy I arrive at some other
side x prime y prime.

00:48:35.270 --> 00:48:39.410
But it also has
orientation information.

00:48:39.410 --> 00:48:45.340
So really, I should have
four of these for this,

00:48:45.340 --> 00:48:46.840
and four of these for this.

00:48:46.840 --> 00:48:50.590
So it's actually a 4
by 4 matrix that I have

00:48:50.590 --> 00:48:54.010
once I keep track
of orientations.

00:48:54.010 --> 00:48:57.620
So let me write down the
4 by 4 matrix explicitly.

00:49:02.290 --> 00:49:07.100
So here we have
in mu, and this mu

00:49:07.100 --> 00:49:13.630
could be one, two, three, four--
which, again, specifically I

00:49:13.630 --> 00:49:18.450
have indicated as this,
this, this, and this.

00:49:20.980 --> 00:49:25.570
And along the other direction,
I can arrive at mu prime.

00:49:25.570 --> 00:49:27.820
Once I have arrived
at the mu prime,

00:49:27.820 --> 00:49:33.620
I can either go forward,
up, left, or down.

00:49:38.590 --> 00:49:45.140
So essentially what
this says is start

00:49:45.140 --> 00:49:52.860
with a side xy, head in
the horizontal direction.

00:49:52.860 --> 00:49:57.270
Since this is a one-step
walk, after one step

00:49:57.270 --> 00:50:00.460
I will be arriving
at some other point.

00:50:00.460 --> 00:50:05.320
Once you arrive at that next
point, continue to [INAUDIBLE].

00:50:08.550 --> 00:50:17.140
The next element says head
to the right and then go up.

00:50:17.140 --> 00:50:21.060
The next element
says go to the right

00:50:21.060 --> 00:50:24.750
and then start to the back.

00:50:24.750 --> 00:50:28.660
The next element says go to
the right and then go down.

00:50:31.170 --> 00:50:34.420
Now we can construct
the rest of them.

00:50:34.420 --> 00:50:55.160
Up, right, up, up, up, left,
up, down, left, right, left, up,

00:50:55.160 --> 00:50:59.980
left, left, left, down.

00:50:59.980 --> 00:51:12.920
Lastly, down, right, down,
up, down, left, down, down.

00:51:12.920 --> 00:51:16.930
So you do your
aerobic exercises,

00:51:16.930 --> 00:51:24.880
and then in next stage is to
actually write down the numbers

00:51:24.880 --> 00:51:27.550
that these correspond to.

00:51:27.550 --> 00:51:31.970
So first of all, you can
see that-- I'm not sure

00:51:31.970 --> 00:51:33.700
whether I will
have enough space,

00:51:33.700 --> 00:51:40.570
but let's hope that I do--
that in this first row

00:51:40.570 --> 00:51:46.900
of this matrix, your first
step was always to the right.

00:51:46.900 --> 00:51:52.120
So always, you will start from
x and you end up at x plus 1

00:51:52.120 --> 00:51:54.140
while y does not change.

00:51:54.140 --> 00:51:59.350
So I will indicate that
by x plus 1-- actually,

00:51:59.350 --> 00:52:00.380
what should I write it?

00:52:04.070 --> 00:52:06.450
Yeah, x prime, y prime.

00:52:06.450 --> 00:52:09.830
x prime has to be x plus 1.

00:52:09.830 --> 00:52:12.320
y prime has to be y.

00:52:12.320 --> 00:52:14.400
So I'll have to
introduce the notation

00:52:14.400 --> 00:52:21.650
that x prime y prime xy
means theta x x prime delta y

00:52:21.650 --> 00:52:23.116
y prime.

00:52:23.116 --> 00:52:29.630
So essentially, you just
read off for x prime, y prime

00:52:29.630 --> 00:52:32.420
what the new points have to be.

00:52:32.420 --> 00:52:33.660
And I proceed forward.

00:52:33.660 --> 00:52:35.920
There's no change in face.

00:52:35.920 --> 00:52:38.440
The next one, I arrive
at the same point,

00:52:38.440 --> 00:52:45.000
so x prime y prime
is x plus 1 y.

00:52:45.000 --> 00:52:49.340
But now my tangent
vector, my heading

00:52:49.340 --> 00:52:55.220
has shifted by 90 degrees, so
I have to put a factor of e

00:52:55.220 --> 00:52:57.450
to the i pi over 4.

00:53:00.650 --> 00:53:04.550
The next one, I try
to go back, but I've

00:53:04.550 --> 00:53:11.130
said U-turns are not allowed,
so this matrix element is 0.

00:53:11.130 --> 00:53:18.900
The next matrix element, I have
x prime y prime x plus 1 y.

00:53:18.900 --> 00:53:23.150
Now I have pinned it down,
so minus 90 degrees--

00:53:23.150 --> 00:53:26.154
the changing angle--
is minus i pi over 4.

00:53:30.450 --> 00:53:34.600
The second column, you
can see that essentially

00:53:34.600 --> 00:53:39.450
the y-coordinate has to
change by 1, increase by 1.

00:53:39.450 --> 00:53:45.810
So I have x prime, y
prime being xy plus 1.

00:53:45.810 --> 00:53:48.350
And this element has
a change of angle

00:53:48.350 --> 00:53:50.590
that corresponds to
the minus 90 degrees,

00:53:50.590 --> 00:53:55.360
so this is e to the
minus 5 pi over 4.

00:53:55.360 --> 00:53:59.330
The diagonal element
continues to head straight,

00:53:59.330 --> 00:54:01.800
so there was no phase
angle associated with that.

00:54:04.700 --> 00:54:08.680
The third element heads
in the opposite direction,

00:54:08.680 --> 00:54:17.240
so the phase element for that
is e to the minus i pi over 4.

00:54:17.240 --> 00:54:22.120
The fourth element is a
U-turn, so it will be 0.

00:54:22.120 --> 00:54:26.330
The third column starts
with a U-turn, which is a 0.

00:54:26.330 --> 00:54:29.930
The next one, you can see
I have to step to the left,

00:54:29.930 --> 00:54:36.570
so x prime has to become x
minus 1 while y does not change.

00:54:36.570 --> 00:54:40.660
The phase factor is e to
the minus i pi over 4.

00:54:40.660 --> 00:54:43.215
Along with diagonal,
there is no phase factor.

00:54:46.060 --> 00:54:52.290
And if I already had one
e to the minus i over 4,

00:54:52.290 --> 00:54:57.130
I should have e to the i
pi over 4 for the last one.

00:54:57.130 --> 00:55:02.440
And the last element corresponds
to y decreasing by 1.

00:55:02.440 --> 00:55:07.930
So I start with x prime,
y prime in xy minus 1.

00:55:07.930 --> 00:55:10.620
The first phase
that I have to do,

00:55:10.620 --> 00:55:14.390
I can kind of read how
things go diagonally.

00:55:14.390 --> 00:55:19.060
This is i pi over 4
to the i pi over 4.

00:55:19.060 --> 00:55:22.580
The next one has to be 0
because the 0's you can see,

00:55:22.580 --> 00:55:24.580
are proceeding diagonally.

00:55:24.580 --> 00:55:29.970
The next one would be x
prime, y prime xy minus 1

00:55:29.970 --> 00:55:33.575
e to the i minus i
pi over 4 and then

00:55:33.575 --> 00:55:38.340
x prime y prime xy minus
1 for the last time.

00:55:43.230 --> 00:55:46.890
So this keeps track of
the changes in phase.

00:55:50.080 --> 00:55:56.750
So now the next
thing that we did

00:55:56.750 --> 00:56:00.820
when we had the ordinary
random walks was we

00:56:00.820 --> 00:56:06.870
took advantage of the
translational invariance

00:56:06.870 --> 00:56:12.650
of the lattice to go to Fourier
space and make diagonalization.

00:56:12.650 --> 00:56:18.222
And indeed, we can do that over
here, too, but only partially

00:56:18.222 --> 00:56:22.920
in that this object has
two sets of indices.

00:56:22.920 --> 00:56:27.680
There is the lattice coordinates
and there's the orientation.

00:56:27.680 --> 00:56:34.300
But what I can certainly do is
to diagonalize the the subspace

00:56:34.300 --> 00:56:37.260
that corresponds to positions.

00:56:37.260 --> 00:56:39.730
What do I mean by that?

00:56:39.730 --> 00:56:47.940
What I will do is I will
introduce, let's say, qx, qy,

00:56:47.940 --> 00:56:54.682
xy-- these Fourier elements--
which are e to the i qx

00:56:54.682 --> 00:57:02.850
x plus qy y divided by square
root of n just as before,

00:57:02.850 --> 00:57:06.590
without any
orientation component.

00:57:06.590 --> 00:57:12.440
Then you can see that if I
multiply this object to xq

00:57:12.440 --> 00:57:20.120
y xy, with this matrix
that I have over here,

00:57:20.120 --> 00:57:30.480
xy t star x prime y prime,
and sum over x and y,

00:57:30.480 --> 00:57:33.780
but leave the
orientations unchanged.

00:57:33.780 --> 00:57:36.840
That is, basically I
do this individually

00:57:36.840 --> 00:57:42.250
for each one of these 16
elements of this matrix

00:57:42.250 --> 00:57:45.237
that each one of them
clearly depends on x, y,

00:57:45.237 --> 00:57:50.260
x prime, y prime, but also
has some additional factors.

00:57:50.260 --> 00:57:52.930
In each case, what
is going to happen

00:57:52.930 --> 00:57:59.660
is that because I'm
shifting x or y by one step,

00:57:59.660 --> 00:58:03.725
I will get this factor
back up to e to the i qx, e

00:58:03.725 --> 00:58:07.160
to the minus i qx, e to the
i qy, e to the minus iqy

00:58:07.160 --> 00:58:10.800
exactly as I was doing
before, except that I

00:58:10.800 --> 00:58:14.900
will have to do this for
every single one of them.

00:58:14.900 --> 00:58:18.470
So you can see that essentially
what this reproduces is

00:58:18.470 --> 00:58:23.020
a matrix that is four by
four that depends on q,

00:58:23.020 --> 00:58:28.940
and then I will get xy qx
of qy actually x prime y

00:58:28.940 --> 00:58:30.920
prime because I sum
over x and y back.

00:58:34.610 --> 00:58:38.810
So what is this
matrix, t star of q?

00:58:38.810 --> 00:58:44.190
It is very easily constructed
from what I have over there.

00:58:44.190 --> 00:58:48.700
Because you can see that from
the first one, what happens

00:58:48.700 --> 00:58:53.470
is that when I see
x, I will change it

00:58:53.470 --> 00:58:58.350
to x prime, which is x minus 1.

00:58:58.350 --> 00:59:03.920
So from here, I will get a
factor of e to the minus i qx.

00:59:03.920 --> 00:59:05.180
y and y prime are the same.

00:59:05.180 --> 00:59:07.830
I don't get anything from here.

00:59:07.830 --> 00:59:17.640
Next one, I will get e to the
minus i qx plus i pi over 4 0

00:59:17.640 --> 00:59:23.030
e to the minus i qx
minus i pi over 4.

00:59:23.030 --> 00:59:28.440
The next column, the y
has been shifted by 1.

00:59:28.440 --> 00:59:34.630
So I will get e to the
minus i cube y minus i

00:59:34.630 --> 00:59:43.840
pi over 4 e to the minus i qy
e to the minus i qy plus i pi

00:59:43.840 --> 00:59:48.120
over 4 0.

00:59:48.120 --> 00:59:53.560
The next level, the third one,
x prime is set to x minus 1,

00:59:53.560 --> 01:00:00.770
so I essentially get
e to the i qx-- oops.

01:00:00.770 --> 01:00:03.850
Third element starts
with 0, and then I'll

01:00:03.850 --> 01:00:12.820
have e to the i qx minus
i pi over 4 e to the i qx,

01:00:12.820 --> 01:00:18.520
and then I'll have e to
the i qx plus i pi over 4.

01:00:18.520 --> 01:00:29.110
The fourth element is e to the
i cube y plus i pi over 4 0

01:00:29.110 --> 01:00:34.410
into the i qy minus i
pi over 4 e to the i qy.

01:00:57.730 --> 01:01:06.590
So in the positions space,
I have this 4n by 4n matrix

01:01:06.590 --> 01:01:09.600
where the different sides were
connected to their neighbors

01:01:09.600 --> 01:01:12.020
with these phase factors.

01:01:12.020 --> 01:01:16.190
I have gone from coordinate
to Fourier basis.

01:01:16.190 --> 01:01:18.700
I did this transformation.

01:01:18.700 --> 01:01:23.750
Now I have a matrix that
is blocked diagonal.

01:01:23.750 --> 01:01:30.020
So for each value of the q,
I have a four by four block.

01:01:30.020 --> 01:01:33.320
So in the q picture, imagine
that you have this 4n

01:01:33.320 --> 01:01:35.670
by 4n matrix, and you
have blocks of four

01:01:35.670 --> 01:01:37.540
for different q
along the diagonal.

01:01:37.540 --> 01:01:38.650
Each one of them is this.

01:01:43.110 --> 01:01:49.296
So now let's go and calculate
our partition function.

01:01:49.296 --> 01:01:51.790
So what do we have?

01:01:51.790 --> 01:02:00.030
We have that log z over n
is log 2 hyperbolic cosine

01:02:00.030 --> 01:02:11.480
squared of k plus
1/2 sum over l.

01:02:14.700 --> 01:02:20.837
Sum over l of these
loops that go back

01:02:20.837 --> 01:02:21.920
all the way to themselves.

01:02:24.800 --> 01:02:30.140
So this is t to the l over l.

01:02:30.140 --> 01:02:36.125
This is loop star of length l.

01:02:39.140 --> 01:02:42.855
I want to relate
loop star of length

01:02:42.855 --> 01:02:50.330
l to this w star
of length l, but I

01:02:50.330 --> 01:02:56.530
want to start and
end at the origin.

01:02:56.530 --> 01:03:00.530
So I start from the origin
and end at the origin.

01:03:04.300 --> 01:03:06.900
But I have to be careful,
because let's say

01:03:06.900 --> 01:03:11.510
I make a loop such as this
and I end up at the origin.

01:03:11.510 --> 01:03:14.450
I have to get the
right phase factor.

01:03:14.450 --> 01:03:18.480
So if I started
along direction mu,

01:03:18.480 --> 01:03:22.940
when I get back to the starting
point, I cannot turn this way,

01:03:22.940 --> 01:03:25.480
this way and get the
right phase factor.

01:03:25.480 --> 01:03:27.860
I have to go and head in
the same direction as mu.

01:03:32.100 --> 01:03:35.800
So I have to head to
the same direction.

01:03:42.180 --> 01:03:47.010
Now I can certainly
do this as a summation

01:03:47.010 --> 01:03:50.540
also over the starting point.

01:03:50.540 --> 01:03:52.970
Instead, I have to
start and end at 0.

01:03:52.970 --> 01:03:55.820
I could have started
and ended at any point,

01:03:55.820 --> 01:03:59.250
and then I do a
sum of xy and mu,

01:03:59.250 --> 01:04:08.560
but then I better
divide by the n, right?

01:04:08.560 --> 01:04:12.120
And the reason I do
that is because now you

01:04:12.120 --> 01:04:19.920
can see that the structure
of this is like a trace,

01:04:19.920 --> 01:04:20.760
and I like that.

01:04:23.380 --> 01:04:31.970
Actually, I made a mistake when
I did this because, you see,

01:04:31.970 --> 01:04:36.040
the factor that I had to
really include is minus 1

01:04:36.040 --> 01:04:37.165
to the number of crossings.

01:04:39.970 --> 01:04:44.670
But my w l star is
just keep track of e

01:04:44.670 --> 01:04:47.880
to the i delta thetas.

01:04:47.880 --> 01:04:51.435
Actually, I should have put
in here a delta theta over 2.

01:04:51.435 --> 01:04:54.100
So I had forgotten that.

01:04:54.100 --> 01:04:58.830
But we can see that that factor
is different from minus 1

01:04:58.830 --> 01:05:02.451
to the nc to the minus sign.

01:05:02.451 --> 01:05:05.720
So there was that minus
sign that I had forgotten.

01:05:05.720 --> 01:05:09.770
And actually, I better
make this a minus sign.

01:05:09.770 --> 01:05:15.330
So what was plus before becomes
a minus because of this factor

01:05:15.330 --> 01:05:16.470
that I have over here.

01:05:19.390 --> 01:05:22.270
So let's write this again.

01:05:22.270 --> 01:05:34.280
This is log 2 hyperbolic cosine
squared of k minus 1 over 2n.

01:05:34.280 --> 01:05:38.915
And then this sum over
xy mu is like a trace.

01:05:41.670 --> 01:05:44.110
And what is it that I'm tracing?

01:05:44.110 --> 01:05:52.051
I'm tracing a sum over l, t
t star to the l divided by l.

01:05:56.001 --> 01:05:56.500
Yes?

01:05:56.500 --> 01:06:01.660
AUDIENCE: So we'll also sum
it over mu [INAUDIBLE] 4?

01:06:01.660 --> 01:06:07.270
PROFESSOR: No,
because I don't know

01:06:07.270 --> 01:06:10.200
which direction
my first step is.

01:06:10.200 --> 01:06:13.230
So what I'm doing is I'm
summing over all always

01:06:13.230 --> 01:06:17.780
of starting step from the
origin, head in direction mu.

01:06:17.780 --> 01:06:21.360
Then I have to make sure
that I come back to mu.

01:06:21.360 --> 01:06:24.690
Now it is true
that I sum over mu,

01:06:24.690 --> 01:06:26.940
but I already took
care of that when

01:06:26.940 --> 01:06:31.770
I divided by 2l,
because let's say

01:06:31.770 --> 01:06:34.910
you look at the
diagrams of length 4

01:06:34.910 --> 01:06:37.390
that I generate
through this procedure.

01:06:37.390 --> 01:06:40.960
Starting from here, depending
on which direction I go,

01:06:40.960 --> 01:06:44.825
I will generate this or
this or this, or this.

01:06:44.825 --> 01:06:47.545
These are precisely
the four diagrams

01:06:47.545 --> 01:06:51.940
that I generate depending on
which starting point I pick.

01:06:51.940 --> 01:06:56.170
So it is truly there
is an over-counting,

01:06:56.170 --> 01:06:58.934
but that's an over-counting that
you've already taken care of.

01:07:08.000 --> 01:07:10.770
Now again, we did
this last time.

01:07:10.770 --> 01:07:15.450
This is the series
for minus log of 1

01:07:15.450 --> 01:07:19.060
minus 2 t star-- matrix t star.

01:07:21.960 --> 01:07:26.240
So this is the same thing as
log of 2 hyperbolic cosine

01:07:26.240 --> 01:07:37.510
squared of k plus now 1
over 2n trace of log of 1

01:07:37.510 --> 01:07:39.430
minus t t star.

01:07:51.200 --> 01:07:57.150
Now I said that my matrix
was blocked diagonal

01:07:57.150 --> 01:08:00.530
when I went to look
at the q basis.

01:08:00.530 --> 01:08:03.240
And I can take the
trace in any basis,

01:08:03.240 --> 01:08:05.705
whether it's in coordinate
basis, in momentum basis.

01:08:05.705 --> 01:08:08.120
Trace is trace.

01:08:08.120 --> 01:08:11.170
So now focus on what
the trace will look

01:08:11.170 --> 01:08:13.960
like if I go to
the Fourier basis.

01:08:13.960 --> 01:08:17.149
I have these four
by four blocks,

01:08:17.149 --> 01:08:19.649
and then I calculate
the trace, I

01:08:19.649 --> 01:08:22.470
will calculate the trace
of one four by four.

01:08:22.470 --> 01:08:26.270
And the other four by
four, I go over all q's.

01:08:26.270 --> 01:08:32.420
So basically this can be
written as a sum over q's.

01:08:32.420 --> 01:08:36.500
Log of 1 minus t.

01:08:36.500 --> 01:08:41.520
This four by four matrix t star
of q, and the trace of that.

01:08:47.430 --> 01:08:53.880
And finally-- oops, I forgot
a factor of 1 over 2n here.

01:08:53.880 --> 01:09:00.670
The sum over q I'm going to
replace with an integral over q

01:09:00.670 --> 01:09:03.660
times n over 2 pi squared.

01:09:03.660 --> 01:09:05.910
So the final answer
here is going

01:09:05.910 --> 01:09:09.630
to look like log 2
hyperbolic cosine squared

01:09:09.630 --> 01:09:14.609
root of k plus 1/2.

01:09:14.609 --> 01:09:18.819
The 1 over n I will get rid
of when I write the sum over q

01:09:18.819 --> 01:09:21.124
as n integral d2 of q.

01:09:21.124 --> 01:09:26.102
So I have integral d2 of
1 divided by 2 pi squared.

01:09:29.370 --> 01:09:30.240
One more step.

01:09:35.450 --> 01:09:45.000
Trace of a log of any
matrix I can write--

01:09:45.000 --> 01:09:49.700
let's say we find a basis
in which the m is diagonal.

01:09:49.700 --> 01:09:54.900
Then it becomes a sum
over alpha log of lambda

01:09:54.900 --> 01:10:01.470
alpha, where lambda alphas
are diagonal values of this.

01:10:01.470 --> 01:10:03.870
But sum over logs
is the same thing

01:10:03.870 --> 01:10:12.021
as log of the product over
alpha of lambda alpha.

01:10:12.021 --> 01:10:15.300
The product of eigenvalues
of the matrix you

01:10:15.300 --> 01:10:18.670
also recognize to
be the determinant.

01:10:18.670 --> 01:10:22.840
So this is the log of the
determinant of the matrix.

01:10:22.840 --> 01:10:26.230
So this is a very
useful, famous identity

01:10:26.230 --> 01:10:29.640
that trace log is the same
thing as log determinant

01:10:29.640 --> 01:10:31.020
that I will use.

01:10:31.020 --> 01:10:34.230
And rather than
calculate the trace log,

01:10:34.230 --> 01:10:39.090
I will write it as the
log of the determinant,

01:10:39.090 --> 01:10:42.200
and I will explicitly
write down for you

01:10:42.200 --> 01:10:45.390
the determinant of which
four by four matrix.

01:10:45.390 --> 01:10:50.310
It is simply 1 minus p times
the elements of that matrix.

01:10:50.310 --> 01:10:55.980
So it's 1 minus t e to
the minus i qx minus t

01:10:55.980 --> 01:11:05.540
e to the minus i qx plus
i pi over 4 0 minus t

01:11:05.540 --> 01:11:11.880
e to the minus i qx
minus i pi over 4.

01:11:11.880 --> 01:11:15.350
Second element,
second row-- minus t

01:11:15.350 --> 01:11:23.250
e to the minus i qy minus
i pi over 4 1 minus t

01:11:23.250 --> 01:11:30.240
e to the minus i qy minus t
e to the minus i qy plus i pi

01:11:30.240 --> 01:11:36.020
over 4 minus-- oops, 0
for the last element here.

01:11:36.020 --> 01:11:37.900
It's a U-turn.

01:11:37.900 --> 01:11:47.770
The third thing is 0 minus
t e to the i qx minus i

01:11:47.770 --> 01:11:55.530
pi over 4 1 minus t e to the i
qx diagonal element minus t e

01:11:55.530 --> 01:11:59.590
to the i qx plus i pi over 4.

01:11:59.590 --> 01:12:06.725
Final row-- minus t e
to the i cube y plus i

01:12:06.725 --> 01:12:13.050
pi over 4, 0 for the
U-turn, minus t e

01:12:13.050 --> 01:12:19.770
to the i qy minus i pi over
4 diagonal turn 1 minus t e

01:12:19.770 --> 01:12:23.620
to the i cube y, and that's it.

01:12:26.180 --> 01:12:28.730
And that's the answer.

01:12:28.730 --> 01:12:34.330
So calculating the
partition function

01:12:34.330 --> 01:12:38.180
of the 2-dimensionalizing
model is

01:12:38.180 --> 01:12:43.780
reduced to calculating this
four by four determinant, which

01:12:43.780 --> 01:12:46.930
we can do by hand.

01:12:46.930 --> 01:12:48.000
I won't do it here.

01:12:48.000 --> 01:12:50.560
I will write the answer.

01:12:50.560 --> 01:13:00.120
So the log of z over n is log
3 hyperbolic cosine squared

01:13:00.120 --> 01:13:10.660
of k plus 1/2 integral
d2 q 2 pi squared.

01:13:10.660 --> 01:13:13.860
Log, you take the determinant.

01:13:13.860 --> 01:13:19.680
What you find is 1 plus t
squared squared minus 2 t 1

01:13:19.680 --> 01:13:24.330
minus t squared cosine
of qx plus cosine of qy.

01:13:29.870 --> 01:13:33.940
If you want, you can write it
in a slightly different way

01:13:33.940 --> 01:13:39.250
by taking the cosine squared
inside this logarithm

01:13:39.250 --> 01:13:43.360
and doing a little
bit of algebra.

01:13:43.360 --> 01:13:46.870
We get log 2 plus 1/2.

01:13:46.870 --> 01:13:53.510
Explicitly, these are integrals
that go from 0 to 2 pi,

01:13:53.510 --> 01:13:56.270
because that's the
range of q vectors

01:13:56.270 --> 01:13:59.110
that are allowed by
this transformation.

01:13:59.110 --> 01:14:00.970
I'll have a q in
the x direction.

01:14:00.970 --> 01:14:03.350
I'll have a q in
the y direction.

01:14:03.350 --> 01:14:08.230
2 pi squared, each one of them
goes in the range 0 to 2 pi.

01:14:08.230 --> 01:14:10.376
I have a log.

01:14:10.376 --> 01:14:16.090
And once I take this
cosine squared inside,

01:14:16.090 --> 01:14:18.720
it becomes cos to the fourth.

01:14:18.720 --> 01:14:22.780
You write this t sine squared
divided by cos squared.

01:14:22.780 --> 01:14:25.860
You can see that the cos to
the fourth will cancel this.

01:14:25.860 --> 01:14:28.670
You will get cos squared
plus sine squared,

01:14:28.670 --> 01:14:31.840
which is the same thing as
hyperbolic cosine of twice

01:14:31.840 --> 01:14:34.160
the angle squared.

01:14:34.160 --> 01:14:40.200
And the other terms conspires
to give you the sine of 2kx

01:14:40.200 --> 01:14:45.340
and then cosine of
qx plus cosine of qy.

01:14:45.340 --> 01:14:55.196
And so this is the
partition function

01:14:55.196 --> 01:14:56.550
of the 2-dimensionalizing model.

01:14:59.250 --> 01:15:01.850
You can do a little
bit more manipulations,

01:15:01.850 --> 01:15:05.350
write this integral in
terms of special functions,

01:15:05.350 --> 01:15:09.740
but you won't gain much.

01:15:09.740 --> 01:15:12.970
So this is the answer.

01:15:12.970 --> 01:15:18.000
I want you to absorb and
appreciate this derivation.

01:15:18.000 --> 01:15:21.020
And next time we
look at this and see

01:15:21.020 --> 01:15:24.030
what it means for the
similarities in the phase

01:15:24.030 --> 01:15:26.050
behavior of the
2-dimensionalizing.

01:15:26.050 --> 01:15:27.954
Yes?

01:15:27.954 --> 01:15:30.120
AUDIENCE: [INAUDIBLE]
in the log, it's cos

01:15:30.120 --> 01:15:32.340
squared minus [INAUDIBLE]?

01:15:32.340 --> 01:15:34.480
PROFESSOR: Yes.

01:15:34.480 --> 01:15:36.940
But both of them went
to twice diagonal.

01:15:36.940 --> 01:15:39.710
Here everything
is in terms of k.

01:15:39.710 --> 01:15:43.150
And once I took the hyperbolic
cosine squared inside then

01:15:43.150 --> 01:15:48.720
did the manipulations, they
became twice the length.

01:15:48.720 --> 01:15:52.340
AUDIENCE: What's the subscript
up there [INAUDIBLE]?

01:15:52.340 --> 01:15:54.956
PROFESSOR: 2.

01:15:54.956 --> 01:15:56.330
There should be
a subscript, yes.

01:16:04.834 --> 01:16:07.000
AUDIENCE: Is there an
extension to higher dimensions

01:16:07.000 --> 01:16:08.765
where you just do a
summation over cosine?

01:16:08.765 --> 01:16:10.140
PROFESSOR: You
would wish, right?

01:16:10.140 --> 01:16:11.181
I mean, that's actually--

01:16:11.181 --> 01:16:12.680
[LAUGHTER]

01:16:12.680 --> 01:16:15.240
PROFESSOR: And quite
a number of people

01:16:15.240 --> 01:16:17.780
have come with that
conjecture, including

01:16:17.780 --> 01:16:19.640
myself when i was
a graduate student

01:16:19.640 --> 01:16:22.140
and I didn't know better.

01:16:22.140 --> 01:16:28.960
If you sort of write
things in terms of not only

01:16:28.960 --> 01:16:33.560
if you make kx and
ky to be different,

01:16:33.560 --> 01:16:38.060
then this takes the
form of cos 2kx cos 2ky.

01:16:38.060 --> 01:16:40.950
This becomes, in some
sense, a very nice version

01:16:40.950 --> 01:16:42.820
of 2kx and 2ky.

01:16:42.820 --> 01:16:46.370
There is a way natural--
and the thing that is nice

01:16:46.370 --> 01:16:50.000
is that if you put any one
of the 2kx's to 0, then

01:16:50.000 --> 01:16:53.300
you have reduced the formula for
the 1-dimensionalizing model,

01:16:53.300 --> 01:16:54.930
as you should.

01:16:54.930 --> 01:16:56.700
And then the natural
thing would be

01:16:56.700 --> 01:16:59.970
to write a similar product
in three dimensions,

01:16:59.970 --> 01:17:02.460
and you did when said
one of k's equals to 0.

01:17:02.460 --> 01:17:05.030
You get the corrected
dimensionalizing model.

01:17:05.030 --> 01:17:08.804
So it passes a number of test,
yet it's unfortunately not

01:17:08.804 --> 01:17:09.304
correct.

01:17:14.244 --> 01:17:16.220
AUDIENCE: So the
problem is conditional

01:17:16.220 --> 01:17:21.320
in this three dimensions
is counting the loops?

01:17:21.320 --> 01:17:24.530
PROFESSOR: What we
relied on heavily

01:17:24.530 --> 01:17:27.980
was this factor of
minus 1 to the product

01:17:27.980 --> 01:17:30.260
of the number of crossings.

01:17:30.260 --> 01:17:34.050
And if you think about it
as a topological entity,

01:17:34.050 --> 01:17:38.300
these crossings only make
sense in two dimensions.

01:17:38.300 --> 01:17:43.350
So you don't have the basic
tool to go in three dimensions.

01:17:43.350 --> 01:17:45.750
And actually, what
those minus signs

01:17:45.750 --> 01:17:48.820
mean I will explain next time.

01:17:48.820 --> 01:17:51.817
Has something to do with
fermionic character of this

01:17:51.817 --> 01:17:52.317
[INAUDIBLE].

01:17:59.705 --> 01:18:00.830
So it's a beautiful result.

01:18:00.830 --> 01:18:04.100
You should appreciate it.

01:18:04.100 --> 01:18:05.020
Yes?

01:18:05.020 --> 01:18:07.780
AUDIENCE: [INAUDIBLE]
this Thursday?

01:18:07.780 --> 01:18:09.940
PROFESSOR: I'll go
through the history, too.

01:18:09.940 --> 01:18:13.920
The person who first
derived this field energy

01:18:13.920 --> 01:18:19.260
was Onsager with this transfer
matrix method that I described.

01:18:19.260 --> 01:18:24.500
This way of doing it in terms
of graphs came much later.

01:18:24.500 --> 01:18:27.860
And a number of people
that were involved

01:18:27.860 --> 01:18:29.290
that, including Feynman.

01:18:29.290 --> 01:18:32.520
In fact, in Feynman's
book, there's

01:18:32.520 --> 01:18:35.740
a very nice derivation along
these lines that you can see.

01:18:38.430 --> 01:18:41.600
The connections to fermions and
the number of people Mattis,

01:18:41.600 --> 01:18:46.410
Schultz, Lieb, et
cetera, came up with.

01:18:46.410 --> 01:18:50.140
One thing that-- well, OK,
guess I have a few minutes.

01:18:50.140 --> 01:18:52.650
I can say a few things.

01:18:52.650 --> 01:18:59.510
So this result dates
back to around 1950s.

01:18:59.510 --> 01:19:04.580
And I know a generation
of physicists

01:19:04.580 --> 01:19:08.530
who are now about to retire
or have retired in the past 10

01:19:08.530 --> 01:19:12.490
years or so who were very
young when these things were

01:19:12.490 --> 01:19:13.940
introduced.

01:19:13.940 --> 01:19:16.600
And as far as I can see,
all through their life,

01:19:16.600 --> 01:19:18.990
they did versions of this.

01:19:18.990 --> 01:19:23.400
So you can sort of do versions
of the 2-dimensionalizing model

01:19:23.400 --> 01:19:26.610
and you can make the
interactions to be different.

01:19:26.610 --> 01:19:28.980
You can play the different
types of interactions.

01:19:28.980 --> 01:19:31.500
You can make the
boundaries to be

01:19:31.500 --> 01:19:33.630
different, periodic, et cetera.

01:19:33.630 --> 01:19:36.240
There's been variants
that you can find,

01:19:36.240 --> 01:19:38.640
and there are some
people who seem

01:19:38.640 --> 01:19:40.540
to have done that
throughout their career.

01:19:43.290 --> 01:19:47.900
But then after that, we had
the renormalization group,

01:19:47.900 --> 01:19:51.180
and a totally
different perspective.