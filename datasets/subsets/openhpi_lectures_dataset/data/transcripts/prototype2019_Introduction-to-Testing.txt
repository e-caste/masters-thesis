WEBVTT

1
00:00:07.250 --> 00:00:11.960 
This module is all about testing.
During testing we get to check

2
00:00:11.970 --> 00:00:16.430 
our assumption with real users.
Our goal here is to learn as

3
00:00:16.430 --> 00:00:20.400 
much as we can about how our
users are interacting with the

4
00:00:20.400 --> 00:00:24.660 
prototype. All of our ideas and
assumptions right now are represented

5
00:00:24.660 --> 00:00:27.730 
in this prototype, so in
order to learn the most,

6
00:00:27.920 --> 00:00:31.170 
the best thing to do is to give
away the prototype to the tester

7
00:00:31.170 --> 00:00:35.410 
and let them interact with it. -
Here's an example from the French

8
00:00:35.410 --> 00:00:39.380 
furniture company Lapeyre. They
asked a student team to redesign

9
00:00:39.380 --> 00:00:41.790 
the bathroom experience
for elderly people.

10
00:00:42.560 --> 00:00:45.730 
Based on the user research the
team assumed that elderly people

11
00:00:45.730 --> 00:00:48.130 
would need to sit down during
their morning routine

12
00:00:48.350 --> 00:00:52.180 
and reach all necessary items.
So they built a prototype to

13
00:00:52.180 --> 00:00:55.910 
test this assumption. Here is
what the first prototype looked

14
00:00:55.910 --> 00:00:58.800 
like, a bathroom table
with a voice interface.

15
00:00:59.260 --> 00:01:01.850 
The table would ask what
do you want to do next,

16
00:01:02.290 --> 00:01:05.380 
wait for an answer and then hand
over the item that was asked,

17
00:01:05.380 --> 00:01:08.020 
for example a
toothbrush or lotion.

18
00:01:08.450 --> 00:01:11.520 
Of course the team didn't
program any of this, instead

19
00:01:11.650 --> 00:01:14.660 
one of the team members was
sitting underneath the table

20
00:01:14.800 --> 00:01:17.290 
and would hand out the
lotion or the toothbrush.

21
00:01:18.220 --> 00:01:20.520 
This offered an interactive
testing situation.

22
00:01:21.530 --> 00:01:24.520 
To test their prototype the
team invited elderly people,

23
00:01:24.930 --> 00:01:28.330 
explained the context to them and
then watched them try out the

24
00:01:28.330 --> 00:01:32.240 
prototype. The initial
reaction that the team got

25
00:01:32.410 --> 00:01:36.990 
was seemingly quite negative.
Testers really didn't like

26
00:01:36.990 --> 00:01:39.560 
the fact that a piece of
furniture was talking to them.

27
00:01:39.720 --> 00:01:43.600 
They found the voice interface
to be annoying and intrusive.

28
00:01:44.020 --> 00:01:48.720 
But next to this, the team also
observed and heard some positive

29
00:01:48.720 --> 00:01:51.340 
aspects. Testers really
like the fact that they

30
00:01:51.440 --> 00:01:54.920 
could sit down, or the possibility
to reach all the necessary

31
00:01:54.920 --> 00:01:58.400 
items. So the team really could
draw an important learning from

32
00:01:58.400 --> 00:02:01.550 
this: they tackled the right
problem, a real user need,

33
00:02:01.700 --> 00:02:05.840 
but their prototype didn't really solve
this correctly - at least not yet!

34
00:02:05.840 --> 00:02:09.980 
They refined the prototype and
tested it several times.

35
00:02:13.750 --> 00:02:18.260 
This is how the final product
looks like when it entered the

36
00:02:18.260 --> 00:02:23.520 
market. You can also see the several
stages of prototyping that

37
00:02:23.520 --> 00:02:26.650 
the team went through based on the
results of testing they got.

38
00:02:26.650 --> 00:02:31.310 
Testing is a delicate task
because it's not only about the

39
00:02:31.310 --> 00:02:33.890 
straightforward answers you
get from your testers,

40
00:02:34.210 --> 00:02:38.450 
but also about observing them
interacting with your prototype.

41
00:02:38.780 --> 00:02:42.060 
It's also a phase where you need
to be very open for feedback.

42
00:02:42.660 --> 00:02:47.050 
It hurts to dismiss or change
beloved ideas, but it hurts much

43
00:02:47.050 --> 00:02:51.130 
more to put time and effort
and money into an idea that

44
00:02:51.130 --> 00:02:54.910 
nobody needs. And if you think
the testing didn't go well:

45
00:02:55.330 --> 00:02:58.310 
a bad user test is better
than no user testing.

46
00:02:59.230 --> 00:03:02.310 
So in this week we will talk about
how to prepare and conduct

47
00:03:02.310 --> 00:03:05.390 
a user testing and how to collect
and structure feedback.

48
00:03:06.510 --> 00:03:10.230 
We have also created a podcast
for those of you who wish to

49
00:03:10.230 --> 00:03:14.130 
learn about theories behind user
testing. So we hope you enjoy.
