WEBVTT

1
00:00:01.260 --> 00:00:04.280 
Welcome to video clip 3.5
in which we provide

2
00:00:04.280 --> 00:00:07.910 
an informal petri net primer
and this is a bonus video.

3
00:00:10.480 --> 00:00:16.210 
So petrinets are graph that
capture the behavior of systems.

4
00:00:17.290 --> 00:00:20.540 
Its a formal representation
of concurrent system and

5
00:00:20.540 --> 00:00:24.740 
widely used for the analysis
of dynamic systems.

6
00:00:27.190 --> 00:00:31.190 
The petri nets have been devised by
Carl Adam Petri in a dissertation

7
00:00:31.190 --> 00:00:32.970 
from 1962.

8
00:00:34.020 --> 00:00:38.810 
They provide a theory of the
communication of systems and since then

9
00:00:38.970 --> 00:00:43.640 
of course many extensions have been, many
extensions and many variants have been

10
00:00:43.770 --> 00:00:47.930 
developed since. And petri nets
are used widely in the by the

11
00:00:48.500 --> 00:00:53.430 
academic BPM community to formally
analyze process models and

12
00:00:53.430 --> 00:00:59.050 
also for for many others purposes. Here
we see a picture of professor Petri

13
00:00:59.330 --> 00:01:05.080 
receiving an award. So he is the person
in the middle, he is receiving an

14
00:01:05.450 --> 00:01:07.430 
award in the
Netherlands.

15
00:01:10.110 --> 00:01:13.510 
Alright so a petri net
is a directed graph

16
00:01:13.940 --> 00:01:19.410 
comprised of places, transitions and
directed arcs between these. The graph is

17
00:01:19.770 --> 00:01:24.250 
bipartite meaning that arcs
are only allowed between

18
00:01:24.250 --> 00:01:28.630 
nodes of different types. So an arc
can be either go from a transition

19
00:01:29.130 --> 00:01:32.400 
to a place or from a
place to a transition.

20
00:01:33.080 --> 00:01:37.230 
Arcs between two transitions and arcs
between two places are forbidden.

21
00:01:38.860 --> 00:01:40.720 
Alright let's introduce
some terminology

22
00:01:42.690 --> 00:01:46.730 
and that is here we see a petri
net, I should say a few

23
00:01:46.730 --> 00:01:51.250 
words about the petri net. So the
places are represented as circles

24
00:01:52.030 --> 00:01:56.080 
the transitions are
represented as rectangles

25
00:01:57.360 --> 00:02:00.130 
and the relationship
the arcs or the flow

26
00:02:01.680 --> 00:02:06.800 
relation is represented by the arrows
here. So we see the graph is

27
00:02:07.080 --> 00:02:12.400 
bipartite so there is only there
are only edges from places

28
00:02:12.400 --> 00:02:16.610 
to transitions or this one place to transition
place to transition place of transition

29
00:02:18.600 --> 00:02:21.860 
or from transition to a
place. There are no other

30
00:02:22.060 --> 00:02:25.450 
arcs here so the graph
it's bipartite indeed.

31
00:02:27.320 --> 00:02:31.170 
We use we need to introduce
the terminology of input

32
00:02:31.180 --> 00:02:35.260 
place and output
place. So the

33
00:02:38.470 --> 00:02:42.500 
output or first of all its a
p1 is the input place for t1

34
00:02:42.500 --> 00:02:47.760 
so t1 is the transition one and
the set of all places that have

35
00:02:48.050 --> 00:02:51.930 
arrows that come into
these transition is the

36
00:02:51.930 --> 00:02:54.760 
set of input places. So p1
is the input place of t1.

37
00:02:55.300 --> 00:03:00.160 
And looking at awell of course
on what else do we have, p2

38
00:03:00.160 --> 00:03:01.890 
is the input
place of t2,

39
00:03:02.730 --> 00:03:07.030 
p3 in the input place of t3,
p5 has two input places

40
00:03:07.030 --> 00:03:10.160 
namely p5 and p6. That's the
concept of an input place.

41
00:03:11.290 --> 00:03:14.660 
Concept of an output
place is the

42
00:03:16.140 --> 00:03:19.110 
the respective concept

43
00:03:20.290 --> 00:03:26.130 
so p3 and p4 are output place of t2,
so these two are outputs places of

44
00:03:26.690 --> 00:03:31.610 
t2 and p7 is output
place of t5 and

45
00:03:32.080 --> 00:03:34.660 
p2 is output place of
t1 and so forth.

46
00:03:35.250 --> 00:03:39.580 
So we need to we introduce a
terminology that you know what

47
00:03:39.580 --> 00:03:42.440 
an input place or the set of input
places of a transition and

48
00:03:42.440 --> 00:03:44.770 
a set of output places
of a transition is.

49
00:03:46.700 --> 00:03:52.400 
The behavior of a system is represented
by a token play in the petri net

50
00:03:52.940 --> 00:03:58.070 
and a token is represented by
these black dots and tokens can

51
00:03:58.070 --> 00:04:03.350 
only reside on places. So here you
see the token, one token on place

52
00:04:04.230 --> 00:04:08.120 
p1 and there were no other tokens
in the net at this point in time.

53
00:04:09.250 --> 00:04:14.430 
In general each place can or may carry
a number of tokens that are different

54
00:04:14.570 --> 00:04:18.500 
kind of petri nets with different
constraints regarding this.

55
00:04:18.500 --> 00:04:23.430 
But the petri nets we use in
the petri nets we use each

56
00:04:23.980 --> 00:04:28.590 
place may carry any number of
tokens. The state of a petri net

57
00:04:28.590 --> 00:04:32.360 
is defined by the distribution of
tokens over the places of the net.

58
00:04:32.520 --> 00:04:35.370 
That's the state.
So often

59
00:04:36.070 --> 00:04:42.240 
the state of the state is might
be an initial state, the

60
00:04:42.420 --> 00:04:45.830 
state of petri net might be initial
and here we can we have this

61
00:04:45.830 --> 00:04:49.880 
situation. And I briefly talk
about the sample petri net

62
00:04:49.880 --> 00:04:52.270 
representing one
process instance.

63
00:04:53.310 --> 00:04:57.190 
So here we have a variant of
the order process in which

64
00:04:57.190 --> 00:05:01.980 
the activities in the process model are
represented as transitions in the net.

65
00:05:02.220 --> 00:05:07.220 
And the flow is represented
by the arcs and by the

66
00:05:07.940 --> 00:05:12.270 
by the places. Alright so
here we have the state of

67
00:05:12.270 --> 00:05:16.110 
the petri net that is in place
p1 which means only there

68
00:05:16.110 --> 00:05:21.880 
is one token in place p1. So we
use these brackets to indicate

69
00:05:22.060 --> 00:05:27.700 
which tokens have which
places have actually tokens

70
00:05:27.950 --> 00:05:34.170 
on them and in our examples
we just have one token

71
00:05:34.170 --> 00:05:37.870 
at most on each place therefore
we can just use the name of

72
00:05:37.870 --> 00:05:41.470 
the place to indicate that there
is one token on this place.

73
00:05:44.110 --> 00:05:50.220 
A petri net changes its state
by firing of a transition. So

74
00:05:50.220 --> 00:05:54.320 
transition t can fire if it is enabled.
There is a concept of enablement which is

75
00:05:54.630 --> 00:05:57.890 
not too different from the ready
state of the activities. So once

76
00:05:57.890 --> 00:06:01.870 
the transition is enabled it can
fire. Similar to an activity

77
00:06:01.870 --> 00:06:03.710 
that is ready can
be executed.

78
00:06:05.720 --> 00:06:10.790 
So transition t can fire if it is
enabled and t is enabled if each

79
00:06:11.050 --> 00:06:13.640 
input place carries
at least one token.

80
00:06:14.370 --> 00:06:18.090 
Each input place of that transition
has at least one token. It can

81
00:06:18.380 --> 00:06:21.350 
it is enabled and
it can fire.

82
00:06:22.100 --> 00:06:28.980 
On firing of a transition t it consumes
one token from each input place

83
00:06:29.720 --> 00:06:33.280 
and produces one token on
each of its output places.

84
00:06:34.700 --> 00:06:39.810 
So let's work through this. Let's
apply these state changes here.

85
00:06:41.250 --> 00:06:44.890 
So let's assume the
initial state of

86
00:06:46.000 --> 00:06:50.690 
the process is p1. So the process
more or less in state p1

87
00:06:51.460 --> 00:06:54.310 
which transitions are enabled
by just one transition

88
00:06:54.310 --> 00:06:58.400 
is enabled which is transition
t1, because all input places

89
00:06:58.510 --> 00:07:00.000 
have at least
one token.

90
00:07:01.090 --> 00:07:04.920 
So this transition
is now

91
00:07:05.660 --> 00:07:09.200 
enabled it can fire. So if it
fires what happens? Well

92
00:07:09.750 --> 00:07:14.020 
from each in an atomic step.
So I cannot do these atomic

93
00:07:14.020 --> 00:07:17.640 
step, I need to do that step by
step but it is an indivisible

94
00:07:17.700 --> 00:07:19.940 
atomic step the firing
of a transition.

95
00:07:20.550 --> 00:07:24.960 
What happens is that one token
is removed from input place

96
00:07:26.640 --> 00:07:30.740 
and one token is put on
each of its output place

97
00:07:30.740 --> 00:07:33.530 
which is just one in this case. So
that's the firing of transition t1.

98
00:07:37.440 --> 00:07:40.290 
Ok so let's erase
that now.

99
00:07:41.860 --> 00:07:45.170 
So how does the process continue? Well
there is another transition that is

100
00:07:45.620 --> 00:07:48.120 
enabled at this point
in time which is t2.

101
00:07:48.550 --> 00:07:53.020 
T2 also in an atomic step remove
the token from p2 and put

102
00:07:53.020 --> 00:07:57.320 
the token on p3 and p4
because all output places

103
00:07:57.330 --> 00:07:59.340 
will receive one
additional token.

104
00:08:00.350 --> 00:08:03.790 
So I erase the token here.
It is also done in an

105
00:08:04.230 --> 00:08:07.370 
atomic step in which which
I am not very good in.

106
00:08:08.200 --> 00:08:11.650 
So that's the state of the
process of the petri net the

107
00:08:11.650 --> 00:08:16.440 
process after execution or the
triggering of the firing of t2.

108
00:08:17.400 --> 00:08:20.810 
Then we have a concurrent branch
here. There is also concurrency

109
00:08:20.810 --> 00:08:25.230 
the send books and update inventory
can be executed in any order.

110
00:08:25.890 --> 00:08:27.170 
So assume that

111
00:08:30.010 --> 00:08:33.190 
send books is before the
upper transition fires

112
00:08:33.780 --> 00:08:34.970 
bring the token here.

113
00:08:36.570 --> 00:08:40.330 
So which activity which
transitions are enabled at this

114
00:08:40.330 --> 00:08:44.650 
point in time? Well is it t5?
No not t5 because there

115
00:08:44.650 --> 00:08:48.710 
is one input place without a token.
So p6 does not have a token

116
00:08:48.710 --> 00:08:54.090 
and therefore t5 is not enabled, but
t4 is enabled. So t4 can fire.

117
00:08:55.280 --> 00:08:56.940 
Removing a token here,

118
00:08:59.590 --> 00:09:00.760 
putting a token here.

119
00:09:01.760 --> 00:09:05.050 
Now t5 is enabled
t5 can fire.

120
00:09:06.130 --> 00:09:09.910 
So these two need
to be erased and

121
00:09:10.740 --> 00:09:13.830 
on each output place one token
is produced so we have here

122
00:09:14.260 --> 00:09:20.220 
execution or the putting t5
puts a token on place p7

123
00:09:20.630 --> 00:09:22.650 
thereby completing
the process.

124
00:09:23.270 --> 00:09:27.590 
So I was discussing this behavior
of a petri net in terms of

125
00:09:28.490 --> 00:09:32.370 
the concept that we use in petri
nets. But at the same time

126
00:09:32.370 --> 00:09:38.280 
I think you also recognize that I
was describing a process execution

127
00:09:38.790 --> 00:09:42.490 
trace of the process. So first
order is received and then

128
00:09:43.050 --> 00:09:46.620 
order is processed then we have the
concurrency and then afterwards

129
00:09:46.620 --> 00:09:51.210 
we have the join. So here we can even
say that the petri net realizes and

130
00:09:51.510 --> 00:09:55.160 
AND split and also AND join
behaviour by the rules that we

131
00:09:55.160 --> 00:09:56.510 
just learned from
petrinets.

132
00:09:57.600 --> 00:10:02.250 
There are also ways to realize an XOR split
in petrinets that is also possible.

133
00:10:02.570 --> 00:10:04.030 
Very easy way we
come to that.

134
00:10:09.420 --> 00:10:14.490 
Now the question is how we can discuss
what other states that are reachable

135
00:10:14.680 --> 00:10:18.760 
petri net can achieve other
states that are reachable.

136
00:10:19.360 --> 00:10:23.190 
And in order to do that we'll
like to introduce reachability

137
00:10:23.190 --> 00:10:27.030 
graph also in very informal way.
A reachability graph is a graph

138
00:10:27.030 --> 00:10:28.630 
in which the nodes
are states

139
00:10:30.810 --> 00:10:36.190 
and state transitions are, well
state transitions are represented

140
00:10:36.190 --> 00:10:39.060 
by an arc and a follow up
state that is then achieved.

141
00:10:40.020 --> 00:10:42.650 
So let's see if we
can if we can

142
00:10:43.480 --> 00:10:47.310 
design the reachability graph
of this process model.

143
00:10:48.860 --> 00:10:51.870 
or of this petri net, I
should say. It starts

144
00:10:52.620 --> 00:10:58.060 
the first state or currently the
petri net is in the state p1.

145
00:11:01.260 --> 00:11:02.880 
State p1 is the first

146
00:11:03.840 --> 00:11:08.840 
state. Then by firing and we can
associate can we annotate the

147
00:11:08.840 --> 00:11:13.220 
firing of the transition to the
edge in this reachability graph.

148
00:11:14.360 --> 00:11:20.120 
So more correctly i should
say p1 in brackets because

149
00:11:20.120 --> 00:11:24.760 
we introduced the structure of the
state as being the name of the

150
00:11:24.950 --> 00:11:29.670 
of the transitions in
brackets but due to

151
00:11:30.100 --> 00:11:34.340 
better readability I will
not use these brackets

152
00:11:34.820 --> 00:11:36.520 
any further here
in this example.

153
00:11:37.350 --> 00:11:40.690 
Alright t1 can fire. What is the
resulting state? The resulting

154
00:11:40.690 --> 00:11:42.290 
state will be state p2.

155
00:11:45.320 --> 00:11:47.630 
One token in p2 and no
other token in the net.

156
00:11:49.080 --> 00:11:54.120 
Then t2 can fire. T2
is enabled to fire

157
00:11:54.990 --> 00:11:58.990 
and then state p3
p4 is reached. P3

158
00:12:00.950 --> 00:12:02.240 
p4 is reached.

159
00:12:04.200 --> 00:12:08.240 
In p3 p4 we have concurrency because
two different things can happen.

160
00:12:09.050 --> 00:12:11.960 
Either t3 can fire

161
00:12:16.120 --> 00:12:17.480 
or t4 can fire.

162
00:12:20.150 --> 00:12:23.840 
Both can fire because tokens
are on p3 one token is on p3

163
00:12:24.100 --> 00:12:25.540 
and one token is on p4.

164
00:12:26.440 --> 00:12:28.340 
After t3 has fired

165
00:12:28.950 --> 00:12:30.550 
what happens the

166
00:12:31.160 --> 00:12:36.090 
token goes from p3 to p5
resulting in p5 p4.

167
00:12:44.690 --> 00:12:52.050 
In states p3 p4 t4 fires we
end up in states p3 p6.

168
00:12:53.850 --> 00:12:54.610 
p3 p6.

169
00:13:00.220 --> 00:13:02.040 
Alright then

170
00:13:03.450 --> 00:13:09.760 
well after p3 has fired t3
has fired, t4 can fire

171
00:13:10.160 --> 00:13:14.920 
or and that brings us to
the t4 can fire p5 p6.

172
00:13:20.620 --> 00:13:25.090 
And we also reach p5
p6 in it t3 fires.

173
00:13:26.860 --> 00:13:32.210 
At that point we have a talk with
a p5 and p6 so that t5 can fire

174
00:13:33.550 --> 00:13:34.840 
and we end up in p7.

175
00:13:36.930 --> 00:13:39.360 
That's the reachability
graph of this petri net.

176
00:13:39.780 --> 00:13:43.260 
So it shows all states that are
reachable by this petri net

177
00:13:43.500 --> 00:13:49.000 
and it also tells us which
transitions are used to achieve

178
00:13:49.010 --> 00:13:50.530 
the respective state
transitions.

179
00:13:58.530 --> 00:14:02.000 
Alright that again discusses the
firing of a transition but I think I

180
00:14:02.240 --> 00:14:04.200 
went through this in
quite detail already.

181
00:14:08.880 --> 00:14:13.130 
Alright that concludes basically
our petri net primer

182
00:14:13.920 --> 00:14:16.550 
I introduced petri net
in an informal way.

183
00:14:16.950 --> 00:14:20.350 
I explained that there are states
that that there are places

184
00:14:20.350 --> 00:14:24.680 
and there are transitions, that a bipartite
structure on states and transitions.

185
00:14:25.660 --> 00:14:31.370 
I discussed the structure of a petri net
and also the behavior of petri net

186
00:14:31.380 --> 00:14:34.800 
that is defined by the token played. I
also looked at the reachability graph.
