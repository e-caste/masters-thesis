WEBVTT

1
00:00:00.560 --> 00:00:04.880 
Now we want to discuss weak
passwords and this is problematic

2
00:00:04.880 --> 00:00:08.690 
in the context of password
protected accounts.

3
00:00:09.860 --> 00:00:11.090 
Let's have a
closer look.

4
00:00:11.810 --> 00:00:17.310 
Many users use weak passwords
for services on the internet

5
00:00:17.910 --> 00:00:21.850 
and what are weak passwords
and why they do this?

6
00:00:22.990 --> 00:00:30.080 
The reason is simply human factor. It's
more convenient to remember a short word,

7
00:00:30.390 --> 00:00:35.340 
a word with some meaning, my
own name I will never forget.

8
00:00:36.740 --> 00:00:40.950 
Often the reason is that
security awareness is missing,

9
00:00:41.590 --> 00:00:44.650 
that people are
not aware that

10
00:00:45.290 --> 00:00:51.210 
it is dangerous for themselves
if they use

11
00:00:51.210 --> 00:00:53.960 
and work with weak
passwords and

12
00:00:54.570 --> 00:01:00.200 
the reason is complex passwords are
more difficult to remember

13
00:01:00.860 --> 00:01:07.120 
and this results in that many
many users use weak passwords.

14
00:01:07.990 --> 00:01:11.670 
And such password can be weak for
several reasons, for example

15
00:01:12.100 --> 00:01:16.980 
because of a low complexity,
because the password can easily

16
00:01:16.980 --> 00:01:22.080 
be derived from the user context. For
example, his first name, second name,

17
00:01:22.890 --> 00:01:25.770 
wife's name, children
name, or others.

18
00:01:26.670 --> 00:01:30.570 
Password can be found
in a dictionary. This can be

19
00:01:31.790 --> 00:01:34.780 
dangerous we will
discuss later. Attacks

20
00:01:35.810 --> 00:01:39.120 
which are based on dictionaries

21
00:01:40.120 --> 00:01:43.300 
and because these are
very, by means of the

22
00:01:43.770 --> 00:01:46.130 
reason computers which
are very powerful,

23
00:01:47.730 --> 00:01:50.230 
the attacker try out to
crack a password

24
00:01:50.990 --> 00:01:54.190 
on the basis of such a dictionary.
And if the password, if I

25
00:01:54.190 --> 00:01:55.900 
use the password out
of the dictionary

26
00:01:56.580 --> 00:02:01.020 
then they are able to get
access to my password

27
00:02:01.450 --> 00:02:07.100 
and also this is a source for weak
passwords when a password is

28
00:02:07.230 --> 00:02:12.830 
reused, often time and for
many different services.

29
00:02:13.640 --> 00:02:18.930 
Let's start to look at passwords
with lower complexity.

30
00:02:19.760 --> 00:02:23.050 
And this is a very
important reason,

31
00:02:24.900 --> 00:02:27.280 
passwords need to be
considered weak.

32
00:02:28.070 --> 00:02:31.380 
So passwords that are less
than twelve characters

33
00:02:32.840 --> 00:02:34.070 
are considered weak.

34
00:02:35.290 --> 00:02:38.180 
Sometimes the discussion is
whether eight characters

35
00:02:39.260 --> 00:02:40.580 
are the minimal length.

36
00:02:41.370 --> 00:02:47.410 
You are on the secure side if you use passwords
that have at least twelve characters.

37
00:02:48.120 --> 00:02:50.550 
Then often people
choose the

38
00:02:51.350 --> 00:02:57.850 
characters which are used to form the
password only from one group of characters.

39
00:02:58.170 --> 00:03:02.360 
They only use numbers or
they only use letters

40
00:03:02.930 --> 00:03:05.430 
or they only use
special characters.

41
00:03:06.120 --> 00:03:11.380 
And then when it's found in
dictionary, it is weak because then

42
00:03:11.390 --> 00:03:17.760 
the cracking methods will find it
and what is also dangerous and

43
00:03:18.040 --> 00:03:22.470 
leads to a weak password
if keyboard pattern

44
00:03:22.890 --> 00:03:27.240 
sequences are used. For example
if you look to these two

45
00:03:27.920 --> 00:03:33.560 
then you see these are immediately neighbouring
keys. So that it's easy to remember.

46
00:03:33.810 --> 00:03:40.250 
It looks difficult but
in reality it's not difficult

47
00:03:40.390 --> 00:03:44.180 
because it belongs to such
a pattern that can be found

48
00:03:45.270 --> 00:03:46.090 
on the keyboard.

49
00:03:47.330 --> 00:03:52.150 
Here is a table with the top ten
passwords and this information

50
00:03:52.150 --> 00:03:56.590 
is from our HPI identity leak checker.
You remember the service which

51
00:03:56.590 --> 00:04:00.290 
helps you to check whether
your digital identity

52
00:04:00.910 --> 00:04:02.650 
is published in
the internet

53
00:04:03.310 --> 00:04:11.210 
and we can do such kind of analysis because
one third of this leaked identity

54
00:04:11.800 --> 00:04:16.860 
data sets have a
password in plain text.

55
00:04:17.550 --> 00:04:24.500 
So the service provider obviously did not
follow the advice to store passwords

56
00:04:24.620 --> 00:04:26.060 
only in a hashed value.

57
00:04:26.940 --> 00:04:30.350 
So if we look to the top
ten passwords, you see

58
00:04:30.860 --> 00:04:36.370 
four billion passwords, we could
analyze about four billion

59
00:04:36.620 --> 00:04:40.540 
that 123456 is the
most popular password.

60
00:04:41.190 --> 00:04:43.950 
And it's used by

61
00:04:45.650 --> 00:04:48.700 
almost 8.1% of

62
00:04:49.520 --> 00:04:56.220 
the four billion networks. So four hundred
million people use the password.

63
00:04:57.410 --> 00:05:02.640 
So it's not exactly one. So
three hundred million people use

64
00:05:02.760 --> 00:05:06.290 
the same password use
the password 123456.

65
00:05:06.900 --> 00:05:12.520 
Every attacker knows and guesses and
tries first this password. Then

66
00:05:12.810 --> 00:05:17.050 
place two. Top three
is password itself.

67
00:05:17.610 --> 00:05:20.110 
This pattern

68
00:05:21.450 --> 00:05:26.340 
on the keyboard and the others. So
it is slightly changing from

69
00:05:26.340 --> 00:05:30.470 
year to year but generally it's
about the same. And it shows

70
00:05:30.970 --> 00:05:34.310 
such kind of password.

71
00:05:35.130 --> 00:05:36.560 
It's a real disaster.

72
00:05:37.480 --> 00:05:40.250 
So many people
are not aware that

73
00:05:41.730 --> 00:05:46.630 
they use such a weak password which
also is used by many other people.

74
00:05:48.050 --> 00:05:52.520 
Many users also use personal
data as passwords.

75
00:05:53.030 --> 00:05:57.320 
So first name is very popular,
last name, name of the partner,

76
00:05:57.320 --> 00:06:00.330 
the child, the parents,
the date of birth,

77
00:06:02.320 --> 00:06:08.480 
the birthday of me, of my
partner, of children,

78
00:06:09.050 --> 00:06:16.460 
favorite band, actor, author. So these are
data with a little bit check by

79
00:06:17.450 --> 00:06:22.750 
the attacker if he wants to get
a specific user's password,

80
00:06:23.230 --> 00:06:27.570 
then often such kind of
information help the attacker

81
00:06:28.070 --> 00:06:31.740 
to find, to guess the
password of the user.

82
00:06:33.210 --> 00:06:40.050 
To some extent the password also can be
derived from the respective service name.

83
00:06:40.580 --> 00:06:46.930 
So some people choose the name of a
service as the password for that service,

84
00:06:47.110 --> 00:06:51.710 
because the idea is to use so many
services to remember exactly

85
00:06:51.710 --> 00:06:55.220 
the password for that service they
use, when they go to adobe

86
00:06:55.670 --> 00:07:00.250 
adobe123, or photoshop,
or adobe1 and of course

87
00:07:00.470 --> 00:07:05.590 
with the same ideas also the
attacker can guess can try

88
00:07:05.610 --> 00:07:08.280 
is this the password of a user
and in this way can

89
00:07:09.480 --> 00:07:14.820 
find the right password and be
able to misuse this digital

90
00:07:14.820 --> 00:07:17.040 
identity that's connected
to the password.

91
00:07:17.810 --> 00:07:22.760 
An attacker who knows the victim's
password can easily guess,

92
00:07:23.190 --> 00:07:27.370 
who knows such kind of
information can easily guess

93
00:07:27.960 --> 00:07:34.210 
such passwords. So such passwords
are weak and dangerous in use.

94
00:07:35.240 --> 00:07:39.150 
Another source for weak passwords
is the re-use for passwords.

95
00:07:40.280 --> 00:07:45.180 
So many users
use relatively secure passwords

96
00:07:45.560 --> 00:07:51.530 
but they use the same password often
and they use this for all accounts.

97
00:07:51.870 --> 00:07:55.540 
For example this looks very
secure it has the right length

98
00:07:55.950 --> 00:08:02.510 
two, four, six, eight - it has the mixture
between different types of characters.

99
00:08:02.990 --> 00:08:08.570 
So it looks like a strong password
but it's used as login for

100
00:08:08.700 --> 00:08:10.920 
every online service.

101
00:08:14.110 --> 00:08:20.380 
Or a little bit differentiated. So here
this is what is done. For service A, the

102
00:08:20.780 --> 00:08:24.100 
secure password which is
used for all other service,

103
00:08:25.720 --> 00:08:30.060 
get the short hint that it's
used as password for service A.

104
00:08:30.350 --> 00:08:35.990 
B shows it's used for service B. So
such kind, such ideas of the user

105
00:08:36.360 --> 00:08:40.670 
that he on the one side wants
to work with a secure password,

106
00:08:40.670 --> 00:08:44.920 
on the other side want to use this
password for all services and so

107
00:08:45.530 --> 00:08:49.350 
he or she makes some
little modifications.

108
00:08:49.930 --> 00:08:56.020 
This helps the attackers to get
access to digital identities,

109
00:08:56.210 --> 00:08:57.990 
for example when
they leak one

110
00:08:59.040 --> 00:09:04.210 
database of one service, then there is
a great chance that they can misuse

111
00:09:04.780 --> 00:09:07.470 
this password also
for other services.

112
00:09:09.130 --> 00:09:12.860 
If the password data of only
one service is leaked,

113
00:09:13.700 --> 00:09:17.010 
then all other services
are affected. With

114
00:09:19.450 --> 00:09:25.650 
our ID-Leak checker service we also
analyzed one billion leaked credentials,

115
00:09:26.380 --> 00:09:29.990 
email or password, so

116
00:09:30.690 --> 00:09:35.530 
one billion and we find out
sixty eight million people

117
00:09:36.890 --> 00:09:43.470 
users have at least two accounts
and are leaked with two accounts

118
00:09:43.590 --> 00:09:49.570 
and twenty percent of that users
use identical passwords multiple

119
00:09:49.570 --> 00:09:55.480 
time for different services. Twenty seven
percent of these sixty eight million users

120
00:09:55.820 --> 00:10:02.080 
use similar passwords multiple times
but the similarity is very close.

121
00:10:02.420 --> 00:10:06.540 
So the individualization of the
possible to the different service

122
00:10:06.890 --> 00:10:08.450 
is done only in a very

123
00:10:09.280 --> 00:10:17.550 
light way. But for similar services reuse
rate can go up to seventy percent.

124
00:10:18.250 --> 00:10:25.410 
So this shows how dangerous is it to
reuse a password for several services.

125
00:10:26.740 --> 00:10:31.230 
What are the properties of
secure or strong passwords?

126
00:10:31.930 --> 00:10:36.240 
A password is called
strong when it is complex

127
00:10:36.960 --> 00:10:38.640 
and when it is
difficult to guess.

128
00:10:39.700 --> 00:10:46.310 
We will later on look to some of the
attacks. So a password is considered strong

129
00:10:46.530 --> 00:10:48.770 
if the known attack methods

130
00:10:49.590 --> 00:10:56.370 
will not not help to
find the password out.

131
00:10:56.840 --> 00:11:00.060 
Here are some advises for
choosing good passwords.

132
00:11:00.630 --> 00:11:03.660 
A password should
be case sensitive

133
00:11:04.370 --> 00:11:10.040 
because this increases the number of characters.
If you use small and large characters

134
00:11:10.480 --> 00:11:14.710 
then it's doubling the number of
factors and when brute force

135
00:11:14.710 --> 00:11:17.110 
attacks are tried, you
remember brute force was

136
00:11:17.600 --> 00:11:23.380 
the attack when an attacker simply
tries out all sequences of characters

137
00:11:23.700 --> 00:11:25.310 
then he has to
work much harder

138
00:11:26.520 --> 00:11:29.410 
to find a password when

139
00:11:31.110 --> 00:11:35.090 
this is the attack, in the attack
one has to distinguish between

140
00:11:35.370 --> 00:11:40.390 
upper case and lower case letters. Then
use combinations of multiple words.

141
00:11:40.790 --> 00:11:44.820 
No word what can be found, one
simply can find in a dictionary,

142
00:11:45.800 --> 00:11:47.590 
add several words together, this

143
00:11:49.140 --> 00:11:51.450 
is called typically
a passphrase.

144
00:11:53.080 --> 00:11:59.410 
Beside of using case-sensitive
characters, one should also use

145
00:11:59.820 --> 00:12:04.520 
digits and special characters
inside a password. And then we

146
00:12:04.520 --> 00:12:09.880 
already mentioned minimum length should be
length twelve, at least twelve characters

147
00:12:10.570 --> 00:12:15.880 
from many different
groups because this

148
00:12:15.880 --> 00:12:19.100 
makes it very very difficult,
almost impossible,

149
00:12:19.580 --> 00:12:25.400 
for the attacker to succeed with
such a cracking attack or in a

150
00:12:27.450 --> 00:12:32.550 
guessing attack and the reason
is simple. With each additional

151
00:12:33.180 --> 00:12:34.470 


152
00:12:35.650 --> 00:12:42.760 
letter, the number of possibilities
is exponentially growing.

153
00:12:45.470 --> 00:12:48.190 
No passwords from
a dictionary,

154
00:12:48.910 --> 00:12:53.010 
because this dictionary attack I already
mentioned would help to reveal,

155
00:12:53.230 --> 00:12:59.990 
and no passwords from user context.
This helps to guess the password.

156
00:13:00.270 --> 00:13:03.090 
And then do not use
old passwords

157
00:13:03.810 --> 00:13:09.970 
again. So in summary the problem with many
users is that they choose weak passwords

158
00:13:11.140 --> 00:13:16.500 
because of a lack of security
awareness and for convenience.

159
00:13:17.320 --> 00:13:22.820 
Typically this is called human factor. Weak
passwords are much easier to remember

160
00:13:23.190 --> 00:13:30.240 
but they are very easy to guess or to
crack. So what's easy for the user

161
00:13:30.680 --> 00:13:35.910 
makes it also easy for the attacker to get
access to the password and to misuse this.

162
00:13:37.120 --> 00:13:41.580 
Weak passwords have low complexity,
can be derived from user context

163
00:13:41.960 --> 00:13:44.050 
and password reuse.

164
00:13:46.240 --> 00:13:50.040 
Each password that's reused several
times for several service,

165
00:13:50.710 --> 00:13:54.760 
needs to be considered
weak, because if the attacker

166
00:13:55.210 --> 00:13:59.230 
succeeds to get one possible
database in his hand,

167
00:13:59.820 --> 00:14:05.610 
then he can find out the password of
a user in that service, he can use

168
00:14:05.750 --> 00:14:07.850 
the password also for
many other services.

169
00:14:08.570 --> 00:14:12.320 
So if a strong password
is leaked in plaintext

170
00:14:12.850 --> 00:14:17.500 
even if his possible is strong and it's
leaked then an attacker can misuse this.
