WEBVTT

1
00:00:00.640 --> 00:00:04.660 
Welcome to knowledge graphs, lecture
two - basic semantic technologies.

2
00:00:04.910 --> 00:00:08.280 
So in this lecture we are going
to focus on how to represent

3
00:00:08.280 --> 00:00:10.170 
simple facts with rdf.

4
00:00:10.830 --> 00:00:16.130 
So in the basic architecture of
the web of data we are going

5
00:00:16.130 --> 00:00:20.820 
to focus on the information exchange with
the help of resource description framework.

6
00:00:21.750 --> 00:00:26.380 
We are going to use the example of greenhouse
in the rest of the lecture since

7
00:00:26.740 --> 00:00:30.850 
we have already established that
climate change is the everest

8
00:00:30.850 --> 00:00:31.970 
of all the problems.

9
00:00:33.630 --> 00:00:37.720 
So let us take this example the
greenhouse effect has been

10
00:00:37.720 --> 00:00:42.100 
discovered in eighteen
twenty four in a very intuitive way.

11
00:00:42.360 --> 00:00:46.620 
So this can be actually represented
with the help of directed graph.

12
00:00:46.950 --> 00:00:51.750 
So greenhouse effect and eighteen
twenty four are the nodes here

13
00:00:51.890 --> 00:00:55.650 
and has been discovered
in is the relation here.

14
00:00:56.150 --> 00:00:59.330 
So how do we a
formalize that?

15
00:01:00.060 --> 00:01:04.430 
Greenhouse effect is the subject,
has been discovered in is

16
00:01:04.560 --> 00:01:08.460 
the predicate and eighteen
twenty four is the object.

17
00:01:10.140 --> 00:01:15.290 
Now subject it is a URI,
predicate is also a URI.

18
00:01:15.860 --> 00:01:20.530 
However an object can either
be a URI or a literal.

19
00:01:21.820 --> 00:01:27.700 
So here subject predicate and
object these together are called

20
00:01:27.700 --> 00:01:33.530 
as rdf statements or rdf triple. So
subject as we just established that

21
00:01:33.850 --> 00:01:39.580 
is a URI, property is also a
URI, object or the value of

22
00:01:39.590 --> 00:01:41.890 
this property is URI
or a literal.

23
00:01:43.350 --> 00:01:46.460 
So in a sentence in a
natural language sentence

24
00:01:47.150 --> 00:01:52.960 
we have subject predicate and
object and then in rdf we

25
00:01:52.960 --> 00:01:56.030 
are going to refer to
predicate as a property.

26
00:01:58.760 --> 00:02:04.390 
The n triple serialization of the
previous example can is shown here.

27
00:02:04.660 --> 00:02:09.250 
So you have a greenhouse effect
discovered in eighteen twenty four.

28
00:02:09.720 --> 00:02:13.740 
The greenhouse effect is a URI as
you can see and it is a subject.

29
00:02:14.270 --> 00:02:18.970 
URIs are always represented
in the middle of angled brackets,

30
00:02:19.560 --> 00:02:23.830 
similarly property is also
a URI and it is represented

31
00:02:24.630 --> 00:02:29.290 
with angle brackets. However
eighteen twenty four here is a

32
00:02:29.290 --> 00:02:34.010 
literal and we use double
quotes to represent a literal.

33
00:02:35.040 --> 00:02:38.540 
And each statement ends
with a dot.

34
00:02:42.700 --> 00:02:47.130 
Graphically this can be represented
in this form of node edge

35
00:02:47.140 --> 00:02:48.220 
and another node.

36
00:02:50.390 --> 00:02:56.010 
So we continue with the same example that
greenhouse effect was discovered in

37
00:02:56.170 --> 00:02:57.430 
eighteen twenty four

38
00:02:58.150 --> 00:03:00.400 
which was discovered
by Joseph Fourier

39
00:03:01.190 --> 00:03:06.760 
and then we give more explanation,
more details on Joseph Fourier.

40
00:03:08.610 --> 00:03:14.160 
His birth place was Auxerre
and then his birth date was

41
00:03:14.380 --> 00:03:19.070 
seventeen sixty eight. Well this
is a date literal. We will talk

42
00:03:19.070 --> 00:03:21.540 
about more about it in
the coming lectures.

43
00:03:22.160 --> 00:03:24.150 
And Auxerre is in France.

44
00:03:25.120 --> 00:03:30.060 
So we represent the same graph in
the form of rdf triples here

45
00:03:30.060 --> 00:03:35.500 
where the blue part represent the subject,
the red part represents the property

46
00:03:35.650 --> 00:03:38.630 
and the green part
represent the objects.

47
00:03:42.200 --> 00:03:45.740 
So here each
of these entities are

48
00:03:46.360 --> 00:03:48.760 
they are also called
individuals

49
00:03:50.650 --> 00:03:56.030 
and then we have classes which are a
set of individuals or set of entities,

50
00:03:57.120 --> 00:04:01.790 
then we have some literals, so
eighteen twenty four and seventeen

51
00:04:01.790 --> 00:04:05.110 
sixty eight are the date type
literals and then we have the

52
00:04:05.110 --> 00:04:08.920 
longitude and the latitude
information which are float.

53
00:04:10.470 --> 00:04:13.420 
And then we have the properties
which are represented in the

54
00:04:13.420 --> 00:04:15.860 
form of a URI. So

55
00:04:16.550 --> 00:04:22.460 
then we have the vocabularies which are used
in representing this information

56
00:04:23.390 --> 00:04:27.580 
which are the standard forms
which are used by used by many

57
00:04:27.580 --> 00:04:29.590 
of these knowledge
graphs.

58
00:04:30.820 --> 00:04:34.760 
So the URIs identify and
reference resources uniquely

59
00:04:35.230 --> 00:04:39.630 
and then we have the literals
which have the which describe

60
00:04:39.630 --> 00:04:43.650 
the data where values which do
not have a separate existence.

61
00:04:44.120 --> 00:04:48.940 
So here in this example the
greenhouse effect is connected

62
00:04:48.940 --> 00:04:51.270 
to an entity which
is discoverer

63
00:04:51.980 --> 00:04:57.700 
Joseph Fourier and then it has a literal
eighteen twenty four as described

64
00:04:57.920 --> 00:05:02.510 
previously. Now we are going to
go into detail a little bit

65
00:05:02.510 --> 00:05:04.330 
more detail on literals.

66
00:05:06.280 --> 00:05:11.080 
So type neutrals can be represented with
the help of xml schema data types.

67
00:05:11.380 --> 00:05:16.100 
So we have for example semantics
which is a string literal.

68
00:05:16.540 --> 00:05:20.060 
Then we have float literals,
than we have date

69
00:05:20.740 --> 00:05:26.280 
and also there are language tags used
with the string literals, for example

70
00:05:26.700 --> 00:05:30.970 
german and english. For more details
you can click on the link

71
00:05:30.980 --> 00:05:32.460 
on on the right
hand side.

72
00:05:34.640 --> 00:05:38.150 
One of the basic constructs that
has not been discussed so

73
00:05:38.150 --> 00:05:43.480 
far is the blank node. So the
blank node denotes existence of

74
00:05:43.480 --> 00:05:47.100 
an individual with the specific
attributes but without providing

75
00:05:47.100 --> 00:05:52.380 
an identification or the reference. And
this cannot be referenced externally.

76
00:05:54.650 --> 00:05:59.410 
So rdf actually comes with
several different serialisation

77
00:05:59.410 --> 00:06:05.970 
formats and triples - rdf/xml,
turtle, json-ld, trig, n-quads

78
00:06:06.570 --> 00:06:12.840 
and n-trifles is extended by turtle
which is further extended by a trig.

79
00:06:13.150 --> 00:06:18.220 
In this when the rest of these lectures
we are going to use rdf-turtle.

80
00:06:19.940 --> 00:06:23.270 
In the next lecture you
will find more details on rdf

81
00:06:23.270 --> 00:06:24.700 
turtle serialization.
