WEBVTT

1
00:00:00.920 --> 00:00:04.800 
now let's continued to discuss the
attacks anoints web services.

2
00:00:04.800 --> 00:00:07.970 
the most famous and
popula web service

3
00:00:08.310 --> 00:00:14.350 
is the world wide web. we
will see the possibility

4
00:00:14.350 --> 00:00:18.530 
to attacks the web, is
possible on two sides.

5
00:00:19.240 --> 00:00:22.980 
but first to say that the world
wide web is the most widely

6
00:00:22.980 --> 00:00:27.540 
used service in the internet,
and this popularity makes

7
00:00:27.550 --> 00:00:32.200 
it as a very attracted
goal for cybercriminals.

8
00:00:32.920 --> 00:00:36.680 
so the two levels of the web
that can be attacked are:

9
00:00:36.990 --> 00:00:41.500 
one, via the web
browser for users.

10
00:00:42.050 --> 00:00:47.850 
to client-side of the user. and
the other level is to attack the

11
00:00:47.850 --> 00:00:54.330 
web servers. that means the attack
of the service providers.

12
00:00:54.620 --> 00:01:00.490 
with the services to
get some advantage.

13
00:01:00.490 --> 00:01:04.490 
In this video we
want to discuss

14
00:01:04.740 --> 00:01:10.410 
attacks by a web services. this is
the window for the user. this

15
00:01:10.410 --> 00:01:14.070 
is the way the user interact
with a web through

16
00:01:14.230 --> 00:01:17.880 
his or her browser.
so the browse,

17
00:01:18.040 --> 00:01:23.980 
display user interfaces

18
00:01:24.240 --> 00:01:27.070 
of services and
interact with

19
00:01:27.260 --> 00:01:31.410 
corresponding service. for
example, search queries

20
00:01:31.410 --> 00:01:35.830 
it can be given with web shops,
the communication is via the

21
00:01:35.900 --> 00:01:40.060 
browse also performed
on online banking

22
00:01:40.060 --> 00:01:45.010 
and others. so what the attacker
try to explore is the

23
00:01:45.010 --> 00:01:48.880 
carelessness
of the users

24
00:01:49.060 --> 00:01:52.050 
and rules them onto,
for example, websites

25
00:01:52.400 --> 00:01:58.910 
with malicious content. and as there
are a number of possibilities

26
00:01:59.180 --> 00:02:04.480 
often by exploiting
vulnerabilities

27
00:02:04.870 --> 00:02:10.440 
of web browser. and such
vulnerabilities including

28
00:02:10.440 --> 00:02:15.750 
is for example in plugins,
in various plugins

29
00:02:15.760 --> 00:02:20.300 
which help to support
the browser

30
00:02:20.610 --> 00:02:24.910 
for doing special activities with
special services and special

31
00:02:24.910 --> 00:02:29.570 
format and others. the
attack are successful in

32
00:02:29.570 --> 00:02:33.480 
in exploiting vulnerabilities
wheel the vulnerabilities in the

33
00:02:33.480 --> 00:02:38.480 
script interpreters. by which
are part of the browser which

34
00:02:38.480 --> 00:02:45.080 
helps them to perform
such scripts to present

35
00:02:45.630 --> 00:02:48.740 
activities and images
on the browser. and

36
00:02:49.090 --> 00:02:54.000 
also information leaks in the
browser are vulnerabilities that

37
00:02:54.000 --> 00:02:59.130 
can be misused by attackers.
let's have a closer

38
00:02:59.130 --> 00:03:04.630 
look to some of these
vulnerabilities of a web browsers.

39
00:03:04.740 --> 00:03:07.970 
and let's start to this
java and activeX.

40
00:03:08.750 --> 00:03:13.460 
the java and ActiveX allow
small applications

41
00:03:13.870 --> 00:03:19.190 
that can be embedded in
the web page and that

42
00:03:20.320 --> 00:03:24.960 
do can if it is these as
applications are performed.

43
00:03:25.140 --> 00:03:29.380 
some activities can be show in
the the web becomes lively and

44
00:03:29.380 --> 00:03:32.680 
more interesting for
the users. they are

45
00:03:32.940 --> 00:03:37.400 
many known vulnerabilities
in Java and ActiveX

46
00:03:37.620 --> 00:03:43.320 
that allow embedded
malicious applications.

47
00:03:43.800 --> 00:03:48.300 
Most of them was go to access
protected resources or data

48
00:03:48.800 --> 00:03:54.680 
on the user's system. today,
most of the vulnerabilities

49
00:03:54.720 --> 00:03:58.860 
are closed, are
hardly ever in use.

50
00:03:59.370 --> 00:04:02.720 
but people need to be
careful because of

51
00:04:02.730 --> 00:04:08.790 
an old system are used.
another vulnerability is by

52
00:04:09.100 --> 00:04:13.870 
means of PDF plugins. pdf,
a very famous format

53
00:04:14.230 --> 00:04:18.730 
to show documents, a
very different system.

54
00:04:19.080 --> 00:04:24.580 
and the pdf plugins allow
viewing of such files

55
00:04:24.840 --> 00:04:30.900 
directly in the browser. with
a pdf plugins, many security

56
00:04:30.900 --> 00:04:34.480 
flaws have been discovered
in recent years.

57
00:04:35.010 --> 00:04:39.060 
for example, the
attacker are able to

58
00:04:39.480 --> 00:04:45.610 
hide remote code inside of
pdf and as soon as the pdf

59
00:04:45.910 --> 00:04:52.700 
started to shows a
document or the remote

60
00:04:52.700 --> 00:04:59.240 
code is executed, of course
it need some very special

61
00:04:59.640 --> 00:05:03.900 
prepared pdf documents
which prepared by the

62
00:05:03.900 --> 00:05:09.130 
attacker, but then the system
performs executed code which

63
00:05:09.130 --> 00:05:14.110 
are hidden in that pdf document.
also a dynamic javascript content

64
00:05:14.360 --> 00:05:19.980 
can be embedded in
such pdf files and

65
00:05:20.710 --> 00:05:25.250 
allows the attackers

66
00:05:25.250 --> 00:05:31.440 
to misuse and to hide
malicious code, and to

67
00:05:31.590 --> 00:05:37.250 
force the system to executes
the malicious code.

68
00:05:38.590 --> 00:05:43.090 
a very famous vulnerability
by means of plugins

69
00:05:43.350 --> 00:05:48.240 
is Adobe flash. Adobe Flash
is a multimedia platform

70
00:05:48.500 --> 00:05:51.720 
which is used for animations
for animations,

71
00:05:52.000 --> 00:05:55.860 
games, for vector graphic, videos
and complex user interfaces

72
00:05:56.140 --> 00:06:00.670 
in the browser. and
adobe flash it's

73
00:06:00.670 --> 00:06:05.260 
quite complex, many security
flaws have been discovered

74
00:06:05.610 --> 00:06:09.110 
in recent years. for
example, flash cookies may

75
00:06:09.320 --> 00:06:14.430 
violate the users privacy.
vulnerabilities in interpreters

76
00:06:14.430 --> 00:06:17.990 
for flesh programming languages.
for example ActionsScript,

77
00:06:18.140 --> 00:06:20.770 
allow the execution
of malicious code.

78
00:06:21.090 --> 00:06:24.610 
so really it dangerous
things and for example,

79
00:06:24.760 --> 00:06:29.810 
2015, in a very serious security
gaps were indentified

80
00:06:29.950 --> 00:06:34.230 
twice in a row ,for which
patches were not provided

81
00:06:34.420 --> 00:06:39.330 
by the manufacturers in time.
you remember as soon as such

82
00:06:39.330 --> 00:06:44.360 
such security gaps
become public.

83
00:06:44.680 --> 00:06:50.240 
the provider has to
design a patch, has to

84
00:06:50.240 --> 00:06:53.480 
send the patch to its
customers, to its users.

85
00:06:53.700 --> 00:06:58.320 
but for this a security
gaps, there was

86
00:06:58.500 --> 00:07:03.390 
no patches were delivered, so
the system were massively

87
00:07:03.390 --> 00:07:08.120 
exploited by attackers, the
browser manufacture advised for

88
00:07:08.120 --> 00:07:11.690 
that reason to
completely deactivate

89
00:07:12.020 --> 00:07:16.180 
Flash or switch off
the plugin itself

90
00:07:16.330 --> 00:07:19.630 
through a corresponding
browser

91
00:07:19.890 --> 00:07:23.430 
update. so this
shows that such

92
00:07:23.660 --> 00:07:27.850 
vulnerabilities
into plug-ins

93
00:07:28.020 --> 00:07:31.410 
provides a way that
attacker can attack

94
00:07:31.600 --> 00:07:37.750 
a browser. another family of the
vulnerabilities an attack possibilities are

95
00:07:37.860 --> 00:07:42.870 
provided by script
interpreter. such a script

96
00:07:42.870 --> 00:07:48.050 
is a browser component
that runs scripts-

97
00:07:48.230 --> 00:07:53.930 
small programs, on web pages
which allows user interaction

98
00:07:53.930 --> 00:07:58.930 
a more lively presentation
of the website.

99
00:07:59.200 --> 00:08:03.480 
so in this way the scripts
can provide dynamic content

100
00:08:03.820 --> 00:08:08.070 
in a web page. for example,
checking the completeness of a

101
00:08:08.080 --> 00:08:13.460 
form, when a form need to be
filled out by the user.

102
00:08:13.580 --> 00:08:18.060 
or such a dynamic contact can
control presentation and graphics

103
00:08:18.280 --> 00:08:22.610 
in a website, can interact
with the user, can

104
00:08:22.870 --> 00:08:29.110 
change the colors and other things.
these small programs, the

105
00:08:29.110 --> 00:08:33.590 
scripts are directly integrated
into the website code.

106
00:08:33.770 --> 00:08:38.620 
in the HTML code. so when the
browser request such HTML

107
00:08:38.620 --> 00:08:44.000 
page in the web.
there scripts are

108
00:08:44.000 --> 00:08:48.200 
embedded and so on the
web page the user

109
00:08:48.380 --> 00:08:53.750 
can interact with a web page, and
see a web page can interact

110
00:08:53.840 --> 00:08:56.540 
without going back
to the server.

111
00:08:56.740 --> 00:09:02.600 
so the scripts are executed
on the users computer

112
00:09:02.610 --> 00:09:06.360 
or this code that comes from
an external party from the

113
00:09:06.680 --> 00:09:11.300 
web server, and it is
performed in the browser.

114
00:09:11.520 --> 00:09:15.470 
it is loaded with a web page
and then it's performed

115
00:09:15.470 --> 00:09:20.350 
in the browser. and the most common
scripting language, the most

116
00:09:20.350 --> 00:09:25.000 
common programming
language for such a

117
00:09:25.020 --> 00:09:31.100 
script in website is javascript.
by the way, javascript

118
00:09:31.100 --> 00:09:35.790 
has nothing to do with java.
it is and a is a marketing

119
00:09:36.260 --> 00:09:42.770 
name that was selected. the problem
is that in this script language,

120
00:09:42.780 --> 00:09:48.050 
in javascript, there is a
lot of security problems.

121
00:09:48.530 --> 00:09:55.040 
so basically the javascript has
access to all the elements

122
00:09:55.040 --> 00:10:00.280 
of a web page. of course, it's
necessary because javascript programs

123
00:10:00.280 --> 00:10:03.600 
should be able to manipulate
all these elements.

124
00:10:04.010 --> 00:10:06.870 
but this is, of course
can be misused by

125
00:10:07.150 --> 00:10:13.670 
an attacker, and javascript
can also access some

126
00:10:13.670 --> 00:10:19.190 
activity of the user, like a
browser history or the cookies.

127
00:10:19.760 --> 00:10:26.370 
so as a protection measure
the designers of javascript

128
00:10:26.370 --> 00:10:33.460 
programs run in a so
called sandbox.

129
00:10:33.890 --> 00:10:38.790 
and the books, this restricted
area of system resources

130
00:10:39.170 --> 00:10:43.490 
provided by the operating system
which is isolated from the

131
00:10:43.490 --> 00:10:48.600 
rest of the system. because
this programs that comes from

132
00:10:48.600 --> 00:10:52.510 
external which is not
a in a secured.

133
00:10:52.670 --> 00:10:57.210 
and for that reason or when the
javascript link which was designed,

134
00:10:57.350 --> 00:11:01.040 
it was said, organized
and implemented,

135
00:11:01.340 --> 00:11:04.470 
that such javascript
can only run

136
00:11:04.650 --> 00:11:05.950 
in such a sandboxes.

137
00:11:08.860 --> 00:11:12.330 
in particular, it should be
prevented that javascript

138
00:11:12.330 --> 00:11:17.330 
programs are able to excess
resources of the users computer.

139
00:11:17.720 --> 00:11:23.020 
for example, to access files or
devises which have nothing to

140
00:11:23.020 --> 00:11:27.910 
do with the website. the
problem is that this

141
00:11:28.460 --> 00:11:34.600 
good concept has been
a tech that is able

142
00:11:34.850 --> 00:11:38.030 
to partially undermines
this in the past.

143
00:11:38.370 --> 00:11:43.150 
so it was not complete restricted,
and it could not prevent

144
00:11:43.470 --> 00:11:47.430 
by means of javascript
programs.

145
00:11:47.760 --> 00:11:52.850 
the attackers are able to break
out of the sandbox and to get

146
00:11:52.850 --> 00:11:59.480 
access to a resources of the
user. so there are some other

147
00:11:59.480 --> 00:12:04.120 
problematic attack scenarios.
injection of code. we discuss this

148
00:12:04.120 --> 00:12:07.310 
as another content.

149
00:12:07.490 --> 00:12:12.020 
injection of code by third party
content, for example when one

150
00:12:12.020 --> 00:12:16.640 
notes an advertisement from that
website, and in the advertisement

151
00:12:16.670 --> 00:12:22.040 
there is some
malicious code.

152
00:12:22.440 --> 00:12:25.540 
and in the moment that this
advertisement is loaded,

153
00:12:25.820 --> 00:12:29.630 
the unwanted code is
started in the browser,

154
00:12:31.250 --> 00:12:35.490 
and this is misused
by attackers.

155
00:12:35.490 --> 00:12:41.250 
in the following, we see
advertiser rents a advertising

156
00:12:41.250 --> 00:12:46.230 
space to display a advertising
banners on a web page.

157
00:12:46.410 --> 00:12:49.810 
when the user looks
to that web page.

158
00:12:50.880 --> 00:12:54.800 
the banners typically consists
of html and javascript

159
00:12:54.960 --> 00:12:58.750 
which provided by
the advertiser.

160
00:12:59.190 --> 00:13:04.580 
now an attacker
places attack code

161
00:13:05.080 --> 00:13:11.310 
in his advertisements and
then when the user loads

162
00:13:11.780 --> 00:13:15.170 
this advertisement, then
this hidden attack code

163
00:13:15.900 --> 00:13:20.890 
is performed by the
victim's browser.

164
00:13:20.890 --> 00:13:25.330 
so an attacker rent such
an advertisement,

165
00:13:25.530 --> 00:13:28.650 
but the advertisements,
they are presenting

166
00:13:28.940 --> 00:13:33.980 
with a hidden
attack code.

167
00:13:36.010 --> 00:13:39.740 
what else protection measures?
specific rules in the browser

168
00:13:39.740 --> 00:13:45.130 
can be used to limit the
opportunities for infiltration.

169
00:13:45.540 --> 00:13:50.410 
for example, there is a possibility
to restrict on same origin

170
00:13:50.410 --> 00:13:55.540 
policy, and this
forbids javascript,

171
00:13:55.540 --> 00:13:58.240 
this forbids
javascripts

172
00:13:58.600 --> 00:14:02.800 
to access objects that are not
from the same web server,

173
00:14:03.370 --> 00:14:07.780 
the objects that in a so
called DOM elements.

174
00:14:08.150 --> 00:14:13.030 
typically javascript needs access
to be able to manipulate

175
00:14:13.030 --> 00:14:16.860 
such elements, and here is
the same origin policy, the

176
00:14:17.070 --> 00:14:19.910 
ability of javascript to
excess such objects,

177
00:14:20.170 --> 00:14:26.450 
is limited a on the resources
that came from the same

178
00:14:26.450 --> 00:14:32.380 
server. here to show an example in
script from page: open.hpi.de/courses

179
00:14:32.380 --> 00:14:38.260 
may not access elements from
https://www.example.com

180
00:14:38.500 --> 00:14:42.860 
because

181
00:14:43.140 --> 00:14:46.400 
www.example. com is
on another server

182
00:14:46.900 --> 00:14:54.130 
and it has also not access
to http:// open.hpi.de.

183
00:14:54.130 --> 00:14:57.050 
the difference, the only
difference here is this s.

184
00:14:57.410 --> 00:15:02.020 
and the reason is that is a rather
protocol secured https, and

185
00:15:02.020 --> 00:15:07.390 
there is a pure https. so this
is the same origin policy is

186
00:15:07.390 --> 00:15:12.650 
one protection
measure against

187
00:15:14.060 --> 00:15:18.590 
such misuse of vulnerabilities
of javascript and

188
00:15:18.590 --> 00:15:24.370 
scripting language. another type
of browser attacks concerns

189
00:15:24.380 --> 00:15:28.560 
information leaks on the browser.
so many browser activities

190
00:15:28.680 --> 00:15:32.950 
are automatically stored.
for example in the history

191
00:15:32.950 --> 00:15:35.560 
or the bookmarks, the
cash in the cookies.

192
00:15:35.760 --> 00:15:39.400 
and of course it's functionality
it's designed to gives

193
00:15:39.400 --> 00:15:44.200 
the users the possibility to
serve in a more convenient way

194
00:15:44.440 --> 00:15:47.700 
through the web. so the
user of the browser

195
00:15:48.080 --> 00:15:52.170 
should be as convenient as
possible. for example,

196
00:15:52.530 --> 00:15:55.490 
easier to retrieval

197
00:15:55.820 --> 00:15:59.470 
of already visited
webpages,

198
00:15:59.620 --> 00:16:03.240 
the data that are already
entered once can,

199
00:16:03.510 --> 00:16:07.580 
if necessary, be made
available again

200
00:16:07.580 --> 00:16:11.790 
without re-entering. It is
particularly dangerous

201
00:16:11.790 --> 00:16:14.890 
in this way and knows
your password that

202
00:16:14.890 --> 00:16:19.520 
you have given in once, that
later on used without given in.

203
00:16:19.700 --> 00:16:23.360 
so definitely a in the case
of possible you should be

204
00:16:23.790 --> 00:16:29.490 
switch off. the problem is
this convenient function

205
00:16:29.500 --> 00:16:33.560 
provides big
security risk

206
00:16:34.830 --> 00:16:38.170 
and risk consists in that
data, can be accessed

207
00:16:38.510 --> 00:16:43.140 
the data on your computer,
on your private system

208
00:16:43.140 --> 00:16:48.380 
it can be accessed by the attacker.
so attacker can get and over you

209
00:16:48.490 --> 00:16:53.290 
of all user activities,
can see which website

210
00:16:53.290 --> 00:16:57.290 
the user visited, so he
can conclude what is the

211
00:16:57.290 --> 00:17:00.810 
or what are the hobbits,
what are the interests

212
00:17:01.200 --> 00:17:05.610 
and plans.

213
00:17:05.930 --> 00:17:11.370 
and he send the fishing mails.
with such kind of information

214
00:17:11.670 --> 00:17:17.470 
can be used to design
fishing mails.

215
00:17:17.470 --> 00:17:21.030 
the victims think the mails with
these kind of information can only

216
00:17:21.030 --> 00:17:23.030 
from a family member
or friends.

217
00:17:23.290 --> 00:17:26.920 
because otherwise he or
she would not knows it.

218
00:17:28.340 --> 00:17:31.650 
so access to the browser
history, for example,

219
00:17:31.850 --> 00:17:35.220 
allows accurate
identification of a user

220
00:17:35.530 --> 00:17:40.460 
on the web. is his web( profiling)
the many providers are

221
00:17:40.460 --> 00:17:45.410 
interested to see, to place
advertisements to these movements,

222
00:17:45.490 --> 00:17:48.460 
and follows the movements of
user and to get a profile.

223
00:17:49.130 --> 00:17:54.320 
for example the advertisements, the
activities or the other things.

224
00:17:54.320 --> 00:18:00.180 
so there are a
lot of attacks,

225
00:18:00.600 --> 00:18:04.730 
where consisting on web

226
00:18:05.060 --> 00:18:10.550 
system against that browser, whereas
a web browser and functionality

227
00:18:10.550 --> 00:18:16.940 
is used mainly to get access to
the resources of the user.
