WEBVTT

1
00:00:04.880 --> 00:00:08.950 
Hello everybody and welcome to the office hours of week three

2
00:00:09.640 --> 00:00:11.020 
where we actually handle

3
00:00:12.940 --> 00:00:17.440 
the technologies HTML, CSS and XML.

4
00:00:18.830 --> 00:00:21.760 
Me i'm Christian and Martin, my colleague.

5
00:00:23.380 --> 00:00:28.910 
We want to talk a little bit about browsers and about working with

6
00:00:29.390 --> 00:00:31.150 
HTML and CSS today.

7
00:00:32.500 --> 00:00:38.790 
I will start showing you the developer tools of a browser. In this case

8
00:00:38.950 --> 00:00:43.390 
we've chosen Google Chrome. I like this one personally, especially developer tools

9
00:00:43.600 --> 00:00:45.970 
however all other major browsers-

10
00:00:47.250 --> 00:00:51.460 
Firefox, the Internet Explorer bring developer tools with them too.

11
00:00:55.290 --> 00:00:59.530 
Let's start by opening the developer tools in

12
00:00:59.970 --> 00:01:05.240 
Chrome. You just choose the menu,

13
00:01:07.780 --> 00:01:10.840 
then you go to more tools. Yes, more tools, thank you.

14
00:01:11.330 --> 00:01:14.710 
And there you can find the developer tools.

15
00:01:16.960 --> 00:01:18.110 
I'll zoom in a little

16
00:01:18.940 --> 00:01:20.360 
so that you can read in the video.

17
00:01:23.150 --> 00:01:27.860 
So what you see here is a number of tools for inspecting what

18
00:01:27.860 --> 00:01:29.020 
happens in your browser.

19
00:01:29.810 --> 00:01:34.430 
And I will start with going back to week two where we dealt with

20
00:01:34.860 --> 00:01:39.100 
network communication HTTP and this is one

21
00:01:39.530 --> 00:01:42.210 
very nice feature of the developer tools.

22
00:01:43.200 --> 00:01:46.110 
You can inspect like,

23
00:01:47.330 --> 00:01:53.210 
have a look, deep look into the communication between your browser and the server.

24
00:01:53.820 --> 00:01:55.500 
To demonstrate I will just open

25
00:01:56.640 --> 00:01:58.920 
a web page. Umm, which one would it be?

26
00:02:00.510 --> 00:02:02.420 
I guess not surprised. Maybe open OpenHPI.de.

27
00:02:03.880 --> 00:02:09.440 
Ok, and we see the page has loaded.

28
00:02:11.330 --> 00:02:15.340 
And lots of things have happened in this lower part

29
00:02:15.900 --> 00:02:18.040 
of the browser where we have the developer tools.

30
00:02:19.380 --> 00:02:22.270 
What we see on the left is

31
00:02:24.200 --> 00:02:28.740 
is the list of web documents, in this case for example

32
00:02:30.910 --> 00:02:33.000 
an HTML page here,

33
00:02:34.270 --> 00:02:40.390 
a stylesheet, some javascript files, images which are

34
00:02:41.260 --> 00:02:44.280 
subsequently downloaded from our servers.

35
00:02:47.460 --> 00:02:51.100 
In the next column you can see the status code you have learned

36
00:02:51.100 --> 00:02:54.010 
about HTTP Status Codes last week.

37
00:02:56.460 --> 00:03:00.530 
You can see the size, you can see the time that has been taken for downloading,

38
00:03:00.840 --> 00:03:02.390 
and on the right side you can see

39
00:03:03.160 --> 00:03:04.490 
a waterfall chart

40
00:03:05.810 --> 00:03:12.150 
which shows how the documents have been transferred. So

41
00:03:14.340 --> 00:03:18.350 
let's have a look at one of these request response cycles.

42
00:03:19.300 --> 00:03:23.740 
Especially the first one you can see it has a different status code.

43
00:03:25.950 --> 00:03:29.590 
Then the other one. This one was a 302.

44
00:03:30.520 --> 00:03:31.550 
Let's see what it is.

45
00:03:33.390 --> 00:03:39.480 
It's a 'found' message but belongs to the redirection and

46
00:03:43.050 --> 00:03:47.470 
in this case we have requested,

47
00:03:48.210 --> 00:03:50.610 
I've entered into the URL line- the

48
00:03:51.430 --> 00:03:56.200 
URL dot open dot hpi dot de without the protocol for. What

49
00:03:56.200 --> 00:03:58.440 
did the browser? The browser

50
00:03:59.370 --> 00:04:02.560 
added the seem part- the http

51
00:04:03.860 --> 00:04:06.950 
colon double slash before

52
00:04:07.750 --> 00:04:12.240 
the domain that I entered and also added automatically a slash

53
00:04:12.660 --> 00:04:17.940 
to form a valid URL. This one has been sent to our server.

54
00:04:19.930 --> 00:04:24.660 
Request method was, get this the default request method when

55
00:04:24.660 --> 00:04:26.790 
I enter something into the request

56
00:04:27.680 --> 00:04:29.950 
form in the browser it will be

57
00:04:32.110 --> 00:04:35.270 
performed with the GET method. And

58
00:04:35.840 --> 00:04:40.920 
so, we see the status that was returned was 302,

59
00:04:41.460 --> 00:04:46.250 
remember. So the next part is the so is the response headers.

60
00:04:46.260 --> 00:04:49.450 
So we already in the response from

61
00:04:51.870 --> 00:04:54.560 
the server and the server says

62
00:04:56.560 --> 00:04:59.580 
since the 302 is a re-direction status code,

63
00:05:00.410 --> 00:05:02.660 
it tells me here in the location

64
00:05:03.380 --> 00:05:11.590 
part where I have to go. So openHPI is an https site only, and

65
00:05:14.480 --> 00:05:20.540 
thus always re-directs me to the https site when I open any http site.

66
00:05:21.410 --> 00:05:25.530 
So all your data are securing when you transferred to the server, right? Right.

67
00:05:25.780 --> 00:05:29.810 
This is especially meant for logging data like your password

68
00:05:29.810 --> 00:05:32.810 
will never go on encrypted over the line, but

69
00:05:34.610 --> 00:05:36.220 
since it doesn't hurt us very much,

70
00:05:36.960 --> 00:05:41.620 
we encrypt all our traffic. So

71
00:05:43.500 --> 00:05:45.480 
the server has sent some additional

72
00:05:46.620 --> 00:05:49.920 
response headers. Martin, can you think

73
00:05:50.690 --> 00:05:54.720 
of why the head or the server closes the connection?

74
00:05:56.060 --> 00:05:59.840 
Because we have to connect maybe to another server when we use the ssl

75
00:06:00.210 --> 00:06:04.530 
connection, so it will be closed first so that's exactly it.

76
00:06:05.060 --> 00:06:09.900 
Since we are redirected, a redirect in this case goes to a different server

77
00:06:10.100 --> 00:06:11.300 
we have to establish

78
00:06:13.090 --> 00:06:17.120 
a new connection anyway, due to the tcp connection.

79
00:06:19.140 --> 00:06:25.160 
So what you can do here is really browse through all your

80
00:06:27.050 --> 00:06:29.080 
headers that have been sent with the

81
00:06:29.740 --> 00:06:33.910 
with your request. In this case the request headers as expected

82
00:06:33.910 --> 00:06:36.590 
the request headers have the except headers

83
00:06:38.040 --> 00:06:42.160 
for content negotiation, you can see your browser. My browser

84
00:06:42.160 --> 00:06:44.930 
in this case accepts text html files,

85
00:06:46.080 --> 00:06:51.990 
html plus, xml files, and plain xml files in this order.

86
00:06:52.410 --> 00:06:56.830 
It can deal with visible encoding and deflate.

87
00:06:57.370 --> 00:07:01.380 
And my language settings say that I prefer German.

88
00:07:03.390 --> 00:07:08.410 
And if German is not available, I would also take US English.

89
00:07:09.750 --> 00:07:13.170 
Otherwise I would also take a usual English.

90
00:07:18.230 --> 00:07:22.300 
Ok let's go to next request. A real one.

91
00:07:22.940 --> 00:07:26.210 
I won't close this one and the next one

92
00:07:26.930 --> 00:07:30.240 
you can already see this one returns me a two hundred

93
00:07:31.020 --> 00:07:35.760 
status code which is the standard, ok. I have this document. I

94
00:07:35.760 --> 00:07:41.360 
will send it to you. And um let's have a look at the request first.

95
00:07:42.920 --> 00:07:43.740 
Request headers :

96
00:07:46.010 --> 00:07:48.010 
you see it is actually the same headers

97
00:07:48.480 --> 00:07:53.810 
as before. My settings haven't changed. I want to initiate a

98
00:07:54.100 --> 00:07:58.760 
persistent connection by setting the keep-alive header. And

99
00:08:00.250 --> 00:08:01.830 
so the server responds

100
00:08:05.210 --> 00:08:10.550 
with what I have actually offered. The encoding as gzip.

101
00:08:11.230 --> 00:08:13.540 
The content type is the first one I offered.

102
00:08:14.380 --> 00:08:16.780 
I requested actually the

103
00:08:19.130 --> 00:08:21.520 
cache control. We've also learned about that.

104
00:08:24.350 --> 00:08:28.350 
Tells me that I'm not allowed to cache this page.

105
00:08:31.790 --> 00:08:35.620 
That's why the max age is set to zero, and additionally we have

106
00:08:35.620 --> 00:08:39.100 
set the master validate header.

107
00:08:41.260 --> 00:08:44.420 
And it also sets me a cookie. We have learned about that.

108
00:08:45.730 --> 00:08:47.270 
In the cookie we have

109
00:08:48.070 --> 00:08:52.910 
a long string identifying my session information

110
00:08:53.360 --> 00:08:54.910 
on the OpenHPI server.

111
00:08:57.600 --> 00:08:58.070 
So

112
00:09:01.210 --> 00:09:05.710 
this is basically what I want to show you about the

113
00:09:08.230 --> 00:09:09.430 
network inspector

114
00:09:12.120 --> 00:09:14.800 
See, you can see this request

115
00:09:16.020 --> 00:09:21.380 
response with all these sub resources that have been downloaded

116
00:09:23.580 --> 00:09:28.590 
not just from the OpenHPI server but also from video streaming providers.

117
00:09:29.380 --> 00:09:30.840 
Took quite some time.

118
00:09:31.620 --> 00:09:37.040 
We can see the timeline here and the page load is finally finished

119
00:09:37.040 --> 00:09:38.790 
after something like three seconds.

120
00:09:39.740 --> 00:09:40.510 


121
00:09:42.310 --> 00:09:45.070 
That's quite a long time. That's quite a long time. Three seconds.

122
00:09:45.810 --> 00:09:49.970 
And it has some possibility that it maybe gets faster or,

123
00:09:50.440 --> 00:09:54.220 
yeah we have to wait. All the talking in the course about caching.

124
00:09:55.100 --> 00:10:01.390 
So we can also see what happens when when you reload the page, and see which

125
00:10:03.190 --> 00:10:07.460 
of the resources that I've just downloaded and that I also

126
00:10:07.460 --> 00:10:08.910 
used on subsequent pages

127
00:10:10.040 --> 00:10:13.280 
will be taken from the cache. And we see okay, in this case

128
00:10:15.800 --> 00:10:21.490 
the sorry the time until the last request is finished

129
00:10:21.900 --> 00:10:22.600 


130
00:10:25.750 --> 00:10:29.700 
is like just half of the time than it was before.

131
00:10:32.930 --> 00:10:36.160 
Let's consider we actually have a very fast line here because

132
00:10:36.160 --> 00:10:37.390 
we are in the same network.

133
00:10:38.110 --> 00:10:41.240 
Like not in the same network, but in a very close neighbor network to the

134
00:10:41.520 --> 00:10:43.830 
network service allocated so

135
00:10:45.630 --> 00:10:49.850 
that's why our first request was actually very fast with three

136
00:10:49.850 --> 00:10:54.390 
seconds. That would take way longer on a mobile device but the subsequent second

137
00:10:54.640 --> 00:10:56.870 
request in this case it takes me

138
00:10:58.060 --> 00:10:59.790 
something like one and a half seconds.

139
00:11:01.780 --> 00:11:06.440 
Would be not much longer on a device. It would be

140
00:11:07.060 --> 00:11:10.080 
more far away like, like in the mobile device.

141
00:11:11.350 --> 00:11:17.420 
And we can see the status code for nearly any document

142
00:11:18.860 --> 00:11:22.090 
that I have requested is the 304,

143
00:11:22.770 --> 00:11:24.100 
which is not modified.

144
00:11:25.210 --> 00:11:27.210 
Let's have a look into one of these

145
00:11:28.130 --> 00:11:31.270 
request responses. You see

146
00:11:34.200 --> 00:11:35.480 
in the request headers

147
00:11:37.530 --> 00:11:44.010 
that I sent on my browser 'If modified' the 'sense' since header.

148
00:11:44.440 --> 00:11:46.130 
And if modified since header

149
00:11:47.230 --> 00:11:48.340 
goes back to

150
00:11:49.560 --> 00:11:52.340 
the tenth of june

151
00:11:55.050 --> 00:11:55.560 
which

152
00:11:57.750 --> 00:12:02.750 
is outdated, I have calculated from the headers of the first response.

153
00:12:04.250 --> 00:12:07.460 
Considering the max age, considering the last modified header,

154
00:12:11.040 --> 00:12:15.190 
and the response tells me that

155
00:12:20.540 --> 00:12:23.880 
the document has not been modified in between.

156
00:12:24.710 --> 00:12:26.650 
So it's still fresh in the cache.

157
00:12:27.510 --> 00:12:32.180 
And I can take it out of there. So we don't need to get the content again.

158
00:12:32.490 --> 00:12:36.240 
Right. So it's somehow possible to see the content of the

159
00:12:36.960 --> 00:12:40.320 
files I get. So that's maybe very interesting. Yeah sure.

160
00:12:40.860 --> 00:12:42.750 
You can also inspect

161
00:12:43.950 --> 00:12:49.040 
all the files very deeply. Say in this case this one is a stylesheet file.

162
00:12:49.940 --> 00:12:53.910 
When I open it like with a double click, see okay this is lots of information here,

163
00:12:54.780 --> 00:12:56.300 
and not very structured.

164
00:12:57.570 --> 00:13:02.510 
This is how a compressed, let's say not compressed, but minimized

165
00:13:03.590 --> 00:13:06.790 
source code looks like- no whitespace no breaks,

166
00:13:08.830 --> 00:13:11.310 
no formatting that makes it more human-readable.

167
00:13:12.540 --> 00:13:14.490 
But the

168
00:13:15.640 --> 00:13:22.860 
inspector gives me an option to have a very structured and very

169
00:13:23.330 --> 00:13:28.370 
readable way of what is being displayed in the browser.

170
00:13:28.920 --> 00:13:33.880 
So I use the elements tab for that one and

171
00:13:34.290 --> 00:13:39.020 
I can also easily with a right click on any element, let's say

172
00:13:39.210 --> 00:13:40.200 
we take this box,

173
00:13:41.670 --> 00:13:43.470 
and say 'inspect element',

174
00:13:44.660 --> 00:13:47.290 
and the inspector down here

175
00:13:48.140 --> 00:13:51.280 
jumps to the

176
00:13:52.260 --> 00:13:56.720 
HTML element that renders the

177
00:13:58.930 --> 00:14:01.330 
part of the web page that I've just clicked on.

178
00:14:02.150 --> 00:14:04.380 
And then it's highlighted, so I can see it easily.

179
00:14:05.550 --> 00:14:07.010 
You can see it's highlighted.

180
00:14:07.640 --> 00:14:12.240 
The blue part is the actual boundary box of the HTML element

181
00:14:12.660 --> 00:14:14.440 
and you can also see the-

182
00:14:15.470 --> 00:14:20.270 
what colors have orange partS, the light light orange part around. And

183
00:14:20.830 --> 00:14:26.260 
these are the margins. I define margins in CSS. I say ok the next element

184
00:14:26.480 --> 00:14:28.460 
has to be let's say ten pixels away

185
00:14:29.350 --> 00:14:31.160 
on the left and the right side, and

186
00:14:33.170 --> 00:14:34.880 
these margins are also displayed here.

187
00:14:37.150 --> 00:14:39.060 
So in this case I have, I have

188
00:14:39.750 --> 00:14:44.100 
chosen a div. Let's say I take that one

189
00:14:44.570 --> 00:14:48.410 
and I can like expanded Div and see what's inside.

190
00:14:49.450 --> 00:14:55.280 
I can see which attributes this div element has. Like in this case, the

191
00:14:55.630 --> 00:15:02.210 
CSS class as you can see this one has 1-2-3 css classes

192
00:15:04.020 --> 00:15:05.430 
and an additional style.

193
00:15:08.130 --> 00:15:10.480 
For the styles you can also

194
00:15:12.550 --> 00:15:17.750 
go through here on the right side. You can see which styles are applied

195
00:15:18.590 --> 00:15:22.300 
for the selected element.

196
00:15:25.010 --> 00:15:27.790 
Here on top you have the element style that's the one that

197
00:15:27.790 --> 00:15:29.770 
is given in the attribute and style attribute.

198
00:15:30.330 --> 00:15:33.460 
This one always is the most important one, it overwrites

199
00:15:34.630 --> 00:15:39.530 
css class styles. So rules which are closer to the elements

200
00:15:39.530 --> 00:15:44.060 
are more important. Right. Rules which are more far away. 'More far away' that's exactly right.

201
00:15:44.640 --> 00:15:49.730 
And you can see so. This one is a class teaser

202
00:15:51.180 --> 00:15:53.170 
box in this place, in this case.

203
00:15:54.420 --> 00:16:00.460 
Inside the start page teaser which is more above

204
00:16:00.460 --> 00:16:03.270 
and the start which teaser contains all these

205
00:16:03.810 --> 00:16:06.790 
pre boxes and our guy with the backpack.

206
00:16:08.220 --> 00:16:12.970 
And the css rule says if you have div that is

207
00:16:13.410 --> 00:16:16.500 
has the class teaser box and this div is inside

208
00:16:18.160 --> 00:16:18.830 


209
00:16:20.560 --> 00:16:22.860 
an element with the class start page teaser,

210
00:16:23.560 --> 00:16:25.210 
it will have these

211
00:16:27.350 --> 00:16:30.790 
properties. Yeah it will have a padding, or it's not a padding.

212
00:16:31.180 --> 00:16:34.310 
It's not a margin, it's a padding. It's a padding. It's a padding, actually.

213
00:16:34.620 --> 00:16:37.420 
So the padding means the content of

214
00:16:38.810 --> 00:16:42.430 
the div has to be fifteen pixels away. In each

215
00:16:43.260 --> 00:16:44.330 
direction and

216
00:16:45.020 --> 00:16:49.400 
it also defines a minimum height of one hundred and ten pixels. But you see

217
00:16:49.810 --> 00:16:52.400 
the browser crosses this one out.

218
00:16:53.070 --> 00:16:59.160 
Because it's overwritten by the element style up here. Because it was closer

219
00:16:59.720 --> 00:17:06.040 
to say I check this element style rule here. I remove the checkmark.

220
00:17:07.030 --> 00:17:07.550 


221
00:17:09.310 --> 00:17:13.660 
You see that this one is crossed out and the main height of

222
00:17:13.660 --> 00:17:20.630 
one hundred and ten is applied. In this case it doesn't change the,

223
00:17:22.360 --> 00:17:24.040 
it doesn't change the

224
00:17:25.870 --> 00:17:29.540 
final rendering of the box because

225
00:17:30.610 --> 00:17:35.140 
all these content has two lines and that's why the

226
00:17:35.580 --> 00:17:38.940 
minimum height is the height the actual height is

227
00:17:40.030 --> 00:17:43.590 
actually higher than one hundred and eighty pixels anyway.

228
00:17:44.100 --> 00:17:44.330 


229
00:17:46.040 --> 00:17:48.690 
Hmm what I

230
00:17:50.030 --> 00:17:53.620 
also wanted to show is, you can easily manipulate

231
00:17:55.250 --> 00:18:00.520 
these. All these values. But it's only manipulated on my website or..

232
00:18:00.690 --> 00:18:05.430 
Right, right always just at the moment when you are on

233
00:18:05.510 --> 00:18:09.890 
a specific site. Let's say I change the color here, yeah?

234
00:18:10.480 --> 00:18:13.510 
Click on the color and I get a choosing. I say ok I want to

235
00:18:13.730 --> 00:18:19.060 
know how it looks like in blue. Not so, not so awesome but for the sake of

236
00:18:20.430 --> 00:18:21.440 
showing it like that.

237
00:18:22.680 --> 00:18:25.610 
You can do that with every CSS property.

238
00:18:26.440 --> 00:18:29.890 
It's a great tool to when you develop a web page, when you

239
00:18:30.480 --> 00:18:35.120 
try to find the right css rules or the right

240
00:18:36.810 --> 00:18:40.790 
ordering of divisions on your page. You can just do it in the browser,

241
00:18:41.070 --> 00:18:44.670 
try it out in the browser. Adjust values when you say ok this one

242
00:18:44.920 --> 00:18:48.160 
should be like have a little more space in between

243
00:18:49.280 --> 00:18:55.960 
and try how it looks, and then apply that one in the actual HTML file

244
00:18:56.160 --> 00:18:59.370 
you're working with okay. So I have a live preview of

245
00:19:00.080 --> 00:19:01.980 
and you can just

246
00:19:03.010 --> 00:19:05.150 
play with it. Browser so that's

247
00:19:06.090 --> 00:19:08.780 
sometimes the case that some browsers differs a little bit.

248
00:19:08.780 --> 00:19:11.290 
They should show it the same way, but sometimes it happens.

249
00:19:11.880 --> 00:19:13.970 
That's exactly right.

250
00:19:15.920 --> 00:19:18.530 
One thing maybe you can also

251
00:19:19.830 --> 00:19:26.970 
add a additional styles here. I just click into that value and use the tap.

252
00:19:28.380 --> 00:19:32.190 
And then I can enter additional style rules. Let's

253
00:19:32.190 --> 00:19:37.420 
say in this case, may be you can write it in black, maybe instead of white.

254
00:19:38.360 --> 00:19:40.550 
That would be the

255
00:19:41.780 --> 00:19:46.310 
the color. I see also there is a great auto completion.

256
00:19:47.230 --> 00:19:50.710 
And the font color is set by the color attribute.

257
00:19:51.460 --> 00:19:54.700 
And let's say black.

258
00:20:00.210 --> 00:20:06.920 
Maybe it doesn't work because it is overwritten by let's say I choose the,

259
00:20:07.810 --> 00:20:09.230 
choose this element.

260
00:20:10.370 --> 00:20:13.260 
The headline here and

261
00:20:16.320 --> 00:20:23.840 
the headline has an own CSS class where the color is explicitly set to white.

262
00:20:24.410 --> 00:20:26.930 
If I remove that one from the class,

263
00:20:28.220 --> 00:20:32.780 
the more far away as Martin already explained, the more far

264
00:20:32.780 --> 00:20:37.100 
of CSS rule from the parent element will be applied.

265
00:20:37.870 --> 00:20:42.740 
Okay so I just see now that the other box is also changed now, the headline.

266
00:20:44.030 --> 00:20:47.940 
That's the case. That's because I didn't change the element

267
00:20:47.940 --> 00:20:49.700 
style of this specific headline.

268
00:20:50.500 --> 00:20:56.840 
But I changed the style of the class definition, and all these headlines

269
00:20:57.560 --> 00:21:00.740 
have the same class. As the idea of classes having

270
00:21:01.450 --> 00:21:05.690 
similar elements and only writing the CSS rule, the style for

271
00:21:05.690 --> 00:21:10.780 
this kind of element once and applied to all the places where this element appears.

272
00:21:11.590 --> 00:21:18.010 
Okay one last thing just to show you that it's there.

273
00:21:19.020 --> 00:21:20.950 
So this is a firefox instead of the

274
00:21:22.090 --> 00:21:25.500 
Chrome browser and it has quite

275
00:21:26.540 --> 00:21:31.010 
the same features. This one is in German and sorry for that, but

276
00:21:31.420 --> 00:21:37.220 
an inspect element in this case means elemental untersuchen in German and you see

277
00:21:39.120 --> 00:21:43.710 
it's quite quite a similar layout. We have this element inspector.

278
00:21:44.630 --> 00:21:50.540 
It shows me the dimensions. It marks the margins and the actual boundary box.

279
00:21:51.050 --> 00:21:53.750 
It shows me the CSS rules that are applied here.

280
00:21:55.910 --> 00:21:59.010 
It also has the network analyzer. I

281
00:22:00.560 --> 00:22:04.820 
have to reloaded it to give the network analyzer the chance to

282
00:22:06.450 --> 00:22:10.670 
show what has happened, and you see it's very, very similar.

283
00:22:13.510 --> 00:22:18.130 
You can expect inspects single requests and have the

284
00:22:18.640 --> 00:22:21.470 
timing diagram and other things.

285
00:22:22.090 --> 00:22:27.090 
Ok really nice. So maybe we do know some

286
00:22:27.670 --> 00:22:29.950 
CSS. So for the p-

287
00:22:31.230 --> 00:22:36.690 
assessment we had some CSS work just to get an idea how to

288
00:22:36.690 --> 00:22:38.310 
start with this exercise.

289
00:22:39.510 --> 00:22:43.310 
We show some basic stuff on CSS and HTML.

290
00:22:44.160 --> 00:22:50.230 
So at the beginning, we just made the HTML file and the special

291
00:22:50.230 --> 00:22:54.340 
thing is that you should embed all your CSS in this file that

292
00:22:54.340 --> 00:22:57.800 
you only have to upload one file and you don't have to care when

293
00:22:57.960 --> 00:23:03.570 
the corrector, so. So this is a special requirement for the CSS,

294
00:23:03.750 --> 00:23:08.310 
right? So normally you should exclude your CSS files and other

295
00:23:08.310 --> 00:23:09.940 
files and then include them.

296
00:23:10.550 --> 00:23:15.280 
But in this case it's for the p-assessment. It makes

297
00:23:15.280 --> 00:23:19.690 
it more easy to check. Actually we would consider it at bad style

298
00:23:20.940 --> 00:23:24.820 
because you want to keep your files small and readable and that's why

299
00:23:25.330 --> 00:23:29.390 
I could have CSS as an external file, not just for this reason,

300
00:23:30.310 --> 00:23:34.050 
but also for the reasons of being able to read you reuse your

301
00:23:34.050 --> 00:23:36.340 
CSS in other HTML files.

302
00:23:36.960 --> 00:23:39.580 
Yeah we saw this reuse already when we

303
00:23:40.530 --> 00:23:45.870 
inspect the elements. So it's just an HTML 5 document. So you see this

304
00:23:46.440 --> 00:23:51.090 
with the doctype HTML- typical HTML 5 document but it's also

305
00:23:52.320 --> 00:23:55.200 
maybe comfortable with HTML 4 if you don't use newer

306
00:23:55.610 --> 00:24:01.080 
tags. So you just start with the HTML tag and that's here.

307
00:24:01.080 --> 00:24:03.010 
Maybe we also zoom here a little bit.

308
00:24:04.060 --> 00:24:08.320 
That's here HTML tags and you should close it so this editor already showed

309
00:24:08.480 --> 00:24:12.490 
the start and end tag which is more easy than to read. Then

310
00:24:12.490 --> 00:24:13.480 
you have here the head.

311
00:24:14.240 --> 00:24:18.330 
Which is just stuff which is not directly visible in the webpage.

312
00:24:18.330 --> 00:24:22.660 
But the title for example contained in it which will be shown on top of

313
00:24:24.060 --> 00:24:25.390 
your browser.

314
00:24:26.700 --> 00:24:29.290 
And you have to put the meta-data

315
00:24:30.180 --> 00:24:35.990 
UTF 8 so that we can also show for example Chinese signs or something like this

316
00:24:36.160 --> 00:24:38.350 
or special characters which are not

317
00:24:39.030 --> 00:24:45.500 
shown otherwise. And the interesting part is the style. So here we embedded

318
00:24:45.740 --> 00:24:50.810 
the complete stylesheet in the HTML. And I

319
00:24:52.230 --> 00:24:56.620 
showed with a hash tag and then the id name so

320
00:24:57.440 --> 00:25:02.950 
so this is one rule, right? The like from the id

321
00:25:03.430 --> 00:25:09.810 
line to the next parenthesis. Yeah, right, right that's one rule for

322
00:25:10.010 --> 00:25:12.780 
this id. So I can also put more,

323
00:25:13.930 --> 00:25:16.720 
more rules for the id inside of this bracket.

324
00:25:17.520 --> 00:25:20.830 
Then it's a bigger rule for the id, but

325
00:25:21.820 --> 00:25:23.680 
what have to be done for this id.

326
00:25:24.530 --> 00:25:28.380 
So then you can also important thing this id is that you

327
00:25:28.380 --> 00:25:33.300 
are only allowed to have one id in one html document.

328
00:25:34.340 --> 00:25:35.840 
So it should not be defined double.

329
00:25:37.040 --> 00:25:42.500 
The hash before the name

330
00:25:43.370 --> 00:25:46.090 
of the rule refers to the id

331
00:25:46.950 --> 00:25:48.980 
attribute of an html element.

332
00:25:49.620 --> 00:25:54.910 
Yeah, right. We show that we can show that at the example. So then we have classes.

333
00:25:55.080 --> 00:25:57.630 
Classes can be reusable. We talked about this.

334
00:25:58.040 --> 00:26:02.180 
So you can use more than one class in one html document and

335
00:26:02.180 --> 00:26:06.510 
also across different html documents if you reuse the css files.

336
00:26:06.690 --> 00:26:09.650 
Which is not the case here but which should be normally the case.

337
00:26:10.610 --> 00:26:15.550 
And then also here you have the rules with property like color and value,

338
00:26:17.020 --> 00:26:21.970 
for example. And finally you have the possibility to have the body.

339
00:26:22.330 --> 00:26:26.610 
Body is a tag, so it's just a tag selector. So all body tags.

340
00:26:26.850 --> 00:26:28.020 
So normally there's only one.

341
00:26:28.650 --> 00:26:30.290 
Otherwise it's not real.

342
00:26:31.840 --> 00:26:34.790 
But it could also be another tag like for example H1.

343
00:26:35.270 --> 00:26:39.460 
Say all headlines, of all the one should have these properties,

344
00:26:40.020 --> 00:26:43.150 
right. So you can write this and you also combine

345
00:26:43.740 --> 00:26:47.470 
tags and classes together, so just write your tag and then

346
00:26:48.040 --> 00:26:53.270 
space and then dot class. So then all headlines with this class get this property.

347
00:26:54.460 --> 00:26:58.250 
So yeah that's the head and then we have the body where our

348
00:26:58.250 --> 00:27:00.560 
actual content is coming into it.

349
00:27:01.320 --> 00:27:02.620 
And we also have here some

350
00:27:03.730 --> 00:27:08.130 
spaces from the left all the time. So it's just for structuring, so

351
00:27:08.360 --> 00:27:10.670 
all the time if you open the tag

352
00:27:12.140 --> 00:27:13.550 
and between the tags you should

353
00:27:14.260 --> 00:27:17.310 
put a little bit to the right. So always indent

354
00:27:18.190 --> 00:27:20.250 
different

355
00:27:20.880 --> 00:27:27.060 
included tags, like one level more of indention to keep your document readable.

356
00:27:27.190 --> 00:27:29.910 
You can either use a tab for indention or you can use

357
00:27:30.380 --> 00:27:33.030 
a number of spaces, let's say three or four.

358
00:27:35.070 --> 00:27:38.970 
And this makes it much more easier to understand, where you

359
00:27:38.970 --> 00:27:43.400 
might have forgotten to close a tag or where you don't have the right

360
00:27:43.780 --> 00:27:48.790 
position for a specific element on your side because it's

361
00:27:49.270 --> 00:27:54.070 
in the wrong parent element, and you can see that if you indent properly.

362
00:27:54.990 --> 00:27:57.890 
So it's more easy to maintain your document. Also when you want

363
00:27:57.890 --> 00:28:00.650 
to change something you can find it more easily then you can.

364
00:28:00.650 --> 00:28:04.890 
Also you can write everything to one line but it's not nice style so you should

365
00:28:05.190 --> 00:28:09.700 
do it like this. So the document actually get bigger when you

366
00:28:09.700 --> 00:28:11.540 
use indention and stuff like that?

367
00:28:13.390 --> 00:28:15.620 
Is it to take longer if you transfer it?

368
00:28:16.730 --> 00:28:20.370 
Maybe just a bit. So for the spaces they have to be

369
00:28:20.990 --> 00:28:26.360 
also saved, but it's so less because if you have more spaces or tabs

370
00:28:26.590 --> 00:28:29.710 
than they will be combined and

371
00:28:30.900 --> 00:28:33.510 
it's not so much what you have to transfer for it.

372
00:28:34.010 --> 00:28:36.460 
So it's a little bit more but it's not

373
00:28:37.150 --> 00:28:41.240 
reasonably worth the minimum overhead. It's worth

374
00:28:41.660 --> 00:28:44.220 
compared to yeah able to read it.

375
00:28:44.950 --> 00:28:48.260 
Because the internet connection is fast enough and pictures

376
00:28:48.260 --> 00:28:52.290 
are way bigger. So maybe you should not use pictures if you want to say

377
00:28:52.440 --> 00:28:54.830 
there's a compression in places. Soesn't matter anyway.

378
00:28:56.570 --> 00:28:58.270 
Yeah if you use a gzip compression

379
00:28:59.580 --> 00:29:01.940 
then it's possible so just,

380
00:29:02.790 --> 00:29:04.620 
for example head up. So just

381
00:29:06.330 --> 00:29:08.710 
put some div tag and

382
00:29:09.390 --> 00:29:10.360 
give him the id

383
00:29:12.530 --> 00:29:14.150 
so that we can identify the header.

384
00:29:15.390 --> 00:29:19.650 
Just as easy example. Important is that you have to close the

385
00:29:20.150 --> 00:29:24.820 
tag and in between you can put other tags like p for paragraph

386
00:29:24.820 --> 00:29:27.320 
or something as we do now. Just some content.

387
00:29:28.250 --> 00:29:29.340 
That's also working.

388
00:29:31.640 --> 00:29:35.030 
So now we have a header which is here.

389
00:29:37.240 --> 00:29:40.680 
You can see the result. So we just have a box which just shows.

390
00:29:42.120 --> 00:29:46.710 
Do you need a web server for displaying your document in the browser actually?

391
00:29:47.270 --> 00:29:52.220 
No html and css is directly showed so you can just open your

392
00:29:52.790 --> 00:29:55.130 
html file, which you have on your filesystem.

393
00:29:55.720 --> 00:29:58.240 
So like here. So you just double click on it.

394
00:29:59.330 --> 00:30:03.850 
And then we open it directly. Ok so very easy.

395
00:30:05.390 --> 00:30:08.090 
So then the next thing is peer

396
00:30:09.230 --> 00:30:12.420 
assessment. So we don't do the peer assessment now. It's just the basic thing.

397
00:30:13.100 --> 00:30:15.830 
We just say we have a menu. So maybe

398
00:30:17.650 --> 00:30:20.330 
we also do an id because we have only one menu.

399
00:30:22.380 --> 00:30:23.200 
As an example,

400
00:30:24.780 --> 00:30:27.920 
then we say some menu and

401
00:30:29.090 --> 00:30:30.670 
we have to close this tag again.

402
00:30:32.170 --> 00:30:38.390 
So and finally we just say we have some articles, so

403
00:30:39.210 --> 00:30:43.710 
like two. So and then it's important that we say class here

404
00:30:45.330 --> 00:30:48.120 
because we have now more than one article, called

405
00:30:48.840 --> 00:30:56.450 
article. So div. We named this article one.

406
00:30:59.540 --> 00:31:01.740 
Then we also maybe create an article two.

407
00:31:04.270 --> 00:31:08.120 
So we can reuse the same class again. Just

408
00:31:09.440 --> 00:31:13.790 
change the name, so that doesn't look so interesting now. So now we have

409
00:31:14.500 --> 00:31:19.230 
all boxes and each other and now we are starting. Comes,

410
00:31:19.890 --> 00:31:25.500 
comes into the HTML file and the css file in this case.

411
00:31:26.280 --> 00:31:32.710 
And for example we want to do an easy blue background for

412
00:31:33.280 --> 00:31:39.090 
our header. So let's say our header has the id 'header'. So

413
00:31:39.240 --> 00:31:42.660 
id is identified by the hashtag and then I just say header.

414
00:31:45.110 --> 00:31:50.840 
So and now we have the property, for example the colour. No, background

415
00:31:53.250 --> 00:31:56.590 
color. Because colour would be the font color, all right.

416
00:31:57.950 --> 00:32:02.410 
So sometimes you have some hints from your editor depending on which

417
00:32:03.230 --> 00:32:07.520 
you are using. I have a Notepad ++. I wanted to ask a question later again,

418
00:32:07.810 --> 00:32:09.540 
anyway. So this is Notepadd++?

419
00:32:12.250 --> 00:32:16.420 
Is that available free? Yeah ok. Yeah, it's available so you can just download it.

420
00:32:16.420 --> 00:32:18.820 
Not sure I think for windows.

421
00:32:19.630 --> 00:32:23.810 
But yeah, yeah lets say on a Mac I guess I would

422
00:32:24.580 --> 00:32:30.660 
maybe recommend sublime sublime Text 2 or maybe TextWrangler

423
00:32:31.590 --> 00:32:34.850 
which are also free or freely available and bring

424
00:32:35.580 --> 00:32:39.950 
at least highlighting, a syntax highlighting for html and

425
00:32:40.550 --> 00:32:44.570 
also auto completion. Sublime 2 is also for example way before

426
00:32:44.570 --> 00:32:47.190 
windows and linux, so you can have it for all platforms.

427
00:32:48.100 --> 00:32:51.780 
Maybe a good idea or an easy choice if you want to communicate

428
00:32:51.780 --> 00:32:52.960 
with other guys and talk about the editor.

429
00:32:54.530 --> 00:32:57.590 
So and then we say as well you for example blue.

430
00:32:58.940 --> 00:33:00.790 
So we save this now.

431
00:33:01.660 --> 00:33:05.680 
And we note that we see we have a blue background here.

432
00:33:05.710 --> 00:33:08.250 
And then we see that it's nearly impossible to read

433
00:33:09.160 --> 00:33:11.730 
our texts so we can just say color

434
00:33:13.470 --> 00:33:14.310 
will be white. So that's now the font colour.

435
00:33:18.130 --> 00:33:20.580 
And now it's readable, ok?

436
00:33:21.230 --> 00:33:24.280 
So very easy. Just doing the styling with

437
00:33:24.920 --> 00:33:30.310 
CSS works. So for menu, we don't do anything special now, for example and

438
00:33:31.010 --> 00:33:33.650 
for the class article we just say we want to have a

439
00:33:34.580 --> 00:33:40.500 
border, which is a little bit more complex, maybe. So we just first see

440
00:33:40.700 --> 00:33:46.090 
a classes article. So I'd like to copy. So that you don't have any typos.

441
00:33:46.440 --> 00:33:51.450 
Yeah not just for the lazy but yeah sometimes it happens that you just have

442
00:33:52.090 --> 00:33:55.080 
a typo inside and then you think it's not working. 'Why

443
00:33:55.520 --> 00:33:57.350 
I do it completely right?' and

444
00:33:58.070 --> 00:33:59.300 
sometimes it's really hard.

445
00:34:00.780 --> 00:34:04.340 
So we just say that the border color

446
00:34:06.570 --> 00:34:09.720 
should be for example also black.

447
00:34:11.330 --> 00:34:14.910 
So then we also have to do some additional stuff because if

448
00:34:14.910 --> 00:34:17.690 
we just do this, then nothing happens there.

449
00:34:18.330 --> 00:34:20.810 
So we also have to say what border

450
00:34:21.810 --> 00:34:24.510 
type we have. So border type.

451
00:34:28.760 --> 00:34:31.210 
Style. Border style. Border style.

452
00:34:32.980 --> 00:34:37.430 
And that could be solid in this case. I think there's also a dotted.

453
00:34:37.540 --> 00:34:39.810 
Dotted or dashed.

454
00:34:40.860 --> 00:34:43.810 
I think that's some different border styles are there.

455
00:34:44.900 --> 00:34:48.170 
And I think now it's also not visible, I'm not sure.

456
00:34:49.010 --> 00:34:51.330 
We already have it but maybe it's a little bit too thick.

457
00:34:51.830 --> 00:34:54.150 
So we can also say it's two pixels, right?

458
00:34:55.120 --> 00:34:56.770 
I think that's more than two pixels.

459
00:34:57.750 --> 00:35:02.080 
We can check it. So when we check border with for example two pixels.

460
00:35:04.650 --> 00:35:07.260 
And then we load. Oh yeah

461
00:35:08.340 --> 00:35:13.030 
maybe it was four maybe four pixels. Okay so now you just do

462
00:35:13.030 --> 00:35:16.750 
this for both articles. In fact have this class attribute both

463
00:35:16.750 --> 00:35:19.870 
have the same class. They directly get this property.

464
00:35:20.640 --> 00:35:23.720 
And finally we just do it for the tag.

465
00:35:25.000 --> 00:35:29.190 
Take the div tag and give it

466
00:35:31.530 --> 00:35:36.610 
a different font. A different font. Okay.

467
00:35:38.100 --> 00:35:40.880 
SO div and then font,

468
00:35:43.750 --> 00:35:46.440 
maybe font family. That's font family.

469
00:35:47.530 --> 00:35:50.480 
Do you know one font family? When I say reasonable,

470
00:35:52.590 --> 00:35:55.180 
everybody has Arial. A typical font.

471
00:35:56.390 --> 00:36:01.130 
So if we change this now, we see the style of the font

472
00:36:01.540 --> 00:36:05.590 
changed in this article for every div element. Right.

473
00:36:06.110 --> 00:36:10.440 
So you can also put now maybe some padding, for example.

474
00:36:11.170 --> 00:36:14.230 
So that it looks a little bit better, so like ten pixels.

475
00:36:15.310 --> 00:36:21.350 
Then we have here some some spaces. Ok mm. So it looks nice now.

476
00:36:21.740 --> 00:36:24.990 
Okay so now for the peer assessment, it's not ready now because

477
00:36:25.690 --> 00:36:29.060 
you should have the header which is okay more or less now,

478
00:36:29.060 --> 00:36:32.370 
but have not the right size. Then the menu should be left and

479
00:36:32.370 --> 00:36:33.530 
the arctic it should be right. Right around

480
00:36:34.180 --> 00:36:40.010 
corners. That's right. But we cannot yeah everything here is just

481
00:36:40.360 --> 00:36:41.910 
to get an idea how to start.

482
00:36:42.780 --> 00:36:46.170 
However for the peer assessment if you want to start working on

483
00:36:46.520 --> 00:36:49.970 
the CSS and HTML, and you don't come along

484
00:36:50.770 --> 00:36:53.890 
even after our explanation. Okay this is what just for the beginning.

485
00:36:53.890 --> 00:36:57.370 
Just for for the start. But you will definitely have questions.

486
00:36:57.580 --> 00:37:02.260 
We don't see any problem discussing specific questions.

487
00:37:03.130 --> 00:37:06.710 
So can someone hint me how to do this and that, can someone

488
00:37:06.710 --> 00:37:12.050 
hint me how to put divisions juxtaposed next to each other.

489
00:37:13.880 --> 00:37:16.900 
Something that I don't see a reason not for discussing this

490
00:37:17.080 --> 00:37:22.110 
in the forum as long as you don't share large snippets of your code,

491
00:37:22.440 --> 00:37:24.730 
okay? That's good idea because

492
00:37:26.090 --> 00:37:29.370 
css not all the time so easy to understand if you just begin with it.

493
00:37:29.640 --> 00:37:32.750 
So just ask questions. We will also try to answer them if no one else is

494
00:37:35.110 --> 00:37:38.920 
faster than we are. So yeah I think

495
00:37:39.410 --> 00:37:41.930 
that's it for this week with the office hour.

496
00:37:42.420 --> 00:37:47.370 
And remember you can specifically ask questions that you want

497
00:37:47.370 --> 00:37:50.750 
us to deal with in the next office hour. We can also come back

498
00:37:50.750 --> 00:37:54.120 
to week three and explain things that you haven't understand yet next week.

499
00:37:55.200 --> 00:37:56.240 
We are happy to see you again. Bye.
