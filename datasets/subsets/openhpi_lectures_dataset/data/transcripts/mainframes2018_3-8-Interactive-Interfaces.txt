WEBVTT

1
00:00:00.720 --> 00:00:03.659 
Hello, it's me again, Wolfram

2
00:00:03.660 --> 00:00:06.239 
Greis from the European Mainframe Academy.

3
00:00:06.240 --> 00:00:09.239 
In the next video clip, I want to show you some

4
00:00:09.240 --> 00:00:12.359 
background information on Db2, on z/OS,

5
00:00:12.360 --> 00:00:15.239 
what you see about the address

6
00:00:15.240 --> 00:00:17.730 
spaces controlling Db2.

7
00:00:18.810 --> 00:00:21.779 
And then I want to show you some

8
00:00:21.780 --> 00:00:24.989 
interactive possibilities, especially SQL

9
00:00:24.990 --> 00:00:28.099 
processing, using file input

10
00:00:28.100 --> 00:00:30.329 
abbreviation is SPUFI.

11
00:00:30.330 --> 00:00:33.157 
And many users say, I use

12
00:00:33.158 --> 00:00:35.670 
SPUFI without knowing that

13
00:00:36.900 --> 00:00:40.169 
the abbreviation means SQL Processing Using File

14
00:00:40.170 --> 00:00:41.170 
Input.

15
00:00:42.160 --> 00:00:45.119 
Ok, let's start with a short review

16
00:00:45.120 --> 00:00:46.889 
of the Db2 components.

17
00:00:46.890 --> 00:00:49.079 
We have the database services

18
00:00:50.190 --> 00:00:53.249 
controlled by a special address space.

19
00:00:53.250 --> 00:00:56.459 
The address space is the DBM1 address

20
00:00:56.460 --> 00:00:59.969 
space and all SQL requests go

21
00:00:59.970 --> 00:01:02.849 
to the DB database

22
00:01:02.850 --> 00:01:04.169 
services.

23
00:01:04.170 --> 00:01:07.589 
We have subsystem services address space responsible

24
00:01:07.590 --> 00:01:10.799 
for logging and recovery.

25
00:01:10.800 --> 00:01:13.859 
So this is the MSTR address space.

26
00:01:13.860 --> 00:01:16.799 
We have the internal resource

27
00:01:16.800 --> 00:01:19.709 
log manager, so, IRLM and we

28
00:01:19.710 --> 00:01:23.309 
have DDF, the data definition facility

29
00:01:23.310 --> 00:01:24.809 
address space.

30
00:01:24.810 --> 00:01:27.029 
OK, now I go directly

31
00:01:28.140 --> 00:01:29.430 
into our running system

32
00:01:31.200 --> 00:01:34.499 
and I want to show you that

33
00:01:34.500 --> 00:01:37.739 
in this case I start with a system application

34
00:01:37.740 --> 00:01:39.459 
master application menu.

35
00:01:39.460 --> 00:01:42.599 
This is the introduction menu into our

36
00:01:42.600 --> 00:01:43.650 
system environment.

37
00:01:44.700 --> 00:01:48.299 
Maybe in your installation, it looks a little different.

38
00:01:48.300 --> 00:01:51.569 
In our case, we find as example, the

39
00:01:51.570 --> 00:01:54.509 
false menu point here is SDSF,

40
00:01:54.510 --> 00:01:57.299 
system display and search facility.

41
00:01:57.300 --> 00:02:00.372 
And if I select SD, type in SDSF,

42
00:02:02.010 --> 00:02:04.804 
I get into the SDSF primary

43
00:02:04.805 --> 00:02:07.769 
menu and here I can have a look into

44
00:02:07.770 --> 00:02:10.679 
all active address spaces and this is

45
00:02:10.680 --> 00:02:13.318 
done with the menu point "da".

46
00:02:15.030 --> 00:02:17.939 
"da" means display active users and see

47
00:02:17.940 --> 00:02:21.059 
all the address space that are running in our

48
00:02:21.060 --> 00:02:22.289 
system.

49
00:02:22.290 --> 00:02:26.039 
A lot of different in in Unix Linux

50
00:02:26.040 --> 00:02:30.059 
environments. You would see these are the processes

51
00:02:30.060 --> 00:02:32.490 
and we see a "ps" command process

52
00:02:34.050 --> 00:02:37.079 
command in Unix or Linux.

53
00:02:37.080 --> 00:02:38.730 
You get a very similar

54
00:02:39.930 --> 00:02:42.899 
picture. And in this case, I

55
00:02:42.900 --> 00:02:45.869 
see all the address spaces that are

56
00:02:45.870 --> 00:02:48.839 
running. And as I know that in

57
00:02:48.840 --> 00:02:52.079 
our case, our Db2 address spaces begin

58
00:02:52.080 --> 00:02:54.150 
with the three letters

59
00:02:55.640 --> 00:02:58.499 
or four letters"dsn1", I can

60
00:02:58.500 --> 00:03:01.649 
now set my prefix to "dsn"

61
00:03:01.650 --> 00:03:05.159 
and say, "show me all address spaces starting

62
00:03:05.160 --> 00:03:08.359 
with the three characters DSN".

63
00:03:08.360 --> 00:03:11.449 
And you see, these are our

64
00:03:13.140 --> 00:03:15.599 
address spaces controlling Db2.

65
00:03:17.340 --> 00:03:20.409 
We have an administration task.

66
00:03:20.410 --> 00:03:23.909 
This is a very new address space already running

67
00:03:23.910 --> 00:03:26.369 
and controlling Db2.

68
00:03:26.370 --> 00:03:28.344 
This is the MSTR,

69
00:03:29.550 --> 00:03:32.609 
the address space controlling

70
00:03:32.610 --> 00:03:34.139 
logging and recovery.

71
00:03:34.140 --> 00:03:37.228 
This is an internal resource log

72
00:03:37.229 --> 00:03:40.139 
manager. This is the database services

73
00:03:40.140 --> 00:03:42.959 
address space and this is the DDF.

74
00:03:42.960 --> 00:03:46.679 
It's renamed in between two DIST, DDF

75
00:03:46.680 --> 00:03:48.593 
(distributed data facility).

76
00:03:49.760 --> 00:03:52.619 
DIST has the same meaning distributed

77
00:03:52.620 --> 00:03:55.319 
environments, controlling distributed environments.

78
00:03:55.320 --> 00:03:58.649 
So you see in our running system

79
00:03:58.650 --> 00:04:02.279 
we have five address spaces controlling

80
00:04:02.280 --> 00:04:05.459 
our Db2 environment.

81
00:04:05.460 --> 00:04:08.879 
OK, let's go back to the files

82
00:04:08.880 --> 00:04:11.819 
and I'll show you two, one or

83
00:04:11.820 --> 00:04:14.729 
one, two more files and

84
00:04:14.730 --> 00:04:15.730 
afterwards.

85
00:04:18.290 --> 00:04:19.290 
Just one.

86
00:04:20.630 --> 00:04:21.630 
SPUFI.

87
00:04:23.930 --> 00:04:26.839 
SPUFI (SQL Processing Using File Input)

88
00:04:26.840 --> 00:04:29.869 
and as the name implies, SPUFI uses

89
00:04:29.870 --> 00:04:33.319 
datasets for input and

90
00:04:33.320 --> 00:04:36.199 
in advance you have to allocate a

91
00:04:36.200 --> 00:04:38.299 
partitioned dataset, a PDS.

92
00:04:38.300 --> 00:04:41.149 
Professor Brune has told you what PDS is.

93
00:04:41.150 --> 00:04:44.059 
We need a PDS for input and we

94
00:04:44.060 --> 00:04:46.699 
need a sequential data set for output.

95
00:04:46.700 --> 00:04:50.029 
These two data sets have to be allocated in advance

96
00:04:50.030 --> 00:04:53.089 
and have to be specified into the

97
00:04:53.090 --> 00:04:56.059 
ISPF menu

98
00:04:56.060 --> 00:04:58.529 
controlling SPUFI environment.

99
00:04:59.660 --> 00:05:02.779 
Let's go back to our running

100
00:05:02.780 --> 00:05:05.749 
system and in this case, I

101
00:05:05.750 --> 00:05:08.959 
go back, we have the so-called

102
00:05:08.960 --> 00:05:12.139 
program function keys for controlling the ISPF

103
00:05:12.140 --> 00:05:15.289 
environment with function keys three.

104
00:05:15.290 --> 00:05:18.709 
I get back to our system master application

105
00:05:18.710 --> 00:05:22.699 
menu. And here we find another

106
00:05:22.700 --> 00:05:24.049 
menu points.

107
00:05:24.050 --> 00:05:26.869 
That is important now for in our

108
00:05:26.870 --> 00:05:30.349 
case, I want to show you the Db2 environment.

109
00:05:30.350 --> 00:05:34.129 
So I type in DB

110
00:05:34.130 --> 00:05:36.979 
for our Db2 environment and here you can

111
00:05:36.980 --> 00:05:40.369 
select which database

112
00:05:40.370 --> 00:05:42.709 
instance you want to control.

113
00:05:42.710 --> 00:05:45.529 
And in our case, what I want to show you now

114
00:05:45.530 --> 00:05:47.869 
is the DSN1 environment.

115
00:05:47.870 --> 00:05:50.989 
So I type select here and

116
00:05:50.990 --> 00:05:53.959 
get to the Db2 administration

117
00:05:53.960 --> 00:05:55.249 
menu.

118
00:05:55.250 --> 00:05:58.249 
And in this case here you see that

119
00:05:58.250 --> 00:06:01.939 
we have many possibilities to administrate

120
00:06:01.940 --> 00:06:03.859 
such a Db2 environment.

121
00:06:03.860 --> 00:06:06.079 
I don't go into any detail here.

122
00:06:06.080 --> 00:06:09.079 
What I want to show you is in the lower

123
00:06:09.080 --> 00:06:12.049 
part of the menu you see

124
00:06:12.050 --> 00:06:13.050 
DB2I.

125
00:06:13.920 --> 00:06:17.629 
DB2I stands for Db2 Interactive.

126
00:06:17.630 --> 00:06:19.884 
We have also a performance monitor and Db2

127
00:06:20.900 --> 00:06:23.004 
tools. I want to show you now the Db

128
00:06:24.380 --> 00:06:28.429 
2 interactive part of the menu

129
00:06:28.430 --> 00:06:31.272 
ISPF menu system controlling Db2.

130
00:06:32.450 --> 00:06:36.049 
And here see again a lot of possibilities.

131
00:06:36.050 --> 00:06:39.109 
And in this case, I really just want to show you

132
00:06:39.110 --> 00:06:41.209 
the SPUFI environment.

133
00:06:41.210 --> 00:06:44.275 
So I type in SPUFI

134
00:06:44.276 --> 00:06:47.089 
here. SQL Processing Using File Input.

135
00:06:47.090 --> 00:06:50.509 
And here you see now this is my

136
00:06:50.510 --> 00:06:51.799 
input data set.

137
00:06:51.800 --> 00:06:55.369 
Input data set means it is, in this case, it's

138
00:06:55.370 --> 00:06:58.459 
a partition data set and in this case, I

139
00:06:58.460 --> 00:07:01.429 
can give member name,

140
00:07:01.430 --> 00:07:03.529 
remember name in parenthesis.

141
00:07:03.530 --> 00:07:07.229 
And in this case, I want to select a member

142
00:07:07.230 --> 00:07:08.569 
SYSCAT03.

143
00:07:08.570 --> 00:07:11.509 
And we have another association here.

144
00:07:11.510 --> 00:07:14.599 
It's the sequential data set for output

145
00:07:14.600 --> 00:07:17.899 
that these both are needed for this

146
00:07:17.900 --> 00:07:20.899 
SPUFI processing, this data set for input, this data

147
00:07:20.900 --> 00:07:23.659 
set for output.

148
00:07:23.660 --> 00:07:26.479 
I want to show you now that the input data

149
00:07:26.480 --> 00:07:30.049 
set is really just the normal

150
00:07:30.050 --> 00:07:32.059 
PDS partition dataset.

151
00:07:32.060 --> 00:07:34.789 
So I split my screen now.

152
00:07:34.790 --> 00:07:37.639 
And on the other menu I

153
00:07:37.640 --> 00:07:38.640 
type in "p.3.4"

154
00:07:40.520 --> 00:07:43.519 
to get to the data set list

155
00:07:43.520 --> 00:07:46.789 
menu. And here I can type in what I want to see

156
00:07:46.790 --> 00:07:48.350 
and you see, I already typed

157
00:07:50.360 --> 00:07:53.359 
UWGR.SPUFI means I want to see all data set

158
00:07:53.360 --> 00:07:55.870 
names beginning with "UWGR.SPUFI".

159
00:07:57.470 --> 00:07:59.869 
And here I see two data sets.

160
00:07:59.870 --> 00:08:02.839 
And this, in fact are our input and output data

161
00:08:02.840 --> 00:08:04.309 
sets for SPUFI.

162
00:08:04.310 --> 00:08:07.459 
And I'm interested now in SPUFI.IN,

163
00:08:07.460 --> 00:08:09.699 
so I edit with

164
00:08:10.890 --> 00:08:13.699 
a dataset and here you see

165
00:08:13.700 --> 00:08:15.199 
the member list.

166
00:08:15.200 --> 00:08:18.859 
A lot of members here and in each of these members

167
00:08:18.860 --> 00:08:21.799 
just to show you in each of these

168
00:08:21.800 --> 00:08:23.660 
members, they are

169
00:08:25.730 --> 00:08:27.469 
SQL statements.

170
00:08:27.470 --> 00:08:28.470 
OK.

171
00:08:29.570 --> 00:08:32.569 
And see, one statement I want

172
00:08:32.570 --> 00:08:35.359 
to execute is the SYSCAT03.

173
00:08:35.360 --> 00:08:37.729 
Let's have a look in there.

174
00:08:37.730 --> 00:08:39.830 
It is a SELECT statement from

175
00:08:40.880 --> 00:08:43.908 
SYSIBM.SYSTABLES means we make a select into

176
00:08:43.909 --> 00:08:46.900 
the Db2

177
00:08:46.901 --> 00:08:50.259 
catalog. Db2 catalog is nothing more than

178
00:08:50.260 --> 00:08:51.679 
a Db2 database.

179
00:08:51.680 --> 00:08:54.919 
And within this database, I want to see

180
00:08:54.920 --> 00:08:56.599 
the entries for

181
00:08:57.860 --> 00:09:01.459 
the tables. This means

182
00:09:01.460 --> 00:09:05.059 
show, "me the tables that are defined,

183
00:09:05.060 --> 00:09:06.769 
where the creator is

184
00:09:08.300 --> 00:09:11.029 
UWGR" is here in this select statement.

185
00:09:11.030 --> 00:09:13.190 
Now I go back to my

186
00:09:15.350 --> 00:09:18.020 
other screen and

187
00:09:19.700 --> 00:09:21.240 
select now, this

188
00:09:22.500 --> 00:09:25.439 
input and here you see

189
00:09:25.440 --> 00:09:28.529 
this is an input now and I modify

190
00:09:28.530 --> 00:09:31.649 
it, I want to see the tables

191
00:09:31.650 --> 00:09:33.000 
where the creator is

192
00:09:36.780 --> 00:09:37.780 
UFPA

193
00:09:40.560 --> 00:09:43.739 
and edit session has completed, press enter to continue

194
00:09:43.740 --> 00:09:46.889 
and when I press enter now, are these the result

195
00:09:46.890 --> 00:09:49.829 
in the SPUFI.OUT dataset?

196
00:09:49.830 --> 00:09:51.890 
And you see in this case, this is the

197
00:09:54.420 --> 00:09:57.329 
SQL statement that was given

198
00:09:57.330 --> 00:10:00.149 
in select asterisk from

199
00:10:00.150 --> 00:10:02.969 
the tables where creator is

200
00:10:02.970 --> 00:10:05.879 
UFPA. And you see these are the

201
00:10:05.880 --> 00:10:09.089 
tables in the catalog that are created

202
00:10:09.090 --> 00:10:11.309 
by the user UFPA.

203
00:10:13.700 --> 00:10:14.700 
OK.

204
00:10:15.230 --> 00:10:18.409 
This was what I wanted to show you

205
00:10:18.410 --> 00:10:20.510 
in our session today.

206
00:10:21.770 --> 00:10:24.949 
Let's get back to the last slide, and the last

207
00:10:24.950 --> 00:10:27.889 
slide is just our trailer for

208
00:10:27.890 --> 00:10:30.949 
questions, remarks and so on, please use the discussion

209
00:10:30.950 --> 00:10:33.859 
forum on the openHPI

210
00:10:33.860 --> 00:10:35.149 
platform.

211
00:10:35.150 --> 00:10:38.269 
Thank you for attending and see you in

212
00:10:38.270 --> 00:10:40.789 
one of our next videotapes.
