WEBVTT

1
00:00:00.230 --> 00:00:04.640 
Ralf, please, give me some some
other thing. So, this breakpoint

2
00:00:04.640 --> 00:00:08.760 
right now is quite stupid.
It stalls the program

3
00:00:08.760 --> 00:00:12.040 
whenever it is reached,
but we know that we want

4
00:00:12.040 --> 00:00:16.030 
to have it just stopped at a certain
position when we have a certain

5
00:00:16.030 --> 00:00:19.130 
value at our variable.
Therefore, we can make

6
00:00:19.130 --> 00:00:22.880 
it more smart and we can make it
a conditional breakpoint. So

7
00:00:22.880 --> 00:00:26.030 
we go here to the
breakpoints tab

8
00:00:26.150 --> 00:00:30.880 
and then we select
a breakpoint

9
00:00:30.880 --> 00:00:34.620 
and then we... want to
have a conditional one

10
00:00:34.630 --> 00:00:38.110 
And it says suspend
when true.

11
00:00:38.110 --> 00:00:42.230 
So we want to suspend our program
when our condition is true.

12
00:00:42.420 --> 00:00:46.500 
We can just fill in the boolean
expression in there, so

13
00:00:46.500 --> 00:00:50.530 
this is our condition.
And we want our index

14
00:00:51.490 --> 00:00:56.910 
to be larger than one thousand
five hundred thirty.

15
00:00:56.920 --> 00:01:02.380 
It happened around
that number,

16
00:01:02.660 --> 00:01:06.210 
and once more don't

17
00:01:06.350 --> 00:01:09.860 
make another mistake we see here
's little asterisk, it means

18
00:01:09.860 --> 00:01:13.370 
it's not yet saved so
we need to save that.

19
00:01:13.370 --> 00:01:15.790 
Now the breakpoint
got updated

20
00:01:16.120 --> 00:01:19.710 
and if we press now resume
which is, I think F9,

21
00:01:19.840 --> 00:01:23.260 
or we just press
that button.

22
00:01:23.260 --> 00:01:25.950 
We're using the buttons
so that you can see

23
00:01:25.960 --> 00:01:29.780 
what we're doing, so
that's just for you.

24
00:01:30.020 --> 00:01:34.120 
Now we're at one thousand
five hundred thirty one

25
00:01:34.240 --> 00:01:36.530 
which, kind of saved us
quite a lot of time

26
00:01:37.150 --> 00:01:42.090 
... and clicking. For you. I
mean I'm cheap I know, but...

27
00:01:43.900 --> 00:01:47.850 
This is definitely larger
than one thousand five

28
00:01:47.850 --> 00:01:51.520 
hundred thirty one,
we can just

29
00:01:51.520 --> 00:01:55.430 
commence... what happens
next... shall we step over?

30
00:01:55.430 --> 00:01:59.770 
Yeah, go on, go
on... thirty two.

31
00:02:00.190 --> 00:02:05.220 
Bingo, well we didn't
want that, so yeah now

32
00:02:05.460 --> 00:02:10.120 
We start all over again?
Debug? .. And we have to go

33
00:02:10.130 --> 00:02:13.620 
up until that point once more,
but as we've got a conditional

34
00:02:13.620 --> 00:02:17.680 
breakpoint we can just
re-debug the program more or

35
00:02:17.680 --> 00:02:21.110 
less and then we're
already there. Cool.

36
00:02:23.490 --> 00:02:28.120 
Now we're going over
the length of or

37
00:02:28.130 --> 00:02:33.200 
input stream so maybe we can have
a look how long our input stream

38
00:02:33.200 --> 00:02:37.530 
actually is, so
our array?

39
00:02:37.530 --> 00:02:41.490 
We can just hover over it, over
the input stream and have a

40
00:02:41.490 --> 00:02:44.850 
look into the object,

41
00:02:45.060 --> 00:02:47.820 
Hm, well yeah there
is something,

42
00:02:48.450 --> 00:02:51.150 
but that there should
be a better way.

43
00:02:51.160 --> 00:02:54.260 
What we also can do is we
can have any expressions

44
00:02:54.260 --> 00:02:57.310 
or method calls if it returns
something. If we want to

45
00:02:57.460 --> 00:03:02.100 
watch it, we can just right-click...
so first select all of it and then

46
00:03:02.100 --> 00:03:05.280 
right-click and then
we say watch.

47
00:03:05.480 --> 00:03:11.000 
Watch... Now, we watch it and
then we add an expression and

48
00:03:11.010 --> 00:03:14.280 
we can go to the expression tab
right over there and we have all

49
00:03:14.280 --> 00:03:16.880 
expressions, which
we want to watch.

50
00:03:17.130 --> 00:03:20.520 
They will update whenever
something changes there.

51
00:03:20.960 --> 00:03:24.130 
So we can see here input
stream length, but this

52
00:03:24.290 --> 00:03:26.730 
probably will not change
because it's kind of

53
00:03:27.040 --> 00:03:30.450 
static text. It's not
static it's fixed.

54
00:03:32.480 --> 00:03:35.830 
Actually, it's not fixed
but we we are not

55
00:03:36.130 --> 00:03:38.270 
messing around with the
input stream here.

56
00:03:38.400 --> 00:03:42.970 
Then we are running
over it, so

57
00:03:42.970 --> 00:03:45.890 
we want to have the current value
of index maybe we can just

58
00:03:45.890 --> 00:03:50.940 
hover over it.. and then we can
also see what the plus-plus-

59
00:03:50.940 --> 00:03:54.880 
index is doing is so we can
just select it once more.

60
00:03:54.900 --> 00:03:58.510 
Maybe watch it or inspect
it. Inspect is the same as

61
00:03:58.510 --> 00:04:01.460 
watch. Just... once. So

62
00:04:01.770 --> 00:04:05.840 
it's kind of not persistent
in this view it's

63
00:04:05.840 --> 00:04:09.780 
kind of... Oh
it's gone.

64
00:04:09.790 --> 00:04:13.000 
Yeah this strange but
what happened is

65
00:04:13.210 --> 00:04:16.440 
we increase the the
value if we go

66
00:04:16.570 --> 00:04:19.350 
over it... and once more ...
and if you watch it...

67
00:04:19.860 --> 00:04:25.400 
Let's watch it...

68
00:04:26.600 --> 00:04:30.490 
yeah you see it went
it even higher so...

69
00:04:30.620 --> 00:04:32.380 
inspecting kind of
plus-plused it.

70
00:04:35.130 --> 00:04:38.790 
Actually runs the
plus-plus...and this is also

71
00:04:38.950 --> 00:04:43.280 
something, which might induce even
more errors... so when you're

72
00:04:43.280 --> 00:04:46.150 
debugging and while you're looking
into things and running things.

73
00:04:46.400 --> 00:04:50.380 
You are messing with the variables,
maybe... or you're calling

74
00:04:50.380 --> 00:04:52.570 
something which shouldn't
be called twice, or

75
00:04:53.150 --> 00:04:56.150 
three times or whatever.
There was this thing with

76
00:04:56.150 --> 00:05:00.230 
the cat, no? The thing with the
cat? The cat in the box?

77
00:05:00.230 --> 00:05:03.050 
Ah, and you look and then,...
yeah... yeah hopefully it's alive.

78
00:05:04.840 --> 00:05:08.510 
So be careful about
that and now if we

79
00:05:08.730 --> 00:05:12.770 
go over it once more, I already
know, yeah we are way beyond the

80
00:05:12.850 --> 00:05:17.310 
beyond the length of
our array here.

81
00:05:17.470 --> 00:05:21.730 
So yeah I think problem is that
we increase our index first

82
00:05:21.730 --> 00:05:24.900 
and then check the position we
should probably do it the other

83
00:05:24.900 --> 00:05:27.700 
way round. So, but
actually I mean

84
00:05:27.700 --> 00:05:31.740 
we don't have that position
yet but why doesn't

85
00:05:32.050 --> 00:05:33.910 
it give us

86
00:05:34.090 --> 00:05:37.690 
an exception yet, here? We just have
a variable and we increase it and

87
00:05:37.700 --> 00:05:40.980 
we could... Ah, we
didn't check

88
00:05:40.980 --> 00:05:44.230 
for this position... yeah if you
want to just right-click it

89
00:05:44.340 --> 00:05:49.820 
And do, i don't know
what inspect or

90
00:05:49.830 --> 00:05:54.980 
whatever, .. yeah I don't
know it somehow is hiding

91
00:05:54.980 --> 00:05:57.440 
the window, but
we can do watch

92
00:05:57.620 --> 00:06:04.410 
probably and then
we should get

93
00:06:04.820 --> 00:06:07.500 
yeah we get the
error during the

94
00:06:07.500 --> 00:06:10.990 
evaluation.

95
00:06:11.350 --> 00:06:14.760 
Basically, it's
broken. Yeah

96
00:06:14.870 --> 00:06:18.340 
here you can see, attempt to
access illegal array index...

97
00:06:18.590 --> 00:06:21.910 
And if we go on with our problem
we will see the same thing.

98
00:06:21.910 --> 00:06:25.210 
So, what we need to do is we
need to first have a look into

99
00:06:25.210 --> 00:06:28.860 
the area at the position
right now, because in

100
00:06:28.860 --> 00:06:31.480 
line seventy nine we're just
checking whether index is

101
00:06:31.590 --> 00:06:35.460 
smaller than length, yeah
we're not checking this

102
00:06:35.460 --> 00:06:40.270 
right now, we already
passed that check. So the

103
00:06:40.270 --> 00:06:44.220 
thing is that... just fix
it... we need to kind of

104
00:06:44.470 --> 00:06:47.620 
remove these two pluses

105
00:06:47.730 --> 00:06:50.110 
so that it's not plus-plus index but
we need to have index plus-plus.

106
00:06:50.320 --> 00:06:53.500 
have index plus-plus. Maybe you
remember that in the Java1 course

107
00:06:53.500 --> 00:06:55.960 
we had a similar problem there,
if I remember it right.

108
00:06:55.970 --> 00:06:58.890 
So in this case
we kind of

109
00:06:59.190 --> 00:07:02.790 
check.. no we increase
first and then check..

110
00:07:02.950 --> 00:07:05.370 
This is a stupid
idea...

111
00:07:05.560 --> 00:07:08.360 
yeah, and we want to
have it that way.

112
00:07:08.590 --> 00:07:14.860 
One more error source:
save. So, we just

113
00:07:14.860 --> 00:07:18.110 
run it again, so not debug it,
you can just resume but it is

114
00:07:18.110 --> 00:07:22.040 
in a broken state right now... so
yeah I mean let's just run it from

115
00:07:22.050 --> 00:07:25.240 
from new. So we
terminate it

116
00:07:25.430 --> 00:07:28.700 
here, run it without
the break points

117
00:07:28.890 --> 00:07:32.900 
and, what?, it's working.
Problem solved.

118
00:07:32.900 --> 00:07:38.330 
No. Hm. Strange
kind of..

119
00:07:38.340 --> 00:07:40.830 
I thought that was supposed
to be a message, and this

120
00:07:41.000 --> 00:07:44.080 
kind of looks like
Easter to me.

121
00:07:44.200 --> 00:07:47.580 
Lots of eggs. In
german EI is an EGG.

122
00:07:48.990 --> 00:07:53.900 
Well, you also want me
to fix that right?

123
00:07:53.900 --> 00:07:58.800 
I put another easter egg in there for you. Oh,
thanks! So let's go back to the Java perspective

124
00:07:58.810 --> 00:08:00.970 
I need to have a glance
over the whole code,

125
00:08:01.260 --> 00:08:04.540 
and we can change
perspectives on the top

126
00:08:04.540 --> 00:08:07.550 
right here. That's here you've
got plenty of buttons to

127
00:08:07.610 --> 00:08:11.980 
check, so these are the two
active ones, and then you got

128
00:08:12.000 --> 00:08:16.570 
some more, but you won't
need most of them.

129
00:08:16.570 --> 00:08:19.550 
The most important
ones are these

130
00:08:19.550 --> 00:08:24.640 
two. So, we've got
E's and I's.

131
00:08:24.640 --> 00:08:29.700 
so, in that decode task I still know
that there's a morse alphabet.

132
00:08:29.700 --> 00:08:34.190 
So maybe let's have
a look in there.

133
00:08:34.200 --> 00:08:37.680 
And we always get E's,
which is ... can you...

134
00:08:37.950 --> 00:08:44.000 
line twenty three... that's a short
and a blank so short signal, blank

135
00:08:44.000 --> 00:08:48.590 
signal. Then we also
got I's, which is a

136
00:08:48.600 --> 00:08:52.400 
short and short.
Just shorts.

137
00:08:52.650 --> 00:08:56.800 
Can you show me the secret
code again, the text file?

138
00:08:59.290 --> 00:09:03.060 
Secret code, there should
be longs. The pluses

139
00:09:03.060 --> 00:09:06.230 
are longs, right? And the
minuses short? Right.

140
00:09:06.610 --> 00:09:10.760 
So the decode seems to, to
at least I assume that

141
00:09:10.760 --> 00:09:16.150 
the decode is broken. Yeah,
let's put in some more

142
00:09:16.150 --> 00:09:19.840 
breakpoints and see what happens.
So, I want to stop whenever

143
00:09:19.840 --> 00:09:24.090 
we find a short...
So that would be

144
00:09:24.400 --> 00:09:28.360 
line eighty two.
Right, ...

145
00:09:28.700 --> 00:09:32.090 
Whenever we do find a long, which
we do not quite right now.

146
00:09:32.250 --> 00:09:34.700 
And I don't think we need that
any longer so we can just

147
00:09:34.870 --> 00:09:39.350 
disable it... or
double-click it ...

148
00:09:39.350 --> 00:09:44.440 
to even remove it. Ah
that's the conditional

149
00:09:44.440 --> 00:09:47.700 
breakpoint, they ask again because
you put so much effort in it.

150
00:09:47.740 --> 00:09:52.290 
Writing the boolean expression
:) And now debug it,

151
00:09:52.420 --> 00:09:57.160 
please. Debug it, I'm
gonna debug it.

152
00:09:57.540 --> 00:10:02.630 
Not trusting the button at the
top? I spent so much time

153
00:10:02.630 --> 00:10:06.450 
with this ... switch the
perspective ...but I

154
00:10:07.030 --> 00:10:12.240 
got careful. We
can also clean

155
00:10:12.240 --> 00:10:14.880 
up on the right-hand side, so
there are still some expressions

156
00:10:14.880 --> 00:10:19.100 
which have old values and
so on, we can remove

157
00:10:19.220 --> 00:10:22.890 
all that. Breakpoints,
that is

158
00:10:22.890 --> 00:10:27.230 
fine and the
variables..

159
00:10:27.540 --> 00:10:31.160 
Now we have a look in what is in
morseSymbol right now, so we're at index

160
00:10:31.180 --> 00:10:35.150 
fourteen. Not the morseStream
but the symbol...

161
00:10:35.690 --> 00:10:38.300 
nothing in yet...

162
00:10:38.300 --> 00:10:41.230 
let's step over it and see
what happens. So, F6

163
00:10:41.880 --> 00:10:47.290 
I'm gonna F6... find a
short.. find a blank

164
00:10:48.250 --> 00:10:54.370 
Ok. Go on, go on, go
on some more shorts.

165
00:10:55.040 --> 00:10:56.270 
and blanks.

166
00:10:59.270 --> 00:11:03.030 
But what was the first position of a
long or the second one? Can we...

167
00:11:03.040 --> 00:11:06.020 
..yeah look what we..

168
00:11:06.320 --> 00:11:12.050 
Let's go to the project explorer here, so we don't
need to switch perspectives if we just want to

169
00:11:12.050 --> 00:11:16.070 
check the file here. There
should be a long...

170
00:11:16.080 --> 00:11:18.610 
somewhere.

171
00:11:18.740 --> 00:11:23.340 
So we can also check this by
disabling the breakpoint

172
00:11:23.350 --> 00:11:28.670 
on the short. Just
disable it.

173
00:11:29.030 --> 00:11:33.370 
And then resume the program
and yeah like the..

174
00:11:34.710 --> 00:11:38.680 
it just runs through so
there is no long...

175
00:11:38.680 --> 00:11:42.990 
we never find a
long. So the plus

176
00:11:43.000 --> 00:11:48.300 
is the long. So just give me
the breakpoint again re-run

177
00:11:48.300 --> 00:11:50.950 
through the program... you will
do this quite often so...

178
00:11:51.410 --> 00:11:55.520 
You have an idea, you check something
and you ran past the point,

179
00:11:55.550 --> 00:11:58.670 
where you think the error might
occur. Therefore, you have to

180
00:11:58.670 --> 00:12:01.340 
restart again and again and
you need your breakpoints.

181
00:12:01.770 --> 00:12:05.780 
So this... Restart? no, no, no we
need the breakpoint again in

182
00:12:05.780 --> 00:12:08.340 
line eighty two. We need the
breakpoint again in line

183
00:12:08.590 --> 00:12:12.560 
eighty two. Otherwise
we won't stop at all.

184
00:12:12.610 --> 00:12:16.740 
Just re-debug now, go on
I want to fix that bug.

185
00:12:19.520 --> 00:12:24.730 
Ok and there we have
a short because..

186
00:12:24.740 --> 00:12:30.510 
our position or so we..
the if condition was

187
00:12:30.520 --> 00:12:34.480 
fulfilled so we went into
there and it checked whether

188
00:12:34.480 --> 00:12:37.430 
our index was smaller than the
input stream length, yes,

189
00:12:37.660 --> 00:12:41.130 
and then it took the
input stream index

190
00:12:41.510 --> 00:12:47.040 
and checked whether it was cipher off
... or on ... off in line eighty one.

191
00:12:47.470 --> 00:12:50.880 
We are there... So,
that is a minus

192
00:12:50.880 --> 00:12:55.280 
it's a minus, yeah seems
to be quite fine.

193
00:12:55.280 --> 00:13:00.000 
And then we check whether...
and then the other option

194
00:13:00.000 --> 00:13:04.880 
is - if our index of cyber
stream is cipher on -

195
00:13:05.190 --> 00:13:10.840 
that should be a plus, no? So check
that? Yeah, go, go on cipher on

196
00:13:10.840 --> 00:13:16.090 
wait what? We went
in there because

197
00:13:16.090 --> 00:13:19.140 
we had a minus but
cipher on is a minus?

198
00:13:20.090 --> 00:13:23.210 
and cipher off
is minus too?

199
00:13:23.640 --> 00:13:25.830 
Tom?  Got me, got me :)

200
00:13:26.260 --> 00:13:31.170 
I added a Vorzeichenfehler
:) Just kidding.

201
00:13:31.220 --> 00:13:34.660 
We need to do that.

202
00:13:34.860 --> 00:13:38.410 
And we need to save once
more. That helps a lot.

203
00:13:39.140 --> 00:13:43.680 
And then it says yeah you you
changed the code under the hood

204
00:13:43.690 --> 00:13:46.480 
and whether we want to
continue or to restart...

205
00:13:46.590 --> 00:13:49.490 
I don't think that we want
to continue i mean..

206
00:13:49.810 --> 00:13:53.420 
you could continue but you never know
what happens. Yeah and we could

207
00:13:53.420 --> 00:13:57.020 
restart but then once again we run into
all the breakpoints. So we just

208
00:13:57.030 --> 00:14:00.880 
terminate and run the program
and see what happens.

209
00:14:01.310 --> 00:14:04.730 
Not debugging, just
running. That looks good.

210
00:14:05.130 --> 00:14:09.580 
Relaxing on the ocean right
now but we will meet soon-er

211
00:14:09.640 --> 00:14:15.320 
then you expect.
Finally, it's over.

212
00:14:15.430 --> 00:14:19.410 
Yeah long enough. What
have we just learned?

213
00:14:19.850 --> 00:14:23.050 
Just to sum it up.

214
00:14:23.610 --> 00:14:27.160 
We read the stack trace. So, we
started with that so we had the

215
00:14:27.360 --> 00:14:30.890 
FileNotFoundException or the
ArrayIndexOutOfBoundsException.

216
00:14:30.890 --> 00:14:34.520 
And the Stacktrace
also shows you where

217
00:14:34.540 --> 00:14:37.620 
you find the problem, which line
number, which files and so on.

218
00:14:38.150 --> 00:14:42.080 
And then we introduced some
breakpoints in order to

219
00:14:42.380 --> 00:14:46.710 
get the program to
a certain state.

220
00:14:46.920 --> 00:14:51.410 
Which we want to inspect then.
We can steer the debugger

221
00:14:51.480 --> 00:14:54.590 
between these breakpoints
or from line to line.

222
00:14:54.660 --> 00:14:59.360 
With the step into, step
over, step return

223
00:14:59.370 --> 00:15:03.840 
buttons or actions
and we also can

224
00:15:03.840 --> 00:15:07.750 
resume the flow
of code

225
00:15:07.930 --> 00:15:11.680 
until it reaches the next breakpoint.
But the thing we actually

226
00:15:11.680 --> 00:15:14.870 
want to do here is we want to
inspect the program. So whenever

227
00:15:14.870 --> 00:15:17.740 
we stopped or the program
suspended at some point

228
00:15:18.030 --> 00:15:21.570 
we want to inspect some variables,
which we can just do by hovering

229
00:15:21.580 --> 00:15:26.530 
over them. Or if we need more complex
expressions to be evaluated

230
00:15:26.810 --> 00:15:31.490 
we can just do that by adding a
watch expression so we just

231
00:15:31.670 --> 00:15:35.600 
selected watch. We can
also select inspect but

232
00:15:35.610 --> 00:15:39.080 
it hid our window normally it
should work so you can try it out

233
00:15:39.260 --> 00:15:42.680 
on your own. But be careful
whenever you do that you might

234
00:15:42.680 --> 00:15:46.700 
have unwanted side effects.
What we didn't mention

235
00:15:46.720 --> 00:15:49.430 
actually...
System.out.println(...)...

236
00:15:51.510 --> 00:15:55.000 
I mean, it's a simple tool but the good
thing about System.out.println(...) is

237
00:15:55.000 --> 00:15:58.590 
it almost always
works!!
