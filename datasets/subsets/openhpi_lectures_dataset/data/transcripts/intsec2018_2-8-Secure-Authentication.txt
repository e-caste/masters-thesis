WEBVTT

1
00:00:01.030 --> 00:00:04.520 
After having discussed in this week
how to authenticate by means

2
00:00:04.520 --> 00:00:09.210 
of passwords, we have seen there
is a great variety of attacks.

3
00:00:09.220 --> 00:00:12.210 
Again such password
authentication

4
00:00:12.450 --> 00:00:16.670 
looks not so secure. So we
want to discuss in this

5
00:00:16.890 --> 00:00:20.870 
video more secure ways
for authentication.

6
00:00:21.430 --> 00:00:25.990 
And one important idea are
so called one time passwords

7
00:00:26.000 --> 00:00:30.980 
and the idea behind is that a
password can only be used once

8
00:00:30.980 --> 00:00:36.750 
for authentication. That means if one
has already used that password,

9
00:00:37.110 --> 00:00:40.540 
one will never get access to
the system to the service

10
00:00:40.880 --> 00:00:46.570 
by means of that password. The
password immediately lost its

11
00:00:46.570 --> 00:00:54.470 
validity after the first use. So
even if an attacker has intercept

12
00:00:54.470 --> 00:00:59.010 
or spying out this password it's
useless because he cannot

13
00:00:59.010 --> 00:01:02.300 
use because password can
be used only one time.

14
00:01:02.740 --> 00:01:06.300 
But there of course there is
a problem - the user must be

15
00:01:06.590 --> 00:01:09.990 
provided with a list of
such passwords for each

16
00:01:10.290 --> 00:01:15.720 
log in a new password a
new one time password

17
00:01:15.720 --> 00:01:18.630 
is needed so it's
much more difficult

18
00:01:18.910 --> 00:01:23.740 
then to work with one password.
Typically for this purpose

19
00:01:24.010 --> 00:01:27.610 
to provide the user
with a list of

20
00:01:27.610 --> 00:01:32.250 
some one time passwords, an
independent second transmission

21
00:01:32.250 --> 00:01:37.030 
channel is necessary for
example by a hardware token.

22
00:01:37.820 --> 00:01:41.280 
The RSA secure id token
is a famous example,

23
00:01:41.770 --> 00:01:46.300 
or by a text message for
example via mobile phone

24
00:01:46.900 --> 00:01:50.540 
such mTANs, lists sent
by post or others.

25
00:01:51.350 --> 00:01:55.450 
Such TAN lists, these are lists
of such one time passwords.

26
00:01:56.860 --> 00:02:01.610 
And even more secure way
and more convenient way

27
00:02:01.860 --> 00:02:05.700 
for authentication is
authentication by means of

28
00:02:06.010 --> 00:02:10.140 
public key cryptography by
means of public keys.

29
00:02:11.760 --> 00:02:15.720 
The application of public
key cryptography methods

30
00:02:16.190 --> 00:02:20.150 
are the following - the
user gets assigned

31
00:02:20.380 --> 00:02:24.290 
not one key for decryption,
the user gets assigned a

32
00:02:24.720 --> 00:02:29.100 
key pair. There is one
so called public key

33
00:02:29.310 --> 00:02:33.930 
and another so called private key.
The idea behind is that the

34
00:02:33.930 --> 00:02:38.230 
public key can be widely
distributed, everyone who

35
00:02:38.230 --> 00:02:41.460 
wants to get in contact
with me can get my

36
00:02:41.790 --> 00:02:47.440 
public key but my private key I
never have to give to another

37
00:02:47.440 --> 00:02:51.160 
party. So it's a big difference
to the usual cryptography

38
00:02:51.770 --> 00:02:55.660 
cryptographic methods the
secret key methods where

39
00:02:56.250 --> 00:03:00.710 
there is one key which is shared
between the two communication

40
00:03:00.710 --> 00:03:04.850 
partners. Here in case of public
key where each user has two

41
00:03:04.850 --> 00:03:08.520 
keys the private key remains
only with the user

42
00:03:08.710 --> 00:03:11.070 
and the public key can
be freely distributed.

43
00:03:11.940 --> 00:03:16.610 
For secure authentication
a user needs certificate

44
00:03:17.090 --> 00:03:21.290 
and he needs his or her
digital signature.

45
00:03:22.090 --> 00:03:25.770 
What is a certificate, what
is such digital signature?

46
00:03:26.490 --> 00:03:30.210 
A digital certificate is
something like an id card

47
00:03:30.840 --> 00:03:35.220 
it is issued by a trustworthy
entity which confirms

48
00:03:35.590 --> 00:03:39.290 
that there is connection a link
between the identity data

49
00:03:39.680 --> 00:03:44.730 
and the user and his
or her by his or her

50
00:03:44.930 --> 00:03:49.350 
digital signature. So like in
a case of identity card

51
00:03:49.830 --> 00:03:53.130 
a government administration
gives this

52
00:03:53.550 --> 00:03:57.670 
here we need such a
trustworthy entity

53
00:03:57.970 --> 00:04:00.880 
for example a
trust center

54
00:04:01.420 --> 00:04:07.130 
which states that the
public key and the user

55
00:04:07.390 --> 00:04:13.240 
are connected.
Like in an ID card

56
00:04:13.420 --> 00:04:16.460 
the photo and the name is
connected to the person.

57
00:04:18.120 --> 00:04:23.370 
The digital signature this proves

58
00:04:23.580 --> 00:04:27.330 
that the identity data
actually comes from the user.

59
00:04:27.950 --> 00:04:30.990 
This digital signature
is comparable with the

60
00:04:31.180 --> 00:04:35.910 
handwritten signature but it's
modernized by cryptographic methods.

61
00:04:36.530 --> 00:04:41.270 
The user which gave
his digital signature

62
00:04:41.790 --> 00:04:47.710 
to a message proves
that this message

63
00:04:47.810 --> 00:04:52.860 
really comes from him or her
and that this message was not

64
00:04:53.120 --> 00:04:57.360 
faked or was not manipulated
on the transmission way.

65
00:04:58.120 --> 00:05:02.650 
So for a secure authentication, the
user needs the digital signature.

66
00:05:03.310 --> 00:05:07.940 
This is a service
characteristics encrypted with

67
00:05:07.940 --> 00:05:12.250 
the users private key.
There are data like name

68
00:05:12.630 --> 00:05:15.850 
like other things
that are important

69
00:05:16.000 --> 00:05:20.840 
and it is encrypted

70
00:05:21.500 --> 00:05:26.850 
by means of the users private
key. So digital signature

71
00:05:26.850 --> 00:05:33.010 
is a special encryption scheme
that is run or is performed

72
00:05:33.020 --> 00:05:36.470 
by means of the private
key of the user. The

73
00:05:36.690 --> 00:05:39.850 
certificate which is also needed
for a secure authentication

74
00:05:40.100 --> 00:05:45.470 
consists of identity data and
the public key of the user

75
00:05:45.910 --> 00:05:50.550 
and this both things

76
00:05:50.740 --> 00:05:54.550 
provide the possibility for
secured authentication.

77
00:05:55.360 --> 00:05:58.610 
But it is important that
the identity data

78
00:05:58.860 --> 00:06:03.350 
and the public key are in
some sense authorized

79
00:06:03.750 --> 00:06:08.020 
and this authorization is given
by the trustworthy entity

80
00:06:08.020 --> 00:06:12.270 
by the trust center and
by digitally signing

81
00:06:12.730 --> 00:06:18.540 
this identity data and the public
key. So everyone can control it

82
00:06:18.750 --> 00:06:23.380 
because the signature is
encrypted with a private key

83
00:06:23.380 --> 00:06:27.520 
it can be decrypted
with a public key,

84
00:06:27.990 --> 00:06:32.250 
everyone in the net can check whether
this is the digital signature

85
00:06:32.250 --> 00:06:36.280 
of trustworthy entity, of
the trust center and when

86
00:06:36.520 --> 00:06:40.840 
the person believes in
the work of trustworthy

87
00:06:40.840 --> 00:06:43.080 
entity in the work
of trust center,

88
00:06:43.490 --> 00:06:49.170 
then he gets the public key of
the user together with his

89
00:06:49.170 --> 00:06:54.130 
identity data. And then based on the
digital signature of the trustworthy

90
00:06:54.130 --> 00:07:00.090 
entity everyone can recognize
yes it's true this user to

91
00:07:00.090 --> 00:07:03.100 
this user that
public key

92
00:07:03.500 --> 00:07:04.730 
is belonging.

93
00:07:07.220 --> 00:07:11.680 
For, now a secure authentication
with a service

94
00:07:12.020 --> 00:07:19.750 
user send their digital signature
together with a certificate.

95
00:07:19.850 --> 00:07:20.300 


96
00:07:20.550 --> 00:07:23.780 
No password is sent no
password is logged in

97
00:07:24.060 --> 00:07:28.380 
by working with the
public key mechanisms,

98
00:07:28.650 --> 00:07:32.540 
the digital signature and the
certificate is sent to the service.

99
00:07:33.800 --> 00:07:38.200 
So the authentication a service
of the service provider

100
00:07:38.580 --> 00:07:44.450 
checks first the certificate. We
speak of verified certificate.

101
00:07:45.020 --> 00:07:50.140 
It does it by encrypting
the digital signature

102
00:07:50.340 --> 00:07:55.170 
of the trustworthy entity
with the public key of that

103
00:07:55.180 --> 00:07:59.270 
trustworthy entity and then if
it's possible to decrypt and

104
00:07:59.270 --> 00:08:02.220 
it's clear it was assigned
by the private key

105
00:08:02.550 --> 00:08:06.770 
and then the authentication service
can see the name of the user

106
00:08:06.900 --> 00:08:10.420 
and can see his
public key.

107
00:08:12.010 --> 00:08:15.240 
The certificate
is only valid

108
00:08:15.500 --> 00:08:21.060 
if the public key of the trustworthy
entity fits that means it's possible

109
00:08:21.580 --> 00:08:24.910 
with the public key of the
trustworthy entity to decrypt

110
00:08:25.680 --> 00:08:29.030 
the certificate and
to see the content.

111
00:08:30.030 --> 00:08:35.850 
And the certificate is only
valid if a certificate is

112
00:08:35.930 --> 00:08:40.720 
decrypted entity data match
to the users signature

113
00:08:41.270 --> 00:08:46.620 
to the user signature

114
00:08:46.840 --> 00:08:52.130 
identity data decrypted with the users
public key from the certificate.

115
00:08:52.720 --> 00:08:56.550 
Certificate part was a public key
and by means if its possible

116
00:08:56.550 --> 00:08:59.700 
by means of the public
key to decrypt the

117
00:08:59.990 --> 00:09:06.150 
signature of the user, remember
the signature was given by

118
00:09:06.460 --> 00:09:09.430 
was an encryption
by private key,

119
00:09:09.940 --> 00:09:13.110 
then the authentication
service can be sure

120
00:09:13.350 --> 00:09:17.730 
that the user is the
right one and can

121
00:09:18.120 --> 00:09:22.500 
authenticate the user.
Here let's have a look

122
00:09:22.800 --> 00:09:25.890 
to a picture which shows
what we are doing.

123
00:09:26.200 --> 00:09:29.680 
We have the user that
want to authenticate

124
00:09:30.200 --> 00:09:34.290 
we have the
authentication service

125
00:09:34.620 --> 00:09:40.290 
in the internet who wants to
check whether the user is real

126
00:09:40.290 --> 00:09:42.300 
as a user and whether
the user has the right

127
00:09:42.550 --> 00:09:45.960 
to use the resources of the service.
And then there is a third

128
00:09:45.960 --> 00:09:50.210 
party this is the trust center
the trustworthy entity,

129
00:09:50.750 --> 00:09:57.410 
and these three parties
cooperate in the following way -

130
00:09:57.780 --> 00:10:01.840 
in the beginning our user
needs a certificate.

131
00:10:02.520 --> 00:10:08.450 
In order to get a certificate
it askes to get a certificate

132
00:10:08.660 --> 00:10:13.240 
from the third party from the
trustworthy entity and the trustworthy

133
00:10:13.240 --> 00:10:17.010 
entity checks the name of the
user, checks his identity

134
00:10:17.010 --> 00:10:21.520 
data as there are different ways,
for example the user is forced to

135
00:10:21.520 --> 00:10:23.870 
show his identity card
or there is another

136
00:10:24.330 --> 00:10:28.180 
mechanisms and then the
trustworthy entity

137
00:10:28.470 --> 00:10:33.180 
issues a certificate. There is
written the identity data of the

138
00:10:33.180 --> 00:10:35.400 
user and the public key
of the user and this is

139
00:10:39.350 --> 00:10:42.760 
signed with the signature
of the trustworthy entity.

140
00:10:43.000 --> 00:10:46.770 
Signed means that it's
encrypted with a private key

141
00:10:47.020 --> 00:10:52.780 
of the trustworthy entity. Now
our user has a certificate

142
00:10:53.230 --> 00:10:57.200 
and when the user wants
to authenticate,

143
00:10:57.730 --> 00:11:03.270 
he sends the certificate and
signs the certificate. That

144
00:11:03.270 --> 00:11:08.680 
means he uses his private
key and encrypt the

145
00:11:08.880 --> 00:11:13.110 
certificate and other
information that

146
00:11:13.110 --> 00:11:16.480 
are important for the
authentication with his private

147
00:11:16.480 --> 00:11:22.070 
key. This is sent now to the
service. The verifying user

148
00:11:22.500 --> 00:11:28.430 
and verifying user needs the
public key of the user

149
00:11:28.740 --> 00:11:34.500 
to decrypt his or her signature.
So what the verifying

150
00:11:34.500 --> 00:11:40.280 
user is doing - here it
takes he receives the

151
00:11:40.670 --> 00:11:44.250 
public key of the trustworthy
entity and by means of the plus

152
00:11:44.380 --> 00:11:48.920 
trustworthy by means of the public
key of the trustworthy entity,

153
00:11:49.480 --> 00:11:52.640 
the verifying user can
decrypt the certificate.

154
00:11:53.100 --> 00:11:57.420 
In the certificate
there is a connection

155
00:11:57.430 --> 00:12:01.500 
between the name the identity
data of the user and the

156
00:12:01.960 --> 00:12:06.000 
public key of the user and then
by means of this public key

157
00:12:06.000 --> 00:12:09.790 
of the user then he can
decrypt the signature

158
00:12:10.020 --> 00:12:14.360 
of the user and then the
verifying user is sure

159
00:12:14.790 --> 00:12:18.590 
that is a user which
has an account

160
00:12:18.600 --> 00:12:21.540 
with a service and which
is allowed to use

161
00:12:21.890 --> 00:12:23.830 
this and that
resources.

162
00:12:26.300 --> 00:12:29.880 
This signature this public key
authentication this public

163
00:12:29.880 --> 00:12:34.610 
key encryption is really a little
bit difficult, it's based

164
00:12:34.610 --> 00:12:38.510 
on the strong
mathematical algorithms

165
00:12:38.750 --> 00:12:43.310 
but I hope you have got
the idea that by means

166
00:12:43.650 --> 00:12:49.030 
of the two keys, the one key
which everyone only is with

167
00:12:49.030 --> 00:12:52.620 
one user and the other
everyone can use.

168
00:12:52.800 --> 00:12:56.840 
It is clear if something is
encrypted with the private key

169
00:12:56.840 --> 00:13:00.310 
of a user and if it is
possible to decrypt this

170
00:13:00.510 --> 00:13:02.880 
with a public key
of that user,

171
00:13:03.240 --> 00:13:07.610 
then one is sure the user was
only one who could send this

172
00:13:07.610 --> 00:13:10.670 
message and who could sign
this message in this way.

173
00:13:12.270 --> 00:13:14.700 
There are more ways for
secure authentication.

174
00:13:15.220 --> 00:13:18.620 
There is possibility
to use smart cards.

175
00:13:19.320 --> 00:13:22.290 
This is a quite
convenient way

176
00:13:22.520 --> 00:13:27.200 
the users certificate and signature
here is simply stored on

177
00:13:27.200 --> 00:13:32.080 
a smart card. And the
smart card itself

178
00:13:32.300 --> 00:13:36.960 
is protected with a pin, so
the private key can thus be

179
00:13:36.960 --> 00:13:41.270 
only be accessed
by means

180
00:13:41.270 --> 00:13:46.970 
of the pin. So the user needs the
card the user of that smart card

181
00:13:46.970 --> 00:13:50.770 
needs a card and needs to know
the pin so they are two

182
00:13:50.770 --> 00:13:56.350 
factors which are needed
before the private key

183
00:13:56.750 --> 00:14:03.130 
it can be used at home.
So there are new identity

184
00:14:03.130 --> 00:14:08.040 
cards for example in this
way. Only smart card owner

185
00:14:08.380 --> 00:14:13.930 
can use the certificate
and here I remind you

186
00:14:14.110 --> 00:14:17.540 
that we said authentication
is considered secure

187
00:14:17.910 --> 00:14:21.720 
if it's based on two
factors - on two factors

188
00:14:21.900 --> 00:14:23.880 
in this case it's a
knowledge of the pin

189
00:14:24.210 --> 00:14:28.520 
and it's ownership
of the smart card.

190
00:14:29.070 --> 00:14:33.210 
In case of passwords which were
considered as an unsecure

191
00:14:33.210 --> 00:14:37.970 
for authentication only one factor
is valid and this is the knowledge

192
00:14:38.150 --> 00:14:43.090 
the knowledge of the password. So two
factors here with a smart card

193
00:14:43.100 --> 00:14:48.230 
authentication is property and
the knowledge of the pin.
