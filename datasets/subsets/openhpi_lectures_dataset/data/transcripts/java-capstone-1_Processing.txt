WEBVTT

1
00:00:00.080 --> 00:00:04.990 
Let's get started! So, first, we
need to download it again.

2
00:00:05.100 --> 00:00:09.170 
This time.. I mean, you'll
manage to do that.

3
00:00:09.340 --> 00:00:12.740 
We show you the URL down
there again

4
00:00:13.060 --> 00:00:16.730 
and, um, yeah! So let's
get started

5
00:00:17.000 --> 00:00:20.220 
that's what it looks like.
Actually, it comes with its

6
00:00:20.220 --> 00:00:23.780 
own little IDE.
A mini-ish IDE,

7
00:00:23.790 --> 00:00:29.400 
and basically, it is.
And it's really cool

8
00:00:29.520 --> 00:00:32.500 
that you have that on your
computer because it's

9
00:00:32.800 --> 00:00:36.420 
super helpful to kind of just
do small sketches and try

10
00:00:36.590 --> 00:00:39.640 
things out before you
actually put them in your

11
00:00:39.840 --> 00:00:44.430 
final program. Okay, let's try
things out. I want to see something!

12
00:00:44.430 --> 00:00:47.660 
Let's do kind of the "Hello
World!" of drawing:

13
00:00:47.710 --> 00:00:51.900 
drawing a rectangle. "rect" for
rectangle;

14
00:00:52.170 --> 00:00:57.000 
who would have guessed that?
And it takes four floats.

15
00:00:57.400 --> 00:01:06.790 
Yeah, four floats. Ten, ten, ten, ten.
That was one comma too much.

16
00:01:06.790 --> 00:01:12.130 
So, basically, this is the x-position,
the y-position, the width and the height

17
00:01:12.340 --> 00:01:15.730 
of the rectangle and if we
run this program right now..

18
00:01:18.020 --> 00:01:22.150 
Here it is!
It opens the window,

19
00:01:22.430 --> 00:01:25.530 
draws a rectangle, and we just
wrote one line of code.

20
00:01:26.650 --> 00:01:30.460 
Okay, impressive? In some way yes,
but it doesn't move yet, so..

21
00:01:30.620 --> 00:01:32.800 
Okay, so, um..

22
00:01:35.350 --> 00:01:38.140 
The thing is: that would be too easy
and we want to work in

23
00:01:38.280 --> 00:01:42.820 
Eclipse as we said, so there
is a way to do that,

24
00:01:43.050 --> 00:01:46.610 
actually, and this is kind of not
using this IDE; at least not

25
00:01:46.610 --> 00:01:51.470 
for the final programming
task, but use it whenever you just

26
00:01:51.470 --> 00:01:56.060 
want to try things out
and then

27
00:01:56.080 --> 00:02:00.880 
go up to eclipse to do the less
surreal programs. What we want to do

28
00:02:00.880 --> 00:02:03.430 
is we want to use the
library of Processing.

29
00:02:03.960 --> 00:02:07.640 
Exactly. The core library. So let's
see how we can get there.

30
00:02:10.000 --> 00:02:16.210 
So, you downloaded it. And you
unpacked it. You unpacked it and

31
00:02:16.490 --> 00:02:19.810 
what you will find is,
if you're working on

32
00:02:19.960 --> 00:02:24.620 
Windows, a folder

33
00:02:24.630 --> 00:02:28.490 
"processing-3.4" and there is a
couple of stuff in there

34
00:02:28.710 --> 00:02:32.630 
and what you need is in the
core directory / core folder

35
00:02:32.640 --> 00:02:36.120 
in library folder within that core
folder: the core.jar. That's

36
00:02:36.120 --> 00:02:39.940 
the only file that we need
from all that stuff. So, um,

37
00:02:42.080 --> 00:02:45.020 
just find it for now. We will
need that later on.

38
00:02:45.290 --> 00:02:50.400 
Same if you work
on Linux; so

39
00:02:50.940 --> 00:02:55.570 
here it's a tar.gz,
so unpack it

40
00:02:56.270 --> 00:02:59.400 
in the core folder, in the
library folder. core.jar,

41
00:02:59.800 --> 00:03:01.610 
there you go! Easy.

42
00:03:05.250 --> 00:03:09.240 
Similar for macOS but
not that easy; I mean, it's one

43
00:03:09.240 --> 00:03:11.860 
click more so that you need
to know how to do that click.

44
00:03:12.050 --> 00:03:16.900 
For macOS it's packed
as an app and so

45
00:03:16.900 --> 00:03:19.800 
we need to unpack
that app, we need to

46
00:03:20.080 --> 00:03:23.910 
get to the package content
and right click it,

47
00:03:24.350 --> 00:03:28.150 
"show package contents" and then
you get a new, uh,

48
00:03:28.540 --> 00:03:32.570 
yeah, window and there you have
the contents of the app and

49
00:03:32.570 --> 00:03:36.300 
there you can just select
"Java" and then core.jar.

50
00:03:36.670 --> 00:03:41.820 
So, yeah. All of you need core.jar.
Okay so now you know where

51
00:03:41.820 --> 00:03:44.860 
your core.jar is. And Tom
wrote a little

52
00:03:44.860 --> 00:03:49.630 
project. It needs the core.jar,
but he has an included, yet.

53
00:03:49.640 --> 00:03:52.070 
That's why we see
these little error

54
00:03:53.690 --> 00:03:58.300 
marks here and we will
include it now. We right

55
00:03:58.300 --> 00:04:02.920 
click on the project folder
and we select "Build Path".

56
00:04:03.160 --> 00:04:06.240 
We could go directly to
"Add External Archieves...", but

57
00:04:06.690 --> 00:04:10.290 
we go to "Configure Build Path...",
because here you've got all the options

58
00:04:10.290 --> 00:04:15.580 
and we want to show you something.
And, as you can see, we

59
00:04:15.590 --> 00:04:19.910 
are here in the "Libraries" tab.
So, probably you just need to click

60
00:04:19.910 --> 00:04:23.130 
there, it might start in the "Source"
tab, but for us it's already

61
00:04:23.130 --> 00:04:28.660 
the "Libraries" tab and, um,
you can now either add

62
00:04:29.000 --> 00:04:34.060 
internal jars; that's Java archives
that are included

63
00:04:34.060 --> 00:04:38.170 
within the project, or you can add
external jars, and external jars

64
00:04:38.180 --> 00:04:42.280 
are jars that are not included
in the project. And normally

65
00:04:42.290 --> 00:04:46.280 
internal jars are below the
project root, so they

66
00:04:46.280 --> 00:04:50.070 
would reside in the folder,
here for this project,

67
00:04:50.070 --> 00:04:54.810 
"capstone1-counter" and external
jars normally reside somewhere

68
00:04:54.810 --> 00:04:59.340 
on your hard drive and as we
had chosen to place the core.jar

69
00:04:59.340 --> 00:05:04.510 
in the workspace we'll
go for external jars. And it's

70
00:05:04.510 --> 00:05:08.160 
also better, because sometimes you're
not allowed to redistribute,

71
00:05:08.470 --> 00:05:12.870 
yeah, uh, some library that
you did not write on

72
00:05:12.870 --> 00:05:16.330 
your own so.. you can use it but
you can't redistribute it so you

73
00:05:16.370 --> 00:05:19.750 
need to say.. you kind of..
please download it

74
00:05:20.130 --> 00:05:25.370 
there and add it. So,
external jar it is

75
00:05:25.820 --> 00:05:29.850 
and here we found it
again, our core.jar,

76
00:05:30.070 --> 00:05:33.620 
or core3.jar. Open it, now
it appears in the list and

77
00:05:33.620 --> 00:05:37.870 
we apply and close, and, as you can
see, all the errors are gone.

78
00:05:38.060 --> 00:05:42.580 
So, um, yeah, processing got a
nice little web page,

79
00:05:42.580 --> 00:05:46.800 
"processing.org", and
under the point

80
00:05:46.870 --> 00:05:51.300 
reference you will find everything
you need to work

81
00:05:51.550 --> 00:05:55.310 
with the processing
library and we will

82
00:05:55.310 --> 00:05:59.130 
show you a couple of
basics also.

83
00:05:59.140 --> 00:06:02.910 
Whenever you need something
which goes beyond what we have

84
00:06:02.910 --> 00:06:06.430 
shown, just go to the library,
uh, to the reference,

85
00:06:06.650 --> 00:06:10.170 
it's really good and
hopefully you'll find some

86
00:06:10.170 --> 00:06:12.840 
documentation there that really
helps you with your issue.

87
00:06:13.340 --> 00:06:17.350 
And the good thing
here is also if you have

88
00:06:18.360 --> 00:06:23.150 
the Processing IDE running,
in most of most of these cases

89
00:06:23.150 --> 00:06:25.770 
there's a little example,
you just copy the example

90
00:06:26.330 --> 00:06:30.050 
paste it to your Processing IDE,
not to Eclipse, to the Processing

91
00:06:30.050 --> 00:06:33.460 
things and then run it and
then you can see what happens.

92
00:06:33.460 --> 00:06:35.200 
Yeah, and play around with it.
Always helps learning.

93
00:06:35.690 --> 00:06:40.530 
And, of course, another
thing that we shouldn't

94
00:06:40.530 --> 00:06:44.030 
miss to say is there's
also the Java API

95
00:06:44.240 --> 00:06:48.130 
and the Java API,
as you can already see is a

96
00:06:48.130 --> 00:06:52.920 
little bit larger, so there
is way, way more and this

97
00:06:52.920 --> 00:06:55.650 
is one of the reasons why
we chose to work with Processing,

98
00:06:55.850 --> 00:07:01.580 
because it makes it
easier. But, of course, in

99
00:07:01.580 --> 00:07:04.550 
some cases and sooner
or later it will not..

100
00:07:05.390 --> 00:07:07.970 
there's no way around the
Java API.
