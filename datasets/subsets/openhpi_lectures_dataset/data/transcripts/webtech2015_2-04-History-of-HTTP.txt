WEBVTT

1
00:00:05.470 --> 00:00:09.280 
Now, lets go to the development of the HTTP protocol

2
00:00:11.060 --> 00:00:13.790 
and have a short view in the history.

3
00:00:14.740 --> 00:00:21.980 
Along with the URL addressing a concept and the markup language HTML, HTTP is

4
00:00:22.150 --> 00:00:24.690 
a cornerstone of the World Wide Web.

5
00:00:25.560 --> 00:00:29.960 
The first HTTP version today referred as HTTP/0.9,

6
00:00:32.420 --> 00:00:38.970 
originated in 1989/90

7
00:00:39.260 --> 00:00:42.130 
when the web was developed at

8
00:00:43.270 --> 00:00:47.480 
the European Nuclear Research Center - CERN.

9
00:00:48.350 --> 00:00:53.520 
The first sophisticated version of HTTP, the HTTP/1.0

10
00:00:54.340 --> 00:00:57.660 
was introduced in 92,

11
00:00:58.820 --> 00:01:02.820 
it was introduced in the RFC nineteen forty five.

12
00:01:03.340 --> 00:01:09.170 
The development goal was to provide a simple and fast communication protocol.

13
00:01:10.480 --> 00:01:16.700 
HTTP/1.0 offers the following methods, it offers the GET method

14
00:01:17.090 --> 00:01:22.510 
for the delivery of requested document and the POST method for information

15
00:01:23.080 --> 00:01:25.330 
sending to the server.

16
00:01:26.430 --> 00:01:33.900 
HTTP/1.0 further offers an adapted MIME concept for transmission

17
00:01:33.900 --> 00:01:39.040 
of different media types. You remember this is necessary as

18
00:01:39.510 --> 00:01:43.620 
one can also provide images, audio and other

19
00:01:44.840 --> 00:01:48.760 
types of media.

20
00:01:49.470 --> 00:01:54.640 
HTTP/1.0 provides a message format for bi-directional communication

21
00:01:54.640 --> 00:01:56.120 
between client and server

22
00:01:56.750 --> 00:02:01.840 
for the Request/Response interaction. The response format

23
00:02:02.330 --> 00:02:07.140 
it is provided a number of status codes

24
00:02:07.590 --> 00:02:12.960 
and some simple user authentication mechanisms are provided.

25
00:02:13.870 --> 00:02:20.370 
HTTP/1.0 has also a number of shortcomings for example

26
00:02:21.550 --> 00:02:25.830 
a limited to short request/response sequence.

27
00:02:26.880 --> 00:02:31.180 
The only possibility for such HTTP interaction was to send

28
00:02:31.180 --> 00:02:35.890 
one request and get one response and then it was over.

29
00:02:37.160 --> 00:02:45.330 
The HTTP/1.0  did not support non-IP based so called virtual hosts,

30
00:02:45.530 --> 00:02:50.160 
only one domain per IP address was possible,

31
00:02:50.970 --> 00:02:56.590 
there was only very rudimentary cache strategies provided

32
00:02:56.590 --> 00:02:59.490 
with HTTP/1.0 and

33
00:03:00.310 --> 00:03:06.310 
some very simple and insecure authentication mechanisms.

34
00:03:06.860 --> 00:03:12.570 
So, there was a need to continue development of HTTP and the current version

35
00:03:13.200 --> 00:03:19.070 
is HTTP/1.1. It was defined in 1997

36
00:03:19.570 --> 00:03:25.070 
in the RFCs 2068 and twenty 2616.

37
00:03:26.220 --> 00:03:31.640 
These are the most important enhancements of HTTP/1.1

38
00:03:31.830 --> 00:03:34.590 
versus HTTP/1.0:

39
00:03:35.810 --> 00:03:41.380 
So called "Persistent HTTP" connections, we will discuss later

40
00:03:41.480 --> 00:03:46.150 
in more detail what it means. Persistent HTTP connections

41
00:03:46.740 --> 00:03:53.830 
can be kept open between client and server even after end of

42
00:03:53.830 --> 00:03:59.780 
a request/response sequence, so if an interaction between a client and observer

43
00:03:59.960 --> 00:04:06.620 
contains several request/response sequences then with a persistent HTTP the

44
00:04:08.010 --> 00:04:13.590 
connection it can be kept open so the TCP protocol overhead,

45
00:04:14.850 --> 00:04:18.670 
there is the handshake necessary is minimized.

46
00:04:19.460 --> 00:04:25.570 
Then HTTP/1.1 supports non IP-based

47
00:04:26.850 --> 00:04:32.690 
virtual host, also here we will discuss later and explain what it is,

48
00:04:32.990 --> 00:04:36.150 
then there is a number of additional methods

49
00:04:36.980 --> 00:04:43.320 
coming with HTTP/1.1. The methods: PUT, HEAD, DELETE, OPTIONS,

50
00:04:43.370 --> 00:04:44.760 
TRACE and CONNECT.

51
00:04:46.810 --> 00:04:53.340 
HTTP/1.0 only has two methods: GET and POST.

52
00:04:54.940 --> 00:05:00.530 
Then a transfer of document fragments is possible,

53
00:05:02.050 --> 00:05:04.420 
this is done on exact

54
00:05:05.520 --> 00:05:11.610 
byte boundaries. Then there are mechanisms for content negotiation,

55
00:05:11.880 --> 00:05:15.110 
also here we will discuss later what it means, so

56
00:05:15.760 --> 00:05:21.950 
the client and the server are supported to agree which variant of resource

57
00:05:22.790 --> 00:05:27.820 
they want to request or respond, there are different variants

58
00:05:27.820 --> 00:05:32.830 
concerning language, concerning display quality, coding and so on

59
00:05:33.120 --> 00:05:37.830 
and the client and the server can negotiate which of the variant

60
00:05:37.850 --> 00:05:42.270 
is the most optimal to fulfill the request.

61
00:05:43.230 --> 00:05:49.740 
Then there is a packaged coding for the transmission of dynamically generated documents,

62
00:05:50.190 --> 00:05:53.700 
there are improved caching strategies on server side,

63
00:05:54.120 --> 00:05:58.550 
there are improved authentication methods without plain text

64
00:05:58.550 --> 00:06:01.010 
transfer of name and password.

65
00:06:02.630 --> 00:06:10.620 
This is the new things HTTP/1.1 has brought, but you

66
00:06:10.620 --> 00:06:15.060 
see it's more than 13 old, so

67
00:06:15.690 --> 00:06:17.590 
in 2012

68
00:06:18.220 --> 00:06:22.510 
the internet engineering task force start

69
00:06:23.040 --> 00:06:31.190 
a working group to consider the successor of HTTP/1.1,

70
00:06:32.370 --> 00:06:39.010 
so officially this working group starts in march 2012.

71
00:06:40.530 --> 00:06:44.700 
The first proposals were already presented in may

72
00:06:45.310 --> 00:06:51.830 
2012 and among them the SPDY 3.0 ("Speedy")

73
00:06:51.970 --> 00:06:54.370 
technology which was developed by Google

74
00:06:54.910 --> 00:06:58.580 
and Microsoft HTTP Speed+Mobility.

75
00:06:59.250 --> 00:07:04.680 
This were basic designs,

76
00:07:06.020 --> 00:07:09.370 
which was taken by the working group to start the development of

77
00:07:09.500 --> 00:07:12.520 
the successor protocol of HTTP/2.

78
00:07:13.450 --> 00:07:18.610 
In august 2012 the internet engineering

79
00:07:18.610 --> 00:07:21.720 
task force working group HTTPbis

80
00:07:22.830 --> 00:07:30.210 
took SPDY as a starting point for discussion on the draft for HTTP/2.

81
00:07:30.820 --> 00:07:33.520 
Then, in september 2014

82
00:07:34.180 --> 00:07:38.940 
the "Last Call for HTTP/2" were published by the working groups,

83
00:07:38.940 --> 00:07:43.720 
where the internet community was asked whether they want to contribute

84
00:07:44.320 --> 00:07:46.940 
further ideas

85
00:07:47.750 --> 00:07:54.720 
for the design of HTTP/2 then on 16 of december 2014

86
00:07:55.090 --> 00:08:00.840 
the working group submitted HTTP/2 as a proposed standard to the

87
00:08:00.940 --> 00:08:06.730 
internet government and then in february, exactly

88
00:08:07.520 --> 00:08:15.660 
on 17th february, the HTTP/2 was published as an RFC

89
00:08:15.920 --> 00:08:22.300 
Internet Standard. Focus in standardization was to increase the "speed

90
00:08:22.470 --> 00:08:29.850 
perceived" and to provide and to guarantee backwards compatibility to

91
00:08:30.230 --> 00:08:35.020 
the former HTTP protocol 1.1.
