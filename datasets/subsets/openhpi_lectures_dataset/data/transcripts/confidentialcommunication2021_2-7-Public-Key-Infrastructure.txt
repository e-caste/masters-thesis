WEBVTT

1
00:00:01.200 --> 00:00:04.320 
In our openHPI course- Confidential
Communication in the Internet,

2
00:00:04.670 --> 00:00:09.450 
now we want to consider public key
infrastructures (PKI) in more detail.

3
00:00:09.760 --> 00:00:11.110 
We already discussed

4
00:00:12.800 --> 00:00:15.770 
about, and mentioned the public
key infrastructure when

5
00:00:15.770 --> 00:00:23.120 
we discuss the trust problem for asymmetric
crypto protocols and certificates.

6
00:00:23.820 --> 00:00:28.120 
The public key infrastructures
are the idea-

7
00:00:29.990 --> 00:00:34.760 
The best working idea for
solving the trust problem of

8
00:00:34.840 --> 00:00:36.910 
the asymmetric
crypto protocols.

9
00:00:37.750 --> 00:00:43.440 
The idea is to use an independent
trustworthy authority

10
00:00:44.800 --> 00:00:49.300 
called a Trust Center (TC)
which certifies the binding

11
00:00:50.730 --> 00:00:54.330 
of a public key to
a certain person.

12
00:00:56.150 --> 00:00:59.910 
So, a digitally signed
binding of a user,

13
00:01:00.810 --> 00:01:04.240 
his/her name and his/her public
key and some additional

14
00:01:04.660 --> 00:01:08.680 
information is called
a certificate.

15
00:01:10.290 --> 00:01:15.830 
More precisely it's a key certificate because
there exist different certificates.

16
00:01:16.230 --> 00:01:24.340 
So, it gives a kind of passport for the
user in such a public key infrastructure,

17
00:01:24.660 --> 00:01:30.280 
to explain to other users: this is
my name and this is my public key.

18
00:01:30.990 --> 00:01:35.720 
So, the certificates are used to
ensure that the exchange of

19
00:01:35.720 --> 00:01:41.440 
information is legally binding,
that it's not possible for Malory

20
00:01:41.910 --> 00:01:46.640 
to fake the public
key of Bob

21
00:01:47.400 --> 00:01:50.150 
by replacing it
as its own.

22
00:01:50.880 --> 00:01:56.360 
In this way, the identity of
the users is ensured in such

23
00:01:56.360 --> 00:02:00.970 
a public key infrastructure and of
course it is important that this

24
00:02:01.170 --> 00:02:07.450 
Trust Center (TC) which issues such certificate
is trustworthy and is independent.

25
00:02:08.210 --> 00:02:13.770 
So, the participants only have to
trust the Trust Center, then

26
00:02:13.770 --> 00:02:15.930 
they can trust the
certificate.

27
00:02:16.710 --> 00:02:20.670 
If you are interested in more
details here on the topic of

28
00:02:21.600 --> 00:02:26.420 
of such a Trust Center(TC) in public key
infrastructures; There is another open-

29
00:02:26.630 --> 00:02:33.680 
HPI workshop on Digital Identities
where we discuss this in detail.

30
00:02:34.990 --> 00:02:41.460 
So, the certificate is simply a document
which is signed by this Trust Center (TC),

31
00:02:41.700 --> 00:02:44.520 
which is signed by this
trustworthy third-party

32
00:02:45.170 --> 00:02:51.270 
and it attests the connection between a
person or entity and its public key.

33
00:02:52.340 --> 00:02:57.490 
If one trusts the Trust Centre (TC), one
which has signed that certificate,

34
00:02:57.860 --> 00:03:02.690 
then one can trust also the
certificate of this Trust Center.

35
00:03:04.550 --> 00:03:08.820 
These certificates are needed to
contain the following information:

36
00:03:09.460 --> 00:03:13.190 
The owner of the certificate,
it could be a person but also

37
00:03:13.190 --> 00:03:14.960 
a company or observer.

38
00:03:15.870 --> 00:03:20.350 
The public key of the owner, and
then the third most important

39
00:03:20.480 --> 00:03:22.990 
information on the certificate
is the Digital Signature

40
00:03:23.420 --> 00:03:26.830 
of the Trust Center (TC) that
issued the certificate.

41
00:03:27.790 --> 00:03:34.630 
So, Trust Center guarantees the accuracy
of this information. This is exactly the

42
00:03:35.100 --> 00:03:42.230 
need for such Trust Centers (TC) and
that is how we provide a solution

43
00:03:42.500 --> 00:03:50.980 
to the trust problem of asymmetric
encryption protocols.

44
00:03:52.350 --> 00:03:56.190 
Now to solve the trust problem
by means of certificates,

45
00:03:56.610 --> 00:04:01.820 
a complete infrastructure, the so-called
"Public Key Infrastructure (PKI)" is require,

46
00:04:02.340 --> 00:04:07.240 
and the task of this Public Key Infrastructure
(PKI) is the certificate management.

47
00:04:08.230 --> 00:04:09.860 
The certificate
management

48
00:04:10.470 --> 00:04:16.300 
consists of the specification and the
enforcement of a security policy.

49
00:04:21.460 --> 00:04:25.790 
certificate, how one can get a
certificate, what are the regulations,

50
00:04:26.220 --> 00:04:28.100 
how the Trust Center
(TC) is working, etc.

51
00:04:28.750 --> 00:04:32.350 
Then the task of this Public Key Infrastructure
(PKI) of the Trust Center (TC) is

52
00:04:32.500 --> 00:04:39.750 
to create a certificate, to manage the
certificates, and to revoke digital certificates

53
00:04:40.800 --> 00:04:48.470 
if it is necessary. And to this end
the Public Key Infrastructure (PKI)

54
00:04:48.810 --> 00:04:52.610 
includes some software components,
some hardware components,

55
00:04:52.990 --> 00:04:59.370 
as well as stuff to manage this
certificate management task.

56
00:05:01.400 --> 00:05:06.410 
So, the interaction of the individual components of a Trust
Center (TC) and the Public Key Infrastructure (PKI)

57
00:05:06.770 --> 00:05:12.810 
to solve the task is ruled by a
certificate management protocol.

58
00:05:14.980 --> 00:05:16.130 
Let's have a
closer look:

59
00:05:16.750 --> 00:05:21.580 
At the centre of such a Public Key
Infrastructure (PKI) is the Trust Center (TC).

60
00:05:22.230 --> 00:05:26.550 
The Trust Center (TC) has the following
components: A Certification Authority (CA),

61
00:05:26.910 --> 00:05:31.330 
a Registration Authority (RA), and a
Validation Authority (VA). And here

62
00:05:31.330 --> 00:05:36.400 
in the picture, we will later on
see, the different components

63
00:05:36.740 --> 00:05:40.940 
typically all together is
called the Trust Center (TC).

64
00:05:42.270 --> 00:05:47.520 
Let's have a closer look first at
the Certification Authority (CA).

65
00:05:48.390 --> 00:05:51.940 
The Certification Authority (CA)
is the most important component

66
00:05:51.940 --> 00:05:56.570 
of a Trust Center (TC), for that
reason often it is used synonymously

67
00:05:56.730 --> 00:05:57.820 
with the Trust
Center (TC).

68
00:05:58.720 --> 00:06:03.760 
When we discussed about the hierarchical
trust model, you saw this, we-

69
00:06:03.910 --> 00:06:08.650 
spoke about the Certification
Authority (CA), when we mentioned-

70
00:06:09.180 --> 00:06:16.510 
the Trust Center (TC). The Certification Authority
(CA) generates certificates, this is its task.

71
00:06:17.250 --> 00:06:21.670 
So, it receives all the information that
is necessary for the certificate.

72
00:06:22.310 --> 00:06:25.770 
The information is the name
of the user, its public key

73
00:06:26.210 --> 00:06:27.690 
and other information.

74
00:06:28.300 --> 00:06:35.300 
Then it generates the certificates
and then it signs the certificates.

75
00:06:35.790 --> 00:06:43.920 
This is important so that everyone sees the
certification stands for this binding

76
00:06:44.170 --> 00:06:46.210 
of the name and
the public key.

77
00:06:47.460 --> 00:06:52.820 
The Certification Authority (CA) is
a very security-critical component

78
00:06:52.830 --> 00:06:56.930 
of a Trust Center (TC). If the private
key of a Certification Authority (CA)

79
00:06:57.640 --> 00:07:01.830 
got into the hand of
cybercriminals, the entire

80
00:07:02.370 --> 00:07:06.400 
Public Key Infrastructure (PKI) is
worthless. Why? because the private-

81
00:07:06.680 --> 00:07:13.170 
key is needed for the Certification Authority
(CA) to digitally sign the certificates.

82
00:07:13.720 --> 00:07:20.490 
And if cybercriminals can have this
private key in their hand then they

83
00:07:20.840 --> 00:07:24.770 
can issue certificates
as they like.

84
00:07:26.490 --> 00:07:30.500 
In many countries, there
are signature acts-

85
00:07:30.820 --> 00:07:37.790 
legal regulations and these signature acts
which are mostly introduced to define

86
00:07:37.920 --> 00:07:40.540 
the requirements of
digital signatures.

87
00:07:41.160 --> 00:07:45.770 
These signature acts require high
demands on the security of a

88
00:07:45.960 --> 00:07:50.570 
Certification Authority
(CA) before it is allowed

89
00:07:51.100 --> 00:07:56.340 
to issue certificates
for legally binding

90
00:07:56.660 --> 00:07:59.500 
so-called qualified
digital signatures.

91
00:07:59.660 --> 00:08:04.920 
So, the digital signature that is
recognised in the legal system,

92
00:08:05.490 --> 00:08:08.830 
before it is recognised
in the legal system,

93
00:08:09.240 --> 00:08:17.590 
it has a lot of requirement to fulfil
concerning such Certification Authority (CA).

94
00:08:18.360 --> 00:08:23.380 
Besides the Certification Authority (CA),
the Trust Center (TC) has the component

95
00:08:23.390 --> 00:08:25.130 
of a Registration
Authority (RA).

96
00:08:25.810 --> 00:08:30.900 
The Registration Authority (RA)
is a registration office

97
00:08:34.970 --> 00:08:36.490 
of a Public Key
Infrastructure (PKI).

98
00:08:37.460 --> 00:08:42.340 
The Registration Authority (RA) can be
implemented centralized in a Trust Center (TC),

99
00:08:42.620 --> 00:08:47.300 
but it can also operate
decentralized with many

100
00:08:48.190 --> 00:08:50.820 
offices in a region.

101
00:08:52.150 --> 00:08:57.130 
The RA - the Registration Authority
collects all the necessary data

102
00:08:57.430 --> 00:08:59.770 
for the creation of a
digital certificate

103
00:09:00.220 --> 00:09:02.200 
and then it transfers

104
00:09:03.400 --> 00:09:06.120 
this data to the Certification
Authority (CA).

105
00:09:07.160 --> 00:09:10.560 
The type of interaction
and verification -

106
00:09:11.920 --> 00:09:17.280 
personal registration or whether I only have to
send an e-mail registration via the internet,

107
00:09:17.470 --> 00:09:19.570 
the exact description

108
00:09:20.720 --> 00:09:26.590 
is important because this describes the security
level of the Public Key Infrastructure (PKI).

109
00:09:26.950 --> 00:09:31.920 
If I can register just by a
simple email, then the security

110
00:09:32.440 --> 00:09:38.700 
standard of such a Public Key Infrastructure (PKI) is
very low. If I have to personally show my passport

111
00:09:39.240 --> 00:09:43.170 
to the Registration Authority (RA)
then, of course, it is of high

112
00:09:43.350 --> 00:09:47.740 
security level because this is
the point where the identity

113
00:09:47.970 --> 00:09:49.280 
of the user is checked.

114
00:09:50.100 --> 00:09:55.470 
There are standards, in this Public Key Infrastructure
(PKI) the standard is the PKIX standard.

115
00:09:56.240 --> 00:10:00.690 
It does not prescribe such a
Registration Authority(RA).

116
00:10:01.320 --> 00:10:07.860 
However, the Public Key Infrastructures
(PKIs) implemented in practice generally

117
00:10:08.140 --> 00:10:14.100 
do not allow direct communication between the
user and the Certification Authority (CA),

118
00:10:14.480 --> 00:10:20.310 
to improve security and to protect
the Certification Authority (CA).

119
00:10:21.490 --> 00:10:24.390 
The third component is the
Validation Authority (VA).

120
00:10:25.100 --> 00:10:27.790 
The Validation Authority (VA)
checks the certificate

121
00:10:28.240 --> 00:10:35.700 
against the stored information and confirms whether
the certificate is valid or is no longer valid.

122
00:10:41.470 --> 00:10:46.440 
The client can further verify the
corresponding digital signature itself

123
00:10:46.700 --> 00:10:50.260 
and can trustfully
communicate.

124
00:10:51.390 --> 00:10:56.410 
The communication with the Trust Center
(TC) is of course in real-time

125
00:10:56.810 --> 00:11:02.130 
and it's also signed because that's not
enough when the Validation Authority (VA)

126
00:11:02.360 --> 00:11:08.150 
gives next day an answer "yes this
is a valid certificate", while

127
00:11:08.150 --> 00:11:13.740 
the Certification Authority (CA) is
already disputing this certification.

128
00:11:15.190 --> 00:11:20.760 
Also, the simultaneous verification
of several certificates is possible

129
00:11:20.960 --> 00:11:24.190 
by such Validation
Authorities (VAs).

130
00:11:25.370 --> 00:11:29.790 
I already mentioned the Public Key
Infrastructure (PKI) can also have

131
00:11:29.940 --> 00:11:34.590 
some decentralized components. So in
addition to the Trust Center (TC)

132
00:11:34.590 --> 00:11:38.910 
a Public Key Infrastructure(PKI) includes
the following components which can

133
00:11:39.620 --> 00:11:43.220 
and some of them must be
operated decentralized.

134
00:11:43.740 --> 00:11:47.140 
There is the Local Registration
Authority (LRA),

135
00:11:47.610 --> 00:11:54.120 
there is the Revocation Authority (REV) and
the Personal Security Environment (PSE),

136
00:11:54.570 --> 00:11:58.670 
for the participants of such a
Public Key Infrastructure (PKI).

137
00:11:59.870 --> 00:12:04.560 
Let's first look at the Local
Registration Authority (LRA),

138
00:12:04.560 --> 00:12:08.470 
it takes over the task from the
central registration authority

139
00:12:08.920 --> 00:12:14.190 
to identify the user. So, if
the user requested to come

140
00:12:14.190 --> 00:12:18.700 
personally, to the registration
office, it's not possible

141
00:12:18.940 --> 00:12:24.570 
to ask them to travel to one central
point. So, not all users can verify

142
00:12:24.710 --> 00:12:29.560 
themself in person at the central
registration authority, therefore the many

143
00:12:30.220 --> 00:12:34.360 
multiple such local
registration authorities are

144
00:12:34.870 --> 00:12:38.230 
possible and are available
and can do the task.

145
00:12:39.190 --> 00:12:47.330 
The Local Registration Authority (LRA) can be
located, can be operated by fitting places

146
00:12:47.560 --> 00:12:53.800 
can also be operated by companies, for example, telecommunication
provider, universities, technology companies, and others.

147
00:12:57.690 --> 00:13:02.500 
Very important for the Public Key
Infrastructure's (PKI) is the revocation

148
00:13:02.770 --> 00:13:08.660 
of invalid certificates and this is done
by such a Revocation Authority (REV).

149
00:13:09.460 --> 00:13:15.170 
Revocation Authority (REV) is
responsible for the deletion

150
00:13:16.200 --> 00:13:17.780 
or revocation of
a certificate.

151
00:13:19.320 --> 00:13:25.310 
And remember that's not easy, because
all the participants could have stored

152
00:13:25.650 --> 00:13:27.870 
certificates from
other participants

153
00:13:28.610 --> 00:13:30.960 
when they want to send
them information.

154
00:13:31.380 --> 00:13:37.160 
So there needs to be in the security
policies described a way of how

155
00:13:37.490 --> 00:13:40.750 
invalid certificates
can be deleted,

156
00:13:42.290 --> 00:13:45.890 
when is it possible, when is it
necessary to remove a certificate, and

157
00:13:46.740 --> 00:13:52.480 
then when to move or remove a
certificate. It's not enough to

158
00:13:53.700 --> 00:13:59.850 
simply delete it as it is still signed
and malicious people could still

159
00:14:00.120 --> 00:14:06.380 
abuse it. So, the trust of a certification
authority to the particular certificates

160
00:14:06.770 --> 00:14:11.560 
has to be removed. But one cannot
take the certificates which

161
00:14:11.560 --> 00:14:14.490 
were sent out with the
signature of a CA.

162
00:14:15.960 --> 00:14:19.880 
They are out so it is
a little bit tricky.

163
00:14:20.330 --> 00:14:24.650 
So, here the idea
to implement such

164
00:14:25.260 --> 00:14:27.330 
deletion of
certificates

165
00:14:28.300 --> 00:14:34.770 
is to do this by a so-called
certificate revocation process.

166
00:14:37.140 --> 00:14:41.280 
Revocations are necessary for
different situations. For example

167
00:14:41.280 --> 00:14:44.870 
when the private
key of a user

168
00:14:46.180 --> 00:14:52.430 
got compromised, then his/her certificate
which assigns the corresponding public key

169
00:14:52.790 --> 00:14:59.420 
is no more valid. If the private key is lost
or stolen the certificate needs to be

170
00:15:00.200 --> 00:15:04.620 
revocated. If the information
connected to the certificate

171
00:15:04.620 --> 00:15:09.430 
has changed. For example, if the
user has changed his/her name,

172
00:15:09.930 --> 00:15:15.740 
the URL of a service has changed,
then, of course, the certificate

173
00:15:15.740 --> 00:15:20.170 
needs to be changed, and then if
the certificate has expired.

174
00:15:24.390 --> 00:15:30.440 
A decentralised component is the Personal
Security Environment (PSE) for the user.

175
00:15:30.800 --> 00:15:35.940 
This is also part of the
infrastructure which guarantees that

176
00:15:36.390 --> 00:15:40.410 
asymmetric encryption
methods and

177
00:15:41.310 --> 00:15:45.920 
digital signature protocols
can be securely applied.

178
00:15:46.720 --> 00:15:51.700 
So successful use of these asymmetric
cryptosystems and protocols

179
00:15:52.760 --> 00:15:57.200 
is based on the security
of the private key.

180
00:15:57.800 --> 00:16:02.600 
This is the MO (Modus
Operandi) of all this

181
00:16:02.780 --> 00:16:07.310 
working and all the functionality
of the asymmetric cryptosystems.

182
00:16:07.720 --> 00:16:13.630 
If the private key is not kept secret the
identity of the owner can be misused.

183
00:16:13.810 --> 00:16:15.830 
If an attacker can get

184
00:16:16.500 --> 00:16:22.940 
the private key of a user in his/her hand
then the attacker can sign documents,

185
00:16:23.840 --> 00:16:27.970 
digitally sign documents in the name
of the user and, of course, this

186
00:16:31.420 --> 00:16:32.590 
should not happen.

187
00:16:33.770 --> 00:16:38.950 
Therefore, private certificates
and keys should be kept

188
00:16:39.500 --> 00:16:40.580 
in the so-called

189
00:16:41.530 --> 00:16:45.540 
Personal Security Environment
(PSE). And as the

190
00:16:46.850 --> 00:16:52.230 
private key should not leave, and
one should organize all the work

191
00:16:52.490 --> 00:16:57.480 
with the asymmetric
cryptography protocols

192
00:16:57.890 --> 00:17:00.830 
in a way that the

193
00:17:01.680 --> 00:17:07.890 
private key should never leave this
Personal Security Environment (PSE).

194
00:17:08.610 --> 00:17:13.800 
So, one has to remember what one has to do with
the private key. So, first, the private key

195
00:17:16.940 --> 00:17:19.830 
needs to be generated in such a
Personal Security Environment (PSE).

196
00:17:20.470 --> 00:17:22.980 
Then cyber text
should be

197
00:17:24.300 --> 00:17:26.660 
decrypted with a
private key.

198
00:17:27.870 --> 00:17:32.960 
So, this should be done in this
Personal Security Environment (PSE)

199
00:17:33.210 --> 00:17:38.240 
because the private key is needed for this
decryption and then for the signature

200
00:17:38.660 --> 00:17:42.840 
of documents that were to be
encrypted with the private key,

201
00:17:43.320 --> 00:17:46.640 
this should also be
done in this personal

202
00:17:47.320 --> 00:17:52.100 
environment. If we look at
practical realizations

203
00:17:52.100 --> 00:17:55.180 
of such Personal Security
Environments (PSEs), then

204
00:17:55.780 --> 00:17:59.630 
I will mention an example
with a Software Key:

205
00:18:00.600 --> 00:18:06.960 
It is a simple security environment
which can be provided on PC's

206
00:18:07.500 --> 00:18:13.360 
and the idea is, on the PC's
hardware allocate some space,

207
00:18:14.440 --> 00:18:19.170 
the access to the space is
protected by a password,

208
00:18:19.770 --> 00:18:22.180 
this is managed with
a special software

209
00:18:22.650 --> 00:18:28.100 
and the security depends of course
on the operating system of the PC,

210
00:18:28.410 --> 00:18:33.260 
so that the attacker cannot get
access in another way to the

211
00:18:33.260 --> 00:18:38.500 
hard disk and to areas in the
hard disk. The security

212
00:18:42.800 --> 00:18:43.350 
of this Personal Security Environment (PSE)
depends on the strength of the password,

213
00:18:44.600 --> 00:18:48.380 
otherwise, with a simple password
attack, the attacker can get

214
00:18:48.830 --> 00:18:51.420 
access to the private
key of a user.

215
00:18:52.530 --> 00:18:55.240 
Another example is the
so-called Hardware Key:

216
00:18:56.230 --> 00:18:58.780 
This is a secure
environment

217
00:18:59.560 --> 00:19:04.350 
on a smart card. So, a
smart card is a separate

218
00:19:04.900 --> 00:19:11.340 
computer, a small computer, a simple
computer which stores user private key

219
00:19:11.910 --> 00:19:15.840 
and which stores the
signed certificate.

220
00:19:16.610 --> 00:19:21.700 
The advantage of this approach is the
card can easily be carried along.

221
00:19:22.240 --> 00:19:26.850 
So, one can have his/her
personal security environment

222
00:19:27.320 --> 00:19:34.250 
in any place. Only a few accesses manipulations
are possible via a card reader,

223
00:19:34.520 --> 00:19:39.690 
only a few accessible possibilities
of the manipulations of the

224
00:19:39.690 --> 00:19:42.360 
the smart card are
possible. The only way is

225
00:19:43.110 --> 00:19:49.310 
via the card reader and the card
readers only provide very simple

226
00:19:49.730 --> 00:19:54.400 
functionality. And then
access to the key

227
00:19:54.530 --> 00:19:58.710 
is not possible or is very
difficult for the hackers.

228
00:19:59.470 --> 00:20:05.440 
The disadvantage here is that the calculations,
the encryptions or the decryptions

229
00:20:05.820 --> 00:20:10.200 
need to be done on the
chip of the smart card.

230
00:20:10.510 --> 00:20:13.890 
Of course, this is compared
to a real computer, only a

231
00:20:14.890 --> 00:20:19.460 
computer with less power. So,
often this is difficult.

232
00:20:20.230 --> 00:20:25.750 
The solution here is to only encrypt
session keys or document hash,

233
00:20:26.250 --> 00:20:28.370 
this short information

234
00:20:29.820 --> 00:20:32.630 
on the card, on
the smart card.

235
00:20:33.670 --> 00:20:38.190 
And to use for the other
computations a computer.

236
00:20:40.150 --> 00:20:44.210 
These are public
infrastructures which are

237
00:20:44.950 --> 00:20:48.290 
applied in the Internet. We will
have a closer look at this,

238
00:20:48.750 --> 00:20:57.220 
and which provides a very secure framework for
working with asymmetric encryption protocols,

239
00:20:57.360 --> 00:21:03.940 
which allows digital signatures
for documents, which allows a

240
00:21:05.160 --> 00:21:09.600 
very secure communication and
confidential communication

241
00:21:09.600 --> 00:21:10.330 
in the Internet.
