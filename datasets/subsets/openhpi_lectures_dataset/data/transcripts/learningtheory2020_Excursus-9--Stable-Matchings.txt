WEBVTT

1
00:00:00.640 --> 00:00:03.430 
Hi my name is Agnes Cseh and I
would like to introduce you

2
00:00:03.660 --> 00:00:08.660 
to one of the most basic topics in classical
computer science called stable matchings.

3
00:00:09.310 --> 00:00:12.230 
The talk will go as follows: I'll
talk about the simplest variant

4
00:00:12.230 --> 00:00:15.030 
of this problem which is called the
stable marriage problem first,

5
00:00:15.340 --> 00:00:18.320 
then I will introduce you to the
generalization of this which

6
00:00:18.320 --> 00:00:21.190 
is called the stable roommates
problem and at the end of the

7
00:00:21.190 --> 00:00:24.560 
third section I will guide you
through some applications

8
00:00:25.170 --> 00:00:29.190 
of this topic. So first let's start
with the stable marriage problem.

9
00:00:29.710 --> 00:00:32.980 
You have to know that this
terminology comes from the sixties.

10
00:00:32.980 --> 00:00:36.860 
You will notice it, The basic
setting therefore involved

11
00:00:36.860 --> 00:00:41.030 
a set of men and a set of women.
Now they want to get married

12
00:00:41.040 --> 00:00:43.080 
to each other, a man
always to a woman.

13
00:00:44.300 --> 00:00:45.870 
So the graph looks
like the following -

14
00:00:46.770 --> 00:00:50.900 
there are four men in our
instance, m1 to m4 and the four

15
00:00:50.900 --> 00:00:54.490 
women at the bottom
are w1 to w4.

16
00:00:55.130 --> 00:00:56.900 
Some men know some
other women

17
00:00:57.620 --> 00:01:01.200 
and those are the edges in the
graph. So for example m1

18
00:01:01.360 --> 00:01:06.160 
knows w1, w2 and w3, but
m1 does not know w4.

19
00:01:06.810 --> 00:01:09.790 
Now you see the numbers on these
edges, these numbers are very

20
00:01:09.790 --> 00:01:12.530 
important. They are the so
called preference lists.

21
00:01:13.370 --> 00:01:18.550 
So each participant in this instance
ranks the persons he or she knows

22
00:01:18.660 --> 00:01:24.490 
in the strict order of preference.
For example m1's true love is w2.

23
00:01:24.960 --> 00:01:29.510 
He still likes w1 and he would
be still ok with w3. So

24
00:01:29.510 --> 00:01:33.660 
that's why the order of his
preferences is w2 as first choice,

25
00:01:33.870 --> 00:01:37.850 
w1 as second choice and
w3 as third choice.

26
00:01:38.320 --> 00:01:40.060 
These are the numbers
on the edges.

27
00:01:40.810 --> 00:01:42.620 
We want to couple of
these people up.

28
00:01:43.390 --> 00:01:48.210 
So coupling up would mean a set
of choosing a set of edges

29
00:01:48.450 --> 00:01:53.050 
which have the property that no
person has more than one edge

30
00:01:53.120 --> 00:01:55.710 
because you want a set of marriages,
everybody is married to

31
00:01:55.710 --> 00:01:59.100 
at most one person.
Being single is fine.

32
00:01:59.780 --> 00:02:04.810 
So on the example you can see the blue
set of edges, they form a matching.

33
00:02:05.770 --> 00:02:10.790 
Now comes the crucial question -
is this a good set of marriages?

34
00:02:11.310 --> 00:02:13.370 
Is this a stable
set of marriages?

35
00:02:14.090 --> 00:02:18.550 
Stable here means is this gonna
stay like this if I just let

36
00:02:18.550 --> 00:02:21.410 
these people on their own and
do whatever they want to do.

37
00:02:22.100 --> 00:02:26.970 
If you take a look at the numbers you
probably can notice there is one edge

38
00:02:27.950 --> 00:02:33.740 
which can spoil this whole scheme.
If you take a look at m3 and w2

39
00:02:34.000 --> 00:02:38.110 
they are each other's first choices,
they are truly in love with each other

40
00:02:38.360 --> 00:02:41.570 
yet they are married to other
people. So if I let this instance

41
00:02:41.890 --> 00:02:47.100 
go on its own m3 and w2
will spoil this system,

42
00:02:47.100 --> 00:02:50.180 
break this scheme and break the
set of marriages. So this is

43
00:02:50.180 --> 00:02:52.680 
an edge we don't want to
have in our instance.

44
00:02:53.180 --> 00:02:58.770 
Mathematically speaking we say that
an edge mw blocks matching M

45
00:02:59.030 --> 00:03:01.110 
if it is outside
of the matching.

46
00:03:01.880 --> 00:03:06.950 
The man prefers this woman at the end of
the blocking edge to his current partner

47
00:03:07.370 --> 00:03:10.910 
and the same is true for the
woman. She would rather like to

48
00:03:10.910 --> 00:03:16.220 
go with this m man than to stay
with her current partner

49
00:03:16.250 --> 00:03:17.550 
in the marriage scheme.

50
00:03:18.180 --> 00:03:23.510 
So these edges are evil, we don't want to
have these edges outside of our matching.

51
00:03:24.450 --> 00:03:27.970 
We say that the matching is stable
if there is no such edge,

52
00:03:28.150 --> 00:03:30.030 
if no edge blocks
this matching.

53
00:03:30.870 --> 00:03:34.510 
The biggest theorem in this topic
at the beginning at least

54
00:03:34.770 --> 00:03:37.320 
comes from nineteen sixty
two and it was established

55
00:03:37.320 --> 00:03:40.790 
by two gentlemen Gale Shapley
and a theorem always says that

56
00:03:40.790 --> 00:03:43.000 
a stable matching
always exists.

57
00:03:43.990 --> 00:03:49.550 
Fun part of this is how it was proved.
It was proved by an algorithm.

58
00:03:50.870 --> 00:03:53.230 
So this is part of the paper. The
paper is really short, it's

59
00:03:53.230 --> 00:03:57.180 
only eight pages long and out of
the eight pages one page is

60
00:03:57.180 --> 00:04:01.590 
devoted to argumenting why proving
something by an algorithm

61
00:04:01.750 --> 00:04:05.580 
is actually a mathematical proof.
It should be accepted as a

62
00:04:05.720 --> 00:04:09.750 
true statement and my favorite
part is highlighted there.

63
00:04:09.760 --> 00:04:13.830 
It says that the reason that your friends
and ours cannot understand mathematics

64
00:04:13.960 --> 00:04:17.260 
is not because they have no head
for figures, but because they

65
00:04:17.260 --> 00:04:20.350 
are unable to achieve the degree
of concentration required

66
00:04:20.350 --> 00:04:23.080 
to follow a moderately involved
sequence of inferences.

67
00:04:23.630 --> 00:04:27.480 
This is quite mean. But you know
what they mean by this and

68
00:04:27.720 --> 00:04:31.320 
this is a paper which is part
of a paper series which

69
00:04:31.860 --> 00:04:35.120 
fought for extending the boundaries
of mathematics to algorithms

70
00:04:35.120 --> 00:04:38.360 
and this was a basic step in
the fifties sixties taken.

71
00:04:39.000 --> 00:04:40.720 
So let's see this
famous algorithm.

72
00:04:41.380 --> 00:04:46.640 
Ok so we have to instruct men
and women so that they find a

73
00:04:46.640 --> 00:04:49.550 
stable matching that according
to theorem always exists.

74
00:04:50.920 --> 00:04:52.950 
We start with
instructing the man.

75
00:04:53.610 --> 00:04:57.260 
We tell every single man, take a
look at your preference lists

76
00:04:57.680 --> 00:05:03.300 
and do what is intuitive for you to
do and this is asking out the girl

77
00:05:03.590 --> 00:05:05.920 
ranked top in your
preference list.

78
00:05:06.930 --> 00:05:12.410 
Say these are the red edges in this
figure right now every single

79
00:05:12.410 --> 00:05:15.140 
man walks up to the
woman he likes most.

80
00:05:16.140 --> 00:05:19.020 
Now it's the woman's round. Some
women cannot do anything w1

81
00:05:19.020 --> 00:05:22.780 
and w3 didn't get any offer,
w4 got one offer, so

82
00:05:22.910 --> 00:05:27.060 
she would just take that offer but
w2 is obviously very popular.

83
00:05:27.480 --> 00:05:32.630 
So she has a choice and we instruct
this woman to choose the best

84
00:05:33.010 --> 00:05:37.830 
of the the man who offered her a
date. So she will accept m3's

85
00:05:37.830 --> 00:05:41.970 
offer because m3 is her
true love and she rejects

86
00:05:41.970 --> 00:05:44.650 
the offers from
m1 and m2.

87
00:05:45.480 --> 00:05:47.380 
First round of the
algorithm is through.

88
00:05:48.080 --> 00:05:53.390 
Now two men are matched provisionally,
m1 and m2 are still not matched.

89
00:05:53.540 --> 00:05:57.670 
So what can they do? Well there
is nothing better left than

90
00:05:57.670 --> 00:06:00.770 
walking up to the second ranked one
on the preference list, right?

91
00:06:01.740 --> 00:06:04.410 
So they propose to the
second ranked women

92
00:06:05.300 --> 00:06:08.790 
and w1 is happy, w4
on the other hand

93
00:06:09.250 --> 00:06:12.220 
experiences something that we
haven't seen in the akgorithm yet.

94
00:06:12.620 --> 00:06:16.960 
She's going out with m4 who
is her third choice but now

95
00:06:16.960 --> 00:06:19.170 
she gets a better offer
from her second choice.

96
00:06:19.650 --> 00:06:23.340 
So she now takes a look at
the two offers and says

97
00:06:23.340 --> 00:06:26.400 
I accept the better one
from m2 and reject m4

98
00:06:26.980 --> 00:06:32.760 
in return. So poor m4 was
going out with w4 but now

99
00:06:32.890 --> 00:06:35.960 
he's single again.

100
00:06:36.720 --> 00:06:41.880 
So now m4 is on he's
gonna propose to

101
00:06:42.030 --> 00:06:46.400 
his second choice woman who is
w3. W3 will accept this offer

102
00:06:46.530 --> 00:06:51.300 
and this is how we reach a set of
edges which forms a stable matching.

103
00:06:52.360 --> 00:06:54.960 
Now I told you this set of edges
forms a stable matching but

104
00:06:54.960 --> 00:06:58.840 
we don't know it yet. This is just something
I claim but you haven't seen it.

105
00:06:59.320 --> 00:07:02.630 
The only way for you to know it
is to try to prove it that

106
00:07:02.630 --> 00:07:05.360 
this is indeed true.
So let's prove this.

107
00:07:06.720 --> 00:07:09.030 
If you are not sure that the
Gale-Shapley algorithm terminates

108
00:07:09.030 --> 00:07:14.020 
at a stable matching, you'd
rather start with breaking down

109
00:07:14.020 --> 00:07:17.500 
the statement into smaller statements
which are easier to prove.

110
00:07:17.720 --> 00:07:22.630 
So my first smaller building block
is that the algorithm terminates.

111
00:07:23.860 --> 00:07:28.100 
The second is that the output which
exists according to point one

112
00:07:28.380 --> 00:07:32.260 
is indeed a matching and only in
the third point I will show

113
00:07:32.260 --> 00:07:36.720 
that this matching in the output
is stable by definition there

114
00:07:36.720 --> 00:07:39.790 
is no blocking edge to it.
So let's get to the proof.

115
00:07:40.540 --> 00:07:45.500 
First point is proven very easily. The
algorithm terminates. Why is it so?

116
00:07:46.140 --> 00:07:51.460 
If you take a look at the edges, each
edge is proposed along at most once.

117
00:07:51.920 --> 00:07:55.940 
Then it is accepted or rejected but nobody
proposes to the same woman twice.

118
00:07:56.610 --> 00:08:00.280 
So since there is a finite number of
edges the algorithm also has to have

119
00:08:00.470 --> 00:08:02.100 
finitely many
proposals.

120
00:08:03.180 --> 00:08:05.820 
Point two, the output
is a matching.

121
00:08:06.570 --> 00:08:12.060 
Well the rules were set so that
each man should keep a proposal

122
00:08:12.060 --> 00:08:15.710 
to one woman at the same time,
never to more than one

123
00:08:15.850 --> 00:08:21.010 
and the same for women; even if they
got several proposals they could keep

124
00:08:21.180 --> 00:08:25.110 
one of them and never more than
one. So not only at the end

125
00:08:25.110 --> 00:08:29.510 
but also after each round what I have
the edge set, the set of active edges

126
00:08:29.630 --> 00:08:31.120 
forms a matching
indeed.

127
00:08:31.920 --> 00:08:37.030 
So now come the crucial point number three
that no edge blocks this matching.

128
00:08:37.810 --> 00:08:43.670 
Well we prove it indirectly. We assume
that there is a blocking edge

129
00:08:43.920 --> 00:08:46.770 
to the output matching.
This is uw.

130
00:08:47.890 --> 00:08:49.970 
Now u wanted
this woman w.

131
00:08:50.800 --> 00:08:53.020 
So u definitely proposed
to this woman.

132
00:08:53.880 --> 00:08:57.370 
So what happened to this
proposal edge? U proposed to

133
00:08:57.370 --> 00:09:02.260 
w because u wants this woman. Well w
must have rejected this proposal.

134
00:09:02.630 --> 00:09:07.970 
But why has w rejected this
proposal? Because she had somebody

135
00:09:07.970 --> 00:09:12.240 
better. The only reason a woman for a
woman to reject the proposal edge

136
00:09:12.440 --> 00:09:16.970 
is when she receives a better offer.
So that you had a better partner

137
00:09:17.410 --> 00:09:21.730 
and I'm not claiming the w ended up with
this better partner, but I'm claiming

138
00:09:21.890 --> 00:09:25.940 
that w ended up either with this partner
because of whom she rejected u,

139
00:09:26.100 --> 00:09:30.370 
or somebody even better because if
you take a look at the women,

140
00:09:30.660 --> 00:09:35.490 
their position always improves during
the course of the algorithm.

141
00:09:36.010 --> 00:09:40.410 
Therefore w ended up with somebody
better than u. But then how could

142
00:09:40.540 --> 00:09:42.530 
uw be a blocking edge?

143
00:09:43.160 --> 00:09:47.900 
W should prefer u to her partner
and this is a contradiction

144
00:09:48.310 --> 00:09:54.480 
we arrived. So after this proof now you also
know that the Gale Shapley algorithm does

145
00:09:54.580 --> 00:09:57.680 
deliver stable matching
which then always exists.

146
00:09:58.850 --> 00:10:03.310 
Alright so this was a bad man and women.
Obviously have very old terminology.

147
00:10:03.470 --> 00:10:07.190 
Let's get the more PC model
which is called the stable

148
00:10:07.190 --> 00:10:08.780 
room mates problem
traditionally.

149
00:10:10.090 --> 00:10:12.240 
So in the real world there are no
men and women who only wanna

150
00:10:12.240 --> 00:10:15.890 
couple up with each other. There are
persons. Now there are six persons.

151
00:10:16.100 --> 00:10:20.610 
No genders, no sexes in this
example. We still have the edges.

152
00:10:20.850 --> 00:10:25.250 
Those people who find each other
acceptable have an edge between them.

153
00:10:25.700 --> 00:10:31.300 
Numbers mean the same. The lower the number
is, the better the person is judged.

154
00:10:32.340 --> 00:10:36.790 
So how do I define stability here? How
do I define a blocking edge here?

155
00:10:37.120 --> 00:10:41.990 
Well the same way I defined it
earlier. I see that edge uv

156
00:10:42.000 --> 00:10:46.460 
blocks the matching. If this
edge is preferred by both

157
00:10:46.550 --> 00:10:49.110 
end vertices and its
outside of the matching.

158
00:10:49.740 --> 00:10:53.520 
Nothing has been changed. Its
just I forego the usage of men

159
00:10:53.520 --> 00:10:58.010 
and women and they move their non
bipartite graph from a bipartite graph.

160
00:10:58.870 --> 00:11:02.030 
Does it make any difference
at all that I changed

161
00:11:02.540 --> 00:11:06.390 
the bipartites of the graph?
It turns out it does

162
00:11:06.970 --> 00:11:12.240 
because in such instances if you forgo
bipartiteness in such instances

163
00:11:12.760 --> 00:11:16.560 
the existence of a stable matching
is not guaranteed anymore. It

164
00:11:16.560 --> 00:11:19.860 
was guaranteed for the bipartite
case. It's not guaranteed here.

165
00:11:20.910 --> 00:11:24.420 
So this is the theorem of Rob
Irving. He did not only derive

166
00:11:24.420 --> 00:11:28.700 
this theorem but he also derived
an algorithm, a fast algorithm

167
00:11:28.880 --> 00:11:32.680 
computing a stable matching
whenever it exists or a proof for

168
00:11:32.680 --> 00:11:35.850 
non-existence whenever a stable
matching does not exist.

169
00:11:36.380 --> 00:11:39.620 
This algorithm is however a lot
more complicated than the Gale

170
00:11:39.620 --> 00:11:42.970 
Shapley algorithm. So I won't go
through this algorithm right now.

171
00:11:43.760 --> 00:11:47.460 
Just to show you an example for no
instance we show you the instance

172
00:11:47.460 --> 00:11:49.460 
which admits no stable
matching ever.

173
00:11:50.280 --> 00:11:55.220 
Is this triangle sufficient? So
this is very symmetric. Everybody

174
00:11:55.220 --> 00:11:58.150 
loves the person they are not
supposed to love. You can see

175
00:11:58.590 --> 00:12:02.960 
the man in the upper left corner,
this guy's first choice

176
00:12:03.360 --> 00:12:05.920 
is the person whose
second choice he is.

177
00:12:06.600 --> 00:12:09.880 
So it's going to be a preference
cycle. If there would be a

178
00:12:09.880 --> 00:12:13.250 
stable matching then any edge would
be basically stable matching

179
00:12:13.250 --> 00:12:16.310 
because this is a symmetric instance
but if you take for example that

180
00:12:16.310 --> 00:12:19.680 
black edge and ask whether the
black edges are stable matching

181
00:12:19.820 --> 00:12:24.320 
then you immediately see that it isn't
because the blue edge blocks it.

182
00:12:24.540 --> 00:12:27.410 
Now the blue edges are matching
is blocked by the red edge

183
00:12:27.420 --> 00:12:31.980 
and the red edge as a matching
is blocked by the black edge.

184
00:12:32.340 --> 00:12:36.170 
So we have shown that there is no stable
matching in this very tiny example.

185
00:12:38.020 --> 00:12:41.760 
So why am I talking about finding
a partner and stable matchings?

186
00:12:42.070 --> 00:12:45.320 
Nobody has ever used this for
partner finding. People

187
00:12:45.320 --> 00:12:48.360 
have used this for finding
roommates in real

188
00:12:48.970 --> 00:12:53.390 
but there is the a major
application of this which many of

189
00:12:53.390 --> 00:12:57.060 
you have gone through or we go
through and this is job market

190
00:12:57.110 --> 00:13:00.880 
and university admission market
in a centralized way. So let's

191
00:13:00.880 --> 00:13:06.300 
take a look at this and this is also
the topic for which the so called

192
00:13:06.410 --> 00:13:10.450 
nobel prize in economics which is a
nobel prize in memory of Alfred Nobel

193
00:13:10.730 --> 00:13:14.950 
in economics was given to two
gentlemen Alvin Roth and

194
00:13:14.950 --> 00:13:18.140 
Lloyd Shapley. Shapley is the one
from the Gale Shapley algorithm

195
00:13:18.770 --> 00:13:20.270 
in two thousand twelve.

196
00:13:21.250 --> 00:13:25.890 
So what does this really essential
problem which is worth a nobel prize?

197
00:13:27.250 --> 00:13:31.360 
This is an example on the university
admissions system. On one

198
00:13:31.360 --> 00:13:35.350 
side of the graph where we had men at
the beginning there are universities.

199
00:13:35.630 --> 00:13:38.480 
They have a quota how many students
in computer science they

200
00:13:38.480 --> 00:13:43.810 
want to admit their programs. The
other side consists of students

201
00:13:44.020 --> 00:13:46.450 
who want to be admitted
to the universities.

202
00:13:46.890 --> 00:13:50.430 
The students submit the preferenced
list which is exactly

203
00:13:50.430 --> 00:13:52.390 
what we had in the stable
marriage problem right

204
00:13:52.790 --> 00:13:56.030 
on these universities. The
universities also have a preference

205
00:13:56.030 --> 00:14:01.090 
list over the students based on their finance
course from high school for example.

206
00:14:02.170 --> 00:14:06.300 
I want to find an allocation
of students to universities

207
00:14:06.740 --> 00:14:12.050 
and this is don via stability and
computing a Gale Shapley solution

208
00:14:12.200 --> 00:14:13.430 
in many many countries.

209
00:14:14.820 --> 00:14:19.240 
Why do I want stability? Do I really want
stability as an optimizing principle?

210
00:14:19.670 --> 00:14:23.930 
Well what is stability? What is
the absence of a blocking edge?

211
00:14:24.320 --> 00:14:28.410 
The absense of a blocking edge
guarantees that my application

212
00:14:28.410 --> 00:14:32.930 
to university is void, is not in
the end solution if and only if

213
00:14:33.290 --> 00:14:37.100 
either I got a better seat
at a college I like more.

214
00:14:37.710 --> 00:14:43.160 
So I have a better edge than this
edge in question or the college

215
00:14:43.160 --> 00:14:46.390 
on the other side of this edge
filled up its quota with

216
00:14:46.390 --> 00:14:48.000 
better students
than I am.

217
00:14:48.610 --> 00:14:52.120 
Then I understand that I couldn't
get into this university because

218
00:14:52.230 --> 00:14:56.160 
they had better partners than me
and that's exactly the definition

219
00:14:56.340 --> 00:14:57.360 
of a blocking edge.

220
00:14:59.750 --> 00:15:02.930 
So if this is not there then
their location is stable. This

221
00:15:02.930 --> 00:15:06.250 
is what we want from a centrally
organised admission system.

222
00:15:07.140 --> 00:15:10.230 
Just to give you an
impression how

223
00:15:10.630 --> 00:15:14.530 
cool Gale Shapley is and
how fast the algorithm is

224
00:15:14.660 --> 00:15:19.200 
in Hungary it takes ten seconds
to compute the admission scheme

225
00:15:19.200 --> 00:15:22.340 
for the entire country and even
in China it would only take

226
00:15:22.340 --> 00:15:24.210 
fifteen minutes
nothing more.

227
00:15:25.100 --> 00:15:29.660 
On the top of this we also know
that students can use the system

228
00:15:29.810 --> 00:15:33.910 
with security of knowing that
they should not lie when

229
00:15:33.910 --> 00:15:38.770 
they submit their preferences. This is also
a property of the Gale Shapley algorithm.

230
00:15:39.000 --> 00:15:43.950 
So stable matchings model
this problem wonderfully

231
00:15:43.960 --> 00:15:48.520 
and the algorithm we have for stable matching
solves this wonderfully, this problem.

232
00:15:49.130 --> 00:15:49.970 
Thank you very much.
