WEBVTT

1
00:00:00.840 --> 00:00:03.960 
my name Akshay, i'm a great student at georgia tech and today i'll

2
00:00:03.960 --> 00:00:04.980 
be presenting the paper.

3
00:00:07.780 --> 00:00:11.920 
in most computer science classes assignments are routinely range multiple semesters.

4
00:00:12.940 --> 00:00:15.570 
the solutions from previous measures can sometimes be present

5
00:00:15.570 --> 00:00:17.810 
online and can act as a source of plagiarism.

6
00:00:19.490 --> 00:00:22.640 
existing tools like most can detect collaboration between students

7
00:00:22.640 --> 00:00:27.110 
in the same class,
but when it comes to finding plagiarism from these public sources

8
00:00:27.270 --> 00:00:28.770 
is becoming increasingly difficult.

9
00:00:30.390 --> 00:00:34.210 
in our approach we uniquely water for each file being shared with the student.

10
00:00:34.890 --> 00:00:37.110 
for example in case of programming assignments.

11
00:00:37.740 --> 00:00:40.360 
we shouldn't get the template code with a different watermark

12
00:00:40.360 --> 00:00:43.450 
and when the student submits the solution to check for these watermarks.

13
00:00:45.030 --> 00:00:47.660 
in the match then it's all good. if they are different then

14
00:00:47.660 --> 00:00:51.030 
it is a strong indication that the student has copied from some other student.

15
00:00:51.870 --> 00:00:54.730 
if the watermarks are missing, then it indicates that the student

16
00:00:54.730 --> 00:00:57.670 
has copied from some other source.

17
00:00:59.880 --> 00:01:03.470 
a marker is a tool that we designed to automate the entire process

18
00:01:03.480 --> 00:01:06.690 
from watermark generation to assignment distribution to watermark detection

19
00:01:07.110 --> 00:01:08.120 
the whole thing scalable.

20
00:01:10.300 --> 00:01:12.050 
this is a project for architecture

21
00:01:13.090 --> 00:01:16.460 
years just need to submit the assignments file and the student details.

22
00:01:17.100 --> 00:01:20.670 
jack marker then automatically creates a watermark copy for each student

23
00:01:21.110 --> 00:01:24.250 
stores it in a private wrapper and adds a student as a collaborator.

24
00:01:25.160 --> 00:01:28.020 
upon submission these watermarks are checked and the suspicious

25
00:01:28.020 --> 00:01:28.800 
cases are flagged.

26
00:01:31.220 --> 00:01:34.740 
this is an example where we have used energies to demonstrate the watermark
process.

27
00:01:34.880 --> 00:01:39.290 
the watermarks are distributed across the entire file

28
00:01:39.300 --> 00:01:41.070 
randomly making them hard to replicate

29
00:01:42.260 --> 00:01:44.870 
in actual process we use characters which are invisible in

30
00:01:44.870 --> 00:01:47.940 
most editors and ideas making the watermarks very difficult.

31
00:01:51.140 --> 00:01:53.520 
an example of a file watermark check marker

32
00:01:54.240 --> 00:01:57.160 
the code looks exactly the same runs exactly the same yet the

33
00:01:57.160 --> 00:01:59.270 
file on the right side has a embedded watermark.

34
00:02:01.610 --> 00:02:04.830 
the second problem that we aim to solve was the growing availability

35
00:02:04.830 --> 00:02:07.350 
of public repositories for assignment solutions.

36
00:02:10.780 --> 00:02:14.420 
on platforms like youtube for assignment solutions,

37
00:02:15.560 --> 00:02:16.690 
it also simplifies the

38
00:02:17.620 --> 00:02:21.200 
process of making take-down requests by creating a pre populated email template

39
00:02:22.450 --> 00:02:25.510 
that can be used to send emails to the students with just a click.

40
00:02:29.730 --> 00:02:34.110 
but is at the same Ã©diteurs.
and get down then start filtering platforms like youtube

41
00:02:34.890 --> 00:02:38.110 
and it then notifies the ts when some relevant public response

42
00:02:39.060 --> 00:02:42.530 
the ts can then investigate further and quickly quickly request

43
00:02:42.530 --> 00:02:44.510 
a take down when necessary.

44
00:02:47.480 --> 00:02:50.420 
these tools in one of the a classes at georgia tech and the

45
00:02:50.430 --> 00:02:51.700 
results are something like this.

46
00:02:54.970 --> 00:02:58.520 
i propose for the moment a solution let about a fifty percent

47
00:02:58.520 --> 00:03:01.920 
reduction in the number of cases flagged by the ts most

48
00:03:03.380 --> 00:03:06.310 
upon investigation of porter works we found that about ninety

49
00:03:06.310 --> 00:03:08.880 
five percent of the submission center was intact

50
00:03:09.790 --> 00:03:13.090 
and we were able to discover eight additional potential cheating

51
00:03:13.090 --> 00:03:15.100 
cases which we are investigating further.

52
00:03:17.210 --> 00:03:20.460 
we also used down to monitor public reports with assignment solutions.

53
00:03:20.460 --> 00:03:23.880 
and we were able to find a total of thirty-one reports.

54
00:03:24.290 --> 00:03:27.300 
out of which nineteen were taken down after initial request.

55
00:03:30.910 --> 00:03:34.010 
to use these tools across multiple semesters for further testing

56
00:03:34.700 --> 00:03:37.750 
also things like making the watermarking technique more robust

57
00:03:37.800 --> 00:03:40.520 
and adding support for more file types is in the paper.

58
00:03:42.880 --> 00:03:45.790 
finally these are some of the tools our team has developed

59
00:03:45.820 --> 00:03:48.940 
over time to counter plagiarism and assist education at scale.
