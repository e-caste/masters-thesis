WEBVTT

1
00:00:04.660 --> 00:00:09.349 
Now, let's speak about JavaScript Frameworks and JavaScript Libraries.

2
00:00:11.380 --> 00:00:15.939 
If we consider how software is developed, how web

3
00:00:15.940 --> 00:00:20.709 
application is developed, then we can see that many functions, many

4
00:00:20.710 --> 00:00:25.989 
tasks, many requirements are very similar from one project to another.

5
00:00:25.990 --> 00:00:30.399 
They are even identical even if the projects are different.

6
00:00:30.400 --> 00:00:35.019 
For example, a shopper functionality is the same whether it's a shop for books

7
00:00:35.020 --> 00:00:36.649 
or whether it's a shop for cars.

8
00:00:37.690 --> 00:00:42.249 
For example, an e-learning website as well as an online shop,

9
00:00:42.250 --> 00:00:46.809 
both need user management, both these possibilities that users can

10
00:00:46.810 --> 00:00:51.309 
register that the user can come back and

11
00:00:51.310 --> 00:00:56.409 
design something. So, for the development of such web application,

12
00:00:56.410 --> 00:01:00.759 
it's very helpful and these developments can be accelerated

13
00:01:02.260 --> 00:01:06.699 
and even made more cost efficient by reusing parts of

14
00:01:06.700 --> 00:01:11.289 
software or by using provided libraries that have already been

15
00:01:11.290 --> 00:01:14.259 
programed by someone else.

16
00:01:14.260 --> 00:01:19.959 
Such libraries as they provide, such software

17
00:01:19.960 --> 00:01:25.359 
parts of the software program that can be fit together

18
00:01:25.360 --> 00:01:28.749 
and can enhance very much the development.

19
00:01:31.230 --> 00:01:36.059 
If we have a closer look to this development cost, then the development

20
00:01:36.060 --> 00:01:40.499 
of software can be supported even by a complete environment,

21
00:01:40.500 --> 00:01:45.479 
not only by providing like in the library, by providing certain pre

22
00:01:45.480 --> 00:01:49.949 
defined functions, but providing an environment to

23
00:01:49.950 --> 00:01:56.039 
design such an application, which constitutes of a skeleton

24
00:01:56.040 --> 00:02:00.809 
and a structured approach for

25
00:02:00.810 --> 00:02:05.669 
data structures for different functionalities

26
00:02:05.670 --> 00:02:10.649 
as those that it becomes very easy to design such application.

27
00:02:12.540 --> 00:02:17.370 
But what's the exact difference between an library and a framework?

28
00:02:18.450 --> 00:02:22.889 
A library is a kind of collection of collection of functionality, which

29
00:02:22.890 --> 00:02:28.169 
provides and performs very specific, well-defined operations,

30
00:02:28.170 --> 00:02:32.639 
specific and well-defined operations that are applied in many

31
00:02:32.640 --> 00:02:33.749 
different contexts.

32
00:02:34.990 --> 00:02:39.419 
Example what can be easily done by means of libraries, for

33
00:02:39.420 --> 00:02:43.289 
example, string and data manipulation talks.

34
00:02:43.290 --> 00:02:48.089 
So a library can and typically contains functionality for that string

35
00:02:48.090 --> 00:02:52.739 
and data manipulation. Libraries contains libraries

36
00:02:52.740 --> 00:02:56.789 
contained functionalities for visualization, visualization of data.

37
00:02:56.790 --> 00:02:59.159 
Visualization of processes.

38
00:02:59.160 --> 00:03:03.809 
They contain functionality for compression, for

39
00:03:03.810 --> 00:03:06.270 
regular expression, evaluation and others.

40
00:03:07.800 --> 00:03:12.839 
Compared to this, a framework is a more proto approach.

41
00:03:12.840 --> 00:03:17.519 
Framework provides a skeleton skeleton that has to be filled

42
00:03:17.520 --> 00:03:21.839 
out with the application to be designed.

43
00:03:21.840 --> 00:03:26.939 
So in framework is more like an environment with functionality

44
00:03:26.940 --> 00:03:31.860 
and parodic means instead of only providing certain functionalities.

45
00:03:33.030 --> 00:03:37.679 
So a framework, for example, can also provide the architecture

46
00:03:37.680 --> 00:03:42.029 
of an application that can be used to define the concept, and then it provides the

47
00:03:42.030 --> 00:03:46.019 
functionality to implementers.

48
00:03:46.020 --> 00:03:51.059 
The fundamental functionality is still to be done

49
00:03:51.060 --> 00:03:52.949 
by the application.

50
00:03:52.950 --> 00:03:57.449 
So as a design of such applications, a diamond, the

51
00:03:57.450 --> 00:04:02.279 
framework and diamond supports the development

52
00:04:02.280 --> 00:04:04.919 
of such complete applications.

53
00:04:04.920 --> 00:04:10.079 
Examples here, such frameworks can be used, for example, for designing web applications.

54
00:04:10.080 --> 00:04:14.519 
Applications of any kind or of frameworks can

55
00:04:14.520 --> 00:04:18.299 
be used to design tests or graphical user interfaces.

56
00:04:19.500 --> 00:04:24.089 
But often the literature and usage, it's not 100 percent

57
00:04:24.090 --> 00:04:26.549 
clear what's a library? What's the framework?

58
00:04:26.550 --> 00:04:29.309 
So often this is mixed.

59
00:04:29.310 --> 00:04:34.139 
So it was a more formal approach was done by most

60
00:04:34.140 --> 00:04:37.649 
libraries that certain types of functionality were provided.

61
00:04:37.650 --> 00:04:42.089 
And the more reasoned approach is that this functionality is

62
00:04:42.090 --> 00:04:46.559 
part of an environment of an framework environment to the

63
00:04:46.560 --> 00:04:48.600 
support of programmers.

64
00:04:49.920 --> 00:04:54.689 
Let's have a look on some famous JavaScript frameworks

65
00:04:54.690 --> 00:04:58.480 
famous and popular of JavaScript frameworks, for example AngularJS.

66
00:05:02.740 --> 00:05:06.734 
This has been maintained by Google, and it provides a model view controller (MVC)

67
00:05:07.740 --> 00:05:08.740 
architecture.

68
00:05:10.020 --> 00:05:14.549 
Besides, there is another framework, a JavaScript framework that

69
00:05:14.550 --> 00:05:19.319 
is the Google Web Toolkit (GWT).

70
00:05:19.320 --> 00:05:23.849 
Here you can see the URL, with all the information

71
00:05:23.850 --> 00:05:29.039 
about the Google Web Toolkit, and this particular is this framework

72
00:05:29.040 --> 00:05:34.049 
of Google Web Toolkit. It's good for people who come from Java

73
00:05:34.050 --> 00:05:39.119 
because one can develop in Java, which will then be compiled

74
00:05:39.120 --> 00:05:40.120 
to JavaScript.

75
00:05:41.130 --> 00:05:45.629 
Here the toolkit provides many tools and has a

76
00:05:45.630 --> 00:05:50.130 
high rate of reusability.

77
00:05:51.330 --> 00:05:53.915 
A third example of a JavaScript framework is the KnockoutJS.

78
00:05:53.916 --> 00:05:58.919 
KnockoutJS provides a model view

79
00:05:58.920 --> 00:06:03.929 
view model (MVVM) framework, and it's good for designing

80
00:06:03.930 --> 00:06:07.259 
dynamic JavaScript user interfaces.

81
00:06:08.370 --> 00:06:11.899 
There are more examples of frameworks, Backbon.js, for example,

82
00:06:13.050 --> 00:06:17.399 
here you can see again the official web page.

83
00:06:17.400 --> 00:06:21.180 
The backbone.js is based on a model view

84
00:06:22.230 --> 00:06:26.729 
control (MVC) design pattern. It is very compact, small size,

85
00:06:26.730 --> 00:06:30.089 
and it's great to design a single page application.

86
00:06:31.140 --> 00:06:34.499 
Cappuccino, that's also a popular JavaScript framework.

87
00:06:34.500 --> 00:06:39.149 
It provides, look and feel like

88
00:06:39.150 --> 00:06:42.779 
desktop applications on the Mac OS 10.

89
00:06:42.780 --> 00:06:47.549 
There is no knowledge required about the document object model

90
00:06:47.550 --> 00:06:52.049 
or about cascading stylesheet sheet, all is involved

91
00:06:52.050 --> 00:06:57.059 
using this cappuccino, it's easy to develop applications.

92
00:06:57.060 --> 00:07:01.384 
And to mention another JavaScript framework, Ember.js,

93
00:07:03.720 --> 00:07:08.159 
this is based on an MVC pattern and has

94
00:07:08.160 --> 00:07:12.749 
big templating system which support the

95
00:07:12.750 --> 00:07:15.059 
design of JavaScript applications.

96
00:07:18.650 --> 00:07:20.539 
there are more examples, more popular examples.

97
00:07:20.540 --> 00:07:25.819 
For example, Aurelia, it is still in development,

98
00:07:25.820 --> 00:07:29.719 
and perhaps it may be one of the next popular frameworks.

99
00:07:29.720 --> 00:07:34.249 
It is written in ECMAscript 6 and 7 by

100
00:07:34.250 --> 00:07:36.356 
the makers of Durundal.

101
00:07:37.670 --> 00:07:42.559 
Very simple coding conventions are involved

102
00:07:42.560 --> 00:07:46.550 
and the focus on developer experience

103
00:07:47.690 --> 00:07:52.249 
is given. But all these frameworks and they are more, but

104
00:07:52.250 --> 00:07:54.966 
these are to mention the most popular.

105
00:07:54.967 --> 00:07:59.449 
All these frameworks offer a lot of functionality, and

106
00:07:59.450 --> 00:08:03.889 
they offer all the rules and paradigms meant for software

107
00:08:03.890 --> 00:08:08.929 
development or for the architecture of the

108
00:08:08.930 --> 00:08:13.069 
applications that are designed within this framework.

109
00:08:13.070 --> 00:08:17.599 
As a small reminder, I want to remind

110
00:08:17.600 --> 00:08:22.459 
you that you integrate a library to call existing functions

111
00:08:22.460 --> 00:08:27.079 
to extend your code, but a framework that

112
00:08:27.080 --> 00:08:31.219 
tells you where to put and how to develop your own app.

113
00:08:31.220 --> 00:08:36.558 
So here we can see the difference between Library, Library, a set of functionalities,

114
00:08:36.559 --> 00:08:40.999 
and if you design a web application, you can take the functions

115
00:08:41.000 --> 00:08:46.279 
functionalities, you can take this functionality out of the library and can

116
00:08:46.280 --> 00:08:49.349 
place it inside your code and extend this code.

117
00:08:49.350 --> 00:08:53.929 
The framework gives them more, framework tells how to

118
00:08:53.930 --> 00:08:56.569 
design, how to develop an application.
