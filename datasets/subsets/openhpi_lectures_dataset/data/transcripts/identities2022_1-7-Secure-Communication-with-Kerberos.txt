WEBVTT

1
00:00:00.830 --> 00:00:07.220 
In our openHPI course "Digital Identities",
now we consider the Kerberos protocol,

2
00:00:07.760 --> 00:00:10.910 
a method for secure
authentication.

3
00:00:12.130 --> 00:00:16.770 
So far we have looked at different
models for digital identities.

4
00:00:17.570 --> 00:00:21.480 
Now we are going to focus on
the technical implementation

5
00:00:21.920 --> 00:00:27.810 
of the models and we will start with the
description of the Kerberos protocol

6
00:00:28.290 --> 00:00:32.650 
which is very popular and one of the
first authentication protocols.

7
00:00:33.490 --> 00:00:35.910 
It's a protocol
for the central

8
00:00:36.870 --> 00:00:42.320 
ID provider authentication and
it's applied in many systems.

9
00:00:43.270 --> 00:00:49.340 
The idea is there is only one ID
provider and the various online

10
00:00:49.340 --> 00:00:55.310 
services trust this ID provider, you
remember we did classes in centralized model.

11
00:00:56.500 --> 00:01:01.940 
The question now is, how this
Kerberos protocol is working?

12
00:01:03.070 --> 00:01:06.490 
How do online services
interact with Kerberos

13
00:01:07.100 --> 00:01:14.100 
and how can online services recognize the
users without their own authentication?

14
00:01:14.380 --> 00:01:20.070 
And this is for what Kerberos
provides solutions.

15
00:01:21.430 --> 00:01:24.960 
Few words about terminology.
The basic principle

16
00:01:26.130 --> 00:01:30.670 
Kerberos is based on is
to work with tickets.

17
00:01:31.490 --> 00:01:33.750 
Issuing tickets,
controlling tickets -

18
00:01:34.520 --> 00:01:39.190 
this is a way the user is
interacting with the Kerberos system.

19
00:01:39.880 --> 00:01:45.470 
For Kerberos, the ID provider consists
of two components. The first

20
00:01:45.480 --> 00:01:48.080 
component is the
authentication service

21
00:01:48.500 --> 00:01:54.810 
and the second component is a ticket issuing
service, the Ticket Granting Service.

22
00:01:56.740 --> 00:02:02.170 
The Kerberos is using two
different types of tickets.

23
00:02:03.190 --> 00:02:04.590 
There is one
master ticket,

24
00:02:05.220 --> 00:02:07.820 
this is a ticket
granting ticket,

25
00:02:08.570 --> 00:02:13.520 
the TGT, and there are single tickets.
Single tickets that are valid

26
00:02:13.690 --> 00:02:16.420 
for only one service

27
00:02:17.030 --> 00:02:20.470 
in this world. So we
have our application

28
00:02:21.090 --> 00:02:25.700 
that's provided by the service and
we have the identity provider

29
00:02:26.150 --> 00:02:29.930 
which is based on the Kerberos,
which works on the Kerberos

30
00:02:30.460 --> 00:02:36.170 
principle and there we have an
authentication service and we

31
00:02:36.170 --> 00:02:38.550 
have a Ticket
Granting Service.

32
00:02:39.900 --> 00:02:46.210 
This ID provider is called Kerberos
key distribution centre and

33
00:02:46.210 --> 00:02:47.940 
we will understand why.

34
00:02:48.990 --> 00:02:54.190 
So a user wants to use an
application and to

35
00:02:54.670 --> 00:03:00.070 
authenticate, to be able to use this

36
00:03:01.150 --> 00:03:07.670 
the key distribution centre sends
back a ticket granting ticket.

37
00:03:08.600 --> 00:03:14.830 
This is not exactly rolling
which is the service that's used,

38
00:03:15.030 --> 00:03:20.120 
it is the general start of
the interaction with the

39
00:03:21.460 --> 00:03:26.640 
Kerberos centre. And then on the basis
of the ticket granting ticket,

40
00:03:27.160 --> 00:03:33.380 
the Ticket Granting Service
is connected, is contacted,

41
00:03:33.820 --> 00:03:37.280 
and here it's clear
what kind of service

42
00:03:37.770 --> 00:03:42.630 
should be used and then the Ticket
Granting Service sends back the

43
00:03:42.910 --> 00:03:46.880 
encrypted ticket for
exactly that service.

44
00:03:47.320 --> 00:03:53.490 
And then by means of this ticket the
application can access the service

45
00:03:53.760 --> 00:03:57.090 
and can exactly
use this service

46
00:03:57.810 --> 00:03:59.290 
the ticket is issued.

47
00:04:00.850 --> 00:04:05.900 
The Kerberos protocol for Central
Authentication works as

48
00:04:05.900 --> 00:04:11.810 
a step by step procedure. First authentication
is done with an authentication service

49
00:04:12.250 --> 00:04:16.530 
and when authentication is
successfully finished

50
00:04:16.990 --> 00:04:21.980 
the user receives
his master ticket,

51
00:04:22.990 --> 00:04:30.410 
the TGT. And then with his master ticket, the
single tickets for the corresponding services

52
00:04:30.910 --> 00:04:35.690 
that are used can be obtained from
the Ticket Granting Service.

53
00:04:36.350 --> 00:04:43.290 
Once authenticated, in the next steps
only it needs to be clarified what

54
00:04:43.740 --> 00:04:46.940 
kind of service the
user can access.

55
00:04:48.210 --> 00:04:54.280 
For this single ticket is issued
and this is transmitted to the

56
00:04:54.920 --> 00:05:04.220 
to the user in an encrypted way and it is
only valid for a very specific service.

57
00:05:05.010 --> 00:05:09.260 
And this single service,
single ticket grants

58
00:05:09.790 --> 00:05:11.590 
the access to
the service.

59
00:05:13.060 --> 00:05:18.540 
And then the ticket, to this end, the
ticket contains an internal ID

60
00:05:19.020 --> 00:05:23.170 
which is stored by the service
to recognise the user

61
00:05:23.780 --> 00:05:28.320 
and to use a second service
in a new single ticket

62
00:05:28.790 --> 00:05:32.900 
for the service can be obtained
with the master service.

63
00:05:33.750 --> 00:05:37.260 
To this end it's
no more necessary to

64
00:05:37.730 --> 00:05:39.410 
renew authentication.

65
00:05:40.430 --> 00:05:45.540 
What are the advantages and disadvantages
of this Kerberos authentication protocol?

66
00:05:46.280 --> 00:05:50.210 
The advantages are its one
time authentication.

67
00:05:51.020 --> 00:05:54.630 
It's sufficient to
use the service

68
00:05:55.440 --> 00:05:59.590 
and one gets the master
tickets and later on

69
00:06:00.020 --> 00:06:03.050 
with the help of this master
ticket every single

70
00:06:04.090 --> 00:06:06.910 
ticket to use the service
can be obtained.

71
00:06:08.060 --> 00:06:14.100 
The authentication is mutual, that means
both the user and authentication service

72
00:06:14.310 --> 00:06:17.770 
makes sure that the other
partner is in fact the

73
00:06:18.360 --> 00:06:23.250 
claimed one. So the user has
to authenticate against the

74
00:06:23.250 --> 00:06:27.250 
service and the service has to
authenticate against the user.

75
00:06:28.440 --> 00:06:33.070 
The disadvantages of this Kerberos
protocol is again the probability

76
00:06:33.550 --> 00:06:37.280 
to be a single
point of failure.

77
00:06:38.350 --> 00:06:41.960 
If the authentication
service is compromised,

78
00:06:42.720 --> 00:06:45.060 
no master tickets
can be issued.

79
00:06:45.750 --> 00:06:51.490 
Then no service can be used
and if the attacker gets

80
00:06:51.900 --> 00:06:59.540 
the master ticket in its hand because he is
able to compromise authentication service,

81
00:06:59.790 --> 00:07:03.750 
he can imitate any
person registered

82
00:07:04.390 --> 00:07:09.860 
with the service, can use the services
in the name of the registered users.

83
00:07:11.040 --> 00:07:17.590 
And then there is another disadvantage.
A strict synchronization is necessary.

84
00:07:18.080 --> 00:07:22.520 
A synchronization for
all the participants

85
00:07:24.030 --> 00:07:31.280 
and all the systems that are connected
need to have a same system clock

86
00:07:31.950 --> 00:07:38.270 
because the tickets are issued
with a timestamp and this

87
00:07:38.270 --> 00:07:44.290 
is important in the protocol that
all the components have the same time.

88
00:07:45.610 --> 00:07:47.910 
How this Kerberos protocol

89
00:07:48.910 --> 00:07:51.790 
authentication protocol is
applied in real life?

90
00:07:52.520 --> 00:07:58.340 
It is, I mentioned, widely used. Reason
is that it's used in Windows networks

91
00:07:59.130 --> 00:08:03.140 
of enterprises and organization.
It's a typical way how the

92
00:08:03.140 --> 00:08:05.790 
centralized authentication
is organized there.

93
00:08:06.920 --> 00:08:10.430 
Upon joining the
company's organization

94
00:08:10.880 --> 00:08:16.830 
each employee receives an account. That
means he receives a digital identity

95
00:08:17.140 --> 00:08:23.700 
and with digital identity he can use
all the services that are provided

96
00:08:24.240 --> 00:08:31.330 
in that company, the employee can log
on to any company computer

97
00:08:31.570 --> 00:08:38.060 
authentication and automatically and
unnoticed he gets the master ticket

98
00:08:38.420 --> 00:08:43.250 
that's needed then to start,
for example, outlook with a

99
00:08:44.470 --> 00:08:47.990 
single ticket, for example,
his personal email account

100
00:08:48.750 --> 00:08:52.280 
is automatically
loaded, other data

101
00:08:53.640 --> 00:08:57.640 
the employee needs
access are provided.

102
00:08:59.130 --> 00:09:03.890 
So in summary Kerberos is a very
popular protocol for central

103
00:09:04.590 --> 00:09:10.240 
authentication. It is based on
ticket principal, on ticket

104
00:09:10.990 --> 00:09:15.110 
issuance and the
Kerberos ID providers

105
00:09:16.470 --> 00:09:22.900 
consist of two components. There is one
component for the authentication itself

106
00:09:23.680 --> 00:09:28.860 
which is finished with
transmitting a master ticket

107
00:09:29.210 --> 00:09:32.950 
and then there are the ticket
issuing service which allows

108
00:09:33.550 --> 00:09:35.550 
access to the
single services.

109
00:09:36.460 --> 00:09:41.070 
The master ticket is issued as
a result of the authentication

110
00:09:41.490 --> 00:09:43.150 
and the master ticket

111
00:09:43.900 --> 00:09:52.720 
is a guarantee, provides a possibility to
get single tickets for the corresponding

112
00:09:52.950 --> 00:09:57.680 
services that can be purchased
with this master ticket.

113
00:09:58.130 --> 00:10:02.010 
So Kerberos is a very popular
system for such a central

114
00:10:03.060 --> 00:10:07.670 
ID provider model and it's
applied in many companies and

115
00:10:07.670 --> 00:10:08.520 
organizations.
