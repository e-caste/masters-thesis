WEBVTT

1
00:00:00.510 --> 00:00:04.080 
In our openHPI course "Confidential
Communication in the Internet",

2
00:00:04.500 --> 00:00:10.740 
now we want to have a closer look to
AES - advanced encryption standard.

3
00:00:11.330 --> 00:00:15.390 
This is the successor of
the very successful

4
00:00:15.890 --> 00:00:17.230 
DES algorithm.

5
00:00:19.640 --> 00:00:25.750 
You remember we discussed that DES from
the mid of the nineties was no more

6
00:00:26.080 --> 00:00:30.370 
considered secure enough because
of the short key length.

7
00:00:31.050 --> 00:00:36.920 
So in ninety seven, the NIST
published a call for algorithms

8
00:00:37.720 --> 00:00:44.060 
and asked who has the best idea, who
can propose the best algorithm

9
00:00:44.430 --> 00:00:51.410 
to be the successor of, to provide a
successor of the DES encryption method.

10
00:00:53.280 --> 00:00:56.330 
They published a number
of requirements.

11
00:00:56.770 --> 00:01:00.700 
So they fixed that it
should be a block cipher,

12
00:01:01.190 --> 00:01:04.930 
that it should be
well documented,

13
00:01:05.900 --> 00:01:10.100 
it should come with the reference
implementation also to have

14
00:01:10.100 --> 00:01:13.510 
a feeling not only to look into
the theoretical algorithm but

15
00:01:13.510 --> 00:01:16.930 
also get a feeling about
implementation issues.

16
00:01:17.710 --> 00:01:19.960 
But this time the
block length was

17
00:01:20.890 --> 00:01:24.040 
to insist on a block length of
one hundred twenty eight bit,

18
00:01:24.770 --> 00:01:32.370 
and they proposed that the key length is
no more fixed. So they asked for three

19
00:01:32.680 --> 00:01:36.590 
possible key lengths - one hundred
twenty eight, one hundred

20
00:01:37.190 --> 00:01:42.930 
ninety two and two hundred fifty
six, so that when next time

21
00:01:42.960 --> 00:01:46.600 
the development of the computers
and the cracking hardware

22
00:01:46.870 --> 00:01:50.770 
becomes so fast that a key length
one hundred twenty eight

23
00:01:51.070 --> 00:01:55.480 
is no more enough, then one does
not have to change the algorithm

24
00:01:55.480 --> 00:02:01.040 
at all but only tells the users
now you can use the algorithm

25
00:02:01.040 --> 00:02:04.730 
but in future only
with larger keys.

26
00:02:05.370 --> 00:02:09.690 
Then it should be equally
feasible in hardware as well

27
00:02:10.230 --> 00:02:17.810 
in software designed and definitely it
should be more efficient and triple DES.

28
00:02:18.240 --> 00:02:22.490 
Three times sequential
application of the DES

29
00:02:24.040 --> 00:02:29.650 
and they insist that it is
no license fee necessary

30
00:02:30.230 --> 00:02:35.170 
all over the world. And
in this competition,

31
00:02:36.340 --> 00:02:38.260 
there was a winner Rijndael.

32
00:02:39.160 --> 00:02:44.950 
This was an algorithm and the name
was formed from the two designer

33
00:02:45.160 --> 00:02:50.790 
from the University of
Bruges in Belgium and

34
00:02:51.250 --> 00:02:55.550 
Vincent Rijmen and Joan
Daemen, they designed it.

35
00:02:56.250 --> 00:02:57.830 
Their proposal, the

36
00:02:59.540 --> 00:03:05.500 
Rijndael encryption algorithm proposal
has variable blocks and key lengths

37
00:03:05.720 --> 00:03:08.690 
with a different number one
hundred twenty eight, one hundred

38
00:03:08.690 --> 00:03:15.520 
sixty, one hundred ninety two. So more than it
was requested by the NIST organization

39
00:03:15.890 --> 00:03:23.440 
and it was fast, it was simple, needed a
little space. So it provided a modern

40
00:03:23.680 --> 00:03:27.140 
symmetric and very secure
encryption method.

41
00:03:28.760 --> 00:03:34.650 
Then this algorithm, this encryption
algorithm was standardized

42
00:03:35.180 --> 00:03:39.630 
under the name AES - the
advanced encryption standard.

43
00:03:40.630 --> 00:03:45.280 
Here is the idea how
the AES is working.

44
00:03:45.770 --> 00:03:51.130 
We have our input text, the plaintext
bits and we have the key.

45
00:03:51.840 --> 00:03:55.950 
And from the original
key many other keys

46
00:03:56.580 --> 00:04:02.340 
for each round one are derived. This
is a similar idea like in the

47
00:04:02.810 --> 00:04:08.310 
DES algorithm. Then this round
key and the block of the

48
00:04:09.440 --> 00:04:17.260 
input string they are XOR and then the
result is encrypted by bit operations.

49
00:04:17.570 --> 00:04:21.980 
So the real encryption happens
here by replacing and moving

50
00:04:21.980 --> 00:04:27.900 
around the bit sequence and
input round. So mixing the bits

51
00:04:27.910 --> 00:04:33.900 
of the input block in such a way that
the original block can no more be derived.

52
00:04:34.330 --> 00:04:38.130 
And then this is repeated,
this round computation

53
00:04:38.660 --> 00:04:44.020 
in several rounds and then finally
one gets the ciphertext. You see

54
00:04:44.320 --> 00:04:50.330 
the intellectual approach is very
similar to the DES but now it's more

55
00:04:50.460 --> 00:04:54.730 
sophisticated to reach
higher security.

56
00:04:55.640 --> 00:04:59.520 
So here is an example.
When we encrypt the

57
00:05:00.010 --> 00:05:06.940 
plaintext secure communication. When we
encrypt this with new AES algorithms,

58
00:05:07.620 --> 00:05:13.910 
then the result
we need a key password

59
00:05:14.640 --> 00:05:20.460 
and when we use
password as a key and when we

60
00:05:20.460 --> 00:05:23.850 
use password1 as a key,
so similar passwords

61
00:05:24.380 --> 00:05:27.620 
for the same plaintext
results in very different

62
00:05:28.080 --> 00:05:31.170 
in very different cipher text.

63
00:05:32.690 --> 00:05:39.930 
So in comparison to classic methods,
similar keys are producing extremely

64
00:05:40.160 --> 00:05:46.900 
unique results. What about the
performance? This was an important request

65
00:05:47.220 --> 00:05:52.410 
because this method should be applied
for a huge amount of information.

66
00:05:52.640 --> 00:05:59.490 
You know today the communication
data types transported

67
00:05:59.490 --> 00:06:01.310 
through the internet

68
00:06:02.210 --> 00:06:07.080 
become more and more video data which
were very large amounts of data.

69
00:06:07.640 --> 00:06:13.620 
So the performance of AES is many
times faster than that of DES algorithm.

70
00:06:15.180 --> 00:06:18.770 
So with block length two hundred
fifty six bit and key length

71
00:06:18.770 --> 00:06:24.010 
one hundred ninety two bit, a four core
computer with three point four GHz

72
00:06:25.760 --> 00:06:31.780 
can encrypt more than thousand
megabyte within a second.

73
00:06:32.380 --> 00:06:35.180 
Another advantage
is that the AES algorithm

74
00:06:36.240 --> 00:06:41.260 
can be easily parallelized and this
of course helps to speed up

75
00:06:42.580 --> 00:06:44.190 
the encryption.

76
00:06:45.410 --> 00:06:49.420 
It is easy to implement
in hardware because

77
00:06:49.980 --> 00:06:54.580 
like in the case of DES only very
simple operations XOR, cyclic shifts

78
00:06:55.120 --> 00:07:02.450 
are used and the operations can
efficiently computed by

79
00:07:02.560 --> 00:07:05.960 
eight bit processors. This is
important that this also can

80
00:07:05.960 --> 00:07:09.620 
be performed on small
machines, on smart devices

81
00:07:10.060 --> 00:07:17.940 
and even on smart cards. So AES, this is
a new standard. Very efficient but

82
00:07:18.210 --> 00:07:19.890 
of course much
more complicated

83
00:07:20.490 --> 00:07:26.530 
algorithm than DES. But the implementations are
available and we, as user of the internet,

84
00:07:27.050 --> 00:07:32.060 
we can apply this, or algorithms
automatically applied when we

85
00:07:32.060 --> 00:07:36.670 
want to secure our information
and send confidential messages.
