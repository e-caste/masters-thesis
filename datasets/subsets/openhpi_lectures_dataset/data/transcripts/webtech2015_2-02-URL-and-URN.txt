WEBVTT

1
00:00:05.580 --> 00:00:10.590 
URL in more detail and let's have a short view also on URNs.

2
00:00:11.980 --> 00:00:17.230 
Uniform resource locator they specify the exact address of a

3
00:00:17.620 --> 00:00:22.020 
resource in the world wide web. The address of the place where this

4
00:00:22.350 --> 00:00:27.850 
resource is located and it's important that it's valid in a certain point

5
00:00:28.180 --> 00:00:34.590 
in time. The URL syntax described in RFC 1738, 1808

6
00:00:35.250 --> 00:00:39.830 
follows of course the URI syntax.

7
00:00:40.380 --> 00:00:42.610 
Prefix column Suffix.

8
00:00:43.370 --> 00:00:46.970 
Here in the case of URL prefix gives

9
00:00:48.760 --> 00:00:55.210 
scheme and the suffix contains the so-called scheme specific part

10
00:00:55.480 --> 00:00:56.530 
and parameter.

11
00:00:58.410 --> 00:01:03.790 
A number of possible schemes for example ftp here is

12
00:01:05.020 --> 00:01:11.330 
an example HTTP is another protocol and is another scheme that's

13
00:01:11.330 --> 00:01:18.720 
possible in a URL HTTPS secure version of HTTPS rtsp

14
00:01:19.570 --> 00:01:23.970 
is a real time streaming protocol is a scheme that's possible

15
00:01:24.230 --> 00:01:29.450 
there are more for example mail to electronic mail address news

16
00:01:30.540 --> 00:01:37.810 
nntp use net news wire nntp access telnet is another scheme magnet

17
00:01:38.230 --> 00:01:44.090 
resource in a peer to peer network file hosts specific file names.

18
00:01:44.490 --> 00:01:48.200 
These are schemes that are nowadays in place.

19
00:01:49.160 --> 00:01:55.480 
But the growing number of services makes a permanent adaptability and expansion

20
00:01:56.260 --> 00:02:02.120 
of the web browsers necessary and there is register,

21
00:02:04.420 --> 00:02:08.400 
for this register the iana is responsible

22
00:02:09.370 --> 00:02:14.140 
and there a complete list is given of URL

23
00:02:14.660 --> 00:02:19.170 
schemes which are in place here is the URL.

24
00:02:22.320 --> 00:02:29.450 
Beside of the scheme the suffix of URL describes the scheme specific part.

25
00:02:30.420 --> 00:02:34.730 
And here is the syntax of this scheme specific part

26
00:02:35.130 --> 00:02:38.900 
and you have to read it in a way that the square brackets

27
00:02:39.370 --> 00:02:42.170 
indicate parts that are optional

28
00:02:43.280 --> 00:02:48.900 
so the only non optional parts the mandatory parts are two

29
00:02:48.900 --> 00:02:49.990 
slash in the beginning,

30
00:02:50.700 --> 00:02:55.010 
then the host and then / path.

31
00:02:56.100 --> 00:03:01.990 
This path is belong to every scheme specific part.

32
00:03:02.880 --> 00:03:06.770 
But it is possible to extensive, for example it is possible

33
00:03:06.770 --> 00:03:10.110 
to extend the host by a port.

34
00:03:11.350 --> 00:03:17.930 
Port column port. It is possible to describe and to point to

35
00:03:18.960 --> 00:03:22.730 
a user at and then comes the host.

36
00:03:23.690 --> 00:03:28.190 
It is even possible to add a password to the user.

37
00:03:29.460 --> 00:03:32.960 
And if we look to the part if

38
00:03:33.710 --> 00:03:38.820 
which can follows the path then it is possible to have to

39
00:03:38.820 --> 00:03:41.640 
start with the question mark to have a query spring,

40
00:03:42.090 --> 00:03:46.180 
and it's also possible to have a fragment.

41
00:03:46.940 --> 00:03:53.180 
This are optional entries non optional slash slash host slash path.

42
00:03:54.780 --> 00:03:59.470 
So the user only is useful in the case of access limitation

43
00:03:59.870 --> 00:04:04.780 
to the resource. Password is for authentication of a user.

44
00:04:05.590 --> 00:04:10.930 
The host name is a complete qualifying name of the IP address.

45
00:04:12.120 --> 00:04:16.670 
Web is service in the internet so we have to characterize,

46
00:04:17.290 --> 00:04:22.620 
we have to indicate the place where the resource is located

47
00:04:22.960 --> 00:04:25.790 
by means of the ip address of this server.

48
00:04:26.550 --> 00:04:27.900 
Then it's possible

49
00:04:29.590 --> 00:04:36.050 
to give support name port for the connection to be established and usually

50
00:04:36.230 --> 00:04:41.460 
for many of the services already determined so it's not necessary to

51
00:04:41.670 --> 00:04:44.330 
give this port name because it is fixed.

52
00:04:45.280 --> 00:04:50.390 
Then we have a pause name beside of the host names a pause name is mandatory

53
00:04:50.690 --> 00:04:56.520 
it specifies how to access a resource at the specified host

54
00:04:56.810 --> 00:04:58.990 
with the specified service.

55
00:04:59.910 --> 00:05:05.360 
Then it is possible to give a query string it's a parameter or parameters

56
00:05:05.550 --> 00:05:10.140 
as key-value pairs for server-side applications for example

57
00:05:10.330 --> 00:05:15.210 
in this way we can send keywords to a search machine.

58
00:05:16.160 --> 00:05:21.540 
For example if we want to know more about this word. And then finally

59
00:05:22.010 --> 00:05:24.660 
also optionally a fragment identifier

60
00:05:25.350 --> 00:05:29.410 
label for addressing inside a requested resource.

61
00:05:30.440 --> 00:05:34.030 
These are the scheme specific parts of a URL.

62
00:05:35.760 --> 00:05:41.390 
I mentioned already that RFCs are used to describe that scheme and also

63
00:05:41.680 --> 00:05:46.630 
as there are many RFCs dealing with the URL scheme,

64
00:05:47.580 --> 00:05:51.210 
and what is the problem not only in this case but in this case

65
00:05:51.210 --> 00:05:54.620 
we want to discuss it in more detail is, that sometimes the

66
00:05:54.620 --> 00:06:01.540 
different RFCs are contradicting or deprecate a priori versions

67
00:06:02.520 --> 00:06:07.410 
or even definitions in the same RFC and I will give some examples.

68
00:06:08.220 --> 00:06:11.990 
So for example the user part in a URL.

69
00:06:13.190 --> 00:06:19.260 
There are different descriptions in the RFCs which are contradictory.

70
00:06:19.440 --> 00:06:25.380 
For example RFC 1738 defines a common pattern for the scheme

71
00:06:25.510 --> 00:06:30.680 
specific part of you else. Here it is given with the user.

72
00:06:33.380 --> 00:06:35.680 
In summary the username

73
00:06:36.300 --> 00:06:40.560 
the password support and the path are optional components.

74
00:06:41.670 --> 00:06:48.420 
URL starting with slash slash follow a common internet scheme syntax.

75
00:06:48.920 --> 00:06:52.630 
And this is not exactly defined

76
00:06:53.910 --> 00:06:59.160 
to be more precise there are different definitions in the different RFCs.

77
00:07:00.970 --> 00:07:08.360 
So for example the empty password, empty password or no password are being

78
00:07:08.730 --> 00:07:11.090 
denoted and handled differently.

79
00:07:11.930 --> 00:07:17.360 
And this is described here in the RFC 1738.

80
00:07:18.170 --> 00:07:26.780 
The problem is valid values for the user part are user column password at host.

81
00:07:28.360 --> 00:07:32.560 
Here username and password specified then user column

82
00:07:33.780 --> 00:07:40.870 
@ host no possible needed at all and user without column user at host,

83
00:07:41.010 --> 00:07:44.390 
user will be prompted for password later.

84
00:07:45.460 --> 00:07:50.290 
And finally we have a slash slash @ host

85
00:07:50.780 --> 00:07:56.080 
empty username will prompt for password. You see there are different

86
00:07:56.870 --> 00:08:03.500 
sometimes contradictory reactions possible so be careful with

87
00:08:03.500 --> 00:08:07.960 
the description in the RFCs what at the end is important how

88
00:08:07.960 --> 00:08:12.980 
is a browser deal with that situation. Because in the browsers

89
00:08:13.020 --> 00:08:14.620 
they have to exactly

90
00:08:15.580 --> 00:08:20.870 
show a reaction if some URL is specified and at the end this

91
00:08:20.870 --> 00:08:24.790 
reaction of the browser is determining what's going on.

92
00:08:26.550 --> 00:08:32.970 
If we look to RFC1738 then on page six

93
00:08:33.720 --> 00:08:38.100 
it repeats on confirms the use apart for the ftp protocol

94
00:08:38.620 --> 00:08:45.750 
and on page eight is the same document is this client it for HTTP.

95
00:08:46.230 --> 00:08:49.250 
So if you read this in detail you will see

96
00:08:49.680 --> 00:08:54.690 
that even though many browsers support username and password in HTTP

97
00:08:55.150 --> 00:08:56.080 
URLs or

98
00:08:59.870 --> 00:09:04.560 
informal version this pattern has never been part of the standard

99
00:09:04.560 --> 00:09:06.560 
for HTTP or URLs.

100
00:09:08.160 --> 00:09:13.740 
So what we see is a browser provide a standard regardless whether

101
00:09:13.740 --> 00:09:19.100 
it is fixed in an RFC or not say provided the factor in reality

102
00:09:19.280 --> 00:09:25.260 
because the browsers have to react on URL as a given and how browsers

103
00:09:25.470 --> 00:09:31.090 
are reacting, at the end describes what's going on and how to use

104
00:09:31.390 --> 00:09:37.300 
URL. This is called the facto standard and we see this in many areas

105
00:09:37.690 --> 00:09:40.640 
that in a way a certain thing is implemented.

106
00:09:42.410 --> 00:09:46.190 
The way it is described how this element can be used.

107
00:09:49.040 --> 00:09:54.290 
Finally see RFC3986

108
00:09:55.680 --> 00:09:57.080 
from two thousand four

109
00:09:58.010 --> 00:10:02.940 
the use of username and password in the user part of URL

110
00:10:03.190 --> 00:10:05.970 
due to security concerns.

111
00:10:06.590 --> 00:10:09.640 
You can read on page seventeen the following,

112
00:10:10.180 --> 00:10:14.010 
and indeed it's true HTTP and ftp traffic

113
00:10:14.470 --> 00:10:21.910 
are typically in an encrypted way. So passwords in the URL would be transferred

114
00:10:22.070 --> 00:10:26.410 
as plaintext and could be even dropped by everyone who has

115
00:10:26.410 --> 00:10:31.560 
access to the web. Although storing such else including passwords

116
00:10:31.560 --> 00:10:33.000 
as a bookmark in the browser

117
00:10:34.360 --> 00:10:39.150 
also in plain text would be even less secure then living on

118
00:10:39.810 --> 00:10:41.860 
a sticky note at the screen.

119
00:10:42.670 --> 00:10:49.530 
So you see the user part is some thing which is not yet clear

120
00:10:49.530 --> 00:10:56.790 
defined in the RFCS and in reality we have to see how browsers are reacting.

121
00:10:57.680 --> 00:11:01.990 
But it's not only the user part here's a second example with the host

122
00:11:02.170 --> 00:11:04.160 
and the past components.

123
00:11:06.380 --> 00:11:10.460 
RFC1738 the slash has to be

124
00:11:10.970 --> 00:11:15.090 
written between the host and the path. This is mandatory.

125
00:11:15.640 --> 00:11:21.650 
Here you can see this in the example so this is for example not valid

126
00:11:21.970 --> 00:11:27.030 
because this description is not valid because the slash is missing.

127
00:11:27.690 --> 00:11:31.590 
but if you know in practice you can type in this to the browser

128
00:11:31.590 --> 00:11:33.350 
and the browser will exactly find

129
00:11:34.060 --> 00:11:36.180 
our openHPI webpage.

130
00:11:37.280 --> 00:11:40.480 
Also here what's a must from the standards

131
00:11:41.430 --> 00:11:45.620 
in the implementation of the browsers and not a must.

132
00:11:46.930 --> 00:11:53.240 
If we look to RFC3986 the slash belongs to path

133
00:11:53.720 --> 00:11:56.220 
and is optional for empty path.

134
00:11:57.120 --> 00:12:00.810 
That means both variants are valid.

135
00:12:01.680 --> 00:12:08.020 
Snother example is about which characters are load in ftp worlds.

136
00:12:10.280 --> 00:12:13.070 
Concerning our RFC1738,

137
00:12:13.530 --> 00:12:19.470 
all characters after the last slash are interpreted as the file name.

138
00:12:20.340 --> 00:12:22.530 
It means for example if we look to the

139
00:12:23.230 --> 00:12:29.850 
URL that this would refer to a file with the name download ZIP

140
00:12:29.990 --> 00:12:32.270 
question mark Q equal twenty.

141
00:12:35.160 --> 00:12:41.810 
RFC3986 on page twelve defines question mark

142
00:12:42.130 --> 00:12:49.250 
and equal as equal to sign as reserved characters, reserved

143
00:12:49.250 --> 00:12:52.740 
characters which cannot be used within a past component.

144
00:12:53.550 --> 00:13:01.180 
So then thus means that we have in this URL the description of the file

145
00:13:01.420 --> 00:13:03.270 
ending with the question mark.

146
00:13:04.130 --> 00:13:08.170 
So in summary of the definitions can be contradictory

147
00:13:08.670 --> 00:13:14.290 
the currently valid definition may be hard to find implementation,

148
00:13:14.530 --> 00:13:20.610 
may differ from the standard, and at the end the implementation describes what's possible,

149
00:13:20.860 --> 00:13:23.690 
and what's not impossible and how to use this.

150
00:13:26.810 --> 00:13:31.220 
When we speak about URLS it's important also to speak about

151
00:13:31.370 --> 00:13:36.270 
a relative URLS besides the absolute URLS

152
00:13:37.560 --> 00:13:38.970 
else we spoke about,

153
00:13:40.760 --> 00:13:43.750 
they are also relative

154
00:13:44.470 --> 00:13:49.390 
URLS. For example here with our causes slash web tech

155
00:13:49.810 --> 00:13:53.280 
to twenty fifteen.

156
00:13:54.720 --> 00:13:59.500 
Relative URLS lack a scheme and a domain part.

157
00:14:00.080 --> 00:14:04.580 
Though they are used to shortly describe our source they only

158
00:14:04.580 --> 00:14:08.840 
consist of path query string and fragment identifier.

159
00:14:10.150 --> 00:14:15.490 
To be able to interpret such relative URLS they must be used

160
00:14:15.490 --> 00:14:20.300 
within the context of an embedded resource, an embedded resource

161
00:14:20.360 --> 00:14:22.050 
with an absolute URL.

162
00:14:23.170 --> 00:14:26.520 
A hyperlinks on a web page with relative URLS

163
00:14:28.180 --> 00:14:33.150 
as target inherent to missing parts of the web page they belong to.

164
00:14:34.080 --> 00:14:36.470 
This is important they are completed by

165
00:14:37.200 --> 00:14:43.050 
a URL of the web page within these relative URLS are used.

166
00:14:44.270 --> 00:14:49.530 
For the above example here is our causes webtech2015

167
00:14:50.030 --> 00:14:53.380 
the openHPI calls list is found as

168
00:14:54.540 --> 00:15:03.290 
HTTPS openHPI DE slash causes and clicking the cause details link

169
00:15:03.760 --> 00:15:08.470 
for the web technologies calls would resolve the relative URL

170
00:15:08.850 --> 00:15:12.020 
courses slash webtech2015

171
00:15:15.240 --> 00:15:19.100 
would resolve this in HTTPS

172
00:15:19.740 --> 00:15:26.020 
collom slash slash openHPI dot de slash courses because it's used

173
00:15:26.130 --> 00:15:29.680 
inside this webpage with this URL.

174
00:15:33.560 --> 00:15:36.010 
We mention that besides the URL

175
00:15:36.680 --> 00:15:41.610 
a uniform resource identifier can also have the nature of an

176
00:15:41.790 --> 00:15:43.750 
uniform resource name.

177
00:15:45.940 --> 00:15:48.570 
See prefix also the

178
00:15:49.230 --> 00:15:56.490 
URI and the URN follow the same syntax so there is and prefix column suffix

179
00:15:58.020 --> 00:16:05.280 
prefix tells whether a URI specifies an URL or an URN.

180
00:16:06.210 --> 00:16:10.870 
Today URN ends are rarely supported.

181
00:16:13.650 --> 00:16:18.320 
Only a few examples very few examples and one is from the german national library,

182
00:16:18.860 --> 00:16:24.920 
the HTTP column slice slash nbn minus resolving de.

183
00:16:26.690 --> 00:16:34.540 
tHE resource example is URN a column nbn a column de column

184
00:16:35.240 --> 00:16:40.940 
kobv column 11 minus 100 2837.

185
00:16:42.010 --> 00:16:48.100 
This has the following meaning URNshows that it is in uniform resource name

186
00:16:48.450 --> 00:16:52.340 
the nbn points to the national

187
00:16:53.380 --> 00:16:58.230 
bibliography number the de points to germany

188
00:17:00.030 --> 00:17:04.980 
and kobv points to the library of the homered university in Berlin,

189
00:17:05.480 --> 00:17:13.750 
and then the acta el document may be accessed wire the HTTPS and nbn

190
00:17:13.860 --> 00:17:19.920 
minus reserving org and then the resource is described. This shows

191
00:17:20.040 --> 00:17:23.130 
how z and name is resolved.

192
00:17:24.080 --> 00:17:28.360 
But I already mentioned such URN ends are very uncommon there

193
00:17:28.360 --> 00:17:34.450 
are only a few examples and the problem is there is an world wide unique

194
00:17:34.630 --> 00:17:38.750 
and permanent identification of the information resources

195
00:17:40.290 --> 00:17:46.460 
would be needed and is not in place there are some URN and name spaces

196
00:17:47.280 --> 00:17:52.140 
that are in place, and here is a list URL

197
00:17:52.570 --> 00:17:54.640 
with a list which is

198
00:17:56.440 --> 00:18:01.520 
iana responsible for which shows which URN and name spaces

199
00:18:01.940 --> 00:18:04.270 
can be used today.
