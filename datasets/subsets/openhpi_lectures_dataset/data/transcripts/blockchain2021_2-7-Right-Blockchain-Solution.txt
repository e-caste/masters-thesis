WEBVTT

1
00:00:01.010 --> 00:00:05.870 
In our openHPI course "Blockchain- Revealing the myth", now we want to discuss

2
00:00:05.990 --> 00:00:10.519 
when to use the blockchain solution for what kind of

3
00:00:10.520 --> 00:00:14.300 
application and in what variant.

4
00:00:15.350 --> 00:00:19.516 
To do such a fact check, let's remind what we did up

5
00:00:19.790 --> 00:00:24.655 
to now, we have learned the technical aspects of blockchain technology,

6
00:00:24.770 --> 00:00:28.445 
we understood what was the original problem, what was the original idea and

7
00:00:29.390 --> 00:00:34.099 
how these developed techniques help to solve

8
00:00:34.190 --> 00:00:38.420 
these problems. We have been following a step by step approach,

9
00:00:38.840 --> 00:00:42.860 
explored to ideas from the Bitcoin concept first,

10
00:00:43.280 --> 00:00:45.920 
we have developed the definition of blockchain-based

11
00:00:47.750 --> 00:00:52.179 
system. Then we have reflected our definition

12
00:00:52.180 --> 00:00:56.749 
and we have considered the Ethereum system as a blockchain

13
00:00:56.750 --> 00:00:58.850 
2.0 solution.

14
00:00:59.030 --> 00:01:01.640 
We considered the blockchain evolution.

15
00:01:02.090 --> 00:01:05.128 
We contrasted what we have learned with so-called alternatives

16
00:01:07.400 --> 00:01:11.899 
of blockchain technology and the challenges that have led

17
00:01:11.990 --> 00:01:14.780 
to these different variants and alternatives.

18
00:01:15.230 --> 00:01:18.023 
And now we are ready to make a sober look at the possible

19
00:01:19.970 --> 00:01:23.599 
areas of application of blockchain technology.

20
00:01:24.950 --> 00:01:27.155 
So let's start,  please consider an arbitrary

21
00:01:29.510 --> 00:01:33.979 
application, an application that has a large number

22
00:01:33.980 --> 00:01:38.599 
of users, which has parties that want

23
00:01:38.600 --> 00:01:43.339 
to interact with each other and very important they do not

24
00:01:43.340 --> 00:01:44.409 
trust each other.

25
00:01:45.590 --> 00:01:50.060 
And the question is which application needs what kind of

26
00:01:50.240 --> 00:01:51.319 
blockchain solution?

27
00:01:54.900 --> 00:01:59.040 
To this end, one has to look to the requirements

28
00:02:00.330 --> 00:02:04.709 
that are fulfilled, is it, to get a robust and highly efficient solution,

29
00:02:05.590 --> 00:02:09.000 
then for the trilemma, we know that they are

30
00:02:10.080 --> 00:02:12.059 
limited user permissions.

31
00:02:13.110 --> 00:02:17.819 
So the decentralization needs to be decreased

32
00:02:17.820 --> 00:02:22.319 
or do we look for a robust solution

33
00:02:22.500 --> 00:02:25.779 
without intermediaries and the central authority.

34
00:02:26.430 --> 00:02:28.145 
So in our trilemma, a decentralized

35
00:02:30.900 --> 00:02:35.370 
and secure systems, but with less efficiency.

36
00:02:37.070 --> 00:02:41.389 
We have considered different variants, we have private blockchains, we have

37
00:02:41.390 --> 00:02:46.189 
non-blockchain based systems, blockchain

38
00:02:46.190 --> 00:02:49.830 
based distribution system, non-blockchain based centralized solution.

39
00:02:50.930 --> 00:02:55.382 
So let's consider in view of our first alternative, the

40
00:02:56.540 --> 00:02:59.310 
system should be scalable and secure what

41
00:03:03.320 --> 00:03:04.509 
we have to take into account.

42
00:03:05.360 --> 00:03:07.271 
So a private permission blockchain, for

43
00:03:09.830 --> 00:03:14.630 
example, proof of authority, a group of trustworthy validators,

44
00:03:14.930 --> 00:03:18.319 
that take care of the security of the system.

45
00:03:18.800 --> 00:03:22.460 
So it's no more the originally peer to peer solution.

46
00:03:22.790 --> 00:03:27.199 
If we work on such an alternative, then the non-blockchain

47
00:03:27.920 --> 00:03:31.189 
based distributed system are fine.

48
00:03:31.940 --> 00:03:35.223 
So it's a distributed database system or solutions such as a web of

49
00:03:36.410 --> 00:03:40.990 
trust would work. So it's not necessary to work with

50
00:03:41.000 --> 00:03:45.530 
a blockchain based solution in that point, and with

51
00:03:45.770 --> 00:03:49.610 
regard to the energy need of a blockchain solution,

52
00:03:50.420 --> 00:03:55.009 
it makes sense to think about alternatives even

53
00:03:55.180 --> 00:03:58.365 
in the moment blockchain is very high up and everyone is speaking

54
00:03:59.690 --> 00:04:04.129 
about. You could also think about a centralized system

55
00:04:04.450 --> 00:04:08.710 
with a central issue is the trust,

56
00:04:08.970 --> 00:04:12.340 
the trust it needs to be placed in that party.

57
00:04:12.680 --> 00:04:16.970 
So, for example, you can work with a public key infrastructure

58
00:04:17.269 --> 00:04:20.149 
as we do this in many areas of computer science.

59
00:04:20.630 --> 00:04:25.069 
When we consider the second alternative, when we have an

60
00:04:25.070 --> 00:04:29.779 
application where decentralization and security is very important,

61
00:04:30.350 --> 00:04:34.519 
then the following approaches would meet the requirements,

62
00:04:35.740 --> 00:04:38.205 
the public permission-less blockchain.

63
00:04:39.860 --> 00:04:43.840 
Then when one decides to base

64
00:04:44.520 --> 00:04:48.949 
the system on a public permission blockchain, then one has to define

65
00:04:49.220 --> 00:04:53.269 
additional criteria. For example, the cost-benefit ratio.

66
00:04:53.750 --> 00:04:58.170 
The size of the system, the existence of separate

67
00:04:58.500 --> 00:04:59.689 
IT teams and other.

68
00:05:00.410 --> 00:05:04.790 
And based on this, one needs to decide

69
00:05:04.940 --> 00:05:07.537 
whether an existing solution should be used or an own

70
00:05:09.380 --> 00:05:14.029 
solution should be developed, whether one can use

71
00:05:14.030 --> 00:05:18.649 
for an application an existing blockchain solution or one

72
00:05:18.650 --> 00:05:20.689 
has to create an own one.

73
00:05:21.380 --> 00:05:24.696 
Next question one has to answer concerns the actual objective

74
00:05:26.150 --> 00:05:27.650 
of the application.

75
00:05:29.840 --> 00:05:33.630 
So what is the objective of your application?

76
00:05:34.700 --> 00:05:38.815 
Is it focused on a state or more precisely, the

77
00:05:41.660 --> 00:05:44.159 
possession of values which must be securely ordered

78
00:05:46.130 --> 00:05:50.720 
and locked? Or in this case, a simple

79
00:05:50.730 --> 00:05:55.099 
UTXO based blockchain solution is sufficient?

80
00:05:56.240 --> 00:06:00.949 
If the application is more complex, for example, are

81
00:06:00.960 --> 00:06:05.539 
the states of a value or the individual user accounts

82
00:06:05.540 --> 00:06:08.450 
needed to offer greater flexibility?

83
00:06:09.290 --> 00:06:13.759 
Or are the interactions of the users associated with complex

84
00:06:13.760 --> 00:06:18.830 
conditions that are to be automatically controlled and executed?

85
00:06:19.700 --> 00:06:22.844 
Then, of course, an account-based blockchain 2.0

86
00:06:24.590 --> 00:06:26.929 
solution is the better choice.

87
00:06:28.400 --> 00:06:30.899 
On the basis of such kind of consideration, one has

88
00:06:33.170 --> 00:06:37.910 
to decide for the right blockchain variant, blockchain solution

89
00:06:38.180 --> 00:06:39.949 
to its application.

90
00:06:41.720 --> 00:06:46.015 
The account based blockchain 2.0 applications enable the

91
00:06:46.303 --> 00:06:50.209 
system to act as a large, decentralized computer.

92
00:06:50.950 --> 00:06:55.700 
This is a very important consideration and the big step

93
00:06:56.980 --> 00:07:01.760 
evolution that between blockchain 1.0 and 2.0

94
00:07:02.300 --> 00:07:07.490 
that one can create a large, decentralized computer with millions

95
00:07:07.820 --> 00:07:10.070 
of autonomous objects.

96
00:07:10.370 --> 00:07:14.809 
You remember, without anomalous objects that are called

97
00:07:14.870 --> 00:07:16.069 
the smart contracts.

98
00:07:17.150 --> 00:07:21.739 
By means of such smart contracts, then one can create any complex

99
00:07:21.740 --> 00:07:22.740 
application.

100
00:07:24.150 --> 00:07:28.400 
Such so-called decentralized application or dApps

101
00:07:29.340 --> 00:07:32.035 
for short can be controlled and used in a decentralized

102
00:07:34.230 --> 00:07:37.428 
manner without further intermediaries.

103
00:07:38.610 --> 00:07:43.410 
More complex smart contracts can represent the so-called decentralized

104
00:07:43.770 --> 00:07:46.171 
autonomous organization, the DAO, whose functions

105
00:07:48.480 --> 00:07:52.630 
are executed automatically depending on predefined conditions.

106
00:07:53.340 --> 00:07:57.779 
So whole enterprises could be based on

107
00:07:57.780 --> 00:08:02.249 
that kind of solution of a complex system

108
00:08:04.170 --> 00:08:08.659 
blockchain 2.0 system with smart contracts.

109
00:08:10.070 --> 00:08:14.749 
So in summary, whether you need a highly scalable or

110
00:08:14.750 --> 00:08:19.309 
a decentralized solution depends on the specific

111
00:08:19.310 --> 00:08:21.540 
problem to be solved.

112
00:08:21.560 --> 00:08:26.029 
There is no blockchain solution that

113
00:08:26.030 --> 00:08:27.959 
fits to all requirement.

114
00:08:28.850 --> 00:08:31.070 
So it is necessary to contrast

115
00:08:33.650 --> 00:08:38.450 
the focus of the intended application with the possibilities of the respective

116
00:08:38.780 --> 00:08:40.129 
technological solution.

117
00:08:41.120 --> 00:08:42.688 
And only then when it's ready to

118
00:08:45.740 --> 00:08:49.060 
make a decision, which of the blockchain

119
00:08:50.810 --> 00:08:54.945 
itself could be a basis of solution and when blockchain

120
00:08:55.280 --> 00:08:59.085 
could be a basis of solution which variant and which type of blockchain

121
00:09:00.170 --> 00:09:04.210 
should be used to

122
00:09:04.650 --> 00:09:09.619 
serve that application. Choosing between an existing model or an individual solution

123
00:09:09.620 --> 00:09:14.059 
is the next question. So there are numerous consortia

124
00:09:14.060 --> 00:09:18.022 
and projects that have emerged in the last year

125
00:09:19.320 --> 00:09:24.190 
that support other companies in developing, in testing and in providing

126
00:09:24.210 --> 00:09:25.869 
blockchain-based applications.

127
00:09:26.720 --> 00:09:29.709 
There are multiple application areas, which already have been

128
00:09:31.340 --> 00:09:35.015 
conquered by blockchain technology and more and more companies have already

129
00:09:36.020 --> 00:09:39.919 
made solutions that are tailored to specific areas

130
00:09:41.150 --> 00:09:45.920 
as the source code of many blockchain-based systems is open

131
00:09:45.940 --> 00:09:48.139 
source, so it's publicly available.

132
00:09:48.680 --> 00:09:53.269 
One can freely use it for own blockchain applications

133
00:09:53.750 --> 00:09:55.549 
and adapt it accordingly.

134
00:09:55.970 --> 00:10:00.320 
So the floor is open for you

135
00:10:00.590 --> 00:10:04.220 
to develop your own blockchain solutions.

136
00:10:04.580 --> 00:10:09.019 
But before you have exactly defined what kind

137
00:10:09.020 --> 00:10:13.519 
of requirements need to be fulfilled to be able to

138
00:10:13.520 --> 00:10:18.320 
choose the right blockchain solution or the blockchain variant.
