WEBVTT

1
00:00:01.230 --> 00:00:04.570 
In our OpenHPI course: A
Half Century of Internet,

2
00:00:05.050 --> 00:00:09.630 
without considering more details
Wide Area Networks(WAN)

3
00:00:10.100 --> 00:00:13.470 
We already considered
local area networks.

4
00:00:13.890 --> 00:00:17.480 
Now let's consider
Wide Area Networks.

5
00:00:18.540 --> 00:00:24.260 
These Wide Area Networks are
formed from combining several

6
00:00:24.680 --> 00:00:30.590 
LANs, several Local Area Networks,
connecting them into a single network.

7
00:00:31.250 --> 00:00:35.750 
If we consider how such WANs and
communication in such WANs

8
00:00:36.280 --> 00:00:41.480 
are organized, we learn
a lot about how this

9
00:00:41.960 --> 00:00:46.740 
routing is done in the internet.
So the number of connected

10
00:00:46.740 --> 00:00:53.850 
computers or the number of Local Area
Networks, its geographical extension

11
00:00:54.150 --> 00:00:58.960 
can be adapted to the specific
requirements, there are no limits.

12
00:00:59.550 --> 00:01:06.320 
So the goal of such a Wide Area Network is
to create an apparently uniform network,

13
00:01:06.840 --> 00:01:13.810 
a virtual network or an internet in which
all the end devices of the different

14
00:01:14.000 --> 00:01:20.380 
connected LANs can communicate with
each other over the boundaries of

15
00:01:20.760 --> 00:01:25.950 
a single Local Area Network, over
the boundaries of the single

16
00:01:26.390 --> 00:01:32.660 
networks. So here the principle
of internetworking, we can

17
00:01:33.060 --> 00:01:34.100 
discuss.

18
00:01:36.060 --> 00:01:42.220 
Packet switching is the main task
of communication in any network,

19
00:01:42.480 --> 00:01:47.580 
also in Wide Area Networks. So
let's look at the basic principle

20
00:01:47.580 --> 00:01:51.610 
of data transmission in
such a Wide Area Network

21
00:01:52.380 --> 00:01:57.230 
So the data to be transmitted is
fragmented into packets, we

22
00:01:57.230 --> 00:02:01.270 
already saw this, whether it's a video
or whether it's a short message

23
00:02:01.550 --> 00:02:07.210 
it's fragmented into different
packets and the packets

24
00:02:07.290 --> 00:02:12.040 
are delivered independently from
each other, and the receiver

25
00:02:12.160 --> 00:02:15.800 
at the end if he receive all the
packages belonging to a message

26
00:02:15.820 --> 00:02:19.830 
he has to reconstruct, he has
to connect the package in the

27
00:02:19.830 --> 00:02:27.330 
right way to get the message, he or she
can reconstruct the original message.

28
00:02:28.620 --> 00:02:34.790 
To attach a LAN to a Wide Area
Network, it is connected to the

29
00:02:34.790 --> 00:02:40.260 
Wide Area Network via an
intermediate system.

30
00:02:41.160 --> 00:02:48.130 
This is a Packet Switch or Router, these are
the names of these intermediate systems

31
00:02:48.410 --> 00:02:50.570 
that are specialized
computers.

32
00:02:51.400 --> 00:02:58.530 
Such as Packet Switches that are special
computers that can receive data,

33
00:02:58.880 --> 00:03:04.320 
that have a buffer, that can analyze
the data package and can forward

34
00:03:04.560 --> 00:03:09.740 
the data package and they can do it very
quickly. Many of these things are

35
00:03:09.920 --> 00:03:11.860 
realized in hardware.

36
00:03:12.590 --> 00:03:16.590 
To achieve such high data
transmission rate, because the only

37
00:03:16.590 --> 00:03:20.890 
task of this intermediate system is
to take care of the transmission,

38
00:03:21.170 --> 00:03:24.070 
and to achieve a high
data transmission rate

39
00:03:24.480 --> 00:03:32.980 
the algorithms for defining, for
computing the way, the path

40
00:03:32.980 --> 00:03:40.810 
that has to be taken to the internet, the
algorithms are implemented in hardware.

41
00:03:42.210 --> 00:03:47.870 
So here is such a different
system, we have one network

42
00:03:48.210 --> 00:03:53.320 
a second network-a Local Area Network,
a third Local Area Network, and

43
00:03:53.320 --> 00:03:59.770 
the fourth Local Area Network and these systems
are connected by intermediate systems.

44
00:04:00.150 --> 00:04:05.330 
These are the Packet Switch.
Network-1 is connected via the

45
00:04:05.330 --> 00:04:10.300 
Packet Switch-1, Network-2
is connected to the other

46
00:04:10.570 --> 00:04:16.520 
networks by means of Packet Switch-2,
Packets Switch-3, and Packet Switch-4.

47
00:04:16.880 --> 00:04:22.300 
And how they are connected? This
could be organized in different way

48
00:04:22.640 --> 00:04:27.240 
it depends on the importance,
on the type of data that

49
00:04:27.240 --> 00:04:31.240 
is to be sent. There could be
different connection lines

50
00:04:31.410 --> 00:04:36.680 
with high speed, with higher
bandwidth, with lower bandwidth.

51
00:04:37.100 --> 00:04:42.510 
This is our system and all
together they form a WAN

52
00:04:43.220 --> 00:04:44.480 
A Wide Area Network.

53
00:04:45.700 --> 00:04:49.670 
Now we have to think, how to
address the different computers.

54
00:04:49.670 --> 00:04:54.610 
In each of the LANs, we have a
different addressing scheme.

55
00:04:55.030 --> 00:04:59.840 
And in each of the LANs, the
addressing is unique, each computer

56
00:05:00.380 --> 00:05:05.270 
inside the Local Area Network has
exactly one unique address.

57
00:05:05.710 --> 00:05:10.340 
But when we now want to send
from a computer in Network-1

58
00:05:10.850 --> 00:05:14.340 
a message to a computer
connected to Network-3,

59
00:05:15.360 --> 00:05:21.370 
then we need a new address because
inside the original address

60
00:05:21.470 --> 00:05:27.190 
which is only valid inside the Local
Area Network, it could be that here

61
00:05:27.680 --> 00:05:33.870 
in these two networks, there could be
computers with the same mac address

62
00:05:34.580 --> 00:05:40.870 
so we need a new address scheme
we need a new uniform format

63
00:05:40.910 --> 00:05:46.160 
and a new type of dress addresses
for such wide area networks

64
00:05:46.400 --> 00:05:52.630 
and the idea is to introduce a new
hierarchical addressing scheme

65
00:05:53.590 --> 00:05:57.470 
addressing seem a hierarchical
because there is a prefix

66
00:05:58.380 --> 00:06:00.770 
and there is a suffix

67
00:06:02.020 --> 00:06:09.270 
in the prefix we address the network
there is the the computer belongs to

68
00:06:09.470 --> 00:06:15.980 
and in the suffix we address cn sustained
the system inside said network

69
00:06:16.660 --> 00:06:21.340 
so in this way this way it does not
play it does not cause any problems

70
00:06:21.590 --> 00:06:27.240 
if there are computers in
different networks with the same

71
00:06:27.670 --> 00:06:31.610 
mac addresses the same network
address because they differ

72
00:06:31.610 --> 00:06:36.050 
bows in the address prefix because
as this is a network address

73
00:06:36.460 --> 00:06:43.350 
so if he looked to network one then the
addresses of the computers inside network one

74
00:06:43.700 --> 00:06:47.770 
r is a tuple with
first component one

75
00:06:48.480 --> 00:06:55.390 
this is a prefix this is a name in
our case in number of c a network

76
00:06:55.710 --> 00:07:02.080 
and then in second position there is
the address of c suffixes address

77
00:07:02.410 --> 00:07:07.930 
of c n system inside the network
and here as another example

78
00:07:08.110 --> 00:07:13.200 
we have a network with the name
five and we have computers

79
00:07:13.200 --> 00:07:18.130 
five five rule five three it's not
necessary that they have same numbers

80
00:07:18.350 --> 00:07:24.930 
so we can exactly characterize each computer
in this way inter-connected network

81
00:07:25.270 --> 00:07:29.350 
and then this package switches
are connected a for example

82
00:07:29.490 --> 00:07:31.380 
by a high speed
connection

83
00:07:32.590 --> 00:07:37.920 
and now we have to think
how to compute surpass

84
00:07:38.340 --> 00:07:43.340 
for a package from one network
a from a data package which

85
00:07:43.340 --> 00:07:49.060 
are sent from one computer in one set to
work over this interconnected networks

86
00:07:49.350 --> 00:07:52.110 
to a computer in the
international network

87
00:07:53.100 --> 00:07:56.440 
so is the following, two
situations can occur

88
00:07:57.060 --> 00:08:03.390 
if the data packet prefix of sir
destination address belongs to

89
00:08:03.770 --> 00:08:10.180 
the packet switch, the packet is
forwarded by the packet switch

90
00:08:10.180 --> 00:08:15.160 
to the connected system considering
the suffix address. Then

91
00:08:15.330 --> 00:08:20.450 
its transmission inside
the network, but when

92
00:08:20.880 --> 00:08:25.310 
the prefix of the
receiver is different

93
00:08:25.310 --> 00:08:27.380 
from the prefix
of sender,

94
00:08:27.980 --> 00:08:33.890 
then a neighbouring packet
switch has to send

95
00:08:34.190 --> 00:08:40.620 
to a neighbouring packet switch in
this interconnected networks.

96
00:08:44.600 --> 00:08:48.740 
The problem is how the
packets switch knows

97
00:08:49.410 --> 00:08:53.980 
if it has to transmit the package
to another packet switch

98
00:08:54.240 --> 00:08:59.350 
which is the next? So but how exactly
is the next packet switch computed?

99
00:09:00.070 --> 00:09:06.080 
And the principle is that
is applied in such

100
00:09:06.090 --> 00:09:12.760 
a wide area network, in an internet,
is the so-called next hop forwarding

101
00:09:13.810 --> 00:09:17.030 
with a routing table.

102
00:09:18.300 --> 00:09:25.400 
Here the packet switches have
no information about all the

103
00:09:25.400 --> 00:09:26.980 
routes inside
the network,

104
00:09:27.910 --> 00:09:34.710 
what they know is the situation
around the immediate neighbours.

105
00:09:36.030 --> 00:09:38.810 
So what they do, they
make a decision

106
00:09:39.570 --> 00:09:44.090 
on the basis of a routing table
to which neighbouring packets

107
00:09:44.230 --> 00:09:51.980 
they will send their packets. And
this is the route switching

108
00:09:52.080 --> 00:09:56.120 
up to the end is
every time done

109
00:09:56.790 --> 00:09:58.820 
in computing
the next hop.

110
00:09:59.690 --> 00:10:02.500 
The next station, the
next packet switch

111
00:10:02.900 --> 00:10:07.860 
the packet has to be sent on an
optimal route to the receiver.

112
00:10:10.790 --> 00:10:16.390 
Some remarks are in order.
First is that forwarding

113
00:10:16.850 --> 00:10:21.060 
is completely independent of
the origin of the packet.

114
00:10:22.070 --> 00:10:25.910 
All the package that arrive
in a packet switch

115
00:10:26.430 --> 00:10:27.790 


116
00:10:28.990 --> 00:10:33.280 
they need to be forwarded
to the same computer

117
00:10:34.230 --> 00:10:39.760 
inside the network of networks, they
have to follow the same route

118
00:10:40.460 --> 00:10:44.610 
regardless whether they came this way
or that way to our packet switch.

119
00:10:44.790 --> 00:10:46.250 


120
00:10:46.250 --> 00:10:47.320 


121
00:10:47.480 --> 00:10:53.310 
Now the problem is how to determine
the next hop for a data packet?

122
00:10:54.360 --> 00:11:00.780 
So the next-hop and this is done on
the basis of a data structure,

123
00:11:01.200 --> 00:11:05.640 
the so-called next-hop
table or routing table,

124
00:11:06.950 --> 00:11:10.560 
which is needed by each
of the packet switches.

125
00:11:11.280 --> 00:11:14.740 
Later on we will consider
an example. So here

126
00:11:15.380 --> 00:11:17.680 
the routing

127
00:11:18.450 --> 00:11:23.960 
process is the determination of
the path through the network,

128
00:11:24.520 --> 00:11:27.520 
piece by piece, next
stop by next stop.

129
00:11:28.360 --> 00:11:35.440 
So here we have an example:
we have 3 networks,

130
00:11:35.900 --> 00:11:38.590 
it has our packet switcher, packet
switch 1, packet switch 2,

131
00:11:38.590 --> 00:11:45.140 
packet switch 3 and here is the
next hop table of our packet

132
00:11:45.710 --> 00:11:47.520 
switch 3.

133
00:11:48.740 --> 00:11:54.750 
Into the next hop table, all
the possible addresses occur

134
00:11:55.020 --> 00:12:02.700 
which exist inside the
connected networks.

135
00:12:03.240 --> 00:12:07.570 
There are the computers of network
1, the computers of network 2

136
00:12:07.780 --> 00:12:09.500 
the computers of
networks three.

137
00:12:10.520 --> 00:12:17.090 
You remember this hierarchical address, the
first component is network, the second address

138
00:12:17.280 --> 00:12:20.560 
is the number of the computer
inside the network.

139
00:12:21.180 --> 00:12:28.930 
So for all the computers in
network 1, computer 1,3,5 ,

140
00:12:29.450 --> 00:12:35.880 
packets switcher 3 has to
send the information

141
00:12:36.130 --> 00:12:40.450 
to the cart 1 in the
packet switch 1,

142
00:12:42.440 --> 00:12:46.680 
regardless of whether it's inside
network 1, it's a computer

143
00:12:46.680 --> 00:12:51.200 
1, 3 or 5 all the computers
need to be addressed to

144
00:12:51.200 --> 00:12:53.360 
the packet switcher P1.

145
00:12:54.400 --> 00:12:58.610 
Then we have the computers
belonging on the network

146
00:12:59.080 --> 00:13:02.440 
of the Packet
Switcher 2,

147
00:13:03.780 --> 00:13:09.980 
Then all the data packages
coming from 2 to 3

148
00:13:10.750 --> 00:13:16.970 
have to be sent tp
packet switch 2.

149
00:13:17.970 --> 00:13:22.350 
Whether this package came on this
way or whether this package has

150
00:13:22.350 --> 00:13:28.190 
come from this way, when they need
to be sent to computer to 2

151
00:13:28.320 --> 00:13:31.780 
then they have to be sent
to packet switcher 2 ,

152
00:13:31.880 --> 00:13:36.590 
then packet switcher 2 can
forward them to the computer

153
00:13:36.590 --> 00:13:41.700 
with address 2. And then we have
the final computers, they belong

154
00:13:41.990 --> 00:13:46.180 
to the network of P3.

155
00:13:47.670 --> 00:13:51.510 
So, in that case, a
packet switch need not

156
00:13:51.510 --> 00:13:53.960 
to forwards this packet switch
to another packet swtich.

157
00:13:54.420 --> 00:13:58.640 
The packet switch knows okay
these are computers inside my

158
00:13:58.640 --> 00:14:02.130 
own range and they can
directly deliver the packet.

159
00:14:02.850 --> 00:14:07.460 
So by means of the hierarchical
address there, we have the

160
00:14:07.460 --> 00:14:08.880 
prefix and the suffix

161
00:14:09.570 --> 00:14:12.290 
we can for each of
the packet switch

162
00:14:13.650 --> 00:14:20.280 
get such a table which tells the
system exactly where to forward

163
00:14:20.450 --> 00:14:25.150 
the packages. The first case
is for the 2 interphases. 1

164
00:14:25.160 --> 00:14:29.080 
to packet switch 1 in the
middle, it's to forward

165
00:14:29.080 --> 00:14:33.800 
the packages out to interface
2, the packet switcher

166
00:14:33.800 --> 00:14:39.410 
2 and in the third case they
can be directly delivered.

167
00:14:41.530 --> 00:14:48.490 
Write down the next
hop-table of the

168
00:14:48.600 --> 00:14:50.810 
packet switcher 2 or
packet switcher 1,

169
00:14:51.370 --> 00:14:56.760 
you will realize they are different
from each other in the hop table

170
00:14:57.200 --> 00:15:03.050 
is very specific to each
of the packet switches.

171
00:15:04.520 --> 00:15:07.950 
Now let's consider the
routing algorithms,

172
00:15:08.670 --> 00:15:12.360 
this was a very simple example
we had only three networks,

173
00:15:12.730 --> 00:15:19.520 
we can interconnect hundreds network so
it can be quite complicated to render

174
00:15:19.760 --> 00:15:23.040 
sources of network
of networks.

175
00:15:24.520 --> 00:15:29.990 
The routing algorithms has to start
to analyze the destination address,

176
00:15:31.240 --> 00:15:41.190 
and then it has to search in the
routing table for the suitable entry,

177
00:15:41.820 --> 00:15:48.360 
and then the package has to be
forwarded via a listed port.

178
00:15:48.630 --> 00:15:52.310 


179
00:15:53.660 --> 00:15:57.580 
This forwarding algorithm
can be implemented

180
00:15:58.040 --> 00:16:04.820 
again very efficiently in hardware
so that really a fast next

181
00:16:04.820 --> 00:16:10.950 
hop forwarding is possible and if you
see, you experience with the internet

182
00:16:11.330 --> 00:16:15.180 
where you get information from
the other side of the world

183
00:16:15.310 --> 00:16:21.660 
in a very short time, then you
see this principle of routing

184
00:16:21.870 --> 00:16:26.110 
in the wide-area network, it's
the same on the internet which

185
00:16:26.110 --> 00:16:30.830 
is such a wide area network,
and it's very efficiently

186
00:16:31.270 --> 00:16:35.120 
well implemented.
