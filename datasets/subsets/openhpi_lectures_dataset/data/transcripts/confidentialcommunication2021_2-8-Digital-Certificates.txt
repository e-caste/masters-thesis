WEBVTT

1
00:00:00.520 --> 00:00:03.300 
After having introduced Public
Key Infrastructures (PKI)

2
00:00:03.510 --> 00:00:07.460 
with their components, the certification
authority the registration

3
00:00:07.460 --> 00:00:11.650 
authority, the validation authority,
now we can have a closer look

4
00:00:11.900 --> 00:00:17.290 
at digital certificates and how these
digital certificates are used

5
00:00:17.520 --> 00:00:23.640 
in practice. So, a certificate is a
simple document which is signed

6
00:00:23.650 --> 00:00:29.930 
by the Trust Centre. The certificate
attests to a connection between

7
00:00:29.930 --> 00:00:34.200 
a person or an entity
and its public key.

8
00:00:34.690 --> 00:00:40.370 
And if a Trust Centre that has issued
a certificate, they have signed

9
00:00:40.480 --> 00:00:46.660 
the certificate, one can trust
the certificate or connection

10
00:00:46.870 --> 00:00:51.460 
between the name of the person
or entity and its public key.

11
00:00:53.570 --> 00:00:57.170 
Certificates need to contain
the following information,

12
00:00:58.710 --> 00:01:03.770 
there are more information typically on a
certificate, but these 3 information are must-

13
00:01:04.080 --> 00:01:10.100 
Information about the
owner of the certificate

14
00:01:10.100 --> 00:01:14.910 
be a person, a company, a web server.
The public key of the owner

15
00:01:15.650 --> 00:01:19.540 
is an information that is needed
in the certificate and the third

16
00:01:19.880 --> 00:01:24.980 
is a digital signature of the Trust Center
which has issued the certificate.

17
00:01:25.850 --> 00:01:31.710 
So, the Trust Center in this way
guarantees with its signature to the

18
00:01:32.150 --> 00:01:35.380 
accuracy of these
three information.

19
00:01:36.540 --> 00:01:43.240 
Now let's consider how a user can
get such a certificate inside

20
00:01:43.410 --> 00:01:44.860 
a Public Key
Infrastructure.

21
00:01:45.540 --> 00:01:51.460 
First step is the user has to contact
the registration authority,

22
00:01:52.930 --> 00:01:56.580 
the contact could be electronic,
it could be in person. These

23
00:01:56.580 --> 00:01:58.440 
are regulated in the

24
00:01:59.300 --> 00:02:03.140 
security policy of the Trust Center
of this Public Key Infrastructure.

25
00:02:03.390 --> 00:02:10.080 
So, if a user contacts the registration
authority and submits his public key.

26
00:02:11.100 --> 00:02:18.550 
Then the Registration Authority (RA) transfers
the login data identity data of the person,

27
00:02:19.900 --> 00:02:24.450 
its public key to the Certification
Authority. Then the certification

28
00:02:24.450 --> 00:02:28.570 
authority creates the
certificate and signs it

29
00:02:28.990 --> 00:02:32.140 
and then the Certification
Authority sends the certificate

30
00:02:32.640 --> 00:02:37.780 
to the user and deposits as a
certificate information same

31
00:02:37.780 --> 00:02:41.400 
time at the Validation
Authority (VA).

32
00:02:42.810 --> 00:02:49.410 
How to use the certificate? This works as
follows- the user sends his certificate

33
00:02:49.790 --> 00:02:51.570 
to the communication
partner.

34
00:02:52.330 --> 00:02:57.990 
and then the communication partner validates
whether the certification is true

35
00:02:58.110 --> 00:03:02.850 
and is valid and this can be
done with the help of the

36
00:03:03.330 --> 00:03:07.520 
Validation Authority of the
public key infrastructure.

37
00:03:08.990 --> 00:03:15.800 
Then the Validation Authority checks the
certificate against the stored information

38
00:03:15.820 --> 00:03:19.570 
and confirms, yes, it is
a valid certificate.

39
00:03:22.220 --> 00:03:25.420 
Coming back we already
discussed the hierarchical

40
00:03:26.540 --> 00:03:32.960 
trust model. Now we can consider in more
detail the work of this hierarchical

41
00:03:33.130 --> 00:03:35.120 
Public Key
Infrastructure.

42
00:03:35.900 --> 00:03:41.370 
Typically a Public Key Infrastructure
is organized in a hierarchical way,

43
00:03:42.170 --> 00:03:46.740 
there is an initial Certification
Authority that is roots CA

44
00:03:47.300 --> 00:03:52.250 
and then there are a number
of subordinate instances

45
00:03:53.220 --> 00:03:59.250 
only called CA. And then signs
the root CA certificates

46
00:03:59.760 --> 00:04:02.710 
for each of the
subordinate CAs.

47
00:04:03.990 --> 00:04:08.800 
And then to validate and to
verify the identity of a CA,

48
00:04:08.900 --> 00:04:15.690 
it is simple for the users.
He/She only validates that the

49
00:04:15.900 --> 00:04:18.370 
certificate is signed
by the root CA.

50
00:04:18.980 --> 00:04:24.980 
So, all the trust in the
Public Key Infrastructure

51
00:04:25.040 --> 00:04:29.790 
the Trust Center comes from
the trust in the root

52
00:04:29.910 --> 00:04:36.730 
CA. And then because the users trust the
roots CA, then they trust the signature

53
00:04:37.500 --> 00:04:40.820 
and they trust following
this certificate.

54
00:04:42.350 --> 00:04:46.500 
When we speak about certificates, we
should at least shortly mention

55
00:04:46.670 --> 00:04:52.880 
cost certification. To establish
such a Public Key Infrastructure

56
00:04:53.500 --> 00:04:59.700 
is costly. There are many components
needed and secure components

57
00:04:59.800 --> 00:05:05.800 
with high quality needs to
be implemented or run.

58
00:05:05.890 --> 00:05:12.440 
So, when we have for example such a Public
Key Infrastructure in one company

59
00:05:12.780 --> 00:05:17.750 
and we have such public key
infrastructure established in another

60
00:05:18.300 --> 00:05:21.970 
company and both companies
want to communicate

61
00:05:23.360 --> 00:05:29.980 
in trusted mode with each other,
then it makes sense to interlink

62
00:05:30.470 --> 00:05:35.490 
this to public key infrastructures
and this can be reached by

63
00:05:35.750 --> 00:05:37.870 
so-called
cross-certification.

64
00:05:39.410 --> 00:05:43.440 
The idea is simple, the idea
is all the trust of a PKI

65
00:05:43.910 --> 00:05:46.590 
is concentrated
in the root CA.

66
00:05:47.190 --> 00:05:54.820 
So the root CAs of both PKIs issues
certificates to each other

67
00:05:55.310 --> 00:06:01.770 
and signs, and this means
that all the instances

68
00:06:02.520 --> 00:06:05.410 
on each side trust the

69
00:06:06.300 --> 00:06:09.730 
root CA and by
means of CA

70
00:06:10.390 --> 00:06:15.260 
issued a certificate to the root CA of
the other Public Key Infrastructure.

71
00:06:15.480 --> 00:06:19.650 
They also can trust
the other root CA,

72
00:06:20.480 --> 00:06:24.050 
so, in this
way, one can

73
00:06:24.100 --> 00:06:29.420 
provide from two different PKIs.
Ofcourse they need to be on

74
00:06:29.420 --> 00:06:35.310 
the same security level and typically
this is checked in detail before the

75
00:06:35.610 --> 00:06:37.540 
cross certification
is done

76
00:06:38.180 --> 00:06:42.670 
that they are on the same security
level so we can practically

77
00:06:42.970 --> 00:06:45.610 
work with such
infrastructures

78
00:06:46.540 --> 00:06:52.890 
and not have to establish a
new combined infrastructure

79
00:06:53.240 --> 00:06:54.100 
from the scratch.
