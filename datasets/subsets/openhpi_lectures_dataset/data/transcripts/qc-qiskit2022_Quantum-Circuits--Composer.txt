WEBVTT

1
00:00:00.690 --> 00:00:05.920 
hi again so now that you have done a recap of the fundamentals of quantum computing

2
00:00:06.280 --> 00:00:10.840 
you are ready to start doing the handsome part and the first

3
00:00:10.840 --> 00:00:14.440 
tool that we will use today it's the quantum composer

4
00:00:23.480 --> 00:00:27.670 
so let's go back to the platform that we have already explored before

5
00:00:29.150 --> 00:00:34.830 
let's go to the first tool so i will just click on launch composer

6
00:00:36.540 --> 00:00:39.960 
and you will probably see something different than these but

7
00:00:40.040 --> 00:00:42.640 
i have prepared it so that we can see

8
00:00:43.370 --> 00:00:48.450 
piece by piece what we can use so here in view you have

9
00:00:48.920 --> 00:00:52.050 
different things that you can set up the first one is what

10
00:00:52.050 --> 00:00:53.370 
are the things that you're going to see

11
00:00:54.390 --> 00:00:57.490 
so the first one that we're going to explore it's the graphical

12
00:00:57.500 --> 00:01:00.670 
editor and when we click on it it appears here

13
00:01:02.260 --> 00:01:08.090 
yes about the style you can also change the theme and you can

14
00:01:08.090 --> 00:01:10.560 
make it colored or not

15
00:01:11.430 --> 00:01:12.970 
depending on what you like best

16
00:01:15.050 --> 00:01:19.540 
and so here basically we have a graphical editor it's line

17
00:01:19.540 --> 00:01:23.760 
represents our quantum register and then the lines below represent

18
00:01:23.790 --> 00:01:27.290 
the classical register where we will store the output

19
00:01:27.750 --> 00:01:32.530 
of the measurements we can click on the first one and we can

20
00:01:32.530 --> 00:01:36.550 
add as many as we want so for instance now let's add

21
00:01:37.270 --> 00:01:41.960 
up to five Qubits it's the biggest

22
00:01:43.090 --> 00:01:44.700 
processor we have access to

23
00:01:45.350 --> 00:01:51.250 
i'm going to delete what we have here already we can give

24
00:01:51.250 --> 00:01:56.290 
it a name so that it's saved everything we do it's automatically

25
00:01:56.290 --> 00:02:00.940 
saved when we do some changes but you have to remember to give it a name

26
00:02:01.920 --> 00:02:06.170 
as you can see we can also

27
00:02:07.430 --> 00:02:11.490 
add more registers if we measure Qubits we will need

28
00:02:11.490 --> 00:02:15.220 
as many classical register as quantum registers so that's why

29
00:02:15.220 --> 00:02:20.810 
i have added here five so the number indicates how many classical registers we have

30
00:02:21.960 --> 00:02:30.180 
and now let's build our first circuit so here on the left you have all the

31
00:02:30.630 --> 00:02:36.960 
different gates that you can use for building your circuit

32
00:02:37.990 --> 00:02:42.120 
depending on how many Qubits you have as you see there are some that

33
00:02:42.420 --> 00:02:47.110 
appear in gray so for instance this

34
00:02:48.120 --> 00:02:52.360 
gate here needs four Qubits so automatically when you don't

35
00:02:52.360 --> 00:02:55.650 
have enough Qubits you cannot select it

36
00:02:56.280 --> 00:02:59.100 
and we have different operations so we have

37
00:03:01.110 --> 00:03:04.530 
the most widely use gates

38
00:03:05.310 --> 00:03:08.680 
combining them we can create almost any gate

39
00:03:09.220 --> 00:03:14.540 
and you also have some other operations such as initializing

40
00:03:14.540 --> 00:03:19.940 
to zero you have barriers you have measurements etcetera

41
00:03:21.620 --> 00:03:24.150 
and also there is the possibility to create

42
00:03:24.910 --> 00:03:28.560 
a custom operation

43
00:03:29.310 --> 00:03:33.280 
but we will talk about that a little bit later in the example

44
00:03:33.340 --> 00:03:36.380 
so now for the first example that we are going to do we will

45
00:03:36.380 --> 00:03:38.320 
only need two Qubits so i'm going to

46
00:03:40.810 --> 00:03:45.000 
decrease the number of classical registers and Qubits we have two Qubits q[0], q[1]

47
00:03:45.670 --> 00:03:48.450 
one and we have two classical registers

48
00:03:49.460 --> 00:03:53.430 
so the first thing that we're going to do is using Hadamard gate

49
00:03:53.510 --> 00:03:56.030 
that you already saw in the recap

50
00:03:56.780 --> 00:04:01.340 
and we're going to put it apply it to the first Qubit both

51
00:04:01.340 --> 00:04:05.620 
of them are initialized to zero automatically if you don't do anything else

52
00:04:06.040 --> 00:04:09.980 
you have to assume that by default they are initialized to zero

53
00:04:10.530 --> 00:04:12.490 
and now we are going to apply a

54
00:04:13.190 --> 00:04:16.720 
CNOT gate and we are going to measure both Qubits

55
00:04:20.640 --> 00:04:23.930 
here you can change

56
00:04:24.660 --> 00:04:30.120 
the visualizations seed let's put whatever

57
00:04:31.610 --> 00:04:36.910 
and you can set up the rest of settings of your experiment

58
00:04:37.040 --> 00:04:41.050 
so first thing we have to do it's choosing a Backend that has

59
00:04:41.050 --> 00:04:43.380 
enough Qubits for us to execute

60
00:04:44.120 --> 00:04:48.450 
this experiment and in this case we're going to be using the

61
00:04:48.460 --> 00:04:54.880 
qasm simulator as i explained earlier it's a simulator that mimics the

62
00:04:54.990 --> 00:04:59.370 
behaviour of an actual device so this is the one that we are going to use

63
00:04:59.710 --> 00:05:01.610 
because the rest of the devices

64
00:05:02.250 --> 00:05:07.370 
are available for free for everyone with an account so there

65
00:05:07.370 --> 00:05:14.430 
might be a queue usually you have a five units five jobs that

66
00:05:15.210 --> 00:05:21.190 
that you can execute simultaneously so when you send the job to a Backend

67
00:05:21.310 --> 00:05:24.150 
automatically one of these jobs

68
00:05:25.010 --> 00:05:29.130 
disappears and when you get your results back you get your job back

69
00:05:29.820 --> 00:05:35.250 
but keeping in mind that this is just a demo and anyway the

70
00:05:35.970 --> 00:05:39.620 
the qasm simulator will mimic the behaviour of an actual

71
00:05:39.620 --> 00:05:43.190 
device that's the one we're going to use right now it can simulate up

72
00:05:43.290 --> 00:05:47.610 
to thirty two Qubits so we're good in terms of the number of Qubits

73
00:05:48.190 --> 00:05:52.680 
and the other thing that we can select is the number of shots

74
00:05:53.170 --> 00:05:57.540 
so the number of shots it's how many times this will be repeated

75
00:05:57.560 --> 00:06:02.290 
because the result will be a probability distribution

76
00:06:02.690 --> 00:06:06.830 
and therefore we need to repeat the execution of the circuits many times

77
00:06:06.970 --> 00:06:13.480 
to estimate what's the probability of observing each of the states

78
00:06:14.350 --> 00:06:16.010 
so we are going to give it a name

79
00:06:18.440 --> 00:06:23.080 
and we will leave the default number of shots which is

80
00:06:23.080 --> 00:06:24.350 
one thousand and twenty four (1024)

81
00:06:25.100 --> 00:06:27.730 
and we will run it on our device

82
00:06:32.830 --> 00:06:37.540 
so now our job should appear here

83
00:06:38.990 --> 00:06:43.130 
in composer jobs it says it's already

84
00:06:44.380 --> 00:06:49.370 
finished and we can have a preview here

85
00:06:49.790 --> 00:06:54.960 
there are more details about the time it took how much the

86
00:06:54.960 --> 00:06:58.790 
different steps that were done first

87
00:06:59.820 --> 00:07:04.710 
the job was created and it was transpiled validated in queue and

88
00:07:04.710 --> 00:07:05.370 
then running

89
00:07:07.920 --> 00:07:13.080 
we can also check more details about what happened where it

90
00:07:13.080 --> 00:07:19.610 
was executed and when the number of shots the job id that identifies uniquely this concrete

91
00:07:19.910 --> 00:07:23.530 
job and then the result is shown in our histogram

92
00:07:24.260 --> 00:07:29.920 
so of these one thousand and twenty four shots we observe the one one (11)

93
00:07:31.110 --> 00:07:37.140 
state five hundred and fifteen (515) times and the zero zero (00) state

94
00:07:37.150 --> 00:07:41.690 
five hundred and nine (509) times and if we want to see it into

95
00:07:41.690 --> 00:07:46.500 
more detail we can also always come here and see the complete

96
00:07:46.920 --> 00:07:52.410 
information even the transpiled circuit which in this case it's

97
00:07:52.730 --> 00:07:55.090 
the same as the original circuit because

98
00:07:56.100 --> 00:07:58.250 
since we run it in the qasm simulator

99
00:08:00.100 --> 00:08:05.180 
the qasm simulator has basis gates both H and CNOT but if

100
00:08:05.180 --> 00:08:06.970 
we had run it in another Backend

101
00:08:07.640 --> 00:08:09.790 
the transpiled circuit would be different

102
00:08:10.310 --> 00:08:13.590 
you can also check the qasm code that is

103
00:08:13.640 --> 00:08:18.110 
equivalent to our experiment to the circuit that we created

104
00:08:18.470 --> 00:08:21.170 
and also how it would be done with Qiskit

105
00:08:23.780 --> 00:08:28.680 
okay so coming back to our composer tool

106
00:08:29.550 --> 00:08:35.610 
let's hide this and let's see what are the things we can explore

107
00:08:35.670 --> 00:08:41.080 
so in the view there is also other things that we can enable

108
00:08:41.130 --> 00:08:46.280 
first one is a code editor that appears here on the right and here we can

109
00:08:46.780 --> 00:08:53.190 
take directly as we create it i'm going for example delete this

110
00:08:53.500 --> 00:08:58.400 
so that you can see how it changes automatically and maybe add some

111
00:08:59.280 --> 00:09:03.690 
gates and as you can see they appeared here

112
00:09:04.140 --> 00:09:09.250 
and they give us the equivalent code in Qiskit or in OpenQASM

113
00:09:09.630 --> 00:09:12.040 
so depending on the kind of user that we are

114
00:09:12.630 --> 00:09:16.180 
or on the kind of experiment that we are doing at a concrete time

115
00:09:16.450 --> 00:09:20.030 
it might be interesting for us to have one code or the other

116
00:09:24.120 --> 00:09:26.790 
so what are the things can we check

117
00:09:28.060 --> 00:09:30.700 
we also have some of the

118
00:09:31.310 --> 00:09:33.090 
graphics that we can

119
00:09:34.650 --> 00:09:38.420 
explore so one is the Statevector that gives us

120
00:09:38.880 --> 00:09:41.900 
the amplitude - if we have a

121
00:09:43.050 --> 00:09:47.730 
measurement then it's before measurement, otherwise it will be after

122
00:09:49.120 --> 00:09:53.560 
so here we can see the actual amplitudes that then resulted

123
00:09:53.570 --> 00:09:55.810 
into the probability distribution that we observed

124
00:09:56.240 --> 00:09:58.040 
that we observed in the experiment

125
00:10:02.790 --> 00:10:08.410 
besides that it might be also interesting for us to see

126
00:10:08.770 --> 00:10:10.890 
what would be the probabilities

127
00:10:11.670 --> 00:10:17.750 
after measuring so this is also simulated here even before executing the experiment

128
00:10:18.120 --> 00:10:22.780 
so that we can also have an idea if we are doing what we are supposed to do

129
00:10:23.210 --> 00:10:25.490 
finally we also have

130
00:10:26.540 --> 00:10:29.010 
visualization which is the Q-sphere

131
00:10:29.630 --> 00:10:33.490 
that is the visualization we use when we have multiple Qubits

132
00:10:33.970 --> 00:10:37.330 
and it enables us to also understand

133
00:10:38.300 --> 00:10:42.520 
what's going to be the state after applying all these gates

134
00:10:43.750 --> 00:10:46.510 
and with that we conclude

135
00:10:47.000 --> 00:10:49.810 
we conclude the composer demo

136
00:10:50.470 --> 00:10:55.210 
there will be an exercise that you can do to get more

137
00:10:55.210 --> 00:11:00.550 
familiar with the platform and you are welcome to play around with it

138
00:11:01.520 --> 00:11:07.020 
keep and execute your first experiments in the quantum devices

139
00:11:08.110 --> 00:11:13.010 
so with that in the next video we're gonna move to the quantum

140
00:11:13.010 --> 00:11:15.240 
lab and to start coding with Qiskit

141
00:11:16.150 --> 00:11:18.890 
thank you so much for watching and looking forward to seeing

142
00:11:18.890 --> 00:11:19.820 
you in the next video
