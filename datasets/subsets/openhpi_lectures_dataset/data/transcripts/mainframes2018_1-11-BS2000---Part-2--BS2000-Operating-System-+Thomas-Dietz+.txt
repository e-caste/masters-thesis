WEBVTT

1
00:00:00.770 --> 00:00:03.769 
Hello and welcome to this session.

2
00:00:03.770 --> 00:00:04.900 
My name is Thomas Dietz.

3
00:00:05.960 --> 00:00:10.459 
In this session, I will give you an insight into the BS 2000 the operating

4
00:00:10.460 --> 00:00:11.480 
system itself.

5
00:00:14.070 --> 00:00:18.689 
When looking at the BS 2000 and told the software ecosystem,

6
00:00:18.690 --> 00:00:23.279 
we have seen all three components of sea hardware and platform in

7
00:00:23.280 --> 00:00:24.280 
the last session.

8
00:00:26.230 --> 00:00:30.699 
So the BS 2000 operating system is spot in the middle, so it's

9
00:00:30.700 --> 00:00:35.289 
running on top of the hardware and is providing all of the

10
00:00:35.290 --> 00:00:40.179 
interfaces, for example, for middleware and to user applications

11
00:00:40.180 --> 00:00:44.649 
that are running on top of similarly well when looking at this

12
00:00:44.650 --> 00:00:49.089 
light. And you can compare these two souls with

13
00:00:49.090 --> 00:00:51.069 
some other operating systems.

14
00:00:52.390 --> 00:00:57.579 
So structure itself is not very different to every system

15
00:00:57.580 --> 00:01:00.819 
you are known to and use today.

16
00:01:00.820 --> 00:01:05.619 
So we have some kernel component, which we call beast was our nucleus.

17
00:01:06.670 --> 00:01:10.060 
Of course, we have some data management, file systems,

18
00:01:11.830 --> 00:01:14.079 
management of disks and so on.

19
00:01:14.080 --> 00:01:17.829 
We have top scheduling, storage, management, printing.

20
00:01:17.830 --> 00:01:20.139 
Of course, you need to do backup of your data.

21
00:01:20.140 --> 00:01:25.429 
So we have back up and archiving a certain set of security functions,

22
00:01:25.430 --> 00:01:30.699 
a certain set of software development, networking

23
00:01:30.700 --> 00:01:32.360 
system management, of course.

24
00:01:33.640 --> 00:01:38.469 
And we have also and integrated Unix part inside

25
00:01:38.470 --> 00:01:41.260 
your mainframe operating system, which is called policies.

26
00:01:45.650 --> 00:01:50.329 
So when looking at BS 2000 and a mainframe operating system,

27
00:01:51.370 --> 00:01:56.059 
the operating system itself has no, let's say,

28
00:01:56.060 --> 00:02:01.279 
static part by itself, so mainframes have been developed

29
00:02:01.280 --> 00:02:06.859 
to enable dynamic changes and the extension for nearly every component.

30
00:02:06.860 --> 00:02:11.419 
So, for example, mainframe operating systems like BS 2000

31
00:02:11.420 --> 00:02:15.889 
supported dynamic hardware change and upgrade so we can plug

32
00:02:15.890 --> 00:02:20.059 
in new channels, add new devices dynamically.

33
00:02:20.060 --> 00:02:23.869 
You can even add CPU's on line.

34
00:02:23.870 --> 00:02:26.659 
Remove them online for CPUs.

35
00:02:26.660 --> 00:02:32.209 
We definitely call a feature called capacity on demand

36
00:02:32.210 --> 00:02:37.639 
via CPUs can added to the system and the virtual machines dynamically

37
00:02:37.640 --> 00:02:39.199 
when required by business needs.

38
00:02:40.910 --> 00:02:45.679 
Of course, what you can do it. We see hardware, so it is so reflected also

39
00:02:45.680 --> 00:02:50.659 
on the management side. So when adding additional disks this physical,

40
00:02:50.660 --> 00:02:55.520 
this can be added to public volume that can also be

41
00:02:56.540 --> 00:03:00.229 
reduced from Seppelt upset and removed again.

42
00:03:00.230 --> 00:03:04.699 
Files can be extended dynamically and on on

43
00:03:04.700 --> 00:03:09.199 
the software side. The BS 2000 operating system

44
00:03:09.200 --> 00:03:13.699 
consists of a small kernel part and

45
00:03:13.700 --> 00:03:16.219 
a lot of dynamic subsystems.

46
00:03:16.220 --> 00:03:21.499 
So most of the privileged code inside PS 2000 is loaded dynamically

47
00:03:21.500 --> 00:03:26.509 
when starting the operating system, and many subsystems

48
00:03:26.510 --> 00:03:31.339 
can also be exchanged during runtime of the operating

49
00:03:31.340 --> 00:03:32.510 
system dynamically.

50
00:03:34.690 --> 00:03:38.259 
And if was a very interesting feature.

51
00:03:39.430 --> 00:03:43.929 
So, for example, if you have followed the discussions

52
00:03:43.930 --> 00:03:48.639 
on the Linux kernel mailing lists some years ago

53
00:03:48.640 --> 00:03:54.249 
about life kernel patching, which is a completely new feature for Linux,

54
00:03:54.250 --> 00:03:59.080 
so this problem has been solved by these two thousand mainframes decades ago.

55
00:04:00.190 --> 00:04:05.049 
So we can buy object code replacements, so cold traps

56
00:04:05.050 --> 00:04:09.759 
update the operating system by support picks and two

57
00:04:09.760 --> 00:04:14.379 
without any downtime, enhance the operating system and fix

58
00:04:14.380 --> 00:04:16.869 
some bugs if there would be some available.

59
00:04:22.210 --> 00:04:26.919 
In this course, of course, is not enough time in succession

60
00:04:26.920 --> 00:04:31.389 
to present BS 2000 as operating system in

61
00:04:31.390 --> 00:04:33.339 
all of its aspects.

62
00:04:33.340 --> 00:04:36.399 
So I will only pick two aspects.

63
00:04:36.400 --> 00:04:41.229 
One is the command line interface, which is called SDF

64
00:04:41.230 --> 00:04:45.759 
System Dialog Facility, and the other is data management.

65
00:04:45.760 --> 00:04:48.100 
Let's have a look at to come on the interface first.

66
00:04:49.330 --> 00:04:54.069 
Working in these two 2000 is possible for, let's say, a normal

67
00:04:54.070 --> 00:04:56.679 
user in dialog mode.

68
00:04:56.680 --> 00:05:01.779 
Maybe we have a command line interface answering commands, Funes output

69
00:05:01.780 --> 00:05:06.999 
and also batch mode where you are starting your background pitch processes

70
00:05:07.000 --> 00:05:11.739 
to in huge workloads, for example, during

71
00:05:11.740 --> 00:05:14.439 
night and you get the result.

72
00:05:14.440 --> 00:05:19.249 
So the next morning you command line language SDF provides

73
00:05:19.250 --> 00:05:21.970 
BS 2000 user interface for this purpose.

74
00:05:23.410 --> 00:05:27.070 
And in other words, SDF is Cecile AI of pieces of

75
00:05:28.450 --> 00:05:32.919 
set command line interface is the same for dialog and for better

76
00:05:32.920 --> 00:05:37.509 
processing. So when you learn to work

77
00:05:37.510 --> 00:05:42.189 
this BS 2000 and you only have to learn the once all SDF

78
00:05:42.190 --> 00:05:47.079 
works, and I will give you a small example of this look-alikes.

79
00:05:48.610 --> 00:05:53.379 
For example, if you know you have some files on BS 2000

80
00:05:53.380 --> 00:05:55.180 
itself and like to know.

81
00:05:57.330 --> 00:06:01.749 
How large is that fall? So what is the following size and which type is

82
00:06:01.750 --> 00:06:06.479 
that file? How to start with these two thousand ins insert command line interface?

83
00:06:08.820 --> 00:06:13.799 
Well, up to now, you know, of course, nothing at all about BS 2000.

84
00:06:13.800 --> 00:06:18.299 
For me, it's comparable a little bit like going to a foreign country to

85
00:06:18.300 --> 00:06:22.799 
a foreign city when you are at the airport and don't know where to go

86
00:06:22.800 --> 00:06:25.470 
to. What do you normally do?

87
00:06:26.640 --> 00:06:28.619 
Well, you are asking someone.

88
00:06:29.730 --> 00:06:34.179 
And in BS 2000, you can do that by simply answering a question mark

89
00:06:34.180 --> 00:06:35.610 
etsy.com online interface.

90
00:06:38.220 --> 00:06:43.009 
This will give you an overview of all available commands.

91
00:06:43.010 --> 00:06:46.850 
Many hundreds, of course, let's say, are grouped logically

92
00:06:48.260 --> 00:06:51.499 
into so-called application domains.

93
00:06:51.500 --> 00:06:55.939 
And when we think at our current purpose, we like to

94
00:06:55.940 --> 00:06:58.939 
see something about a file.

95
00:06:58.940 --> 00:07:03.199 
Of course, we selected number nine, which is file

96
00:07:05.030 --> 00:07:08.329 
after selecting that using all the available commands for.

97
00:07:10.400 --> 00:07:13.160 
And doing something with files in these two thousand.

98
00:07:14.390 --> 00:07:17.809 
Of course, there are a lot of commands, but yeah,

99
00:07:19.160 --> 00:07:22.670 
when, uh, I'd like to know something about the file.

100
00:07:23.920 --> 00:07:25.959 
Well, what are some possible options?

101
00:07:25.960 --> 00:07:30.769 
Either a command called list or a command called show.

102
00:07:30.770 --> 00:07:35.419 
And as you see, for example, you have here a command called file

103
00:07:35.420 --> 00:07:37.969 
attributes, which may be the right one.

104
00:07:37.970 --> 00:07:40.040 
So we select number sixty three.

105
00:07:42.120 --> 00:07:47.099 
And then we get all the parameters that his command

106
00:07:47.100 --> 00:07:50.339 
has and can be used to do some output.

107
00:07:51.750 --> 00:07:56.549 
And we are selecting give me the attributes of one file

108
00:07:56.550 --> 00:07:59.699 
with all information and you'll see the output on that screen.

109
00:08:00.990 --> 00:08:05.789 
So SDF is very easy to learn because it is very structured.

110
00:08:05.790 --> 00:08:10.619 
It follows an English sentence structure, so will object

111
00:08:10.620 --> 00:08:11.789 
and maybe attributes.

112
00:08:13.020 --> 00:08:17.969 
And let's say after one week, you will be able to manage abuse 2016

113
00:08:17.970 --> 00:08:21.269 
system when you have learned BS 2000 commands.

114
00:08:21.270 --> 00:08:25.859 
You can also use his commands to write so-called procedures scripts

115
00:08:25.860 --> 00:08:31.289 
inside these two thousand to do all your automation stuff

116
00:08:31.290 --> 00:08:34.649 
and see output, which you can see on the right.

117
00:08:34.650 --> 00:08:39.149 
And so it cannot only be displayed on screen, but can also

118
00:08:39.150 --> 00:08:43.579 
be written to so the variables by using the Output

119
00:08:43.580 --> 00:08:47.999 
Presentation Service od BS 2000, which gives you

120
00:08:48.000 --> 00:08:52.679 
more ability to write automated scripts and handling

121
00:08:52.680 --> 00:08:53.999 
data in these thousand.

122
00:08:58.080 --> 00:09:03.239 
So the second part or the second aspect I would like

123
00:09:03.240 --> 00:09:06.119 
to briefly highlight is the data management.

124
00:09:08.520 --> 00:09:13.139 
So high performance data access to data stored on this

125
00:09:13.140 --> 00:09:15.570 
is a decisive factor for data processing.

126
00:09:16.800 --> 00:09:21.359 
These two souls and data's management provides everything required

127
00:09:21.360 --> 00:09:25.919 
to do so. So you can access files, protect edit

128
00:09:25.920 --> 00:09:30.809 
assignments and to programs and manage devices and disks

129
00:09:30.810 --> 00:09:34.919 
to understand a little bit more how data are organized in these two thousand.

130
00:09:36.050 --> 00:09:38.099 
Oh, when we start, it's at the bottom.

131
00:09:38.100 --> 00:09:42.809 
We have this drives, which are provided by external storage system.

132
00:09:44.130 --> 00:09:48.780 
A single drive has an assignment to a volume,

133
00:09:50.520 --> 00:09:55.289 
which is a unit where BS 2000 operates on volumes

134
00:09:55.290 --> 00:09:58.769 
can be grouped together to so called public volumes.

135
00:09:58.770 --> 00:10:01.859 
It's perhaps it's in short and on.

136
00:10:01.860 --> 00:10:06.359 
Perhaps it's your files are located and you're working

137
00:10:06.360 --> 00:10:07.949 
this at files.

138
00:10:07.950 --> 00:10:12.689 
Of course, the operating system needs to know which user owns which file

139
00:10:12.690 --> 00:10:14.969 
and also files are located on.

140
00:10:14.970 --> 00:10:17.759 
Perhaps it's on which blocks and so on.

141
00:10:17.760 --> 00:10:22.629 
So the system itself as a user catalog, which identifies

142
00:10:22.630 --> 00:10:27.179 
the user, is a hierarchical or security concept in the file

143
00:10:27.180 --> 00:10:31.739 
catalog, which maps files to users and

144
00:10:31.740 --> 00:10:32.740 
access rights.

145
00:10:34.480 --> 00:10:38.199 
In these thousand, we have different types of files.

146
00:10:38.200 --> 00:10:43.509 
So, for example, we have simple text files which are called some sequential

147
00:10:43.510 --> 00:10:44.510 
access method.

148
00:10:45.580 --> 00:10:49.539 
We have also indexed sequential access, most as

149
00:10:51.040 --> 00:10:55.899 
a method to access files, which is a little bit like

150
00:10:55.900 --> 00:11:00.369 
some kind of small database because you have key value pairs

151
00:11:00.370 --> 00:11:04.449 
inside this file so you can insert a certain key.

152
00:11:04.450 --> 00:11:09.339 
For example, some Social Security number in those with

153
00:11:09.340 --> 00:11:13.629 
these values, for example, like your name, like your address and so on.

154
00:11:15.730 --> 00:11:20.199 
One very basic access method for

155
00:11:20.200 --> 00:11:24.879 
BS 2000 is upcoming Universal Primary Access Method, which

156
00:11:24.880 --> 00:11:29.319 
does it block success so we can write binary data lock

157
00:11:29.320 --> 00:11:33.939 
was on. You will file AS and BS 2000 and for special

158
00:11:33.940 --> 00:11:37.720 
purposes. There are a lot of other access methods like false pontiff

159
00:11:39.610 --> 00:11:43.059 
and for tapes Betamax as mis-sold

160
00:11:44.500 --> 00:11:49.089 
to ensure that you can handle your data in the way you like on these two thousand.

161
00:11:52.680 --> 00:11:57.509 
When looking at the file system, we have seen, well, files are located

162
00:11:57.510 --> 00:12:02.219 
on pop sets, but well, how do I access a single

163
00:12:02.220 --> 00:12:05.939 
file and how do I named my file?

164
00:12:05.940 --> 00:12:07.200 
I'll give you one example.

165
00:12:08.700 --> 00:12:13.469 
So for example, as we find them on BS 2000 consists of primary

166
00:12:13.470 --> 00:12:17.370 
three parts. So first one is the Pepcid indicator,

167
00:12:18.390 --> 00:12:23.399 
which is added as a system so prefixed by the system itself.

168
00:12:23.400 --> 00:12:28.349 
You can see in this case, we have a folder type upset indicator

169
00:12:28.350 --> 00:12:32.549 
of the words of our dollar sign, the account number.

170
00:12:32.550 --> 00:12:37.679 
So this is a representation of your user ID and your user account

171
00:12:37.680 --> 00:12:40.739 
in the following system of these two thousand.

172
00:12:40.740 --> 00:12:45.899 
And of course, then we have so far them itself, which can be selected by you

173
00:12:45.900 --> 00:12:50.519 
and the maximum length of the full Paul's name can be up to 54

174
00:12:50.520 --> 00:12:52.169 
characters in these two thousand.

175
00:12:55.970 --> 00:13:00.799 
Well, butas Island has shown that this delivers all the functions

176
00:13:00.800 --> 00:13:05.239 
for continuous enumeration since decades, so it was designed

177
00:13:05.240 --> 00:13:09.799 
for a wide range of workloads providing scalable monitor

178
00:13:09.800 --> 00:13:13.159 
processing load of addressable real memory.

179
00:13:14.690 --> 00:13:19.189 
Also in the extension of virtual memory, addressing this

180
00:13:19.190 --> 00:13:23.779 
is a data space, as it has shown that this can operate

181
00:13:23.780 --> 00:13:28.849 
seamlessly together with other operating system on the same storage system

182
00:13:28.850 --> 00:13:33.659 
by using a common disk format into storage

183
00:13:33.660 --> 00:13:38.899 
networks with fiber channel and Scalzi was highest i o throughput

184
00:13:38.900 --> 00:13:43.399 
that shown set pieces. All is very open internally

185
00:13:43.400 --> 00:13:48.079 
by providing a Unix like management

186
00:13:48.080 --> 00:13:53.659 
and application runtime interface with politics.

187
00:13:53.660 --> 00:13:58.219 
For example, also for all open source software like Apache

188
00:13:58.220 --> 00:14:01.010 
Secure Shell as an MP and so on.

189
00:14:02.270 --> 00:14:06.230 
And so the system also is connected.

190
00:14:07.580 --> 00:14:12.079 
If customers use it to a network attached storage, which

191
00:14:12.080 --> 00:14:17.119 
has also the presentation into so BS 2000 files system

192
00:14:17.120 --> 00:14:21.739 
and for this type, of course, high performance network connection,

193
00:14:21.740 --> 00:14:26.509 
which is also provided by Beatle's all this also

194
00:14:26.510 --> 00:14:31.519 
shows that BS 2000 itself has adapted

195
00:14:31.520 --> 00:14:34.429 
and was continuous developed over the last two years

196
00:14:36.110 --> 00:14:40.070 
and successfully meets the challenges of the digital age.

197
00:14:42.210 --> 00:14:47.009 
You would like to know more about BS 2000 and running peace to souls and

198
00:14:47.010 --> 00:14:51.689 
in some environments. I will tell you more in the next session, which is about

199
00:14:51.690 --> 00:14:55.259 
which is about virtualization technology.

200
00:14:55.260 --> 00:14:56.260 
Come with me.
