WEBVTT

1
00:00:00.730 --> 00:00:03.880 
In our OpenHPI course a
half-century of internet

2
00:00:04.390 --> 00:00:10.450 
we now consider in more detail
the domain name service and

3
00:00:10.450 --> 00:00:12.160 
the domain name system.

4
00:00:12.810 --> 00:00:18.910 
An important application in the internet
that organizes the internet, how it works

5
00:00:19.010 --> 00:00:20.400 
in the way, we know it.

6
00:00:21.680 --> 00:00:29.190 
Let's start with remembering
the IP protocol,

7
00:00:29.360 --> 00:00:34.470 
a standard that comes with an addressing
scheme for the internet addresses

8
00:00:35.110 --> 00:00:36.740 
and the

9
00:00:36.740 --> 00:00:41.120 
each device, each system that
is connected to the internet

10
00:00:41.270 --> 00:00:43.990 
needs such an
internet address.

11
00:00:45.090 --> 00:00:51.310 
The IP protocol defines the format
of such addresses. Remember

12
00:00:51.480 --> 00:00:56.860 
we have two IP protocols in place:
IP protocol in the version four

13
00:00:57.180 --> 00:01:03.130 
there are the IP addresses
of the length of 32 bits,

14
00:01:03.600 --> 00:01:14.210 
divided in subgroups of 8 bits each,
subdivided or separated by points.

15
00:01:14.740 --> 00:01:20.140 
Each of the group of the eight-bit
is described as a decimal number.

16
00:01:20.280 --> 00:01:25.610 
So this is a typical IPv4
address. We have the IPv6

17
00:01:25.610 --> 00:01:31.960 
protocol which provides much
more internet addresses

18
00:01:31.990 --> 00:01:36.490 
and here the internet address
have the length of 128 bits.

19
00:01:36.980 --> 00:01:45.050 
It's divided up in groups of
16 bits each and separated

20
00:01:45.310 --> 00:01:50.520 
by double point(Colons). Then we
had different ways discussed

21
00:01:50.530 --> 00:01:57.080 
to omit leading zeroes, to omit
zero blocks, we discuss this.

22
00:01:57.480 --> 00:02:00.520 
So these are the
IP addresses,

23
00:02:01.210 --> 00:02:07.190 
but it is difficult to remember for humans,
particularly such IPv6 addresses,

24
00:02:07.590 --> 00:02:12.190 
and for that reason an alternative
naming scheme was introduced

25
00:02:12.350 --> 00:02:15.970 
the so-called domain names, we
already spoke about that.

26
00:02:16.450 --> 00:02:23.540 
Now the problem is how to
translate this IP address to the

27
00:02:23.700 --> 00:02:24.690 
domain names.

28
00:02:26.540 --> 00:02:31.770 
Let's start with some more remarks
about the hierarchical structures

29
00:02:31.940 --> 00:02:36.620 
address space of the domain names.
Here is an example of such

30
00:02:36.830 --> 00:02:41.190 
a domain name, you see
it's not an IP address,

31
00:02:41.600 --> 00:02:46.610 
it is a name, these different
parts of the name are separated

32
00:02:46.610 --> 00:02:54.100 
by each other by a point. So the last, the right
most part is called the top-level domain

33
00:02:54.420 --> 00:03:01.030 
and then follows a domain and then
there can follow several subdomains.

34
00:03:01.490 --> 00:03:05.200 
This is the structure
of a domain name.

35
00:03:05.620 --> 00:03:13.160 
So the domain name system address space
can be technical seen as a tree

36
00:03:13.480 --> 00:03:16.960 
which is a result of this
hierarchical structure.

37
00:03:17.510 --> 00:03:23.240 
So here we have such a tree
the top level domain is rude

38
00:03:23.670 --> 00:03:28.510 
and then there are different sub-domains for
example from Hasso Plattner Institute,

39
00:03:28.750 --> 00:03:32.290 
from the University of
Munich, from the Denic.

40
00:03:33.250 --> 00:03:38.300 
Denic is a very important
institution in Germany.

41
00:03:38.620 --> 00:03:45.030 
Here is a register for the domain
names with a top-level domain 'de'.

42
00:03:45.740 --> 00:03:51.140 
Then each of the domains can have
several subdomains, for example

43
00:03:51.140 --> 00:03:56.310 
in HPI open and iTunes, and the
subdomains can have other subdomains.

44
00:03:56.380 --> 00:04:02.040 
You see there is a root structure,
there is no circle in it.

45
00:04:02.540 --> 00:04:10.210 
So for each domain the administrators, a
network administrator is responsible

46
00:04:10.410 --> 00:04:17.080 
to reduce the subdomains. So if you
are in HPI and a new department

47
00:04:17.290 --> 00:04:24.390 
is opened then the department
asked our OpenHPI network, our

48
00:04:24.680 --> 00:04:29.230 
our HPI network administrator,
they asked them for a

49
00:04:29.460 --> 00:04:32.190 
subdomain name
and in this way

50
00:04:33.060 --> 00:04:35.700 
we can have many many
such subjects.

51
00:04:38.310 --> 00:04:44.570 
The last slide there was the IP address, this
slide is the domain names, what is the

52
00:04:44.880 --> 00:04:49.370 
interconnection? Because for the
protocols, for the internet protocols

53
00:04:49.610 --> 00:04:53.710 
they do not know and they cannot
work with such domain names

54
00:04:54.020 --> 00:04:57.380 
they work with IP
addresses, but we humans

55
00:04:57.790 --> 00:05:01.760 
we have difficulty to work with
the IP addresses. So we like

56
00:05:01.760 --> 00:05:05.340 
to work with the domain
service, domain names

57
00:05:05.830 --> 00:05:10.300 
and so it needs a service
to translate the

58
00:05:10.890 --> 00:05:15.170 
IP addresses into domain names,
to translate domain names into

59
00:05:15.350 --> 00:05:23.800 
IP addresses. Let's have a closer
look first at the the domain names

60
00:05:24.190 --> 00:05:29.000 
and a particularly to the top-level
domains. The top-level domains

61
00:05:29.480 --> 00:05:36.240 
in the rightmost part of a domain
name is '.com', '.de', '.org'

62
00:05:36.600 --> 00:05:42.880 
and these are only
distributed by an

63
00:05:43.780 --> 00:05:48.820 
International Institution: The
Internet Corporation for Assigned

64
00:05:48.830 --> 00:05:54.140 
Names and Numbers, the ICANN. So
if someone likes to register

65
00:05:54.140 --> 00:05:59.060 
a new top-level domain, he has
to discuss with ICANN and the

66
00:05:59.060 --> 00:06:03.680 
ICANN is the master to
exactly a register

67
00:06:04.110 --> 00:06:07.010 
and organize
top-level domains.

68
00:06:08.750 --> 00:06:14.450 
Once a level below, there
are the domain names

69
00:06:14.990 --> 00:06:21.260 
So for each top level domains many
many different organizations

70
00:06:21.540 --> 00:06:27.650 
can be asked for a domain,
under this top-level domain.

71
00:06:28.270 --> 00:06:31.750 
So each top level domain
needs an administrator,

72
00:06:32.210 --> 00:06:38.130 
an administrator and typically this is a
central company or central organization

73
00:06:38.440 --> 00:06:45.330 
that takes care that everyone
who wants to have a domain

74
00:06:45.520 --> 00:06:49.880 
under this top-level domain, has to
register and has to discuss this.

75
00:06:50.370 --> 00:06:53.440 
So in Germany for the
top-level domain 'de',

76
00:06:53.890 --> 00:07:01.330 
DE-NIC is a company
in Frankfurt main

77
00:07:01.680 --> 00:07:06.190 
which administrates the
top-level domain '.de'

78
00:07:06.840 --> 00:07:14.150 
On layer, on each level
of the domain name

79
00:07:15.760 --> 00:07:20.650 
there is an owner for the domain
and the owner is responsible

80
00:07:20.810 --> 00:07:27.480 
for registering and the owner has
the right to register subdomains

81
00:07:27.800 --> 00:07:28.970 
of this domain.

82
00:07:30.220 --> 00:07:37.810 
Now we after seeing this, we can
discuss how to organize a translation

83
00:07:38.250 --> 00:07:44.230 
between the internet addresses and the
domain addresses. This translation system

84
00:07:44.690 --> 00:07:48.440 
is a Domain Name System (DNS),
so Domain Name System is an

85
00:07:48.950 --> 00:07:55.450 
internet application, it's not
an application you are using a

86
00:07:55.880 --> 00:08:01.570 
when you want to use a service
you are not aware that you are

87
00:08:01.570 --> 00:08:07.550 
using it when you use a service but it's
needed for all such kind of communication

88
00:08:07.730 --> 00:08:13.790 
when human works with domain names instead
of IP names, because internet protocols

89
00:08:13.970 --> 00:08:16.570 
cannot understand
domain names.

90
00:08:17.190 --> 00:08:21.700 
So for assigning domain names to
computers and devices in the

91
00:08:21.700 --> 00:08:26.660 
internet and for the translation
of these two, this domain name

92
00:08:26.660 --> 00:08:31.880 
system, this DNS system
was developed in1983

93
00:08:32.320 --> 00:08:35.560 
by Paul Mockapetris.

94
00:08:36.020 --> 00:08:43.480 
In the beginning, it was mainly a big
table which a assigns IP addresses

95
00:08:43.790 --> 00:08:46.210 
and the corresponding
domain names.

96
00:08:47.930 --> 00:08:53.470 
Later on, it becomes
much larger, so there

97
00:08:53.470 --> 00:08:58.790 
needs to be different components
in the domain name system,

98
00:08:59.550 --> 00:09:04.210 
hierarchically structured
namespace, the name server

99
00:09:04.680 --> 00:09:08.110 
and clients for this
translation service.

100
00:09:08.710 --> 00:09:12.830 
Let's have a look at how the
DNS system is working.

101
00:09:13.740 --> 00:09:19.770 
So we have a client and we have
a domain name server and

102
00:09:19.780 --> 00:09:24.590 
the domain name service knows
about some part of the internet,

103
00:09:24.660 --> 00:09:32.090 
he knows the translation table, so
wikipedia.de has an IP address

104
00:09:32.370 --> 00:09:36.520 
134.119.24.29

105
00:09:36.880 --> 00:09:42.120 
OpenHPI has the IP
address 141.89.225.139

106
00:09:42.120 --> 00:09:44.980 


107
00:09:45.720 --> 00:09:54.770 
So now the client wants to use, wants to
send a request to the website of HPI.

108
00:09:56.370 --> 00:10:04.880 
So the client knows ok the website
of HPI, that's a www.hpi.de

109
00:10:05.240 --> 00:10:13.450 
and this request. he sent
to the DNS server.

110
00:10:14.120 --> 00:10:20.380 
DNS server please tell me what is
the IP address corresponding

111
00:10:20.390 --> 00:10:23.490 
to the domain
name hpi.de.

112
00:10:24.700 --> 00:10:30.870 
See domain name server has this information,
here is this information hpi.de

113
00:10:31.250 --> 00:10:36.910 
with the corresponding IP
address. So the DNS server can

114
00:10:36.910 --> 00:10:43.020 
look for the corresponding entry and
consent and reply back to the client.

115
00:10:43.200 --> 00:10:47.850 
telling it that it's the
corresponding IP address.

116
00:10:49.640 --> 00:10:53.320 
In this example so you see also
the communication, how it's

117
00:10:53.320 --> 00:10:58.140 
organized. The client needs some
information, the domain name server

118
00:10:58.310 --> 00:11:04.490 
has this information. So the client is
the requesting party and the server

119
00:11:04.600 --> 00:11:10.410 
is the replying party and then with
this knowledge now the client can,

120
00:11:10.750 --> 00:11:12.190 
the

121
00:11:12.200 --> 00:11:13.440 
human

122
00:11:13.450 --> 00:11:14.250 
can

123
00:11:14.260 --> 00:11:15.010 
put in the

124
00:11:15.010 --> 00:11:18.610 
URL in his
browser, then

125
00:11:18.760 --> 00:11:24.720 
after this reply, the system
can request the page

126
00:11:24.730 --> 00:11:29.410 
on the internet with the internet
address 141.89.225.126

127
00:11:29.760 --> 00:11:33.260 


128
00:11:35.250 --> 00:11:41.720 
All this is done in the background
when someone is requesting

129
00:11:41.730 --> 00:11:46.900 
such a URL, which is described
in form of a domain name.

130
00:11:47.370 --> 00:11:50.960 
So before the
system is able to

131
00:11:51.520 --> 00:11:56.980 
connect to the right computer it
needs the IP address. So it has to

132
00:11:57.100 --> 00:12:03.580 
ask the domain name a server
about his address and then it

133
00:12:03.580 --> 00:12:05.000 
can start to look
into that.

134
00:12:06.000 --> 00:12:10.560 
Question is how to organize
such a domain name system.

135
00:12:12.100 --> 00:12:14.440 
Best would be to
have one point

136
00:12:15.470 --> 00:12:20.180 
with a complete table which tells
exactly for which IP address,

137
00:12:20.470 --> 00:12:23.560 
to which IP address belongs
what domain name.

138
00:12:24.860 --> 00:12:29.540 
Let's think whether this is real,
is it possible to implement

139
00:12:30.460 --> 00:12:35.750 
such a central server. In the
beginning of the internet, it was

140
00:12:35.960 --> 00:12:38.960 
indeed such a kind
of organization.

141
00:12:40.010 --> 00:12:45.820 
If we imagine that there is only one
central DNS server on the internet

142
00:12:46.490 --> 00:12:50.230 
that means that all these computers
that want to do something,

143
00:12:50.230 --> 00:12:53.360 
that want to request
some service,

144
00:12:53.810 --> 00:13:00.180 
and working like humans with a domain
name, with the domain names of

145
00:13:00.550 --> 00:13:07.280 
describing that service then all
these computers have to first

146
00:13:07.690 --> 00:13:14.710 
connect to the DNS server to
request the IP address and then

147
00:13:14.850 --> 00:13:20.340 
the system can go to this a
service which is needed.

148
00:13:21.480 --> 00:13:26.860 
So there is a huge problem, the problem is
that more than one billion internet hosts

149
00:13:27.130 --> 00:13:29.480 
needed to use
this system.

150
00:13:30.770 --> 00:13:35.730 
So it's clear that such kind of system,
such kind of central position

151
00:13:36.010 --> 00:13:39.040 
would constantly
oh i know that

152
00:13:39.700 --> 00:13:46.780 
remember a there needs to be a establish
connection needs to a organize

153
00:13:47.090 --> 00:13:52.320 
before asking this a request
a connection established

154
00:13:52.320 --> 00:13:57.290 
and the interaction to get this
the information back and

155
00:13:57.770 --> 00:14:02.750 
so there would be a lot of traffic
in the internet with such

156
00:14:02.750 --> 00:14:07.580 
a lot of the same traffic to pointing
to the same a point in the internet

157
00:14:07.880 --> 00:14:11.640 
a a which is not
realizable in practice

158
00:14:12.040 --> 00:14:13.690 
so the new solution is

159
00:14:14.430 --> 00:14:19.540 
domain names space is
iraqis are organized

160
00:14:19.970 --> 00:14:27.060 
so the solution is to follow this here a a
a is a real construction of the namespace

161
00:14:27.860 --> 00:14:34.340 
so that the main name system address
space is divided in non overlapping

162
00:14:34.540 --> 00:14:35.440 
sones

163
00:14:37.590 --> 00:14:42.110 
remember domain names a it could
be a organized in a tree

164
00:14:42.750 --> 00:14:48.950 
and as soon it's in point in that
three and all the uh uh uh

165
00:14:48.960 --> 00:14:49.570 
uh uh uh uh uh uh uh uh uh uh
uh uh uh uh uh uh uh uh uh uh

166
00:14:49.570 --> 00:14:50.170 
uh uh uh uh uh uh uh uh uh uh
uh uh uh uh uh uh uh uh uh uh

167
00:14:50.170 --> 00:14:51.920 
uh uh uh uh uh uh uh uh uh
uh uh uh uh uh other names

168
00:14:52.610 --> 00:14:58.920 
which are reachable from this point so
as a sub tree of the domain name tree

169
00:14:59.040 --> 00:15:02.810 
this is the soul and
for each such stone

170
00:15:03.770 --> 00:15:09.130 
that means for each subdomain because in
three this was a domain that after remains

171
00:15:09.750 --> 00:15:13.940 
is administrated by
one dns server

172
00:15:14.790 --> 00:15:19.630 
in fact there are two but to
understand it is there is one

173
00:15:19.630 --> 00:15:25.950 
point one dns server says ok
primary names are of that so

174
00:15:27.020 --> 00:15:32.620 
and what does his names are
a primary names or no

175
00:15:34.260 --> 00:15:39.000 
each of this domain knows
all domain servers

176
00:15:39.580 --> 00:15:45.420 
in the zones of society
directly uh beneath it

177
00:15:46.120 --> 00:15:51.540 
so it knows that the nf there
is from each subdomain

178
00:15:53.790 --> 00:15:56.530 
it knows a one
dns server

179
00:15:57.270 --> 00:15:58.980 
officers soon above

180
00:16:00.410 --> 00:16:03.550 
in this way the
translation service

181
00:16:04.180 --> 00:16:09.240 
as there is in the internet
for each a ip address

182
00:16:09.720 --> 00:16:11.370 
and for each
domain name

183
00:16:12.390 --> 00:16:18.270 
specific server that able two a
trend to do this translation berg

184
00:16:19.170 --> 00:16:25.600 
best to look to a such a complex system
and when we look to an example

185
00:16:25.810 --> 00:16:31.970 
so let's hear a look an example
we have say i can i can was

186
00:16:32.040 --> 00:16:35.570 
was the institutions that
responsible for the

187
00:16:36.090 --> 00:16:40.650 
top level domains this is
called the root dns server

188
00:16:41.060 --> 00:16:45.740 
and then for each of the
domains we have another dns

189
00:16:46.770 --> 00:16:54.210 
for example for the d a t domain
there is a dns server yes dns era

190
00:16:54.470 --> 00:17:00.350 
he was sadistic so for dot com
for dot org there are the n

191
00:17:00.350 --> 00:17:06.070 
servers in each of this as there
was oh is it domain eleven

192
00:17:06.550 --> 00:17:13.600 
say no c a roots of i can
and each of us uh uh uh uh

193
00:17:13.600 --> 00:17:14.240 
uh uh uh uh uh uh uh uh uh uh
uh uh uh uh uh uh uh uh uh uh

194
00:17:14.240 --> 00:17:21.740 
here for a top level domain knows all the
domain name servers of c subdomains

195
00:17:22.360 --> 00:17:27.670 
it's a domain's so for example
that he names or knows

196
00:17:27.670 --> 00:17:33.870 
the names are of secret service a
in germany a google t knows the

197
00:17:34.240 --> 00:17:40.500 
a name server of the wikipedia
in germany wikipedia daddy no

198
00:17:40.500 --> 00:17:44.530 
it's a unit to know it's the domain
it's about from the united states the

199
00:17:44.850 --> 00:17:52.930 
nose or a all a domains which are
registered a in frankfurt with the enic

200
00:17:53.620 --> 00:17:59.290 
and now each domain name server a
here for example the domain name

201
00:17:59.490 --> 00:18:06.690 
server for the unit potsdam knows
alls is subdomains and open hp i

202
00:18:07.090 --> 00:18:12.140 
dot only minus potsdam that he
is apt domain or hps is apt

203
00:18:12.140 --> 00:18:14.810 
to mean of your presidency of
course there are many others

204
00:18:15.270 --> 00:18:20.850 
so each of the service knows one
which is immediately belonging

205
00:18:20.850 --> 00:18:25.200 
to the zone above and
all that are below

206
00:18:27.150 --> 00:18:32.980 
and a then a we have for example
in hp i a domain name server

207
00:18:33.030 --> 00:18:40.340 
which is responsible for the translation
work from domain into ip addresses

208
00:18:40.530 --> 00:18:42.850 
for all computers
inside hp i

209
00:18:44.570 --> 00:18:48.890 
now that's considered an example let's
consider that here is a client

210
00:18:49.060 --> 00:18:56.050 
and client that want to a want to
connect two the domain name server

211
00:18:56.360 --> 00:19:01.030 
of the university potsdam because
for example it wants to send

212
00:19:01.030 --> 00:19:03.020 
an e-mail or
request a page

213
00:19:04.350 --> 00:19:08.060 
so the a first what
this client is doing

214
00:19:08.610 --> 00:19:16.580 
he is for example looking a to google a
asking the corresponding dns server

215
00:19:17.510 --> 00:19:22.230 
who knows the ip address
of the united states d

216
00:19:23.120 --> 00:19:27.820 
you know what some d is not a
subdomain from a google d

217
00:19:28.240 --> 00:19:33.480 
for that reason google say sorry i do
the googles a dns server says sorry

218
00:19:33.830 --> 00:19:38.650 
i do not know a i do not
know a a how to translate

219
00:19:39.220 --> 00:19:42.590 
but i know someone
who should know

220
00:19:43.270 --> 00:19:50.930 
so good senses request now two the domain
name server of the top-level domain dative

221
00:19:51.460 --> 00:19:57.000 
t yeah your daddy this was the
top-level domain and the top-level

222
00:19:57.000 --> 00:20:04.900 
domain server dati have adopted the
nose definitely he c he names are

223
00:20:05.010 --> 00:20:12.610 
of sunni pitstop so a this request then
he is sent to the a name server of

224
00:20:12.770 --> 00:20:20.090 
potsdam d uh you see it's not
only a client wants to know as

225
00:20:20.090 --> 00:20:26.650 
a server of hp i so it's the only
potsdam knows hp i am some subdomain

226
00:20:26.790 --> 00:20:31.340 
so it knows the address of the
dns server of hp only part time

227
00:20:32.110 --> 00:20:37.940 
and it is only it's a the main
observer of the united states hpe

228
00:20:38.050 --> 00:20:45.080 
unified dominantly knows c
system this is a server this

229
00:20:45.080 --> 00:20:50.190 
is a concrete computer in hp i
got only part time d and this

230
00:20:50.190 --> 00:20:55.850 
computer has i p address one hundred
a one hundred a a forty one

231
00:20:56.120 --> 00:21:00.750 
don't eighty nine two hundred
twenty five one hundred twenty

232
00:21:01.460 --> 00:21:08.670 
so after this requests after this
forwarding this request now the a

233
00:21:08.860 --> 00:21:15.360 
dns server obviously a university
of hp i unified study is able

234
00:21:15.680 --> 00:21:21.890 
to set back the answer to our
client so perhaps i go back and

235
00:21:21.890 --> 00:21:29.470 
now it is sent a to thee a sensitive
information to the requesting client

236
00:21:31.090 --> 00:21:35.360 
perhaps a short interruption what
you see here is the client

237
00:21:36.700 --> 00:21:41.900 
a client in the first request
sending it to the google dns

238
00:21:43.460 --> 00:21:46.940 
because the gaurdian s
cannot answer the question

239
00:21:47.240 --> 00:21:53.260 
it turns it role into a client
and then says to the dns

240
00:21:53.990 --> 00:22:01.750 
so is it clyde server mordor is an
understanding for organizing a specific

241
00:22:01.910 --> 00:22:03.810 
step inside the
communication

242
00:22:05.730 --> 00:22:11.280 
now we have seen how it's organised
is that the the right system

243
00:22:11.280 --> 00:22:17.160 
is fined for the translation of
domain names into ip a processes

244
00:22:18.140 --> 00:22:21.040 
so it's a problem

245
00:22:21.800 --> 00:22:27.050 
his if he would have
this huge system

246
00:22:27.590 --> 00:22:29.780 
instead of a single
central point

247
00:22:30.500 --> 00:22:35.090 
we cause a lot of communication
similar to the central system

248
00:22:35.360 --> 00:22:40.510 
so we need something more to
make the domain name system

249
00:22:41.120 --> 00:22:47.100 
if an efficient service and the
idea to do this is yeah the name

250
00:22:47.450 --> 00:22:50.550 
of the domain name
systems caching

251
00:22:51.180 --> 00:22:57.340 
idea and the caching idea is
he said when sometimes uh

252
00:22:57.770 --> 00:23:03.010 
a a ip address is found after
that sequence of requests which

253
00:23:03.010 --> 00:23:06.170 
belongs to a certain a to
a certain domain name

254
00:23:06.780 --> 00:23:13.050 
sin city and essar has a
cache memory and store says

255
00:23:13.470 --> 00:23:19.760 
connection this ip address which is
assigned to the a to the domain name

256
00:23:19.910 --> 00:23:24.750 
it is a so called dns cache each
of the systems uh uh uh uh

257
00:23:24.750 --> 00:23:26.970 
uh uh uh uh uh uh we saw in our
uh uh uh uh uh uh uh uh uh

258
00:23:26.970 --> 00:23:28.870 
uh uh uh uh uh uh uh uh uh uh uh
uh uh domain name system he

259
00:23:28.880 --> 00:23:36.320 
has such in cash next time if a
google ok server is requested

260
00:23:36.670 --> 00:23:41.550 
four is the ip address of
hp i only bought them a t

261
00:23:42.620 --> 00:23:46.220 
it's not no more necessary
to go the long path

262
00:23:46.700 --> 00:23:52.390 
the request so the the main to the the
top-level domain a domain name server

263
00:23:52.620 --> 00:23:57.950 
a for the top-level domain d no
the server even the googles

264
00:23:57.950 --> 00:24:01.480 
can immediately response
to the requesting client

265
00:24:01.970 --> 00:24:07.060 
with the a visit translation data
said are stored in its cache

266
00:24:08.230 --> 00:24:14.800 
so a new request trickles a look
up first in the dns cache

267
00:24:16.070 --> 00:24:21.910 
if entered in a sketch there is the
assignment visibles and it said back

268
00:24:22.330 --> 00:24:28.540 
and if it's not then a the request is
forwarded to another domain names

269
00:24:29.780 --> 00:24:35.640 
they are two principles the principle
of locality a which tells at

270
00:24:36.170 --> 00:24:42.300 
if people start to communicate if two computers
start to communicate with each other

271
00:24:43.060 --> 00:24:46.510 
then it's very likely
that they continue

272
00:24:47.010 --> 00:24:53.510 
to communicate so this caching is
a a very efficient technique

273
00:24:53.800 --> 00:24:56.180 
not only here but also
in other context

274
00:24:56.670 --> 00:25:04.640 
two avoid a lot of communication a
communication a traffic in the internet

275
00:25:05.350 --> 00:25:10.120 
because it's very likely if it's
a client asked for that a

276
00:25:10.130 --> 00:25:14.600 
for that a
translation then

277
00:25:15.180 --> 00:25:21.800 
also next a time there will be
the request for a is this a

278
00:25:21.800 --> 00:25:26.170 
for this assignment between
the domain name and ip name

279
00:25:26.460 --> 00:25:30.630 
because the client has no
possibility to stores as declined

280
00:25:31.010 --> 00:25:35.610 
he relies on the dns cache and
when the client next time wants

281
00:25:35.610 --> 00:25:43.390 
to send a mail or wants to request a
service from hp units to manage d

282
00:25:43.770 --> 00:25:47.940 
a it has to request the domain
names and from the catch

283
00:25:48.150 --> 00:25:51.420 
the domain name as a record
immediately answers the question

284
00:25:52.060 --> 00:25:56.330 
so this dns caching is highly
effective a effective

285
00:25:57.080 --> 00:26:02.220 
because a the dns entries
do not change very often

286
00:26:02.830 --> 00:26:04.820 
so the uh uh uh uh uh uh uh uh
uh uh uh uh uh uh uh uh uh uh

287
00:26:04.830 --> 00:26:10.200 
uh uh uh uh uh cash c assignment
between a between a domain

288
00:26:10.200 --> 00:26:16.100 
name and ip address is
valid for a long time

289
00:26:18.270 --> 00:26:22.750 
the entries in the domain name a
a service sketches stay they

290
00:26:22.750 --> 00:26:27.690 
are for a given time so there's
a ttl time the time to live

291
00:26:27.690 --> 00:26:31.800 
you remember there was his field
in the head of the ip packages

292
00:26:32.500 --> 00:26:39.740 
and then it's time to live a time
has gone as the entry is deleted

293
00:26:40.150 --> 00:26:44.450 
another way that an entry is
deleted if so many other entries

294
00:26:44.450 --> 00:26:48.800 
come into the table then
as his entry falls out

295
00:26:51.310 --> 00:26:54.230 
we saw the domain name system
there's a lot of interaction

296
00:26:54.230 --> 00:26:56.830 
between the different
domain names zero

297
00:26:57.520 --> 00:27:01.910 
so how is this domain names or
communicate with each other

298
00:27:02.510 --> 00:27:07.150 
how does the data how are
the data structured

299
00:27:07.970 --> 00:27:13.290 
so i mentioned already ttl time to
live this is measured in seconds

300
00:27:13.850 --> 00:27:17.460 
if it's static for example eighty
six thousand four hundred

301
00:27:17.540 --> 00:27:24.860 
is a number of seconds of a day a volunteer
data they are for example sixty

302
00:27:25.020 --> 00:27:26.950 
second valid so
one minute

303
00:27:27.700 --> 00:27:33.200 
we have here is a field tfl's and
we have a class field that's

304
00:27:33.200 --> 00:27:36.980 
for example internet and then
we have type field and in the

305
00:27:36.980 --> 00:27:43.640 
type field we have various a
a kind of informations so

306
00:27:43.640 --> 00:27:50.410 
a m x n s and which tells different
things for example start

307
00:27:50.410 --> 00:27:56.540 
a a a loss of authority parameter
regarding a domain the hostname

308
00:27:56.540 --> 00:28:01.230 
is a type ia address a for a
mail exchange set domain name

309
00:28:01.230 --> 00:28:06.360 
of the email is requested so this
is a way how is he a in the

310
00:28:06.360 --> 00:28:10.470 
domain name systems a domain name
server are interacting which also

311
00:28:12.310 --> 00:28:14.030 
so here we saw

312
00:28:15.540 --> 00:28:18.440 
very important
internet application

313
00:28:19.270 --> 00:28:23.910 
typically no one b-side of
the computer scientist no

314
00:28:24.640 --> 00:28:29.290 
such a system such such a system
is in place but everyone is

315
00:28:29.290 --> 00:28:34.130 
using it because when once two
requested information or in service

316
00:28:34.460 --> 00:28:39.050 
that's described by the domain name
then the domain name service

317
00:28:39.050 --> 00:28:42.490 
has to find out the address of
the corresponding computer
