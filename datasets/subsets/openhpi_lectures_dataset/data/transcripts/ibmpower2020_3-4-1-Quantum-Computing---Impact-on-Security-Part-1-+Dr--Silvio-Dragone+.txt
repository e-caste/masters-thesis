WEBVTT

1
00:00:00.740 --> 00:00:06.370 
Hello and welcome to my presentation
on Cybersecurity Research.

2
00:00:06.380 --> 00:00:09.060 
In the Age of
Quantum Computing.

3
00:00:09.790 --> 00:00:14.690 
This is a presentation out
of the series of future of

4
00:00:14.690 --> 00:00:17.520 
computing on the
road to quantum.

5
00:00:18.190 --> 00:00:25.130 
My name is Dr. Silvio Dragone and I'm working
at the IBM research laboratory in Zurich

6
00:00:26.170 --> 00:00:30.770 
and on their located in
the security department.

7
00:00:31.670 --> 00:00:36.060 
My presentation is actually split
into two parts, the first

8
00:00:36.060 --> 00:00:41.180 
part is going to cover convert a general
introduction into cryptography

9
00:00:41.280 --> 00:00:43.670 
and kind of a
reminder on what

10
00:00:44.280 --> 00:00:52.030 
the description graffiti is based
on mathematically and also

11
00:00:52.210 --> 00:00:59.630 
the aspect of how quantum computers are
able to accelerate a certain aspect

12
00:00:59.840 --> 00:01:05.020 
or for this mathematics. And
out of this we are going to

13
00:01:05.020 --> 00:01:07.200 
make a risk assessment.

14
00:01:08.360 --> 00:01:14.400 
And the second part is mostly
covering than the quantum safe

15
00:01:14.580 --> 00:01:20.280 
algorithm and going to introduce
you what this means what they are

16
00:01:20.950 --> 00:01:28.910 
and we are going to make a deeper
dive into so called lattice based

17
00:01:29.430 --> 00:01:32.260 
algorithms. So
let's start

18
00:01:33.110 --> 00:01:40.640 
as a reminder todays cryptography
relied completely on the fact

19
00:01:40.900 --> 00:01:50.760 
that the operational forward operation
is much less compute incentive

20
00:01:50.940 --> 00:01:55.900 
than doing the inverse operation
that's our look into one

21
00:01:55.900 --> 00:02:00.810 
of the examples down here in
this table let's take the RSA.

22
00:02:01.300 --> 00:02:06.770 
So the four computation is a
simple integer multiplication,

23
00:02:07.010 --> 00:02:12.800 
whereas the inverse operation
that's the factorization problem.

24
00:02:13.250 --> 00:02:20.300 
And factorization is a very hard
problem to solve on normal computers.

25
00:02:21.220 --> 00:02:27.280 
And just to go on on the list
there is the DSA which is

26
00:02:27.690 --> 00:02:33.000 
forwards operation is a modular
exponentiation and the inverse operation

27
00:02:33.180 --> 00:02:36.830 
would be in the so called
discrete logarithm problem

28
00:02:37.680 --> 00:02:42.440 
and there is the elliptic curve
cryptography which is based

29
00:02:42.450 --> 00:02:47.870 
on the pointer multiplication
and inverse operation again is

30
00:02:47.870 --> 00:02:51.430 
then the elliptic curve
discrete logarithm problem.

31
00:02:53.000 --> 00:02:56.740 
so it was a little
bit abstract

32
00:02:59.490 --> 00:03:04.570 
let's have a look into

33
00:03:04.580 --> 00:03:11.080 
the example of the RSA. So
RSA actually consists of

34
00:03:11.500 --> 00:03:17.580 
two keys one is the public key
which is a key pair of (e and N)

35
00:03:17.770 --> 00:03:23.200 
and there is third the private key
which is here labeled as (d)

36
00:03:24.200 --> 00:03:30.070 
and here we see also a kind
of the fundamental of RSA,

37
00:03:30.230 --> 00:03:34.840 
the public key can be distributed
to anybody and everybody

38
00:03:34.840 --> 00:03:40.600 
can use it to encrypt something but
only the owner of the private key

39
00:03:40.760 --> 00:03:43.560 
is going to be
able to decrypt

40
00:03:44.180 --> 00:03:49.040 
the encrypted content and that's reason
why this is called the public key

41
00:03:49.360 --> 00:03:51.000 
in encryption scheme.

42
00:03:52.280 --> 00:03:57.830 
So again how is the encryption
being performed that's

43
00:03:57.830 --> 00:04:03.950 
a fairly simple model exponentiation
so you take the message of (m)

44
00:04:04.320 --> 00:04:10.170 
that you want to encrypt you comput
m to the power of e modulos (m)

45
00:04:10.280 --> 00:04:15.150 
and that gives you the ciphertext
(z) in this example. If

46
00:04:15.150 --> 00:04:17.990 
we take the example as
displayed on the slights

47
00:04:18.510 --> 00:04:24.030 
we have the public key (e) and
then which are three and fifteen

48
00:04:24.040 --> 00:04:28.180 
and lets have the message to be
seven and so therefore the

49
00:04:28.180 --> 00:04:30.390 
cipher would be
then thirteen.

50
00:04:31.600 --> 00:04:35.420 
To decrypt this
message and now

51
00:04:36.150 --> 00:04:44.520 
is we just take the decipher text
computed to the power of (d)

52
00:04:44.740 --> 00:04:50.960 
modulus (n) and again lets a take
the deciphered text thirteen

53
00:04:51.440 --> 00:04:58.770 
and compute it back
actually decrypt it with

54
00:04:58.780 --> 00:05:04.360 
the private key which is here
three and by surprise the value

55
00:05:04.360 --> 00:05:10.440 
seven is actually again our
message which is a kind of

56
00:05:10.540 --> 00:05:14.150 
a small proved at dessert
encryption scheme works.

57
00:05:15.570 --> 00:05:22.730 
So but to understand how factorization
is now really the the key to

58
00:05:22.920 --> 00:05:28.660 
a crack does scheme lets have
a deeper understanding how

59
00:05:28.660 --> 00:05:36.710 
the parameters are actually generated for
these RSA scheme so let's start with

60
00:05:37.100 --> 00:05:44.370 
the modulus of the RSA and (n) which
consists of two prime factors so

61
00:05:44.500 --> 00:05:52.120 
here represented as (p) and (q) in the
example we had fifteen and as the models

62
00:05:52.420 --> 00:05:57.670 
and therefore our prime
factors are three and five.

63
00:05:59.470 --> 00:06:03.450 
We need also to know the so
called the Euler-phi-function

64
00:06:04.470 --> 00:06:12.290 
which the Euler-phi-function out of (n)
is equal to (p) minus one multiplied

65
00:06:12.400 --> 00:06:19.960 
by (q) minus one, so it's a
fairly simple operation

66
00:06:19.970 --> 00:06:25.190 
if you know actually the
prime factors of (n)

67
00:06:26.140 --> 00:06:30.110 
and then you only
have to compute the

68
00:06:30.600 --> 00:06:37.570 
Coprime in teacher (e) but actually
(e) can be freely chosen

69
00:06:37.930 --> 00:06:42.380 
let's take here in the
example (e) two be three

70
00:06:43.310 --> 00:06:49.420 
but then we know that (e)
times (d) our private key

71
00:06:49.890 --> 00:06:54.680 
must be congruent to one
modulus phi of (n)

72
00:06:55.990 --> 00:07:01.700 
and if we follow our example
(d) therefore is the model

73
00:07:01.700 --> 00:07:09.030 
inverse of (e) and here it will
be equal to three again.

74
00:07:10.260 --> 00:07:15.370 
So but here you hope we get
an understanding that,

75
00:07:15.810 --> 00:07:23.330 
if we know (n) and if we know (e) the
only thing that holds us back to

76
00:07:23.630 --> 00:07:28.330 
re-computing (d) is only
the fact that we can

77
00:07:28.910 --> 00:07:32.770 
have a hard time to compute
the Euler-phi- function

78
00:07:33.350 --> 00:07:37.700 
and the Euler-phi- function for
this to compute we need to note

79
00:07:37.740 --> 00:07:40.450 
the prime factors
(p) and (q).

80
00:07:41.320 --> 00:07:46.090 
So in this example this
doesn't sound as a hard job

81
00:07:46.100 --> 00:07:54.230 
so let's have look into more realistic
value and nowadays the models then

82
00:07:54.430 --> 00:08:01.150 
is most probably an integer a composite
integer of two thousand bits

83
00:08:01.630 --> 00:08:08.170 
and riding it down as I did in this
exampleit takes a lot of lines

84
00:08:08.870 --> 00:08:15.470 
and now you can take out your
pocket computers or calculators

85
00:08:15.470 --> 00:08:19.970 
and just start to try to
factorise this value.

86
00:08:22.130 --> 00:08:26.800 
Just to give you a kind of a
forecast of how long most of you

87
00:08:26.800 --> 00:08:32.060 
probably are going to compute
and try to factorized this,

88
00:08:32.060 --> 00:08:35.370 
this going to take you most
probably millions of years.

89
00:08:36.470 --> 00:08:43.330 
So that's how a on what the
security is completely based on

90
00:08:43.340 --> 00:08:49.170 
it's really the fact that this operation
on very powerful computers today

91
00:08:49.360 --> 00:08:55.790 
is still a waste of time, so going
and kind of trying to crack

92
00:08:55.930 --> 00:09:01.840 
directly by factorizing these
values is not the way to go down

93
00:09:02.290 --> 00:09:08.270 
but in the future there is something
new coming out and that is the

94
00:09:08.510 --> 00:09:14.110 
Quantum Computer. And if we apply
actually shor quantum algorithm

95
00:09:14.110 --> 00:09:18.140 
on such quantum computers
the whole problem

96
00:09:18.670 --> 00:09:22.700 
can now be solved
within some hours.

97
00:09:23.900 --> 00:09:27.140 
Ok so what's the trick?

98
00:09:28.100 --> 00:09:31.910 
Let's have a look into how shor-
algorithm is actually working

99
00:09:31.910 --> 00:09:37.930 
and what is kind of the key
feature of this shor- algorithm.

100
00:09:38.230 --> 00:09:44.890 
So again the problem is to factorize
(n) our modulus into the

101
00:09:44.890 --> 00:09:46.810 
coreprimes (p) and (q).

102
00:09:48.260 --> 00:09:55.160 
We as a first step we are
going to just guess

103
00:09:55.160 --> 00:10:00.280 
value (g) normally
called witnesses here

104
00:10:01.050 --> 00:10:06.590 
and we know that (g) just has to be
smaller than and it has currently

105
00:10:06.590 --> 00:10:09.540 
to the coreprime
to (n).

106
00:10:10.910 --> 00:10:17.070 
Now we apply Euler generalized
Fermat's Theorem on this

107
00:10:17.310 --> 00:10:21.870 
where we are representing alpha
with Euler-phi-function

108
00:10:22.370 --> 00:10:27.220 
and then we know that (g) to the power
of alpha is going to be congurent

109
00:10:27.580 --> 00:10:30.060 
to one modulus (n).

110
00:10:31.500 --> 00:10:37.180 
So if we write this in a different
form we can also say that

111
00:10:37.190 --> 00:10:43.410 
(g) to the power of alpha minus
one his equal key times (n)

112
00:10:45.440 --> 00:10:50.940 
and if you do a small little
binominal transformation we

113
00:10:50.940 --> 00:10:55.950 
can actually come up with the
equation seen here on the

114
00:10:55.950 --> 00:11:00.280 
button where we say (g) to the
power of half plus one and (g)

115
00:11:00.280 --> 00:11:07.260 
to the power half minus one that's
equal to (k) times (n) and

116
00:11:07.260 --> 00:11:14.120 
therefore we have actually two equations
four (p) prime and (q) prime.

117
00:11:15.480 --> 00:11:18.260 
So in a second step now

118
00:11:18.990 --> 00:11:26.780 
we have to find actually within
the sequence of this power

119
00:11:27.180 --> 00:11:32.930 
operations so (g) to the power of
zero modellisation and so on,

120
00:11:33.510 --> 00:11:37.880 
the period alpha, so
that means at this

121
00:11:38.420 --> 00:11:39.610 
one point (a)

122
00:11:41.310 --> 00:11:47.190 
is going to be equal zero again
and that's going to be our

123
00:11:47.190 --> 00:11:53.660 
period length that we are seeking
for. But so far I mean that

124
00:11:53.660 --> 00:11:58.290 
was no different to standard
the classical computers

125
00:11:58.290 --> 00:12:02.260 
as well, so that means
if we draw this

126
00:12:02.730 --> 00:12:11.670 
values of the sequence of (a) in a graph
it's going to look like a periodic

127
00:12:11.810 --> 00:12:16.050 
graph and if we
know from our

128
00:12:16.830 --> 00:12:23.050 
physics if we are going to analyze
the spectrum of this graphs

129
00:12:23.260 --> 00:12:28.830 
so called fourier transformation
we are going to find the periods

130
00:12:29.340 --> 00:12:34.730 
and now the keys that we can do
this fourier transformation

131
00:12:34.820 --> 00:12:40.340 
on a quantum computer, so called
quantum fourier transformation.

132
00:12:40.520 --> 00:12:43.480 
And that's where we get
gained a speed up.

133
00:12:44.500 --> 00:12:50.730 
So even on today's small little
quantum computers like a

134
00:12:50.740 --> 00:12:53.170 
five cubit quantum

135
00:12:53.170 --> 00:12:56.710 
computer, you can already
experience this algorithm,

136
00:12:57.160 --> 00:13:06.790 
so if if you go for example
on the kiss kit website and

137
00:13:06.790 --> 00:13:10.790 
I have put the link on
the bottom of my charts

138
00:13:11.600 --> 00:13:16.250 
where you can follow this it's
going to explain one or one

139
00:13:16.340 --> 00:13:23.290 
how this shor algorithm can be applied
in kiss kit on the IBM q experience

140
00:13:23.970 --> 00:13:27.990 
and as you can see already on
on the top of my slides it's

141
00:13:27.990 --> 00:13:33.050 
not a very complicated operation
to perform and on the button

142
00:13:33.560 --> 00:13:40.620 
you see some bars and those are the results
after a certain amount of repetition

143
00:13:41.140 --> 00:13:48.280 
of this experiment and as you know the
more that you repeat this experiment

144
00:13:48.500 --> 00:13:55.960 
the better your result will be
shown by the highest probability.

145
00:13:56.340 --> 00:14:01.590 
And in this example my highest
probability was at the value of two

146
00:14:03.280 --> 00:14:11.600 
and now I just have to compute the
probability of two arise in my period

147
00:14:12.430 --> 00:14:20.600 
because if I know dis are probability this
is going to be inverse proportional

148
00:14:20.720 --> 00:14:26.670 
to alpha and if so this
probability here is a quarter

149
00:14:26.730 --> 00:14:31.180 
if I just computed with two and
therefore alpha being four.

150
00:14:33.120 --> 00:14:37.590 
So if we set this four together
with our witness which is a

151
00:14:37.590 --> 00:14:40.920 
in this example seven
we will end up

152
00:14:41.610 --> 00:14:45.660 
p primed to be fifty and q
prime to be forty eight.

153
00:14:46.350 --> 00:14:52.190 
If we not just put in place this values
and compute the greatest common divider

154
00:14:52.310 --> 00:14:57.530 
with our models (n) we end up
with the values five and three.

155
00:14:57.640 --> 00:15:00.000 
So yes that's the
right answer.

156
00:15:01.330 --> 00:15:10.620 
So what's the impact on a quote from the
quantum computer on today's cryptography

157
00:15:11.680 --> 00:15:18.270 
on the table a year on the
right side of my presentation

158
00:15:18.930 --> 00:15:25.170 
you find two kind of categories.
One being the symmetric

159
00:15:25.180 --> 00:15:30.070 
cryptographic algorithm and the other
one the public key cryptographic

160
00:15:30.070 --> 00:15:34.520 
algorithm sometimes also referred
as easy metric algorithm.

161
00:15:35.140 --> 00:15:41.100 
And in the column in the middle
which is labelled pre-

162
00:15:41.320 --> 00:15:45.540 
quantum security
levels, so that means

163
00:15:46.370 --> 00:15:52.760 
today's security levels this is
a kind of value of strengths

164
00:15:52.770 --> 00:15:58.720 
of certain cryptographic algorithm, so
the higher the better in that sense.

165
00:15:58.880 --> 00:16:03.560 
And if you just look at the first
lined in the symmetric algorithms

166
00:16:03.650 --> 00:16:08.220 
which is labeled as a one
hundred and twenty eight

167
00:16:08.370 --> 00:16:14.950 
we see that the security level is today being
labeled as one hundred and twenty-eight

168
00:16:15.240 --> 00:16:20.440 
bit as well. So but if we
look on the very right

169
00:16:20.860 --> 00:16:28.400 
column we see that if we actually
apply so called grew as algorithm

170
00:16:28.560 --> 00:16:34.020 
on a quantum computer the security
level of this algorithm will be

171
00:16:34.220 --> 00:16:37.210 
half so it's only sixty
four bit anymore.

172
00:16:37.810 --> 00:16:44.540 
And that's actually true for almost
all the symmetric key algorithm

173
00:16:44.720 --> 00:16:50.100 
so applying grew as algorithm
on a quantum computer it's

174
00:16:50.540 --> 00:16:57.250 
mostly going to half the security of
today's classical security strength.

175
00:16:58.150 --> 00:17:04.810 
So have a look there now on the
easy metric or the public key

176
00:17:06.040 --> 00:17:12.710 
part of this table here we
have the RSA let's take up

177
00:17:12.720 --> 00:17:16.710 
this example because we have
been looking into it so far

178
00:17:16.960 --> 00:17:21.950 
and we see that in the first role
dear RSA three thousand bit

179
00:17:22.310 --> 00:17:26.860 
is having actually
today a hundred and

180
00:17:26.860 --> 00:17:28.660 
twenty eight
better security.

181
00:17:29.640 --> 00:17:35.900 
And applying shor's algorithm which we
just have seen before in my presentation

182
00:17:36.740 --> 00:17:41.590 
the security level on quantum computer
we have to label it to be broken.

183
00:17:42.160 --> 00:17:49.350 
And it simply so small we definitely cannot
apply or use this algorithm anymore.

184
00:17:50.090 --> 00:17:58.180 
and there that's true for all the public
key algorithm he listed in this

185
00:17:58.340 --> 00:18:07.120 
table not only for our safety and why is that
so groomer gives a quadratic acceleration

186
00:18:07.240 --> 00:18:13.360 
a on cracking decimetric a
algorithm whereas shor is giving

187
00:18:13.360 --> 00:18:21.670 
us exponential exploit an acceleration on
our asymmetric algorithm and therefore

188
00:18:21.860 --> 00:18:25.720 
that's the big difference between
the groove and the shore algorithm

189
00:18:26.950 --> 00:18:29.010 
on the quantum
computer.

190
00:18:30.040 --> 00:18:35.670 
So the question is now naturally
but when will quantum

191
00:18:35.670 --> 00:18:41.690 
computer than exist when will be big
enough actually to harm our warm

192
00:18:42.010 --> 00:18:48.290 
RSA algorithm by for instance now
first of all we have to learn

193
00:18:48.430 --> 00:18:53.400 
how many so called logical
quantum a qubits

194
00:18:54.250 --> 00:19:00.930 
are required to brake by a way of
example the two thousand bit or say

195
00:19:01.200 --> 00:19:04.810 
and that's about
four thousand

196
00:19:05.630 --> 00:19:07.360 
logical qubits

197
00:19:08.590 --> 00:19:12.820 
and now to make a prediction
when four thousand logical

198
00:19:12.820 --> 00:19:18.910 
qubits are available here and we
first have to understand maybe

199
00:19:18.920 --> 00:19:24.570 
the algorithm is going to improve
in the meantime maybe also

200
00:19:24.570 --> 00:19:28.870 
the algorithm techniques are
going to be improved means they

201
00:19:28.870 --> 00:19:34.360 
can all of us sudden handle so
called noisy quantum bits or

202
00:19:34.360 --> 00:19:38.670 
there are hybrid schemes between
classical computers and a

203
00:19:39.210 --> 00:19:45.660 
a quantum computers are being improved
so that's from the algorithm

204
00:19:45.660 --> 00:19:47.800 
part that have to be

205
00:19:48.680 --> 00:19:53.370 
looked at but of course as well from
the technology parts, so that means

206
00:19:53.650 --> 00:19:59.160 
there might be better error corrections
on quantum bits are being in place

207
00:19:59.370 --> 00:20:05.810 
a of course the how to build there
or higher density of qubits within

208
00:20:06.070 --> 00:20:10.900 
sir in general it's very
difficult to predict actually

209
00:20:11.980 --> 00:20:17.430 
the when exactly a quantum
computer will exist to actually

210
00:20:18.170 --> 00:20:23.810 
crack a four thousand
two thousand bit.

211
00:20:24.790 --> 00:20:29.570 
But we do have as some sample
points on existing quantum

212
00:20:29.570 --> 00:20:32.870 
computers already
today and lets

213
00:20:33.640 --> 00:20:38.800 
try to interpret later from these few
sample points that we have like

214
00:20:39.310 --> 00:20:43.530 
in two thousand and nineteen
the IBM system one

215
00:20:43.970 --> 00:20:50.130 
was introduced by IMB and some other
systems and we can just say ok

216
00:20:50.320 --> 00:20:56.410 
if our technology is going to make
progress does at the same way

217
00:20:56.820 --> 00:21:04.710 
we very soon are going to hit
quite larger systems and just

218
00:21:05.070 --> 00:21:10.680 
as a matter of fact a few a
days ago when i'm just a

219
00:21:11.170 --> 00:21:16.800 
recording this video now IBM has
actually announced her as a hundred

220
00:21:16.950 --> 00:21:23.240 
bit a quantum computer in the year
of two thousand and twenty one

221
00:21:23.350 --> 00:21:28.360 
called eagle and also I then
showed the road map that in two

222
00:21:28.360 --> 00:21:33.500 
thousand and twenty three actually
a thousand bit quantum computer.

223
00:21:33.630 --> 00:21:38.680 
So that means actually there is
even a faster technology trend

224
00:21:38.680 --> 00:21:45.310 
and so far we have predicted and
and we see that also google

225
00:21:45.310 --> 00:21:52.470 
as announced in this summer symposium
that in two thousand twenty nine

226
00:21:52.660 --> 00:22:00.220 
they expect two however and one million
physical cubit system in place.

227
00:22:00.470 --> 00:22:05.360 
which will have to capability
of far being error corrected

228
00:22:05.400 --> 00:22:10.310 
and therefore we would expect that
this most probably is comparable

229
00:22:10.310 --> 00:22:13.860 
to a thousand bit
logical qubit system.

230
00:22:14.620 --> 00:22:19.370 
So we can still say ah yes but
our saying needs four thousand

231
00:22:19.580 --> 00:22:22.920 
so at least four
times this system,

232
00:22:23.570 --> 00:22:30.020 
yes but then let's have a look
at the elliptic curve how many

233
00:22:30.350 --> 00:22:34.920 
logical cubits are is is requiring
this system and that's all

234
00:22:34.920 --> 00:22:39.700 
of sudden only thousand three
hundred nautical qubit of buying

235
00:22:39.710 --> 00:22:41.290 
the example
displayed here.

236
00:22:42.580 --> 00:22:45.680 
So that means, we

237
00:22:47.500 --> 00:22:49.730 
know by a fact that

238
00:22:50.370 --> 00:22:54.660 
different algorithms are going
to be impacted earlier

239
00:22:55.090 --> 00:22:59.140 
then other once that's something
we can definitely say,

240
00:22:59.580 --> 00:23:03.670 
but again exactly when
specific algorithms

241
00:23:04.190 --> 00:23:10.250 
are going to be impacted at this
moment it's a hard prediction.

242
00:23:12.780 --> 00:23:18.460 
But nevertheless since we have
now seen that there will

243
00:23:18.460 --> 00:23:22.490 
be an impact most probably in the
foreseeable future on these

244
00:23:22.490 --> 00:23:28.460 
algorithms what is to risk what
how does the quantum computer

245
00:23:28.460 --> 00:23:30.350 
are going to impact
this security.

246
00:23:31.640 --> 00:23:37.820 
So we are going to look at
this on three aspects,

247
00:23:38.670 --> 00:23:44.340 
that means a what is a
criminal or adversary

248
00:23:44.780 --> 00:23:51.920 
being able to do if he holds a big
large quantum computer in its hand

249
00:23:52.350 --> 00:24:00.100 
the one thing we are going to see on the
aspect of a fraudulent authentication.

250
00:24:01.890 --> 00:24:07.350 
The second aspect is going to be
on that kind of straightforward

251
00:24:07.400 --> 00:24:11.940 
it's like he is going to be able
to crack the encryption keys

252
00:24:12.910 --> 00:24:18.200 
and another aspect a a the last
aspect that we are going

253
00:24:18.200 --> 00:24:23.100 
to evaluate here is, what
happens if he's being able to

254
00:24:23.100 --> 00:24:27.870 
forge a digital
signatures. So

255
00:24:29.640 --> 00:24:35.190 
every enterprise nowadays
is creating certificates

256
00:24:35.690 --> 00:24:42.380 
the certificate shall actually
prove that something that

257
00:24:42.380 --> 00:24:47.950 
they are providing like a software
or codes or updates of coats

258
00:24:48.160 --> 00:24:54.000 
is really coming from this enterprise
because they have signed

259
00:24:54.000 --> 00:24:59.920 
this part of them a code or
application with their keys that

260
00:24:59.920 --> 00:25:03.520 
only does
enterprise holds

261
00:25:04.330 --> 00:25:10.440 
the secret and keeps it secret.
And that's good because

262
00:25:10.440 --> 00:25:17.370 
you like to update your operating system
or your malware pattern only by

263
00:25:18.190 --> 00:25:23.140 
the provider of this application
and not just by some

264
00:25:23.690 --> 00:25:31.770 
random internet application
provider that is going to

265
00:25:31.770 --> 00:25:34.180 
update your operating
system and so on.

266
00:25:34.810 --> 00:25:38.430 
And therefore you're always verifying
this certificate or actually

267
00:25:38.440 --> 00:25:43.160 
your system is loading updates only
if thecertificate is still valid

268
00:25:43.550 --> 00:25:45.610 
that the update
has been signed.

269
00:25:46.700 --> 00:25:51.790 
Also from you as an individual
you can actually make

270
00:25:51.790 --> 00:25:57.570 
sure that certain transactions
you make a from your online

271
00:25:57.570 --> 00:26:03.960 
buy that you are definitely only
going to buy from an online vendor

272
00:26:04.160 --> 00:26:10.720 
that you authenticated to be really him and
all the bank being really authenticated

273
00:26:11.270 --> 00:26:15.730 
that the de credit transactions
being are authenticated

274
00:26:15.730 --> 00:26:20.920 
by it but you have also maybe a
certain blockchain assets that

275
00:26:20.920 --> 00:26:22.980 
you have signed and
you keep even

276
00:26:23.600 --> 00:26:27.230 
uh the secret by
its own and

277
00:26:28.020 --> 00:26:32.040 
if now a quantum
computer is in place

278
00:26:33.560 --> 00:26:40.920 
anybody can actually decipher from
your certificate the secret

279
00:26:41.220 --> 00:26:48.060 
and therefore in the future sign
any software update or malware

280
00:26:48.060 --> 00:26:50.610 
pattern on its behalf.

281
00:26:51.300 --> 00:26:58.230 
So that means are you are not going to be
able to actually authenticate yourself

282
00:26:58.600 --> 00:27:04.930 
because anybody can actually decipher
your secrets from the certificate or

283
00:27:05.170 --> 00:27:12.870 
a being provided so then let's
have a look in as an example:

284
00:27:12.870 --> 00:27:17.760 
In our operating system there and
many thousands of certificates are

285
00:27:18.020 --> 00:27:22.240 
laying around on how long are
they are going to be valid and

286
00:27:22.250 --> 00:27:28.280 
let's have year the Mac OS Sierra lets
not even the latest and greatest

287
00:27:28.910 --> 00:27:31.660 
operating system or
version, sorry

288
00:27:32.720 --> 00:27:38.640 
if we have a look into it and we see
all there are root certificates

289
00:27:38.840 --> 00:27:43.460 
that have an expiration date up to
two thousand and thirty eight

290
00:27:44.010 --> 00:27:47.620 
or have look at the
apples root certificate

291
00:27:48.030 --> 00:27:53.260 
that has an expiration date of
two thousand and thirty five

292
00:27:53.780 --> 00:28:01.070 
a and is being using a shor one
operation so that means we know that

293
00:28:01.690 --> 00:28:05.260 
the smaller the
security is that

294
00:28:06.120 --> 00:28:10.350 
the faster the probability
is going to be

295
00:28:10.810 --> 00:28:17.740 
attacked by a quantum computer and we
have register another example of

296
00:28:18.490 --> 00:28:22.610 
of a certificate that we found
in this system which will last

297
00:28:22.620 --> 00:28:26.760 
up to two thousand and twenty
eight, ok that's a that's more

298
00:28:26.760 --> 00:28:32.090 
reasonable ok now it's using sha
one and only a thousand bit RSA.

299
00:28:32.990 --> 00:28:36.070 
So these are really not

300
00:28:36.760 --> 00:28:41.350 
that nice findings that
we are seeing here

301
00:28:42.820 --> 00:28:49.500 
so the other aspect on the second
aspect that we are going to

302
00:28:50.070 --> 00:28:55.830 
evaluate here is what about the
adversary of being able to

303
00:28:56.160 --> 00:28:59.190 
crack your
encrypted keys.

304
00:28:59.880 --> 00:29:05.130 
Certain datas like your health
data or governmental data

305
00:29:05.340 --> 00:29:12.170 
have to last many decades and
I'm talking here up two

306
00:29:12.170 --> 00:29:17.850 
hundred years by way of example for
radiation records coming from

307
00:29:18.010 --> 00:29:23.050 
f germany and that's by
governmental rule so that means

308
00:29:23.470 --> 00:29:33.040 
records are being taken today have to be
stored securely for a hundred years

309
00:29:34.170 --> 00:29:40.270 
and that means in this period
of time the probability that

310
00:29:40.270 --> 00:29:44.550 
the at a certain time anybody
actually can read these records

311
00:29:44.680 --> 00:29:50.280 
is going to be high because it's
just a very long lasting pure it

312
00:29:52.410 --> 00:29:59.440 
and the other aspect is like
all the internet traffic

313
00:29:59.450 --> 00:30:02.550 
that you're providing
currently we are using a

314
00:30:03.000 --> 00:30:10.860 
https to secure our transactions on on
the internet or VPN for enterprise

315
00:30:11.300 --> 00:30:17.280 
access but if you think of it
since this traffic is travelling

316
00:30:17.280 --> 00:30:24.180 
through a public network anybody can
wiretap those data and can harvest it,

317
00:30:24.390 --> 00:30:30.050 
if there really are of interest.
Even so in the future like

318
00:30:30.480 --> 00:30:37.710 
a business secret from an enterprise so
in the future the probability order

319
00:30:38.100 --> 00:30:43.570 
the risk that somebody can
decrypted is fairly high.

320
00:30:45.980 --> 00:30:53.090 
And the last example in this
series is about forging

321
00:30:53.100 --> 00:30:58.920 
signature digital signatures. So
think of the example i'm going

322
00:30:58.920 --> 00:31:04.090 
to buy a house and I'm going to
digitally sign it with my key

323
00:31:04.250 --> 00:31:09.860 
to contract that this house is being
owned by myself and I have signed this.

324
00:31:11.410 --> 00:31:13.000 
And that's today

325
00:31:14.590 --> 00:31:21.450 
in the near future a criminal
might be able actually to

326
00:31:23.110 --> 00:31:29.360 
decipher or cracked my secret
are of my certificate

327
00:31:30.110 --> 00:31:32.330 
by just reading
the public

328
00:31:33.110 --> 00:31:37.020 
contract that's being

329
00:31:37.750 --> 00:31:41.650 
public available in
a in the city hall

330
00:31:42.750 --> 00:31:48.820 
and can actually just sign a
very new contract on my behalf

331
00:31:48.830 --> 00:31:53.610 
or on actually his behalf because
then he is going to change

332
00:31:53.850 --> 00:32:01.420 
the owner not being myself
anymore but somebody else and

333
00:32:01.690 --> 00:32:07.360 
the authority will not be able
actually to distinguish which

334
00:32:07.360 --> 00:32:12.570 
is going to which was the original
contract a if it's being stored away

335
00:32:12.700 --> 00:32:14.610 
only digitally.

336
00:32:17.460 --> 00:32:22.250 
So let's go back to the question
when we asked ourself

337
00:32:22.260 --> 00:32:27.500 
when will a quantum computers
will be in place so

338
00:32:28.620 --> 00:32:34.330 
the question about when exactly is
not that much of an interest,

339
00:32:34.720 --> 00:32:39.750 
if we know it's going to be broken
in the foreseeable future

340
00:32:40.380 --> 00:32:46.810 
so that means the data that we think
are secure today for the future

341
00:32:47.660 --> 00:32:53.050 
are already lost so that means
the threat is today but the

342
00:32:53.050 --> 00:32:55.240 
impact is going to
be in the future.

343
00:32:56.970 --> 00:33:02.220 
So what that all means we have
to change our cryptographic

344
00:33:02.220 --> 00:33:07.820 
algorithm we simply have to
do this is it the first

345
00:33:07.820 --> 00:33:12.670 
time that we do so? No not at
all. I mean we do have a couple

346
00:33:12.670 --> 00:33:18.290 
of examples that we can list here and
let's start just with the asymmetric

347
00:33:18.870 --> 00:33:27.030 
algorithm there we had to increase
the key's length from almost every

348
00:33:27.350 --> 00:33:34.520 
five years simply because the length
were not sufficient even to

349
00:33:34.990 --> 00:33:38.910 
last on the classical
computers.

350
00:33:40.080 --> 00:33:44.990 
The symmetric keys algorithm I
mean we started with this,

351
00:33:45.000 --> 00:33:51.650 
then we went through tripolis
and nowadays we are at RSA, so

352
00:33:51.660 --> 00:33:55.020 
we have changed it over the
course of this existence

353
00:33:56.820 --> 00:34:00.830 
the hash is even longer the list.
I mean we started at with

354
00:34:00.830 --> 00:34:06.600 
MD5 went to SHA1 done SHA2
came recently up and

355
00:34:06.650 --> 00:34:12.060 
just in the recent years Nist
also published a new version

356
00:34:12.060 --> 00:34:15.850 
SHA3 and they recommend
us to change to SHA3

357
00:34:17.100 --> 00:34:22.630 
so it is not new that we do this
but let's have a look into

358
00:34:22.640 --> 00:34:27.380 
a lessons learned by way of
example of the transition from

359
00:34:27.380 --> 00:34:29.060 
SHA1 OR SHA2

360
00:34:29.750 --> 00:34:33.510 
I mean already back in
two thousand and five

361
00:34:34.160 --> 00:34:39.730 
the cryptographers actually considered
shore one not to be secure

362
00:34:40.870 --> 00:34:45.380 
in two thousand and five in two
thousand and seventeen actually

363
00:34:45.490 --> 00:34:51.590 
it has been proven that a functional
collision that means like a

364
00:34:51.600 --> 00:34:57.080 
functional technique to
find a coalition, was

365
00:34:57.400 --> 00:35:03.080 
put in place by the CWI
institute and Google

366
00:35:03.980 --> 00:35:10.980 
but SHA1 is still in use today and
that's now over fifteen years ago

367
00:35:11.150 --> 00:35:17.530 
and the reason is because if you
stopped developing today a product

368
00:35:18.290 --> 00:35:22.610 
this is going to take you
a certain amount of time

369
00:35:23.700 --> 00:35:28.560 
and your product is going to
last another period of time.

370
00:35:29.010 --> 00:35:35.340 
And a both periods of time have
to be considered that's delight

371
00:35:35.340 --> 00:35:37.080 
Spam of your security

372
00:35:37.990 --> 00:35:43.930 
and the problem is that within
this lifespan of security

373
00:35:43.950 --> 00:35:49.790 
now a problem is going to arise
like the Q day so the quantum

374
00:35:49.790 --> 00:35:52.760 
computer being placed at
crack sandy's serve

375
00:35:53.300 --> 00:35:57.090 
a cryptographic algorithm
that you have chosen

376
00:35:57.530 --> 00:36:00.570 
back at the start of
your development.

377
00:36:01.430 --> 00:36:07.890 
The whole rest of your security
lifespan your data is at risk

378
00:36:12.220 --> 00:36:17.480 
with that I'd like to conclude my
first part of my presentation

379
00:36:18.270 --> 00:36:24.800 
and I just want to leave you
with again a bumper sticker

380
00:36:24.800 --> 00:36:26.620 
of the lessons learned
so that means

381
00:36:28.280 --> 00:36:34.990 
the threat is already today even so
the impact of the quantom computer

382
00:36:35.100 --> 00:36:36.850 
might be in the future.

383
00:36:37.690 --> 00:36:41.310 
Thank you very much for your intention
and I hope you have enjoyed

384
00:36:41.310 --> 00:36:42.120 
the first part.
