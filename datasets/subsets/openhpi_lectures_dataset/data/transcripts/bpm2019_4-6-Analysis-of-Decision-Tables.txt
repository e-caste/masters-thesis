WEBVTT

1
00:00:00.000 --> 00:00:04.580 
Welcome to video clip six in which
we analyze decision tables.

2
00:00:05.960 --> 00:00:11.880 
Decision tables are very important assets for
the organization. Therefore the quality

3
00:00:12.260 --> 00:00:15.360 
of decision tables should
be as high as possible.

4
00:00:15.770 --> 00:00:21.210 
And this is why we investigate analysis
techniques in this video clip.

5
00:00:22.480 --> 00:00:26.290 
The first property or the first
analysis that we like to do

6
00:00:26.290 --> 00:00:30.150 
is that of completeness and
completeness as a questions are

7
00:00:30.150 --> 00:00:35.520 
actually all input combinations
covered by the decision table or

8
00:00:35.810 --> 00:00:39.430 
are there certain input combinations
for which there is no

9
00:00:39.430 --> 00:00:41.010 
output to the
decision table.

10
00:00:42.390 --> 00:00:46.650 
The second thing that we
analyze is consistency. So is

11
00:00:46.650 --> 00:00:51.180 
the decision table actually in
line with its hit policy?

12
00:00:52.960 --> 00:00:56.560 
So first let's look at the
completeness of decision tables.

13
00:00:57.930 --> 00:01:03.260 
So again completeness a bit more more
concrete as for all combinations

14
00:01:03.260 --> 00:01:09.890 
of input values is their rules that is their
rule that covers this input combination.

15
00:01:11.170 --> 00:01:16.450 
So the first example we'll
have here an example of a

16
00:01:16.720 --> 00:01:21.700 
determine a health risk level
so we have here two input,

17
00:01:22.030 --> 00:01:23.980 
a column that
is the age,

18
00:01:24.720 --> 00:01:28.370 
and that is a medical history.
So we had that example on

19
00:01:28.780 --> 00:01:31.120 
we looked at this example
already before.

20
00:01:31.750 --> 00:01:35.960 
And in addition to that
what we see here

21
00:01:35.960 --> 00:01:40.460 
we have the data types or the domain
of ages between one and hundred

22
00:01:40.460 --> 00:01:45.760 
and of medical history is good and
bad. So we have to check if the

23
00:01:46.140 --> 00:01:50.790 
decision table for all combinations
of values between one and hundred

24
00:01:50.800 --> 00:01:55.090 
and good and bad for all of
these combinations there is at

25
00:01:55.090 --> 00:01:56.740 
least one row matching.

26
00:01:57.600 --> 00:02:01.860 
So let's take a look at this
table that we have here. So we

27
00:02:01.980 --> 00:02:05.420 
only first of all in order to
check for completeness we only

28
00:02:05.420 --> 00:02:10.210 
need to look at the input column, we do
not care for the output. Output is

29
00:02:10.460 --> 00:02:13.280 
completely irrelevant for
completeness check.

30
00:02:14.030 --> 00:02:18.500 
But we have to check if for each
combination of age and medical history

31
00:02:18.760 --> 00:02:22.370 
there is one row there
is at least one row.

32
00:02:23.270 --> 00:02:26.990 
Ok so let's investigate
here age medical history

33
00:02:27.680 --> 00:02:35.410 
and by rows one and two we see that
for persons aged below twenty

34
00:02:36.040 --> 00:02:40.390 
with any combination of the
medical history we have rows. So

35
00:02:40.400 --> 00:02:44.630 
for person younger than twenty
we have the completeness

36
00:02:44.640 --> 00:02:47.510 
guaranteed or
checked already.

37
00:02:49.100 --> 00:02:55.550 
for persons between twenty and sixty five
we also have the completeness because

38
00:02:55.940 --> 00:03:00.900 
this row three tells us that
regardless of the medical history

39
00:03:00.900 --> 00:03:05.340 
we have and we have a match for persons
between twenty and sixty five.

40
00:03:06.070 --> 00:03:11.740 
And also for people older than sixty
five we have input combinations

41
00:03:11.740 --> 00:03:15.410 
for all possible values of the medical
history which is good and bad.

42
00:03:15.540 --> 00:03:18.490 
Therefore we can conclude for
this example that the decision

43
00:03:18.490 --> 00:03:23.960 
table is actually complete
because all combinations

44
00:03:23.960 --> 00:03:28.370 
of input values are covered
by that decision table.

45
00:03:30.220 --> 00:03:33.670 
Let's look at another
example, so example two.

46
00:03:34.470 --> 00:03:40.170 
Again we have the same the
same let's say output the

47
00:03:40.170 --> 00:03:45.220 
same domain so aged between one
hundred medical history is again

48
00:03:45.900 --> 00:03:51.580 
good and and bad and now we have
to investigate so the table

49
00:03:51.580 --> 00:03:55.210 
is of course a bit a bit different,
so it is a variation. So we

50
00:03:55.210 --> 00:04:01.500 
have to check here. Again for
people younger than twenty

51
00:04:02.360 --> 00:04:05.520 
and good it's ok for people older
than twenty and good it's

52
00:04:05.520 --> 00:04:10.220 
ok and for bad for all input
combinations with medical history bad

53
00:04:10.620 --> 00:04:15.630 
it's fine because we have
here a this hyphen sign at

54
00:04:15.630 --> 00:04:19.380 
the age so the age does not play a
role here so for any combination

55
00:04:19.620 --> 00:04:24.130 
with medical history bad it
is it is guaranteed that

56
00:04:24.130 --> 00:04:27.430 
there is one row that matches
this input combination.

57
00:04:28.610 --> 00:04:32.450 
However if we look at that table
very closely we will find

58
00:04:32.450 --> 00:04:35.530 
that there is one problem one slight
problem with the table. And

59
00:04:35.530 --> 00:04:40.060 
that is the situation where
where a person is twenty years

60
00:04:40.060 --> 00:04:43.020 
of age and the person has
a good medical history.

61
00:04:43.680 --> 00:04:46.770 
Because it will not
match row one

62
00:04:47.230 --> 00:04:50.750 
because twenty is not smaller
twenty and it will not match

63
00:04:51.060 --> 00:04:55.030 
a row two because it's twenty
is not greater than twenty.

64
00:04:56.570 --> 00:04:59.470 
And therefore we can
conclude that this table

65
00:04:59.970 --> 00:05:04.500 
is not complete since the case
age twenty and medical history

66
00:05:04.810 --> 00:05:06.180 
good is not covered.

67
00:05:09.940 --> 00:05:13.740 
You could say that well that
occurs very seldomly and

68
00:05:13.750 --> 00:05:19.160 
it's maybe not not so important
but if you think about

69
00:05:19.170 --> 00:05:22.810 
a certain case that's that's not
true. So what is the effect

70
00:05:22.810 --> 00:05:25.110 
of incomplete decision
tables? When

71
00:05:25.600 --> 00:05:30.110 
a process with these uncovered
values is executed the decision

72
00:05:30.120 --> 00:05:31.290 
just cannot be taken.

73
00:05:32.280 --> 00:05:36.900 
So on the decision for age
twenty medical history good or

74
00:05:36.900 --> 00:05:41.540 
equals good can just not be taken
so so there might be an exception

75
00:05:41.540 --> 00:05:45.260 
raised or there might be some
some default value given

76
00:05:45.260 --> 00:05:48.790 
back which is not the value you
want you want to see. Therefore

77
00:05:49.060 --> 00:05:53.810 
it's in general it's undocumented
unclear behavior when

78
00:05:53.810 --> 00:05:57.680 
you invoke a decision with an
input combination for which

79
00:05:57.680 --> 00:06:00.670 
the decision has no output
no defined output.

80
00:06:01.450 --> 00:06:06.460 
On the other hand completeness makes sure
that a decision can always be taken.

81
00:06:07.780 --> 00:06:12.250 
It's a very good practice to check
for table completeness and

82
00:06:12.280 --> 00:06:16.980 
we'll see in a later that
tools that there are tools

83
00:06:17.220 --> 00:06:21.910 
also signavio tool provides automatic
checking of this property

84
00:06:21.910 --> 00:06:23.870 
and of some other
properties as well.

85
00:06:26.420 --> 00:06:32.430 
So after completeness considerations we now
turn to consistency of decision tables.

86
00:06:32.960 --> 00:06:38.740 
First we start with a single with single
hit properties that can be analyzed.

87
00:06:40.080 --> 00:06:45.470 
So the unique property or
unique or single hit policy

88
00:06:45.470 --> 00:06:49.750 
tells us that for each input
combination there is exactly one

89
00:06:49.750 --> 00:06:56.220 
row that matches. So from that
we can derive the unique

90
00:06:56.230 --> 00:07:00.540 
property that says that is
violated it if there is an input

91
00:07:00.540 --> 00:07:03.380 
combination that matches
two or more rows.

92
00:07:04.620 --> 00:07:07.950 
Also we look at this
example at example one

93
00:07:08.390 --> 00:07:13.040 
where we have also variant of
a table that we seen before.

94
00:07:13.040 --> 00:07:16.760 
So we have age medical history
and health risk level.

95
00:07:17.980 --> 00:07:24.170 
And for the age we have here
values smaller than twenty and

96
00:07:24.170 --> 00:07:28.740 
good we have low smaller than twenty
and bad we have medium and so forth.

97
00:07:29.910 --> 00:07:34.740 
So we can check and we see that the
same situation as we had before

98
00:07:34.740 --> 00:07:39.180 
so the unique single hit policy
is satisfied in that example.

99
00:07:40.750 --> 00:07:44.890 
Now we have a variation of the
table that we have seen before

100
00:07:45.490 --> 00:07:50.010 
in which the difference is here
encircled so we have on the last

101
00:07:50.160 --> 00:07:55.070 
row row number five says us that
the age can be greater or

102
00:07:55.070 --> 00:08:01.440 
equal to sixty five. So now
we have the situation that

103
00:08:01.450 --> 00:08:05.750 
actually there is for one input
combination two rows match.

104
00:08:06.510 --> 00:08:11.460 
So the row input combination
sixty five bad for that

105
00:08:11.460 --> 00:08:15.830 
input combination rule five matches
and we look carefully also

106
00:08:15.830 --> 00:08:21.740 
for sixty five bad row three
matches. Because here we have

107
00:08:22.050 --> 00:08:25.060 
the interval between twenty and
sixty five and we don't care

108
00:08:25.060 --> 00:08:27.940 
for the medical histories so
bad is also allowed here.

109
00:08:28.480 --> 00:08:31.820 
And therefore we have a
violation of the unique

110
00:08:32.250 --> 00:08:36.980 
unique property yeah because
there's an input combination

111
00:08:36.980 --> 00:08:40.490 
that is the combination sixty
five bad for which two rules

112
00:08:40.490 --> 00:08:42.930 
match three and five and
that is disallowed

113
00:08:43.340 --> 00:08:45.610 
by the unique a
single hit policy.

114
00:08:48.960 --> 00:08:56.320 
So let's now look at the any property.
So the any property is violated even

115
00:08:56.670 --> 00:09:01.540 
if a given input combination
matches two rows and these two

116
00:09:01.540 --> 00:09:03.660 
rows have different
outputs.

117
00:09:04.940 --> 00:09:10.820 
So lets look at this example
again is the any property

118
00:09:10.830 --> 00:09:16.220 
violated in that example.
And we will have here

119
00:09:16.630 --> 00:09:23.610 
again matches for rules three and five for the
input combination that we have seen before

120
00:09:23.920 --> 00:09:28.010 
and we also see that the output
sorry we also see that the

121
00:09:28.010 --> 00:09:32.840 
output of the matching rules three
and five is different. So the

122
00:09:32.840 --> 00:09:39.550 
output of rule three a is medium and
the output for rule five is high.

123
00:09:40.280 --> 00:09:43.790 
Therefore we cannot choose
any of the matching rules

124
00:09:44.190 --> 00:09:48.690 
and therefore the any property
is actually violated in

125
00:09:48.690 --> 00:09:49.600 
this example.

126
00:09:52.230 --> 00:09:59.000 
So the question emerges if
the priority single hit

127
00:09:59.000 --> 00:10:01.780 
policy can be
violated as well.

128
00:10:02.670 --> 00:10:06.150 
Recall that the priority allows
several matches that can also

129
00:10:06.150 --> 00:10:10.580 
have different output value and
the concrete single output

130
00:10:10.580 --> 00:10:15.180 
value is then determined by the ordering
of the values in the output domain.

131
00:10:16.850 --> 00:10:21.530 
And in that example again we
have the same the same table

132
00:10:21.530 --> 00:10:25.740 
same matches. So we have the again a
match for medium and a match for high

133
00:10:25.900 --> 00:10:29.920 
for that input combination
for sixty five bad.

134
00:10:30.640 --> 00:10:35.340 
And now we need to look at these
two output which is medium

135
00:10:35.340 --> 00:10:41.590 
and high and we have to check here what
is the which of the output values

136
00:10:41.830 --> 00:10:46.480 
has the higher priority and that is
medium because it occurs before high

137
00:10:46.740 --> 00:10:51.280 
in the output domain. Therefore
rule three will be chosen and

138
00:10:51.290 --> 00:10:53.080 
a medium will
be returned.

139
00:11:02.120 --> 00:11:06.270 
We now have a slight
variation in which we have

140
00:11:07.440 --> 00:11:13.590 
in which we have this equal
sign associated to row four.

141
00:11:14.310 --> 00:11:19.710 
So whenever there's an input
combination which is sixty five

142
00:11:19.720 --> 00:11:24.170 
which is sixty five or larger
this row four matches as well.

143
00:11:24.610 --> 00:11:29.190 
So and then the question is if this
any is any property is violated

144
00:11:29.450 --> 00:11:33.600 
and it's not violated because we
have matching rows three and

145
00:11:33.600 --> 00:11:37.600 
four and the output of all matching
rows three and four is medium

146
00:11:37.860 --> 00:11:43.840 
and therefore the any property
is not violated. So we can use

147
00:11:43.840 --> 00:11:49.160 
this table with the any single hit
policy without without any problem.

148
00:11:51.260 --> 00:11:56.980 
This brings us to the end of video clip six
in which we analyzed decision tables.

149
00:11:57.430 --> 00:12:01.480 
We first of all looked at the
completeness of decision tables

150
00:12:01.980 --> 00:12:07.270 
and we said that well decision
table needs to have

151
00:12:07.570 --> 00:12:13.380 
at least one matching row for each
possible input combination.

152
00:12:13.660 --> 00:12:17.200 
And in the second part we
took a look at consistency

153
00:12:17.200 --> 00:12:21.030 
of decision tables. Sowhat are
the properties of decision

154
00:12:21.030 --> 00:12:26.210 
tables that they should have in order
to comply you want to the hit policy.
