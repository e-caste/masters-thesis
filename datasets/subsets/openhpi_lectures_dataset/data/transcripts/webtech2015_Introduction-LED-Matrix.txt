WEBVTT

1
00:00:05.080 --> 00:00:08.840 
Hello everybody. Welcome to the Excursion of

2
00:00:09.610 --> 00:00:12.480 
the LED Matrix and

3
00:00:13.280 --> 00:00:17.090 
we will experiment, we'll do a couple of experiments with the

4
00:00:17.090 --> 00:00:21.420 
javascript conditions and loops and arrays. And Martin will explain you

5
00:00:22.190 --> 00:00:24.620 
how it will work, what you will have to do.

6
00:00:25.580 --> 00:00:29.520 
Yeah, thank you Tom. We have the LED Matrix. We also have already

7
00:00:30.030 --> 00:00:32.160 
brought it here today. So you'll see it here.

8
00:00:32.810 --> 00:00:37.070 
Now it's HPI written on it, but that's just like a start screen.

9
00:00:37.580 --> 00:00:43.650 
And first of all, I'll just tell you how we install the complete experiment.

10
00:00:43.770 --> 00:00:48.730 
So we have an STM32F4-Discovery (Board)

11
00:00:49.480 --> 00:00:53.950 
which is shown here on the slide now. That's the board you are

12
00:00:54.380 --> 00:00:57.760 
communicating with your javascript over ethernet.

13
00:00:58.440 --> 00:01:04.170 
And the main part is the LED display, you see here also with us.

14
00:01:04.700 --> 00:01:10.440 
And you can write some stuff on it. It's sixteen times sixteen LED big,

15
00:01:11.930 --> 00:01:15.110 
the screen. And you can just program it.

16
00:01:15.960 --> 00:01:21.150 
It's like a two dimensional array because every screen has a

17
00:01:21.370 --> 00:01:24.720 
two dimensional nominee. Ok, Sometimes you have a 3D TV

18
00:01:25.030 --> 00:01:26.790 
at home but nevertheless it's a 2D

19
00:01:27.510 --> 00:01:30.130 
dimension on the screen.

20
00:01:31.700 --> 00:01:37.130 
The other module is the ENC28J60 (LAN-Module)

21
00:01:37.990 --> 00:01:41.890 
and that's connected also to our board. We see the connection

22
00:01:41.890 --> 00:01:46.240 
a little bit later. Then we have a server. We're going to running

23
00:01:46.660 --> 00:01:48.940 
we have a webcam. That's a

24
00:01:49.730 --> 00:01:53.280 
microsoft life cam, just if you are interested in

25
00:01:54.100 --> 00:01:57.770 
The hardware we use. And we also have some sensors.

26
00:01:58.480 --> 00:02:04.560 
And that's a temperature sensor and the photo conductive cell which is

27
00:02:04.700 --> 00:02:08.540 
for light measuring. So it's like a light sensor.

28
00:02:09.500 --> 00:02:13.700 
And we use code ocean. It was already used in a earlier course

29
00:02:13.810 --> 00:02:18.020 
in java. So right now we do it with javascript.

30
00:02:18.460 --> 00:02:23.880 
And how it's connected with our board. So you program it in code ocean. It's

31
00:02:24.360 --> 00:02:27.510 
an environment for coding online. So it's an online editor.

32
00:02:28.160 --> 00:02:30.440 
We will show you that in a minute.

33
00:02:31.190 --> 00:02:35.680 
Right, then you see how it works. So it's very easy to understand, I think.

34
00:02:36.390 --> 00:02:39.150 
So this one is communicating with our server

35
00:02:39.770 --> 00:02:43.990 
which is connected to the LAN module and this LAN module is

36
00:02:43.990 --> 00:02:46.030 
connected with our board. So you can,

37
00:02:46.980 --> 00:02:50.080 
by programming in code ocean, the java script, you can directly

38
00:02:50.080 --> 00:02:55.880 
communicate with our board. And this board controls LED display and

39
00:02:57.510 --> 00:03:00.010 
also the temperature sensors are connected,

40
00:03:00.510 --> 00:03:02.790 
temperature and light sensor are connected to the board.

41
00:03:03.330 --> 00:03:07.040 
So what happens, you can just send a message or

42
00:03:07.940 --> 00:03:10.360 
program something in code ocean with javascript.

43
00:03:10.790 --> 00:03:14.460 
Then you send a message to our board and

44
00:03:15.010 --> 00:03:20.060 
you can get the values of the times or sensors or Matrix or an array

45
00:03:20.330 --> 00:03:23.690 
in this case to set the screen and

46
00:03:24.790 --> 00:03:30.770 
with some of your data. So you can enable the LED. So we have three colors.

47
00:03:31.430 --> 00:03:34.310 
At least here we only have two colors. So we have red,

48
00:03:34.790 --> 00:03:38.100 
green and then the light mix of it. So it's orange.

49
00:03:38.580 --> 00:03:40.730 
Or you can just have it off.

50
00:03:41.570 --> 00:03:43.680 
It's all described in the task later.

51
00:03:45.120 --> 00:03:47.790 
And then finally after you send something to the

52
00:03:48.610 --> 00:03:53.140 
LED matrix, then a picture will be taken from the matrix and

53
00:03:53.630 --> 00:03:57.440 
you will get this picture back in code ocean and see what you

54
00:03:57.440 --> 00:03:58.720 
did on the real hardware.

55
00:04:00.790 --> 00:04:06.140 
So, that's it for the installation of the experiment. Now we start

56
00:04:06.500 --> 00:04:07.290 
with code ocean.

57
00:04:08.560 --> 00:04:11.260 
And that's how code ocean looks like.

58
00:04:12.620 --> 00:04:17.080 
So I will show you in a minute the real environment as you

59
00:04:17.080 --> 00:04:18.880 
see it in the process or the

60
00:04:20.190 --> 00:04:22.410 
tool is started from within OpenHPI.

61
00:04:23.190 --> 00:04:27.010 
So you go to this exercise that we present you in

62
00:04:27.410 --> 00:04:32.860 
this excursion, and you just click on the button start exercise and then

63
00:04:33.900 --> 00:04:37.510 
the code ocean tool will open up in a new window, and

64
00:04:39.060 --> 00:04:42.690 
you can start programming in this tool, and then you can either

65
00:04:42.690 --> 00:04:47.350 
run the code or you can score the code. So running the code means you just

66
00:04:49.130 --> 00:04:51.810 
execute the code that you've written and

67
00:04:52.310 --> 00:04:54.900 
depending on what you've written in your code

68
00:04:55.490 --> 00:04:58.740 
something might happen or maybe not, you will definitely, you

69
00:04:58.740 --> 00:05:04.860 
will see if you have a syntax error. It will be shown that something doesn't work.

70
00:05:05.940 --> 00:05:10.790 
That would mean you have to rewrite your code so that the syntax is

71
00:05:10.930 --> 00:05:11.740 
at least correct.

72
00:05:13.730 --> 00:05:17.840 
Then the next step would be to score your code. That's the button on the right

73
00:05:18.420 --> 00:05:23.550 
bottom right, and scoring the code means that your code is run

74
00:05:23.550 --> 00:05:28.110 
against some tests, some software tests that we've written and

75
00:05:28.110 --> 00:05:33.350 
prepared for these exercises, and so you can then see if your code

76
00:05:33.650 --> 00:05:38.360 
not only is syntactically correct but also

77
00:05:38.660 --> 00:05:45.340 
is producing the results that we are expecting. And that you should be expecting

78
00:05:45.710 --> 00:05:49.040 
as well from the task given in the exercise.

79
00:05:49.490 --> 00:05:53.540 
So it's an experiment, so maybe our board is not available all

80
00:05:53.540 --> 00:05:57.080 
the time, but you can do the scoring all the time because it's

81
00:05:57.660 --> 00:06:01.610 
not using the real board, it's just using our tests we created for you.

82
00:06:01.910 --> 00:06:04.620 
So you can all the time check if you program everything right.

83
00:06:05.190 --> 00:06:09.220 
But normally you can also see it on the matrix, but maybe sometimes other

84
00:06:09.490 --> 00:06:13.170 
there are too many other users that it's maybe occupied because we have only one

85
00:06:17.140 --> 00:06:20.470 
office matrix in our office standing there. You can just try it.

86
00:06:20.990 --> 00:06:24.160 
Running the code, we'll show you the screenshot of the

87
00:06:25.960 --> 00:06:31.030 
display and scoring the code we'll run your code against our tests.

88
00:06:31.140 --> 00:06:34.450 
So scoring the code should always be possible and running the code

89
00:06:34.830 --> 00:06:40.520 
sometimes might not work at once, if the board is occupied already.

90
00:06:41.130 --> 00:06:47.420 
Right, so normally we also give you some start code. So some snippet

91
00:06:47.820 --> 00:06:51.300 
and then we remark that you should start writing your code at a

92
00:06:51.730 --> 00:06:55.510 
special position, and yeah that's normally the part where you should add something.

93
00:06:56.670 --> 00:07:01.330 
The other part is just for controlling the send to send to the matrix, like

94
00:07:01.510 --> 00:07:04.240 
the last function is tcp client sent

95
00:07:04.890 --> 00:07:09.390 
LED Matrix. So that's a function which just was sent to matrix you created

96
00:07:09.730 --> 00:07:16.100 
and then will be shown. So don't change the code that we've provided. Just add

97
00:07:16.270 --> 00:07:21.420 
your own code. You should normally add only something and if you maybe destroy something and

98
00:07:21.530 --> 00:07:25.240 
think 'I should go back'.You can start over on the left bottom

99
00:07:25.520 --> 00:07:28.810 
of code ocean and then you get the initial code again.

100
00:07:29.350 --> 00:07:32.970 
So if you want to keep something from the code that you've already written,

101
00:07:33.590 --> 00:07:36.710 
you want to process the start over button, you should

102
00:07:37.020 --> 00:07:42.170 
copy and paste it, between notepad or otherwise it's gone. Right.

103
00:07:43.220 --> 00:07:47.290 
So normally you have to write an array for your programming. This

104
00:07:48.310 --> 00:07:53.380 
mattrix we already talked about this. So the interesting part is only that

105
00:07:53.810 --> 00:07:57.580 
0x0 point of the matrix is on the

106
00:07:57.990 --> 00:08:03.270 
top left of the screen, and then it goes on the X axis. So

107
00:08:03.690 --> 00:08:06.560 
zero one will be this point. So the second one

108
00:08:07.010 --> 00:08:11.420 
and so on. We have shown a little bit in the graphics and it goes

109
00:08:11.820 --> 00:08:15.580 
to the end to fifty fifty. So we start counting at zero. So

110
00:08:16.500 --> 00:08:20.850 
that's why fifteen fifteen is the highest because zero is already the first number.

111
00:08:22.820 --> 00:08:25.850 
And then if you run the code with the right code

112
00:08:26.500 --> 00:08:28.970 
not like it is now because nothing will happen there.

113
00:08:29.980 --> 00:08:34.240 
Then you will get the image of your programming back from

114
00:08:35.430 --> 00:08:41.200 
the board. So now let's switch to the actual code ocean environment and

115
00:08:41.810 --> 00:08:44.300 
we can maybe give you some additional tasks.

116
00:08:46.310 --> 00:08:50.200 
Good idea to see how it works. So

117
00:08:55.470 --> 00:08:57.290 
as you can see here, we have the

118
00:08:57.930 --> 00:09:02.850 
let me make that a little bit bigger so that you can see it better.

119
00:09:04.850 --> 00:09:07.690 
So this would be one of the tasks or would be the task

120
00:09:08.740 --> 00:09:13.670 
that we've just been talking about with the diagonal line.

121
00:09:15.200 --> 00:09:18.840 
We already gave you the function on

122
00:09:20.010 --> 00:09:23.640 
the template of the function, and what you need to do is to

123
00:09:23.710 --> 00:09:28.570 
add some code here. And just put it in here between these lines.

124
00:09:28.570 --> 00:09:32.680 
Doesn't mean that you only need one line you can add of course additional lines.

125
00:09:33.230 --> 00:09:40.040 
And so what I'm going to show you know is how you can

126
00:09:41.860 --> 00:09:45.500 
add some output of your own just to test or to

127
00:09:46.140 --> 00:09:53.350 
debug your program. And to do that, I will comment out this line

128
00:09:54.160 --> 00:09:58.270 
and also the last line because otherwise I will get errors because

129
00:09:58.870 --> 00:10:02.010 
this requires that we have the actual matrix.

130
00:10:02.450 --> 00:10:04.050 
And so

131
00:10:07.020 --> 00:10:10.960 
I won't go into that here of course because that's your task.

132
00:10:11.050 --> 00:10:11.880 
and you should not solve it for your students.

133
00:10:14.500 --> 00:10:19.120 
So what you can do to print out some

134
00:10:19.120 --> 00:10:20.720 
code on the on the output

135
00:10:21.430 --> 00:10:27.220 
window is to use the console dot lock command from javascript.

136
00:10:29.270 --> 00:10:32.930 
Console dot log

137
00:10:34.410 --> 00:10:37.860 
and you can print here whatever you want, like Martin's

138
00:10:40.350 --> 00:10:41.130 
name for example.

139
00:10:45.180 --> 00:10:48.010 
Don't forget to semi-colon. Yes. In javascript.

140
00:10:50.190 --> 00:10:54.790 
So then we start. And then we start and you see this is the

141
00:10:54.790 --> 00:10:59.130 
output window. This is so you can see just switched from one tab

142
00:10:59.300 --> 00:11:02.620 
to the other. So we've been here in the workspace tab. And now it's

143
00:11:03.060 --> 00:11:06.490 
automatically the program output tab and

144
00:11:06.900 --> 00:11:11.030 
if you use this control lock command this will just print out what you wanted

145
00:11:11.130 --> 00:11:16.090 
to log here. So you could also log the contents of your array, for example.

146
00:11:16.210 --> 00:11:19.260 
or your matrix before sending it to the

147
00:11:20.360 --> 00:11:21.390 
actual display.

148
00:11:22.000 --> 00:11:26.610 
And yeah, if you then send it to the display and

149
00:11:26.610 --> 00:11:30.990 
the display is not occupied, then you will see this position. The

150
00:11:32.320 --> 00:11:33.310 
screenshot of the web.

151
00:11:34.540 --> 00:11:38.360 
Can you also show maybe the scoring? I think you won't get any points for this first task.

152
00:11:38.820 --> 00:11:42.670 
I hope so. So yeah this is the scoring button.

153
00:11:42.820 --> 00:11:47.020 
So this does not run against the actual matrix. This runs against

154
00:11:47.020 --> 00:11:49.320 
the test cases that we've written and prepared for you.

155
00:11:49.770 --> 00:11:52.070 
And if you go to the scoring

156
00:11:53.080 --> 00:11:56.420 
then it will show you something went wrong,

157
00:11:57.150 --> 00:12:00.080 
and it gives you sometimes

158
00:12:00.890 --> 00:12:06.530 
what we expected or what results we expected and what your code returned and

159
00:12:07.000 --> 00:12:09.820 
this will show you maybe

160
00:12:10.430 --> 00:12:13.890 
will give you some hines in which direction you can go and can

161
00:12:15.020 --> 00:12:18.000 
debug your code. To provide the correct result

162
00:12:18.850 --> 00:12:20.470 
so not everything is wrong.

163
00:12:21.510 --> 00:12:26.440 
That was for sure the case. Yeah sure we didn't solve anything now, so.

164
00:12:26.810 --> 00:12:30.180 
Yeah ok so maybe we go back now to the slides

165
00:12:30.710 --> 00:12:33.460 
because then we just show you

166
00:12:34.370 --> 00:12:37.210 
the task shortly because we have four tasks prepared.

167
00:12:38.410 --> 00:12:42.050 
So the first task we already saw that's just a red line which is

168
00:12:42.370 --> 00:12:45.880 
which goes from the left top to the right bottom.

169
00:12:46.390 --> 00:12:49.720 
So kind of easy then we have the second task-

170
00:12:50.690 --> 00:12:54.540 
the squares. So we have three squares which are

171
00:12:55.100 --> 00:12:59.290 
connected to each other and two squares are normally green

172
00:12:59.290 --> 00:13:00.620 
and red and where they

173
00:13:02.190 --> 00:13:04.580 
meet each other, you have it orange.

174
00:13:05.870 --> 00:13:09.520 
So and then a little bit

175
00:13:10.390 --> 00:13:13.040 
I have the wrong numbers, but the third task is a light.

176
00:13:15.690 --> 00:13:19.950 
But I think you can imagine how it works. So the light as you get

177
00:13:20.140 --> 00:13:24.990 
value. So light value you from the sensor, from the light sensor. And

178
00:13:26.190 --> 00:13:30.130 
then you have to show if it's a sunny or maybe partly cloudy

179
00:13:30.140 --> 00:13:34.180 
or completely cloudy or if it's night. So we already prepared

180
00:13:34.180 --> 00:13:37.750 
some images for it. So you can call it with some functions.

181
00:13:37.750 --> 00:13:39.550 
It's described in the task directly.

182
00:13:40.420 --> 00:13:43.810 
And then you show the right image for the right light value.

183
00:13:44.610 --> 00:13:48.300 
And finally we have a temperature task. So you see

184
00:13:50.240 --> 00:13:56.430 
the thermometer and you see that we have twenty degrees and thirty degrees as points

185
00:13:56.910 --> 00:13:59.790 
marked with this yellow line.

186
00:14:00.250 --> 00:14:03.960 
So currently we have a temperature of twenty two degrees in

187
00:14:03.960 --> 00:14:06.210 
your office, is that right? Yeah ok.

188
00:14:07.360 --> 00:14:12.390 
So you see now twenty two degrees. You have to show this and yeah that's

189
00:14:12.500 --> 00:14:15.640 
more complicated so you just get a temperature value which

190
00:14:15.640 --> 00:14:19.120 
is between zero and four thousand ninety five, then you have

191
00:14:19.120 --> 00:14:23.560 
to recalculate it to a voltage. And then you have to calculate

192
00:14:23.560 --> 00:14:28.040 
the voltage to a degree. So five millivolts means

193
00:14:28.620 --> 00:14:32.300 
one degree but we give all this information

194
00:14:32.740 --> 00:14:34.610 
in the task. So in the task it's also described.

195
00:14:35.370 --> 00:14:38.320 
So you have it in Kelvin and then you have to recalculate from Kelvin to celsius.

196
00:14:40.360 --> 00:14:41.860 
And then you show it.

197
00:14:42.590 --> 00:14:44.290 
You just have to round the number to a

198
00:14:46.260 --> 00:14:49.690 
natural number and then you can just show it directly.

199
00:14:50.120 --> 00:14:55.020 
So you get sort of an abstract number and then you recalculate it to a

200
00:14:55.530 --> 00:14:58.250 
voltage and then you recalculate the voltage to a

201
00:14:58.760 --> 00:15:01.610 
kelvin and then you recalculate the kelvin to the

202
00:15:02.100 --> 00:15:03.260 
celsius. Don't use Fahrenheit.

203
00:15:04.590 --> 00:15:06.900 
No, yeah, okay. Yeah just use Celsius

204
00:15:07.630 --> 00:15:09.860 
otherwise we cannot check it.

205
00:15:10.480 --> 00:15:15.690 
Because it takes based on celsius and yeah you get this as a template so

206
00:15:16.720 --> 00:15:19.260 
the numbers and so on and you just have to fill

207
00:15:19.870 --> 00:15:24.220 
the red part. So how hot it is and then we can check if you

208
00:15:24.220 --> 00:15:28.010 
did it right and you can see it. And these two exercises are

209
00:15:28.010 --> 00:15:31.850 
actually connected to some real life sensors so it

210
00:15:32.280 --> 00:15:35.270 
really shows the weather here in Potsdam and

211
00:15:35.850 --> 00:15:39.380 
the temperature in, well at least in your office.

212
00:15:40.440 --> 00:15:42.620 
So it's a real sensor you are connected to.

213
00:15:43.150 --> 00:15:46.320 
Experiment installation

214
00:15:46.890 --> 00:15:49.420 
and you really get that use from the real sensor.

215
00:15:49.940 --> 00:15:53.750 
So then I can just say have a lot of fun programming it.

216
00:15:54.170 --> 00:15:59.330 
And if you have questions, just use a discussion board, like you know.
