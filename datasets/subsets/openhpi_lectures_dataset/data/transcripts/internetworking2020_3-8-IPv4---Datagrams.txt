WEBVTT

1
00:00:00.890 --> 00:00:04.390 
In our OpenHPI course, a
half-century of internet, we are

2
00:00:04.390 --> 00:00:09.630 
now one to look Datagrams.
Datagrams is a name in the

3
00:00:09.630 --> 00:00:14.540 
IP protocol for data packets
and we will do this and

4
00:00:14.540 --> 00:00:16.620 
look to the data

5
00:00:16.620 --> 00:00:19.900 
grams of the IP
version 4.

6
00:00:21.270 --> 00:00:26.170 
The maximum length of such data
packets of such datagram

7
00:00:26.470 --> 00:00:32.650 
in IP version 4 is
65,535 Bytes,

8
00:00:32.820 --> 00:00:37.190 
and this is how the datagrams
look like. There is a header

9
00:00:37.530 --> 00:00:42.200 
and there is a payload, the header
contains all the information

10
00:00:42.210 --> 00:00:47.050 
that is necessary for the transport
of the datagram through

11
00:00:47.050 --> 00:00:53.890 
the internet, and the payload contains the
message that needs to be transferred.

12
00:00:55.830 --> 00:01:01.280 
We will see if you remember
the there is a layer model

13
00:01:01.700 --> 00:01:05.650 
of the internet, so it's
not only the payload,

14
00:01:05.650 --> 00:01:09.920 
the content of the message we
want to send, but it's also the

15
00:01:09.920 --> 00:01:14.630 
data packets of the higher levels
of the protocol. For example

16
00:01:14.900 --> 00:01:22.230 
the payload could be the TCP
packet, with the payload in.

17
00:01:22.370 --> 00:01:28.880 
Or it could be the application
layer a packet. So be careful

18
00:01:28.880 --> 00:01:34.740 
with payload in our layered world, it is
a message and some other information

19
00:01:35.160 --> 00:01:39.210 
which have to be transported
through the IP 11.

20
00:01:39.870 --> 00:01:44.290 
If we look to the header, then
the header has a size between

21
00:01:44.290 --> 00:01:49.600 
20 and 60 bytes and this is
the structure of the header.

22
00:01:49.780 --> 00:01:54.930 
Here is a payload and here are
the different information

23
00:01:54.930 --> 00:01:59.660 
in it which have to be sent,
which are needed for the

24
00:01:59.660 --> 00:02:05.360 
transport to the internet. And
most important of course here is

25
00:02:05.650 --> 00:02:08.940 
the source address and
destination address.

26
00:02:09.640 --> 00:02:15.680 
So here for remembering, I have
a diagram and here we have

27
00:02:15.970 --> 00:02:19.750 
the explanation of different
fields. So here is the version

28
00:02:19.980 --> 00:02:25.900 
has to be 4 because we discussed
IP before data the packets.

29
00:02:25.910 --> 00:02:30.440 
And of course the data inside the
header as well as a data payload

30
00:02:30.740 --> 00:02:36.730 
is our binary data, binary
sequences that we can see, we can

31
00:02:36.900 --> 00:02:42.490 
code and describe in another
number system as a number

32
00:02:42.490 --> 00:02:48.220 
4 which is described by 0100
in the binary description.

33
00:02:49.010 --> 00:02:57.660 
Then next field here is the length of the
header. The minimum is 5 maximum is 15

34
00:02:57.930 --> 00:03:03.890 
all together we have to
get 35-bit words for

35
00:03:04.180 --> 00:03:09.160 
for describing this number.
Then there is the

36
00:03:09.160 --> 00:03:14.690 
next field, the type of service. There is
a possibility to say it's a priority,

37
00:03:15.010 --> 00:03:20.330 
its delay, throughput, reliability,
and not all of these possibilities

38
00:03:20.330 --> 00:03:24.820 
are used in practice. Then we
have the datagram length,

39
00:03:25.630 --> 00:03:33.170 
it is 16 bit which is available to
describe the length of the datagram,

40
00:03:33.520 --> 00:03:41.030 
then there is an identification,
the IP ID in the case

41
00:03:41.030 --> 00:03:45.650 
of fragments is the idea of the
fragment. Then we have flags,

42
00:03:46.050 --> 00:03:51.370 
so here the first bit is reserved and
then we have DF and MF don't or

43
00:03:51.380 --> 00:03:57.260 
more frequent this
information

44
00:03:57.480 --> 00:04:01.340 
important in the connection with the
fragmentation of data packets.

45
00:04:01.700 --> 00:04:07.110 
Then we have the fragmentation offset
field, a field which is the offset of

46
00:04:07.350 --> 00:04:12.540 
a fragment in the original
datagram. Then we have the field

47
00:04:12.540 --> 00:04:18.530 
here in the 3rd row, the
time to live (TTL).

48
00:04:18.950 --> 00:04:25.890 
This is a number which is
described by each hop, so when

49
00:04:25.900 --> 00:04:30.750 
the package is transferred to the next
router this number is decreased

50
00:04:31.060 --> 00:04:36.490 
at the end it is zero,
and then the package is

51
00:04:36.950 --> 00:04:44.270 
deleted, it is no more forwarded.
This is to help to prevent that by

52
00:04:44.410 --> 00:04:50.130 
any kind of mistakes there are data
packages that cycles through

53
00:04:50.130 --> 00:04:53.850 
the internet
and take the

54
00:04:53.860 --> 00:04:54.530 


55
00:04:54.540 --> 00:04:58.520 
power of the internet and the
decrease the transmission rate.

56
00:04:58.690 --> 00:05:02.680 
And then here we have the Protocol
field a which, is the id

57
00:05:02.680 --> 00:05:06.730 
of the following transport Protocol,
we have the header checksum

58
00:05:07.230 --> 00:05:11.980 
which has to be recalculated of
course with each step, because

59
00:05:11.980 --> 00:05:16.540 
the TTL is decreased in each step
and then the source address,

60
00:05:16.540 --> 00:05:21.520 
address of the sender, and destination
address as of the recipient

61
00:05:21.980 --> 00:05:26.870 
and then there are some options
and pairing. Pairing means to

62
00:05:26.870 --> 00:05:31.850 
bring this input here to
the 32-bit length. There

63
00:05:31.850 --> 00:05:37.460 
are for example, options which can
tell something about a routing.

64
00:05:37.650 --> 00:05:42.420 
So, for example, there is option
'strict source routing' and here

65
00:05:42.430 --> 00:05:47.970 
there is an exact routing path
described that the package has to

66
00:05:47.970 --> 00:05:54.850 
be transported as lose source routing.
There are some addresses of nodes

67
00:05:54.980 --> 00:06:01.310 
that need to be visited
when the package

68
00:06:01.320 --> 00:06:05.920 
travels through the internet. And
'record route' that means each

69
00:06:05.930 --> 00:06:10.780 
visited router adds its
address, times stamps

70
00:06:10.780 --> 00:06:17.680 
and data so that one
can get information

71
00:06:17.990 --> 00:06:21.930 
about the transport situation
inside the network.

72
00:06:22.370 --> 00:06:29.060 
The data packet or the datagrams
for IP6 look similar. When

73
00:06:29.060 --> 00:06:33.380 
we speak about IPv6 we
will mention some of the

74
00:06:34.360 --> 00:06:38.380 
different approaches there to
give you a feeling of how the

75
00:06:38.380 --> 00:06:44.680 
datagrams look like which are transported
as payload through the internet,

76
00:06:45.020 --> 00:06:50.010 
to receive messages for us or to
send our message to others.
