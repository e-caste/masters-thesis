WEBVTT

1
00:00:00.000 --> 00:00:06.683 
Hello there, my name is Sebastian Serth and I am
a Ph.D. student at the Hasso Plattner Institute

2
00:00:06.849 --> 00:00:09.050 
at the University of
Potsdam in Germany.

3
00:00:09.699 --> 00:00:12.116 
Together with Ralf Teusner
and Christoph Meinel,

4
00:00:12.533 --> 00:00:16.350 
I am excited to present our work
on the Impact of Contextual Tips

5
00:00:16.350 --> 00:00:20.016 
for Auto-Gradable Programming
Exercises in MOOCs.

6
00:00:21.083 --> 00:00:25.533 
With our research, we aim to support
beginners in Programming MOOCs.

7
00:00:26.266 --> 00:00:32.333 
Previous approaches investigated the impact
of annotations within scaffolded code

8
00:00:32.516 --> 00:00:34.783 
to guide learners
through the exercise

9
00:00:35.483 --> 00:00:40.583 
and various next-step hint systems to
support learners within their code

10
00:00:40.750 --> 00:00:42.716 
to proceed with
a given task.

11
00:00:44.316 --> 00:00:50.983 
Our idea is to provide instantly available
tips within the programming environment.

12
00:00:51.600 --> 00:00:55.616 
In our concept, these are cheat-sheet-inspired
summaries for learners.

13
00:00:57.299 --> 00:01:02.733 
For example, an exercise requiring
learners to capture input from users

14
00:01:02.899 --> 00:01:07.250 
through the command line might
include a tip on the input method.

15
00:01:08.216 --> 00:01:11.916 
All available tips are shown in
the left sidebar next to the

16
00:01:11.916 --> 00:01:13.533 
main code editor
in the center.

17
00:01:14.599 --> 00:01:18.349 
Clicking on a tip reveals the
teacher-authored content.

18
00:01:19.166 --> 00:01:23.933 
In addition to a title that is always
visible (even when collapsed),

19
00:01:24.616 --> 00:01:28.950 
a tip includes a summarizing
description of the concept

20
00:01:29.366 --> 00:01:34.333 
and optionally a self-contained
source code example for easier

21
00:01:34.333 --> 00:01:36.250 
reproducibility
by the learner.

22
00:01:37.750 --> 00:01:43.450 
We evaluated our concept of contextual
tips within a Python programming course

23
00:01:43.566 --> 00:01:48.683 
dedicated to beginners. The
course ran for four weeks and

24
00:01:48.700 --> 00:01:53.416 
had a total of 9,500 learners
enrolled, of which 6,000

25
00:01:53.733 --> 00:01:56.299 
were actively solving
programming exercises.

26
00:01:57.633 --> 00:02:01.916 
Throughout an A/B test within
the first half of the course,

27
00:02:01.916 --> 00:02:05.166 
we offered teacher-created
tips to the treatment group

28
00:02:05.166 --> 00:02:06.950 
consisting of
3,000 learners.

29
00:02:08.366 --> 00:02:12.566 
From our experiment, we were able
to draw a few conclusions.

30
00:02:12.650 --> 00:02:16.500 
In this video, I want to
highlight four key findings:

31
00:02:17.800 --> 00:02:22.716 
First, we were able to confirm
our target group based on the

32
00:02:22.716 --> 00:02:28.883 
usage data across all exercises.
Learners self-identifying as beginners

33
00:02:29.116 --> 00:02:35.516 
at course start used more tips throughout
all exercises than any other group.

34
00:02:36.833 --> 00:02:42.483 
Second, we noticed about twice the
usage of tips for a course week

35
00:02:42.599 --> 00:02:47.199 
perceived as difficult by the course
participants than in an easy week.

36
00:02:48.650 --> 00:02:54.583 
Third, our data show a significant
increase in the mean working time

37
00:02:54.599 --> 00:02:59.199 
learners spend with the exercises
when tips were available to them.

38
00:02:59.900 --> 00:03:04.066 
This increase by 2.7%
is independent of

39
00:03:04.066 --> 00:03:05.666 
the actual usage
of tips.

40
00:03:06.599 --> 00:03:10.050 
In case tips were used
within an exercise,

41
00:03:10.533 --> 00:03:15.816 
the mean working time was about two-third
higher compared to those users

42
00:03:16.099 --> 00:03:17.583 
not relying on tips.

43
00:03:18.783 --> 00:03:24.199 
And finally, our evaluation suggests
that tips support the usage

44
00:03:24.216 --> 00:03:28.449 
of other assistance features of our
educational programming environment.

45
00:03:29.750 --> 00:03:33.033 
While tips might have answered
some questions for learners

46
00:03:33.033 --> 00:03:36.033 
not finding a solution
themselves,

47
00:03:36.349 --> 00:03:41.716 
those learners completing an
exercise used tips far more often

48
00:03:41.933 --> 00:03:43.866 
highlighting the
relevance for them.

49
00:03:45.083 --> 00:03:48.933 
Based on these findings, we
plan to further improve tips

50
00:03:49.000 --> 00:03:52.433 
and their discoverability
in future work.

51
00:03:52.566 --> 00:03:55.016 
Please refer to our
paper for more details

52
00:03:55.250 --> 00:03:57.250 
and additional insights from
our evaluation.

53
00:03:57.766 --> 00:03:59.366 
Thank you.
