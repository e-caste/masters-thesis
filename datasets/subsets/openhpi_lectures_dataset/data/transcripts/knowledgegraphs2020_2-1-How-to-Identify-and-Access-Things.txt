WEBVTT

1
00:00:01.430 --> 00:00:06.460 
This is knowledge graphs lecture number
two - basic semantic technologies.

2
00:00:07.330 --> 00:00:12.900 
In the very first part of this lecture we want
to look at the identification and access

3
00:00:13.020 --> 00:00:15.220 
of things in the
semantic web.

4
00:00:17.470 --> 00:00:21.460 
So, let's think about how to identify
things. You might think this

5
00:00:21.460 --> 00:00:25.290 
is a really easy job, but
as a computer scientist

6
00:00:25.770 --> 00:00:29.830 
you will see it's much more complicated
and it's really a philosophical

7
00:00:29.830 --> 00:00:30.420 
question. So

8
00:00:32.670 --> 00:00:34.430 
tell me what is this?

9
00:00:36.270 --> 00:00:38.990 
For sure you might say
yeah this is an apple.

10
00:00:39.670 --> 00:00:41.260 
Ok so this is an apple.

11
00:00:42.190 --> 00:00:43.160 
Next question - what is this?

12
00:00:47.810 --> 00:00:49.680 
Of course this is
also an apple.

13
00:00:50.750 --> 00:00:54.470 
What's the difference between these two,
between this apple and this apple?

14
00:00:55.420 --> 00:01:00.300 
Clear, so this apple it's only a
picture of an apple and this is

15
00:01:00.710 --> 00:01:02.380 
in quote a real apple.

16
00:01:03.630 --> 00:01:06.230 
Therefore we can say
that of course this

17
00:01:06.710 --> 00:01:07.920 
it's not really an apple.

18
00:01:10.160 --> 00:01:14.320 
However the interesting thing
about the human mind is that

19
00:01:14.320 --> 00:01:17.760 
the human mind is able
to take you know

20
00:01:18.810 --> 00:01:23.650 
a substitute for the real thing
as the real thing. You see this

21
00:01:23.650 --> 00:01:26.810 
here in the semiotic triangle,
we have a symbol that denotes

22
00:01:26.810 --> 00:01:31.500 
apple for example. However we associate
that symbol with a specific

23
00:01:31.510 --> 00:01:36.080 
concept in our mind which refers
and stands for to exactly

24
00:01:36.080 --> 00:01:37.970 
that object of
the real world.

25
00:01:38.900 --> 00:01:42.900 
And the interesting thing now
is we are able really to take

26
00:01:42.900 --> 00:01:46.670 
this kind of substitute for
the real thing in our mind

27
00:01:47.600 --> 00:01:51.450 
and of course for a machine to
enable a machine to understand,

28
00:01:52.060 --> 00:01:56.140 
we must represent the same kind
of mechanism within the machine.

29
00:01:56.150 --> 00:01:58.540 
So we must distinguish
the real thing

30
00:01:59.470 --> 00:02:04.460 
and of course an identifier a symbol
whatever that signifies the stuff.

31
00:02:04.930 --> 00:02:09.410 
And of course the machine should
identify both with each other.

32
00:02:10.140 --> 00:02:14.660 
However it should also know that these
things are different, like you do.

33
00:02:16.800 --> 00:02:20.180 
SOo let's have a look. Of course we
all know if we put something

34
00:02:20.180 --> 00:02:22.890 
on the web we need something
like a web address.

35
00:02:23.440 --> 00:02:28.160 
Usually in the web in the standard web
you have the uniform resource locator

36
00:02:28.480 --> 00:02:32.460 
and we now extend that concept to
a so called uniform resource

37
00:02:32.460 --> 00:02:36.260 
identifier which defines a simple
and extensible scheme of

38
00:02:36.260 --> 00:02:41.560 
a worldwide unique identification of
abstract of physical resources. This is

39
00:02:41.700 --> 00:02:46.990 
already standardized in RFC 3986.

40
00:02:47.270 --> 00:02:52.260 
So what is a resource? A resource
can be nearly everything with

41
00:02:52.260 --> 00:02:56.330 
a clear identity. Of course
according to the context of the

42
00:02:56.330 --> 00:02:59.210 
application you have in mind. So
it might be web pages it might

43
00:02:59.210 --> 00:03:03.120 
be books locations persons relations
and so on and so on and so anything.

44
00:03:04.160 --> 00:03:07.300 
And URI concepts are already
established very well in

45
00:03:07.300 --> 00:03:10.380 
various domains, so in the web
we know them as URLs,

46
00:03:10.380 --> 00:03:14.740 
uniform resource locators so
everything on the web is a URL,

47
00:03:15.840 --> 00:03:18.600 
and of course books for example
printed books you might know

48
00:03:18.600 --> 00:03:22.310 
that they have an ISBN number or
other kind of publications

49
00:03:22.310 --> 00:03:26.940 
they have an ISSN number or a
digital object identifier. These

50
00:03:26.940 --> 00:03:31.080 
all are following the so called
URI resource description

51
00:03:31.080 --> 00:03:33.040 
schema and
identification schema.

52
00:03:33.980 --> 00:03:36.720 
So what's now the difference
between URLs and URIs?

53
00:03:36.720 --> 00:03:40.550 
You can summarize it in that
simple phrase, so URLs for

54
00:03:40.550 --> 00:03:43.660 
example identify what
exists on the web

55
00:03:44.360 --> 00:03:51.290 
while URIs identify on the web what
exists and this makes a major difference

56
00:03:51.430 --> 00:03:52.450 
as you see here.

57
00:03:53.910 --> 00:04:00.800 
So URIs are the basic means
for identification on the back,

58
00:04:01.170 --> 00:04:05.800 
especially on the web of data. So
let's make a example. We have

59
00:04:05.800 --> 00:04:09.190 
here the earth the earth of course
is a resource and the earth

60
00:04:09.320 --> 00:04:12.860 
per say is of course not on the
internet but it should be somehow

61
00:04:12.860 --> 00:04:17.130 
represent it on the internet: So
how do we access the earth and

62
00:04:17.130 --> 00:04:21.130 
how do we identify the earth in the
sense that we want to make statements

63
00:04:21.620 --> 00:04:23.660 
assumptions about
the earth?

64
00:04:25.350 --> 00:04:27.390 
Ok so we need first
a URI.

65
00:04:28.550 --> 00:04:32.450 
One solution could be I only say could
be because this is not really proper

66
00:04:32.890 --> 00:04:37.340 
just take the wikipedia web address
for the earth and say this

67
00:04:37.340 --> 00:04:39.430 
identifies somehow
the earth.

68
00:04:41.650 --> 00:04:44.740 
So what happens when you access
that exactly on the web, what

69
00:04:44.740 --> 00:04:45.720 
you get back is some

70
00:04:46.390 --> 00:04:52.470 
html page which of course contains
information about the earth

71
00:04:52.750 --> 00:04:56.630 
on wikipedia of course. So this
is kind of a representation.

72
00:04:56.630 --> 00:05:01.890 
So this stands for our original
resource, so it's a representation.

73
00:05:03.930 --> 00:05:08.720 
Html proceed then is displayed
in the browser in a specific

74
00:05:08.720 --> 00:05:12.770 
way so it defines a presentation
scheme. So this is what you

75
00:05:12.770 --> 00:05:17.390 
see then you see that wikipedia page.
You don't see directly the html

76
00:05:17.610 --> 00:05:22.310 
in your browser, you see it
displayed nicely you know as the

77
00:05:22.310 --> 00:05:23.900 
page that we see it here.

78
00:05:24.660 --> 00:05:28.280 
So this defines the basic difference
here in linguistics you

79
00:05:28.280 --> 00:05:31.520 
say usually you have something
like a designator, that would

80
00:05:31.520 --> 00:05:37.020 
be the web page with information about
something with the description

81
00:05:37.020 --> 00:05:41.370 
about something. So the designator
describes the thing that

82
00:05:41.380 --> 00:05:45.550 
is designated the so called
designatum in linguistics. So in

83
00:05:45.550 --> 00:05:50.810 
our case it's the earth is
described or designated by

84
00:05:51.250 --> 00:05:54.880 
the wikipedia web page. The
web page is the designator,

85
00:05:55.350 --> 00:05:58.620 
the original resource is the
designated. This we have to keep

86
00:05:58.620 --> 00:06:00.870 
apart and we have to
keep that in mind.

87
00:06:03.570 --> 00:06:09.250 
So far so good. However we also want
to do assumptions in statements

88
00:06:09.250 --> 00:06:13.140 
about things that are not already
on the web. So how do we do

89
00:06:13.140 --> 00:06:18.030 
that? So what if a you are right
does not exist yet: So we have

90
00:06:18.030 --> 00:06:19.850 
to define it by
ourselves. Okay.

91
00:06:20.570 --> 00:06:23.690 
However we should avoid
overlaps because URI is a

92
00:06:23.690 --> 00:06:27.880 
unique identification scheme which
means we always if we define

93
00:06:27.880 --> 00:06:31.640 
something on our own we should use
our own website as a namespace

94
00:06:31.640 --> 00:06:34.470 
for examples. So our own domain
and something like that.

95
00:06:35.000 --> 00:06:38.180 
And what we always should
do if we put something

96
00:06:38.630 --> 00:06:42.460 
as a representation on the web we
should also enable documentation

97
00:06:42.460 --> 00:06:47.420 
of that thing on the very same place,
so under the same address put both.

98
00:06:47.860 --> 00:06:52.700 
First the thing itself and also
the documentation, which means

99
00:06:52.700 --> 00:06:55.820 
here again we should put together
designator and designatum.

100
00:06:56.700 --> 00:06:58.360 
However we can
distinguish it.

101
00:06:58.970 --> 00:07:03.640 
Http allows you for so
called content negotiation

102
00:07:04.220 --> 00:07:09.210 
so you can tell or http what
kind of information you expect,

103
00:07:09.210 --> 00:07:12.710 
for example you can say you give me
information back in a human readable form.

104
00:07:13.630 --> 00:07:18.050 
Then for example you can tell http
that it should deliver html pages

105
00:07:18.500 --> 00:07:22.720 
or you could say, yeah, http please
give me, give me

106
00:07:22.720 --> 00:07:28.590 
back data that my application
can directly use and apply

107
00:07:28.590 --> 00:07:33.590 
for some computational process. So then
you would expect for example rdf data

108
00:07:33.830 --> 00:07:42.250 
to go back. Ok so first of all we need
of course since this is two different

109
00:07:42.250 --> 00:07:46.340 
resources on the web, separate URIs
for the resource itself

110
00:07:46.540 --> 00:07:50.480 
and its documentation. However we
do not want to keep both at

111
00:07:50.480 --> 00:07:53.900 
the same time in mind, which means
we use content negotiation

112
00:07:53.900 --> 00:07:57.990 
to hide these two different
URIs behind one URI.

113
00:07:58.880 --> 00:08:01.920 
And I will show you how that
works. Another possibility that

114
00:08:01.920 --> 00:08:05.830 
is also sometimes used on the web
is that you use your references

115
00:08:05.830 --> 00:08:08.910 
with the help of so called fragment
identifier. They are then usually

116
00:08:09.260 --> 00:08:11.850 
in a html web page.
You know you have

117
00:08:12.620 --> 00:08:16.990 
the designator which means
documentation about the thing

118
00:08:16.990 --> 00:08:21.520 
and then you use the fragment
identifier for and name the resource

119
00:08:21.650 --> 00:08:26.080 
the designatum that you originally
want somehow to describe

120
00:08:26.080 --> 00:08:29.860 
or to document to designate with
your documentation. But this is

121
00:08:30.170 --> 00:08:34.170 
not so often occurring on
the web. So usually what you do

122
00:08:34.170 --> 00:08:38.050 
is you use http content
negotiation. How does this work?

123
00:08:38.800 --> 00:08:44.390 
Ok let's try the following example. Let's
assume I want to have information

124
00:08:44.580 --> 00:08:50.250 
about the earth from DBpedia. DBpedia is a
huge knowledge base of general

125
00:08:50.250 --> 00:08:53.490 
knowledge derived from wikipedia, we
will later in the lecture

126
00:08:53.640 --> 00:08:59.480 
talk more about DBpedia and also wikidata. So
the two huge general knowledge bases, but

127
00:08:59.650 --> 00:09:02.190 
let's assume I want to have
information about that and the

128
00:09:02.190 --> 00:09:04.690 
information should be displayed
in a way that I can read it

129
00:09:04.690 --> 00:09:06.170 
so it should be html.

130
00:09:07.420 --> 00:09:09.100 
We use the URI

131
00:09:09.720 --> 00:09:14.400 
of the earth here in DBpedia.
So this is the designatum,

132
00:09:14.400 --> 00:09:17.490 
this is the resource we are talking
about. But we want to have

133
00:09:17.490 --> 00:09:21.070 
about this resource you see the
URI here. We want to have

134
00:09:21.270 --> 00:09:26.450 
information in human readable
form. So we tell http,

135
00:09:27.180 --> 00:09:30.630 
use the accept header or
s accept a text

136
00:09:31.050 --> 00:09:35.700 
in the form of html. So then you
say accept header text html.

137
00:09:36.250 --> 00:09:39.850 
What happens at the web server then is
the following - the web services that

138
00:09:40.130 --> 00:09:45.240 
except error that should be delivered
and that's a so called relay. So

139
00:09:45.450 --> 00:09:50.120 
it returns a code which is http
code 303 see other

140
00:09:50.300 --> 00:09:56.000 
and it returns the URI of the
human readable documentation

141
00:09:56.010 --> 00:10:01.190 
of exactly that, which then here is
you see here http://dbpedia.org/resource/

142
00:10:01.370 --> 00:10:06.240 
earth and this is
then the information in human

143
00:10:06.240 --> 00:10:11.370 
readable form. This is a designator in
human readable form that will be

144
00:10:11.510 --> 00:10:13.490 
given back to the user.

145
00:10:15.390 --> 00:10:20.110 
How does it work then in the case if I want
to have machine readable information

146
00:10:20.250 --> 00:10:22.140 
for a program
for example?

147
00:10:24.170 --> 00:10:28.160 
The interesting thing is you are
using exactly the same URI,

148
00:10:28.960 --> 00:10:33.420 
however now you are telling
http now I want to have

149
00:10:33.870 --> 00:10:38.070 
the accept header for applications
and I want to have the format

150
00:10:38.220 --> 00:10:42.990 
rdf xml which means this is the
xml variant of the resource

151
00:10:42.990 --> 00:10:46.840 
description framework encoding. This is
how you want to have back your data.

152
00:10:47.460 --> 00:10:51.220 
Ok what the web server then
automatically does you get back

153
00:10:51.220 --> 00:10:54.590 
again at 303 see other
and now you get back also

154
00:10:55.060 --> 00:11:02.510 
the http address the URI of
the designator of earth but

155
00:11:02.640 --> 00:11:07.520 
in machine readable form. So this is
then http://dbpedia.org/data/

156
00:11:07.630 --> 00:11:12.760 
earth so not page/earth
but data/earth.

157
00:11:13.280 --> 00:11:16.670 
This is then the
designator for machine

158
00:11:17.160 --> 00:11:19.350 
readable designator

159
00:11:20.160 --> 00:11:24.880 
and this then can be accessed and
delivered again to the user.

160
00:11:26.100 --> 00:11:30.120 
Ok so let's try
this ourselves.

161
00:11:30.910 --> 00:11:34.630 
There is a nice
tool for the

162
00:11:35.040 --> 00:11:38.640 
command interface of your
computer that is called curl.

163
00:11:39.210 --> 00:11:42.930 
Potentially you have already
installed it on your computer

164
00:11:42.930 --> 00:11:46.600 
if not we will give you of course
access to a source where

165
00:11:46.600 --> 00:11:49.960 
you can download exactly that
program. With curl what you can

166
00:11:49.960 --> 00:11:54.130 
do is simply you can get things
which are on the web down to

167
00:11:54.130 --> 00:11:57.550 
your command interface and curl
here does nothing else but

168
00:11:57.880 --> 00:12:00.940 
you see here you say curl and
you give the accept header

169
00:12:00.940 --> 00:12:04.820 
in the first case you want to have
text html and then you give here

170
00:12:04.980 --> 00:12:10.230 
our example URI. And we have
prepared this for you

171
00:12:10.380 --> 00:12:15.880 
here on the other slide in the command
line interface. So here I can

172
00:12:16.080 --> 00:12:19.110 
give exactly the same

173
00:12:20.150 --> 00:12:24.760 
here command. So I have curl
again accept header text html

174
00:12:24.760 --> 00:12:27.490 
and of course I want to have
this information about earth.

175
00:12:28.540 --> 00:12:32.060 
And let's send this away and you
see here I have on the screen

176
00:12:32.070 --> 00:12:35.790 
if you look closely on it you
see that this is an html page.

177
00:12:36.070 --> 00:12:40.500 
So because you have a lot of these
html commands that you see here

178
00:12:40.790 --> 00:12:46.400 
like lists or whatever. This is long, so
this is an html page about the earth.

179
00:12:49.060 --> 00:12:52.820 
Let's do exactly the same. So we
clear the screen and we do

180
00:12:52.820 --> 00:12:54.210 
the same now for

181
00:12:55.770 --> 00:13:01.010 
rdf. So you see here I have
exactly the same line, accept

182
00:13:01.020 --> 00:13:05.920 
header now should be application rdf
plus xml exactly the same URI.

183
00:13:06.760 --> 00:13:07.900 
I sent this away

184
00:13:09.540 --> 00:13:12.870 
and you see it looks completely
different. So we go right to

185
00:13:12.870 --> 00:13:17.270 
the start of that you see a lot
of data is here getting back.

186
00:13:17.280 --> 00:13:18.310 
can we see that.

187
00:13:19.610 --> 00:13:23.540 
Yeah you have lots of description
this also belongs to that part

188
00:13:24.660 --> 00:13:26.900 
and that also. So
this is a lot.

189
00:13:29.300 --> 00:13:33.650 
So here you see what's going on.
You get back here an xml file of

190
00:13:33.780 --> 00:13:38.880 
rdf and here in that rdf file
anything is in code of knowledge

191
00:13:38.990 --> 00:13:42.690 
and facts that are
available about the earth.

192
00:13:44.100 --> 00:13:49.440 
So simply try it this out with this
simple program and you can see

193
00:13:49.560 --> 00:13:54.680 
how content negotiation, how http
content negotiation it works

194
00:13:54.690 --> 00:14:00.010 
in the context of the web of
data of the semantic web. So

195
00:14:01.070 --> 00:14:06.330 
you see access here works via
http, http content negotiation

196
00:14:06.600 --> 00:14:10.550 
is used as the access layer
for the web of data.

197
00:14:12.330 --> 00:14:15.480 
If we want to have machine readable
information back this is

198
00:14:15.480 --> 00:14:20.140 
then encoded in rdf which all
three together then form the

199
00:14:20.140 --> 00:14:24.700 
web of data. We know this already.
And in the next part of the

200
00:14:24.700 --> 00:14:29.320 
lecture we will start with
representing simple facts with the

201
00:14:29.320 --> 00:14:31.550 
help of the resource
description framework.
