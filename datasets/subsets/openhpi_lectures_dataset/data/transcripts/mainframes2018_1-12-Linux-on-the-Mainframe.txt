WEBVTT

1
00:00:00.870 --> 00:00:05.789 
Welcome to this part on the introduction, on Linux, on the mainframe.

2
00:00:05.790 --> 00:00:09.479 
My name is Phillip Bonner from Neu-Ulm University of Applied Sciences.

3
00:00:11.680 --> 00:00:16.479 
And you look at the history of mainframe operating systems and different

4
00:00:16.480 --> 00:00:19.059 
kinds of mainframe operating systems.

5
00:00:19.060 --> 00:00:24.909 
You see that Linux is the youngest of the systems.

6
00:00:24.910 --> 00:00:29.649 
It, uh, you know, it's on the mainframe started shortly after they disappeared

7
00:00:29.650 --> 00:00:34.509 
and the end of the 90s and then here in the in the most recent

8
00:00:34.510 --> 00:00:39.069 
decade. So it's the youngest, but still or nowadays, one

9
00:00:39.070 --> 00:00:43.689 
of the most important beside is that choice because Linux has became

10
00:00:43.690 --> 00:00:48.189 
very, very popular and it opened up the mainframe platform to bring a lot of the

11
00:00:48.190 --> 00:00:52.629 
new challenging workloads like artificial intelligence and Docker and

12
00:00:52.630 --> 00:00:54.849 
all this stuff on the mainframe platform.

13
00:00:54.850 --> 00:00:59.469 
So today Linux is regarding installations,

14
00:00:59.470 --> 00:01:03.189 
sales, uh, very important, probably

15
00:01:04.209 --> 00:01:09.339 
beside software as the most important mainframe operating system.

16
00:01:09.340 --> 00:01:14.079 
Before we look at Linux on the mainframe, just have a short look on what is Linux

17
00:01:14.080 --> 00:01:15.969 
about. What is Linux at all?

18
00:01:15.970 --> 00:01:21.129 
And Linux is a free operating system

19
00:01:21.130 --> 00:01:23.649 
with free meaning open source.

20
00:01:23.650 --> 00:01:28.119 
So free is in free speech, not as in free beer as such as

21
00:01:28.120 --> 00:01:30.159 
Stallman said.

22
00:01:30.160 --> 00:01:34.659 
So it's an open source operating system and the source code

23
00:01:34.660 --> 00:01:39.759 
is available and freely usable and also modifiable.

24
00:01:39.760 --> 00:01:42.039 
It's a Unix like operating system.

25
00:01:42.040 --> 00:01:46.749 
So Linux is not Unix, but it looks like Unix more or less, and it behaves

26
00:01:46.750 --> 00:01:51.579 
mostly like like Unix. So you can think of Linux as a free re implementation

27
00:01:51.580 --> 00:01:54.340 
of of the unique system and

28
00:01:56.230 --> 00:02:01.239 
Linux is nowadays multithreading multitasking, uh, capable,

29
00:02:01.240 --> 00:02:06.549 
and it's a multi user operating system like like original Unix is

30
00:02:06.550 --> 00:02:11.649 
um, it started in nineteen ninety one as a hobby project by the Finnish

31
00:02:11.650 --> 00:02:14.709 
computer science student Linus Torvalds.

32
00:02:14.710 --> 00:02:19.299 
And then in the beginning, um, it was more or less like

33
00:02:19.300 --> 00:02:23.919 
a toy system. But uh, very quickly it evolved and became

34
00:02:23.920 --> 00:02:28.449 
very, very popular. In nineteen ninety two, for example, you already could download and

35
00:02:28.450 --> 00:02:33.009 
install it as a complete distribution, as a complete system on your computer and really

36
00:02:33.010 --> 00:02:37.509 
use it for normal work. So it very, very quickly became

37
00:02:37.510 --> 00:02:42.279 
popular first in the computer science or

38
00:02:42.280 --> 00:02:47.259 
I.T. people community, but then nowadays also for for other people.

39
00:02:47.260 --> 00:02:51.939 
And so it also was adapted for commercial use for

40
00:02:51.940 --> 00:02:52.940 
companies.

41
00:02:53.830 --> 00:02:58.329 
And, uh, uh, the original INOX was written for

42
00:02:58.330 --> 00:03:02.919 
the, uh, 86 processor family in these days it was the Eighties.

43
00:03:02.920 --> 00:03:07.599 
Uh, three hundred eighty six, uh, generation.

44
00:03:07.600 --> 00:03:12.219 
So this was the first platform and it was originally not intended to be portable.

45
00:03:12.220 --> 00:03:17.109 
But then the Linux kernel was re-engineered, modified

46
00:03:17.110 --> 00:03:19.629 
and improved, so it became more and more portable.

47
00:03:19.630 --> 00:03:24.459 
And nowadays, Linux has been party to nearly all computer

48
00:03:24.460 --> 00:03:28.269 
architectures that you can think of some that you even can't think of because they are

49
00:03:28.270 --> 00:03:33.069 
very exotic. So a lot of these ports are official.

50
00:03:33.070 --> 00:03:37.629 
Some of them are, of course, only, um, sort of research projects or

51
00:03:37.630 --> 00:03:42.519 
tests or hobby projects. But there's a large list of architectures

52
00:03:42.520 --> 00:03:47.049 
that Linux is officially supporting as part of the standard distribution of the standard

53
00:03:47.050 --> 00:03:51.909 
kernel. Of course, not all of these are commercially relevant among the commercially

54
00:03:51.910 --> 00:03:56.649 
relevant parts. Of course, the first and the most important one still is

55
00:03:56.650 --> 00:03:59.079 
x86 architecture.

56
00:03:59.080 --> 00:04:02.379 
But very closely, of course, is the arm.

57
00:04:02.380 --> 00:04:07.089 
The ARM architecture is the architecture that is used in all embedded systems

58
00:04:07.090 --> 00:04:09.339 
and in mobile devices.

59
00:04:09.340 --> 00:04:13.809 
And this is, of course, it's a large number of systems, and Linux is very common,

60
00:04:13.810 --> 00:04:16.389 
very popular today in embedded systems as well.

61
00:04:16.390 --> 00:04:18.999 
And you have, for example, the power architecture by IBM.

62
00:04:19.000 --> 00:04:23.529 
And of course, what we are interested in here is the path to what

63
00:04:23.530 --> 00:04:27.399 
is called. And then it looks as three hundred ninety architecture.

64
00:04:27.400 --> 00:04:32.409 
But in fact, that is the said systems, but still in the kernel, it's called s 390

65
00:04:32.410 --> 00:04:36.879 
in the code. So that is the part that we are looking at and this part is still

66
00:04:36.880 --> 00:04:41.499 
is nowadays a, uh, a full, uh, fully supported

67
00:04:41.500 --> 00:04:46.089 
standard, part of of the standard Linux development and standard Linux

68
00:04:46.090 --> 00:04:47.090 
kernel.

69
00:04:48.430 --> 00:04:52.869 
And what you see here is the Linux logo, you might know the penguin and everything

70
00:04:52.870 --> 00:04:56.919 
around Linux is typically associated with penguins, who will see that also when we have a

71
00:04:56.920 --> 00:04:59.499 
look on the IBM mainframes, then

72
00:05:02.020 --> 00:05:06.549 
just a look back in history. So this is the first announcement of Linux and a youth

73
00:05:06.550 --> 00:05:10.629 
group in these days. That was not the World Wide Web, so we had youth groups, Usenet

74
00:05:10.630 --> 00:05:12.609 
youth groups and this was complex.

75
00:05:12.610 --> 00:05:17.679 
Mimics with Linus Torvalds announced that he had written a new operating system,

76
00:05:17.680 --> 00:05:22.539 
and it was probably if you look at the importance of Linux for operating

77
00:05:22.540 --> 00:05:27.139 
the world today, just think of mobile devices, cars and everything than this

78
00:05:27.140 --> 00:05:31.779 
is is really funny because probably he underestimated

79
00:05:31.780 --> 00:05:34.359 
a lot the impact of what he had done.

80
00:05:34.360 --> 00:05:37.360 
You can see, for example, the last sentence, he says, that

81
00:05:38.950 --> 00:05:43.509 
it will probably never run on anything as that an x86 hardware, because that's

82
00:05:43.510 --> 00:05:48.039 
the only thing I have and only support 80 hard disks and so on.

83
00:05:48.040 --> 00:05:51.910 
So this was the beginning in 1991 and.

84
00:05:54.740 --> 00:05:57.859 
On the mainframe, then later it was positive as to the mainframe.

85
00:05:57.860 --> 00:06:02.869 
This was also first a hobby effort by some people and then became

86
00:06:02.870 --> 00:06:06.499 
a very important part of the uh of the Linux

87
00:06:07.850 --> 00:06:08.850 
development.

88
00:06:11.050 --> 00:06:15.519 
So Linux runs on the number that processors today, so

89
00:06:15.520 --> 00:06:19.299 
it's nothing special about it. That's important.

90
00:06:19.300 --> 00:06:23.769 
Every processor of the mainframe of the set 14, for example,

91
00:06:23.770 --> 00:06:28.719 
or any of these systems processors, every CPU in theory is capable of executing

92
00:06:28.720 --> 00:06:32.979 
and running then. So Linux is a normal mainframe operating system.

93
00:06:32.980 --> 00:06:37.719 
Despite this, IBM is offering a special type of you

94
00:06:37.720 --> 00:06:41.199 
called the AFL the integrated facility for Linux.

95
00:06:41.200 --> 00:06:47.109 
And this is a pew which is by microcode by former

96
00:06:47.110 --> 00:06:50.709 
reduced to execute Linux and Linux applications.

97
00:06:50.710 --> 00:06:55.149 
And the difference is not that this is a different view, but in hardware it's the same.

98
00:06:55.150 --> 00:06:59.349 
But its licensing model is different, so it will this.

99
00:06:59.350 --> 00:07:04.239 
This AFL will not execute, will not run, for example, software as they will not run

100
00:07:04.240 --> 00:07:07.539 
IBM classical mainframe workloads.

101
00:07:07.540 --> 00:07:11.229 
But they run Linux and everything running on Linux.

102
00:07:11.230 --> 00:07:15.729 
And these CPUs or these disputes are licensed at a much

103
00:07:15.730 --> 00:07:20.979 
lower price than the standard CPUs, despite they are physically the same

104
00:07:20.980 --> 00:07:23.589 
chips, the same processors.

105
00:07:23.590 --> 00:07:28.569 
So this is something about licensing and fees, not not about the real technology.

106
00:07:28.570 --> 00:07:33.099 
And so nowadays, IBM is very

107
00:07:33.100 --> 00:07:37.839 
strongly focusing on supporting Linux on the platform, on the mainframe,

108
00:07:37.840 --> 00:07:42.579 
and also sees this as a strategic marketing activity

109
00:07:42.580 --> 00:07:47.199 
to to, um, to enlarge the basis of mainframe systems,

110
00:07:47.200 --> 00:07:52.509 
and therefore they nowadays sell and market the mainframe in two brands.

111
00:07:52.510 --> 00:07:57.999 
Uh, one is the classical brand, said System Sprint, which is

112
00:07:58.000 --> 00:07:59.949 
what we would call the mainframe in a classical way.

113
00:07:59.950 --> 00:08:04.539 
So it has all kinds of use and of course, run centers and and

114
00:08:04.540 --> 00:08:06.130 
other mainframe operating systems.

115
00:08:07.330 --> 00:08:12.429 
Also in such systems, you can have IFL CPUs if CPUs

116
00:08:12.430 --> 00:08:15.009 
to run Linux ANZUS in one box.

117
00:08:15.010 --> 00:08:19.479 
But nowadays IBM is marketing a second product line, which is called Linux

118
00:08:19.480 --> 00:08:20.259 
one.

119
00:08:20.260 --> 00:08:24.969 
These are physically the same machines, but they have a different branding,

120
00:08:24.970 --> 00:08:28.269 
also different a different front.

121
00:08:28.270 --> 00:08:32.739 
So this is a can see here. This an orange stripe on the front to indicate

122
00:08:32.740 --> 00:08:37.449 
that and these machines are not many triumphs, but all CPUs are events.

123
00:08:37.450 --> 00:08:42.939 
So um, and these systems you can run on the Linux is a Linux only mainframe.

124
00:08:42.940 --> 00:08:47.859 
And with this system priced at a different price level as well,

125
00:08:47.860 --> 00:08:52.479 
the idea is to enlarge the basis of installed mainframe systems to new

126
00:08:52.480 --> 00:08:54.549 
workloads to new applications.

127
00:08:54.550 --> 00:08:59.259 
On this photograph, you can see on the left hand side, this is the classical z13

128
00:08:59.260 --> 00:09:03.999 
mainframe. On the right hand side, it's a smaller model in this case as a Linux one box.

129
00:09:04.000 --> 00:09:05.409 
This is why I put the Penguin Neo.

130
00:09:08.100 --> 00:09:13.019 
And, you know, it's one boxes. They are called Rockhopper an emperor, so

131
00:09:13.020 --> 00:09:16.019 
these are penguin types of penguins.

132
00:09:17.670 --> 00:09:21.689 
If you look at the classical or full fledged mainframe, you could or you would usually

133
00:09:21.690 --> 00:09:24.119 
have Linux in a separate etapa.

134
00:09:24.120 --> 00:09:28.979 
So we will have or you would have to begin at par and then we

135
00:09:28.980 --> 00:09:33.659 
could have either Linux running natively in an LP on its own,

136
00:09:33.660 --> 00:09:38.099 
which is not so common. Mostly, people run Linux guests as virtual

137
00:09:38.100 --> 00:09:42.659 
guests on a PM hypervisor because you can

138
00:09:42.660 --> 00:09:47.759 
very easily create new Linux instances and maintain the instances

139
00:09:47.760 --> 00:09:50.820 
on top of such a software virtualization tool.

140
00:09:53.430 --> 00:09:57.929 
The question, of course, is what what can you do with Linux for the mainframe and why

141
00:09:57.930 --> 00:10:02.909 
by Linux is interesting. So Linux opens up the mainframe to new applications

142
00:10:02.910 --> 00:10:04.799 
to new workloads.

143
00:10:04.800 --> 00:10:09.779 
So on the mainframe you can with Linux, you can run basically everything

144
00:10:09.780 --> 00:10:14.699 
that that you can run on any other Linux.

145
00:10:14.700 --> 00:10:18.659 
OK. So Linux on systems is a regular normal Linux.

146
00:10:18.660 --> 00:10:23.699 
This means that it usually behaves like Linux on every platform

147
00:10:23.700 --> 00:10:28.019 
and all the software and towards typically work.

148
00:10:28.020 --> 00:10:32.759 
If you have applications that have dependencies to a certain architecture, for example,

149
00:10:32.760 --> 00:10:37.349 
assembler code, and then of course, you have to adapt that or

150
00:10:37.350 --> 00:10:41.129 
modify that when you put it to another Linux architecture.

151
00:10:41.130 --> 00:10:45.779 
But this is the same as if you would port it to any other Linux architecture

152
00:10:45.780 --> 00:10:50.279 
that Linux supports. But an application that is written in a language that can just be

153
00:10:50.280 --> 00:10:54.779 
compiled would be just recompile on the platform and then you're done.

154
00:10:54.780 --> 00:10:59.349 
Or if you use Java, you can just run the Java code that they don't support.

155
00:10:59.350 --> 00:11:01.739 
That is a first class citizen.

156
00:11:01.740 --> 00:11:05.039 
It's a it's a fully supported standard part of the kernel.

157
00:11:05.040 --> 00:11:09.690 
And it's also an important part for the platform.

158
00:11:11.070 --> 00:11:16.019 
It allows to run nearly everything that you would usually expect on a Linux

159
00:11:16.020 --> 00:11:20.589 
server like, for example, that posting the lamp stack Apache might

160
00:11:20.590 --> 00:11:25.049 
as well be you could run the whole Java universe with Java or

161
00:11:25.050 --> 00:11:29.009 
Jakarta EE applications that Java Web applications.

162
00:11:29.010 --> 00:11:33.629 
You can run Apache Spark and all the Apache projects.

163
00:11:34.740 --> 00:11:37.559 
Some things can only be run on Linux.

164
00:11:37.560 --> 00:11:42.359 
On the mainframe, for example, the Oracle database system is

165
00:11:42.360 --> 00:11:44.429 
only available on Linux for the mainframe.

166
00:11:44.430 --> 00:11:48.899 
Not on that. And also the SFP application service for that

167
00:11:48.900 --> 00:11:53.459 
year or so are among other SMP solutions called Nachtwey

168
00:11:53.460 --> 00:11:56.549 
by application, so is available for Linux on systems.

169
00:11:56.550 --> 00:12:01.049 
OK. Despite this, of course, Linux opens up now.

170
00:12:01.050 --> 00:12:05.549 
Uh, a new, uh, a new range of applications to the

171
00:12:05.550 --> 00:12:10.289 
mainframe, in particular those coming from the cloud and

172
00:12:10.290 --> 00:12:14.159 
internet world. Like, for example, cloud hosting solutions.

173
00:12:15.430 --> 00:12:20.109 
OpenStack, Cuban natives, containerization, Docker

174
00:12:20.110 --> 00:12:24.699 
containers, all these not no other databases like

175
00:12:24.700 --> 00:12:28.989 
MongoDB and Hadoop, file systems and so on.

176
00:12:28.990 --> 00:12:33.969 
And of course, last but not least blockchain, something that's really,

177
00:12:33.970 --> 00:12:37.629 
uh, highly discussed at the moment.

178
00:12:37.630 --> 00:12:42.069 
And as the open source Hyperledger framework, Hyperledger

179
00:12:42.070 --> 00:12:46.479 
is an open source implementation basis for implementing blockchain applications.

180
00:12:46.480 --> 00:12:51.099 
And this, for example, runs very well on the Linux mainframes.

181
00:12:51.100 --> 00:12:55.569 
And the interesting thing about this is that due

182
00:12:55.570 --> 00:13:00.309 
to the to the high vertical scalability

183
00:13:00.310 --> 00:13:04.749 
of the mainframe, meaning that you could scale up this system with a large number of

184
00:13:04.750 --> 00:13:09.369 
CPUs, you can implement applications that

185
00:13:09.370 --> 00:13:12.819 
don't need to be run on a distributed cluster.

186
00:13:12.820 --> 00:13:17.799 
Of course, the internet technologies have been designed to run on distributed clusters,

187
00:13:17.800 --> 00:13:22.509 
but if you put them on the large mainframe, you can avoid having

188
00:13:22.510 --> 00:13:27.129 
all these overhead for administrating, uh, a large bunch

189
00:13:27.130 --> 00:13:32.769 
of different servers to run, for example, a Hadoop system or any kind of these

190
00:13:32.770 --> 00:13:35.979 
big data applications or Kubernetes installation.

191
00:13:41.190 --> 00:13:46.019 
A few words on Linux distributions for the mainframe and.

192
00:13:47.890 --> 00:13:52.509 
What is the Linux distribution, so people usually use Linux with the distribution

193
00:13:52.510 --> 00:13:57.819 
and distribution is a combination of Linux operating system, its tools, its

194
00:13:57.820 --> 00:14:02.319 
libraries and core applications, together with user

195
00:14:02.320 --> 00:14:07.149 
applications and administration tools to, for example, to install and maintain

196
00:14:07.150 --> 00:14:11.859 
packages. And these distributions are the typical way

197
00:14:11.860 --> 00:14:14.109 
in which people use Linux.

198
00:14:14.110 --> 00:14:18.669 
So people use Linux not by compiling everything themselves, but they get such

199
00:14:18.670 --> 00:14:21.129 
kind of distribution. Some of these distributions are free.

200
00:14:21.130 --> 00:14:25.719 
Some have commercial support officially for a mainframe.

201
00:14:25.720 --> 00:14:30.549 
IBM supports three distributions that commercial support is available.

202
00:14:30.550 --> 00:14:35.289 
This is a boon to the, uh, Linux enterprise server

203
00:14:35.290 --> 00:14:39.969 
and Red Hat Linux, and these three

204
00:14:39.970 --> 00:14:44.769 
are those that usually companies would use because they need or there is usually one

205
00:14:44.770 --> 00:14:47.379 
commercial in support maintenance.

206
00:14:47.380 --> 00:14:51.249 
But this does not mean that any other Linux compiled for a three hundred ninety doesn't

207
00:14:51.250 --> 00:14:52.539 
run on the machine.

208
00:14:52.540 --> 00:14:56.469 
So in principle, of course, you can run Debian and everything else as well.

209
00:14:56.470 --> 00:15:00.909 
So these distributions are only that what is officially supported?

210
00:15:02.180 --> 00:15:03.180 
Thank you very much.
