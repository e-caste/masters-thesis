WEBVTT

1
00:00:00.770 --> 00:00:05.370 
This is knowledge graphs lecture four
knowledge representation with ontologies.

2
00:00:05.790 --> 00:00:10.740 
So in this lecture we are going to see
more on ontologies, more on owl.

3
00:00:12.310 --> 00:00:16.260 
So we are still on the semantic
web technology stack on the

4
00:00:16.270 --> 00:00:19.010 
layer of OWL RDFS
and schools.

5
00:00:21.220 --> 00:00:25.840 
So now we are going to move
towards more complex classes in

6
00:00:25.850 --> 00:00:32.740 
OWL, so here for example you can
actually define the enumerations the

7
00:00:33.250 --> 00:00:39.260 
several classes that can be a group
of that can be grouped together

8
00:00:39.370 --> 00:00:43.530 
sorry several entities that can
be grouped together so you

9
00:00:43.530 --> 00:00:48.800 
have these enumeration of these
entities. So carbon dioxide club

10
00:00:49.040 --> 00:00:55.770 
has three entities which are Joseph
Fourier, Jan Baptiste and Joseph Black.

11
00:00:56.090 --> 00:01:01.030 
So there are only three scientist
in the carbon dioxide club.

12
00:01:01.430 --> 00:01:07.580 
So to give these enumerations you use
that are the keyword OWL one off.

13
00:01:09.620 --> 00:01:14.370 
So OWL logical classes have
several constructors, several

14
00:01:14.370 --> 00:01:20.620 
class constructors, so there is
logical AND logical OR and negation.

15
00:01:20.890 --> 00:01:25.520 
So these are so you can on the
right most side you can see

16
00:01:25.520 --> 00:01:29.500 
how do you write it in the form
of description logics and then

17
00:01:29.500 --> 00:01:33.120 
in the middle you are seeing that we
can how can we write it in OWL.

18
00:01:33.420 --> 00:01:38.530 
So OWL intersection of gives
the logical AND, OWL union of

19
00:01:38.540 --> 00:01:42.530 
gives the logical OR and OWL
complement of gives the

20
00:01:43.040 --> 00:01:49.540 
negation. So these constructors are then
used to define more complex classes.

21
00:01:50.810 --> 00:01:55.180 
So let's take an example for the
intersection. Now here for

22
00:01:55.180 --> 00:01:58.060 
example we have a class
scientist for future.

23
00:01:58.460 --> 00:02:02.530 
Now scientists for future is a
class which is the intersection

24
00:02:02.530 --> 00:02:07.240 
of two classes scientist and
climate activist. So we

25
00:02:07.240 --> 00:02:11.100 
are giving this this with
the help of the word

26
00:02:11.650 --> 00:02:17.410 
OWL intersection of aware
scientist and climate activist

27
00:02:17.420 --> 00:02:22.640 
are also classes. And then
we have the other logical

28
00:02:22.640 --> 00:02:26.740 
constructor which is union so
here you can actually define

29
00:02:26.740 --> 00:02:31.970 
another class with the help of this a
union of, OWL union of where you have

30
00:02:32.390 --> 00:02:38.010 
environmentalists who are either
climate activists or animal

31
00:02:38.010 --> 00:02:40.240 
rights activists or
energy savers.

32
00:02:40.870 --> 00:02:46.090 
So this way you can actually define
the class of environmentalists.

33
00:02:47.680 --> 00:02:52.440 
Then he we have the constructor negation
where you can actually see that

34
00:02:53.040 --> 00:02:58.510 
a warmonger is the opposite of
the pacifist. So we define

35
00:02:58.520 --> 00:03:04.310 
this uh this kind of restrictions
this kind of class constructors

36
00:03:04.870 --> 00:03:09.590 
sorry class with the help of
the negation constructor. So

37
00:03:09.590 --> 00:03:13.630 
you have warmonger which is the
negation of the pacifist.

38
00:03:16.870 --> 00:03:21.820 
So we have further property
restrictions. So here in the property

39
00:03:21.820 --> 00:03:25.900 
restrictions you have the
restrictions on the values

40
00:03:25.900 --> 00:03:29.810 
and restrictions on the cardinality.
So for the restrictions

41
00:03:29.810 --> 00:03:34.670 
on the values you have three kinds
has value, all all values from.

42
00:03:34.800 --> 00:03:38.360 
So has value is actually the
restriction on constants,

43
00:03:38.370 --> 00:03:42.860 
all values from is a the strict
binding, some values from

44
00:03:42.870 --> 00:03:45.720 
is the loose binding that you
have been these words you have

45
00:03:45.720 --> 00:03:50.050 
been listening from the beginning
from the beginning of this lecture.

46
00:03:50.460 --> 00:03:53.940 
Then we have the restrictions
over the cardinality where you

47
00:03:53.940 --> 00:03:58.800 
have exact cardinality then we have
minimum and the maximum cardinality.

48
00:03:59.060 --> 00:04:03.190 
These are the this is the
vocabulary defined in OWL.

49
00:04:04.040 --> 00:04:09.060 
So for example now we start with the
property restrictions with the constants.

50
00:04:09.250 --> 00:04:14.080 
So now if we want to define a
class Fourier discoveries with

51
00:04:14.090 --> 00:04:18.000 
which means there is going
to be a restriction that

52
00:04:18.730 --> 00:04:23.010 
the discoverer of anything in the
class and Fourier discoveries

53
00:04:23.810 --> 00:04:28.960 
should be Joseph Fourier. So here
you can actually already see

54
00:04:28.960 --> 00:04:32.410 
the how we can write it and
description logics but how do we

55
00:04:32.410 --> 00:04:37.130 
write it in OWL. So here you give
the restriction on the property

56
00:04:37.130 --> 00:04:43.100 
discoverer with the help
of OWL property and OWL

57
00:04:43.410 --> 00:04:48.960 
restriction. And then u can give
the has value to give the

58
00:04:48.970 --> 00:04:53.150 
exact value of this property
that would be joseph fourier.

59
00:04:56.100 --> 00:04:59.960 
And then we have the strict
binding. In the strict binding we

60
00:04:59.960 --> 00:05:03.900 
define it similarly on
the properties, so for

61
00:05:03.900 --> 00:05:08.350 
example here we are defining
vegetarian dish and then we have

62
00:05:08.350 --> 00:05:11.120 
the restriction on the
property ingredient

63
00:05:11.790 --> 00:05:16.270 
where we allow all the values
from the vegetarian food from

64
00:05:16.270 --> 00:05:20.960 
the class vegetarian food. So
what does all values from does

65
00:05:21.020 --> 00:05:24.550 
it fixes all instances
of a specific class

66
00:05:24.990 --> 00:05:30.500 
C as allowed range for the property
P. So here strict binding

67
00:05:30.500 --> 00:05:35.730 
actually represents the universal
quantification. So let us take an example.

68
00:05:36.020 --> 00:05:40.650 
For example we have one
dish kimchi which has

69
00:05:41.270 --> 00:05:47.100 
ingredient cabbage. Now kimchi is
of type vegetarian dish. And now

70
00:05:47.100 --> 00:05:51.330 
we have already defined that
vegetarian dish allows all values

71
00:05:51.330 --> 00:05:54.290 
from the vegetarian food only
through a food only. Then

72
00:05:57.090 --> 00:06:02.340 
cabbage would be vegetarian food.
So this way we can draw these

73
00:06:02.460 --> 00:06:07.820 
logical inferences on top of
these kind of restrictions.

74
00:06:09.520 --> 00:06:14.900 
Now we move towards loose binding
where this so this is actually

75
00:06:14.900 --> 00:06:19.310 
the existential quantifier
as we said before also. So

76
00:06:19.310 --> 00:06:23.870 
now we are saying that Reader is
a class which is a subclass

77
00:06:23.870 --> 00:06:28.670 
of and now we're defining
restrictions on the property reads

78
00:06:29.140 --> 00:06:36.350 
where some values from books. So it
means that one individual one entity

79
00:06:36.600 --> 00:06:42.450 
who is a reader is reading some
books but he will also read

80
00:06:42.450 --> 00:06:46.210 
something else other than
books. So here OWL

81
00:06:46.710 --> 00:06:52.000 
same values from described that
there must exist an individual

82
00:06:52.000 --> 00:06:56.180 
for p and fixes its range
to class c. Here we are

83
00:06:56.730 --> 00:06:59.200 
calling it loose binding
as we said before.

84
00:06:59.780 --> 00:07:04.490 
So here is one example. So we
have for example one individual

85
00:07:04.490 --> 00:07:10.050 
Harald who is of type reader
who reads brave new world

86
00:07:10.610 --> 00:07:15.570 
and as we said before
if he is able

87
00:07:15.570 --> 00:07:20.660 
to read the books and he
reads also the newspaper.

88
00:07:20.660 --> 00:07:25.400 
So it is not very strict that
he has to only read books. He

89
00:07:25.400 --> 00:07:28.500 
can also read other things
such as newspapers.

90
00:07:30.380 --> 00:07:33.800 
Now we to move towards the second
kind of restrictions which

91
00:07:33.800 --> 00:07:35.990 
is the restrictions
on cardinality.

92
00:07:37.740 --> 00:07:41.400 
So for the cardinality the exact
restriction can be given with

93
00:07:41.400 --> 00:07:46.160 
the help of all cardinality. So
for example in this example

94
00:07:46.160 --> 00:07:50.580 
you see you have a StringQuartet
which has the cardinality

95
00:07:50.580 --> 00:07:56.100 
of four. So it will always contain
four members. It will always have

96
00:07:56.540 --> 00:08:00.450 
exactly four members, not
not less or not more.

97
00:08:00.950 --> 00:08:06.210 
So now we are we will move towards
the other kinds of cardinality

98
00:08:06.210 --> 00:08:10.900 
restrictions. So we have OWL maximum
cardinality, or the minimum cardinality.

99
00:08:11.040 --> 00:08:16.410 
What happens there is that it defines a
range of the in the arrange of numbers.

100
00:08:16.570 --> 00:08:20.300 
So it defines the lower and the
upper bounds on the property

101
00:08:20.300 --> 00:08:21.500 
value cardinalities.

102
00:08:24.010 --> 00:08:27.810 
So in the coming lecture
you will learn

103
00:08:27.810 --> 00:08:29.800 
more about OWL
and beyond.
