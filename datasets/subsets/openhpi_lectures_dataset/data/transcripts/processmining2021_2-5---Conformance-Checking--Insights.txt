WEBVTT

1
00:00:00.690 --> 00:00:04.859 
Welcome to this video clip in which we discuss the insights we can obtain from

2
00:00:04.860 --> 00:00:05.860 
Conformance Checking.

3
00:00:07.380 --> 00:00:09.634 
So in the last clip we have shown and analyzed

4
00:00:12.090 --> 00:00:16.679 
how a comparison of event log traces and model traces allows

5
00:00:16.680 --> 00:00:21.140 
us to detect certain differences between event

6
00:00:21.150 --> 00:00:25.559 
log and model. And the question is, of course, now, how can we move from these

7
00:00:25.560 --> 00:00:30.079 
differences to violation patterns? Because this is what we're actually interested in.

8
00:00:30.480 --> 00:00:33.509 
So as a reminder. So this is what we have discovered.

9
00:00:33.510 --> 00:00:38.099 
So we have looked at this event log trace and we have compared it to

10
00:00:38.100 --> 00:00:41.520 
the closest trace, to the most similar trace from the model.

11
00:00:41.790 --> 00:00:45.590 
And we have realized that there are a number of gaps, there are

12
00:00:47.460 --> 00:00:52.109 
a number of moments we see that something is happening that we did not expect

13
00:00:52.110 --> 00:00:54.930 
either in the event log to happen or in the model to happen.

14
00:00:55.990 --> 00:01:00.640 
So what can we do with this? If we look at the first two of these

15
00:01:01.300 --> 00:01:06.219 
problems here, we see that they actually relate to the same violation

16
00:01:06.220 --> 00:01:10.869 
pattern. So what happened is that the decision on the claim was simply

17
00:01:10.870 --> 00:01:13.299 
taken before the claim was received.

18
00:01:13.930 --> 00:01:17.115 
So all that happened is essentially that the activities have been

19
00:01:18.400 --> 00:01:22.540 
executed in the wrong order. The decision was taken too early.

20
00:01:23.320 --> 00:01:27.407 
What we see here or what we realize is, of course, that this results in these two

21
00:01:28.720 --> 00:01:31.513 
problems here and the event like trees, we see that there

22
00:01:33.370 --> 00:01:37.633 
is a misalignment here because the model we expected to receive the claim review, which

23
00:01:38.110 --> 00:01:42.400 
we did not observe in the log, and then at a later point, we

24
00:01:42.850 --> 00:01:46.721 
received the claim review, which we did not expect to happen in a model anymore

25
00:01:47.470 --> 00:01:50.180 
because it should have happened earlier.

26
00:01:50.770 --> 00:01:53.906 
So these two problems then relate to the same violation patterns

27
00:01:55.510 --> 00:01:57.389 
and lead to a wrong order.

28
00:01:57.700 --> 00:02:00.140 
And so the decision was taken early.

29
00:02:00.340 --> 00:02:04.603 
But this is then from a domain perspective, of course, a very important insight that we

30
00:02:04.690 --> 00:02:06.230 
can derive from this.

31
00:02:07.540 --> 00:02:12.249 
The third problem here, well, the third misalignment

32
00:02:12.250 --> 00:02:16.389 
resulting, the second problem is that the approval letter was not sent as expected.

33
00:02:16.390 --> 00:02:21.039 
And we expected this activity, but we

34
00:02:21.040 --> 00:02:23.568 
observed no corresponding event in the event log.

35
00:02:23.920 --> 00:02:27.699 
So we conclude that this activity was simply skipped.

36
00:02:30.700 --> 00:02:35.259 
So what we have looked at now is a single trace, so we have looked at a single

37
00:02:35.260 --> 00:02:39.639 
trace and compare it to single trace to model trace to the model.

38
00:02:39.980 --> 00:02:44.110 
And we have realized that there are a number of violation patterns related to this

39
00:02:44.440 --> 00:02:48.759 
single trace. And this is, of course, typically not what we do in practice,in practice we

40
00:02:48.760 --> 00:02:51.179 
are typically interested in the log.

41
00:02:51.190 --> 00:02:54.277 
And to illustrate this a little bit, imagine that we have a log

42
00:02:55.870 --> 00:02:59.590 
with a thousand traces and check each individual trace from the log

43
00:03:00.370 --> 00:03:04.359 
against the model. And we have to repeat this procedure, which is explained for each

44
00:03:04.360 --> 00:03:08.949 
individual trace. So for each trace, we have to find the closest model trace and then

45
00:03:09.220 --> 00:03:12.797 
identify the so-called alignment and realize where are the gaps, and then

46
00:03:13.870 --> 00:03:16.059 
we can derive these violation patterns.

47
00:03:16.340 --> 00:03:21.039 
And of course, once we have done that, we can aggregate our findings and

48
00:03:21.040 --> 00:03:23.580 
illustrate them here, for instance, in this model.

49
00:03:23.600 --> 00:03:28.300 
And let's imagine what we find could be something like this.

50
00:03:29.350 --> 00:03:33.939 
So we could find that the decision on this claim was made without having received

51
00:03:33.940 --> 00:03:38.620 
the claim review, in 234 of our cases, about 23% of all cases.

52
00:03:39.550 --> 00:03:43.870 
This is very important input, because realizing that this just

53
00:03:44.230 --> 00:03:48.395 
that this problem with respect to the decision does not just happen once, but happens

54
00:03:49.090 --> 00:03:54.220 
quite frequently, 23% of the cases provides us with further information

55
00:03:54.430 --> 00:03:55.960 
on the severity of the problem.

56
00:03:56.590 --> 00:03:59.139 
So it's obviously happening quite frequently.

57
00:04:00.810 --> 00:04:03.701 
We have also found that the approval letter was not sent in

58
00:04:05.280 --> 00:04:08.955 
the trace that we have looked at and after analyzing the entire log, we may

59
00:04:09.780 --> 00:04:13.590 
find that this was not the case in 52 cases on almost

60
00:04:14.880 --> 00:04:19.529 
5% of all cases, which shows that also this is not

61
00:04:19.980 --> 00:04:24.670 
a particularly infrequent, so 5% is quite a considerable number.

62
00:04:26.220 --> 00:04:31.109 
And this problem occurs rather frequently.

63
00:04:33.030 --> 00:04:37.250 
Another problem that we now realize or that we may find on a log

64
00:04:37.470 --> 00:04:41.819 
level that we have not observed in the particular trace that we have just looked at,

65
00:04:42.120 --> 00:04:46.040 
is that we realized that the claim was not checked for completeness in more than

66
00:04:46.680 --> 00:04:50.059 
150 cases and about 15% of all cases.

67
00:04:50.310 --> 00:04:55.050 
So this is now a particular violation pattern that we have not observed in the trace

68
00:04:55.060 --> 00:04:59.519 
we've just looked at, because a single trace cannot always include all the

69
00:04:59.520 --> 00:05:03.097 
violation patterns. But this is something that we have realized and found

70
00:05:03.990 --> 00:05:06.059 
by analyzing the entire log.

71
00:05:07.140 --> 00:05:09.990 
And this is now important feedback.

72
00:05:10.320 --> 00:05:13.759 
This does not allow us to jump to conclusions.

73
00:05:13.770 --> 00:05:18.170 
We always have to put these findings into context.

74
00:05:18.180 --> 00:05:22.619 
We  probably have to consult domain experts to interpret these findings

75
00:05:22.890 --> 00:05:26.682 
and to understand, is this a problem is this severe?

76
00:05:27.810 --> 00:05:30.110 
And if yes, what can we do about it?

77
00:05:31.440 --> 00:05:36.050 
So this brings me to the questions, are violations always a problem and

78
00:05:36.060 --> 00:05:40.919 
would we would like to stress is, of course, that this needs to be put into a context

79
00:05:40.920 --> 00:05:45.036 
as to whether a particular conformance violation represents a problem depends on the

80
00:05:45.330 --> 00:05:49.889 
context. So simply finding a violation pattern does not mean that there

81
00:05:49.890 --> 00:05:52.369 
is a dramatic violation happening, but it could be.

82
00:05:53.190 --> 00:05:57.779 
So what we have seen in week one is the scenario where we have updated

83
00:05:57.790 --> 00:06:01.980 
the model. So we realize that there are deviations between

84
00:06:02.340 --> 00:06:04.019 
the event and our model.

85
00:06:04.530 --> 00:06:08.360 
And we decided, OK, this is something that we should simply include in the model.

86
00:06:08.370 --> 00:06:10.529 
And this could also be the case here.

87
00:06:11.570 --> 00:06:14.249 
So let's look again at our detected patterns.

88
00:06:14.250 --> 00:06:18.720 
So maybe there are some cases where the decision is simply clear

89
00:06:19.200 --> 00:06:23.549 
and we can move on without waiting for the review.

90
00:06:23.550 --> 00:06:27.899 
And in fact, it could be beneficial for customers because the customers are waiting and

91
00:06:27.900 --> 00:06:29.749 
they want feedback on their claim.

92
00:06:30.270 --> 00:06:32.069 
So maybe this is even something good.

93
00:06:32.670 --> 00:06:36.529 
So that could be I'm not saying that is always the case.

94
00:06:36.540 --> 00:06:40.860 
This is simply to to provide you with some explanation that

95
00:06:42.420 --> 00:06:46.319 
that may be actually possible in real life as well.

96
00:06:47.970 --> 00:06:51.809 
We have also seen that the approval letter was not sent.

97
00:06:52.320 --> 00:06:56.750 
It's well imaginable that the decision was communicated via email.

98
00:06:56.910 --> 00:06:59.459 
So there was no letter sent? Indeed, that's correct.

99
00:06:59.670 --> 00:07:04.169 
But maybe the decision was communicated via a different channel and

100
00:07:04.170 --> 00:07:08.459 
this would then exactly be something that we should probably include in the model

101
00:07:08.820 --> 00:07:13.499 
and updated model, respectively, unless again, that is exactly

102
00:07:13.500 --> 00:07:15.510 
the kind of discussion we need to have.

103
00:07:15.780 --> 00:07:17.691 
We always want a letter to be sent out.

104
00:07:18.330 --> 00:07:22.680 
If that's important, well, then there is a severe violation happening.

105
00:07:24.930 --> 00:07:28.619 
Lastly, we have seen that the check completeness was not always conducted

106
00:07:29.760 --> 00:07:33.239 
and maybe there are cases where this is not necessary because it's very

107
00:07:34.440 --> 00:07:39.059 
obvious. So we see it's just two documents and we can just skip it or we can even perform

108
00:07:39.060 --> 00:07:43.649 
it automatically. So we can imagine there are always explanations why a certain

109
00:07:43.650 --> 00:07:48.089 
violation pattern is actually not a violation or not a conformance

110
00:07:48.090 --> 00:07:49.090 
violation.

111
00:07:49.980 --> 00:07:54.240 
But maybe we have just found something that we should include in the model.

112
00:07:54.690 --> 00:07:59.519 
Again, whether or not we include something in the model may again depend on the frequency

113
00:07:59.520 --> 00:08:03.749 
of such a pattern. But as we have seen those violations, parents we have just discussed

114
00:08:03.750 --> 00:08:06.259 
here were actually reasonably frequent.

115
00:08:06.660 --> 00:08:10.320 
So the input from this analysis is for sure

116
00:08:11.280 --> 00:08:14.089 
that we need to act in some ways.

117
00:08:14.100 --> 00:08:17.880 
Either we enhance the model or we decide, OK, there is something

118
00:08:18.540 --> 00:08:21.600 
happening that we didn't expect to happen and we should address.

119
00:08:23.300 --> 00:08:28.129 
To summarize, we have seen that comparing log and model traces allows

120
00:08:28.130 --> 00:08:30.739 
us to detect relevant violation patterns.

121
00:08:31.460 --> 00:08:35.539 
So we have compared the trace from the event log to the closest trace

122
00:08:36.020 --> 00:08:40.129 
from from the model, and by realizing where the gaps are,

123
00:08:40.789 --> 00:08:44.989 
we have some input for then identifying

124
00:08:45.200 --> 00:08:48.150 
exactly these violation patterns we see here on the right hand side.

125
00:08:49.820 --> 00:08:52.858 
This feedback can be used to analyze individual traces as well

126
00:08:54.320 --> 00:08:59.029 
as entire event logs. In a practical scenario, we would typically look

127
00:08:59.030 --> 00:09:02.117 
at an entire event log and then, well, then go back to relevant

128
00:09:03.450 --> 00:09:06.850 
traces where we actually observe these conformance issues.

129
00:09:07.580 --> 00:09:11.710 
It's important to realize that the comparison that we have looked at it,

130
00:09:12.080 --> 00:09:16.690 
of course, very high level also facilitates the quantification of conformance.

131
00:09:16.700 --> 00:09:20.865 
You can imagine if you look at this alignment and the different problem areas that we

132
00:09:21.230 --> 00:09:23.778 
have identified, you can count these and in this way

133
00:09:25.820 --> 00:09:27.731 
also quantify the level of conformance.

134
00:09:30.230 --> 00:09:34.809 
So to say this is something that you also see in practice and

135
00:09:34.820 --> 00:09:37.059 
it can be used, for instance, as a KPI.

136
00:09:38.120 --> 00:09:42.740 
Lastly, we would like to stress that the analysis that we have introduced

137
00:09:42.980 --> 00:09:47.480 
on a high level is if we look at the technicalities is quite complex.

138
00:09:47.810 --> 00:09:52.429 
So it requires also a lot of computational power because

139
00:09:52.430 --> 00:09:56.960 
every single event log trace has to be aligned individually with

140
00:09:57.260 --> 00:10:00.151 
the process model. And for each trace, we then need to find

141
00:10:01.850 --> 00:10:03.890 
the closest path. So this is quite

142
00:10:07.610 --> 00:10:11.230 
computationally expensive. But this is something that can be conducted automatically.

143
00:10:11.480 --> 00:10:13.640 
So there is no need to do this manually.

144
00:10:13.880 --> 00:10:16.879 
There are tools available that can accomplish this.

145
00:10:17.880 --> 00:10:21.529 
And this is, of course, something that we would use in a practical setting.
