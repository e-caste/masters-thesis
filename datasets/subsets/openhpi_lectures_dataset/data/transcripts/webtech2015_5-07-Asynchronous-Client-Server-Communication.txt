WEBVTT

1
00:00:04.640 --> 00:00:08.320 
Now let's speak about Asynchronous Client-Server Communication

2
00:00:08.940 --> 00:00:12.400 
which allows the Web 2.0 application.

3
00:00:13.990 --> 00:00:16.320 
AJAX-

4
00:00:17.630 --> 00:00:20.970 
the Asynchronous JavaScript and XML.

5
00:00:22.530 --> 00:00:26.990 
This term was coined by in a paper by Jesse James Garett written

6
00:00:26.990 --> 00:00:31.500 
in February 2005 "Ajax: A New Approach to Web Applications".

7
00:00:32.340 --> 00:00:38.650 
But if one looks in more detail, one sees no it wasn't a new.

8
00:00:39.220 --> 00:00:42.980 
It was already introduced by Microsoft, by Microsoft in the

9
00:00:42.980 --> 00:00:44.340 
year 2001

10
00:00:46.260 --> 00:00:53.030 
under the name XMLHttpRequest when Internet Explorer 5 came

11
00:00:53.370 --> 00:00:56.490 
to the market. The basic idea

12
00:00:57.210 --> 00:01:03.330 
behind this AJAX is the data exchanged between client and server

13
00:01:03.780 --> 00:01:07.270 
by means of javascript. And this makes it possible

14
00:01:07.810 --> 00:01:11.150 
that it's not necessary to transfer the complete

15
00:01:12.160 --> 00:01:17.210 
page from the server to the client, it is possible to update

16
00:01:17.210 --> 00:01:21.830 
special parts in a document by receiving only the data that

17
00:01:21.830 --> 00:01:25.560 
are needed to update this part of the server from the server.

18
00:01:26.410 --> 00:01:30.340 
So only certain parts of the page are updated.

19
00:01:30.770 --> 00:01:34.720 
That means the page does not have to be completely transferred.

20
00:01:36.480 --> 00:01:42.020 
The general procedure behind AJAX is that by means of javascript

21
00:01:42.340 --> 00:01:45.510 
an XMLHttpRequest is executed.

22
00:01:46.970 --> 00:01:51.880 
Interestingly the request can take place asynchronously in the background.

23
00:01:52.720 --> 00:01:58.660 
So the data is downloaded via a HTTP request and does not interfere

24
00:01:58.660 --> 00:02:01.810 
with the user's interaction within the page. That means user

25
00:02:01.810 --> 00:02:05.870 
can work on the page and in the background asynchronously.

26
00:02:06.340 --> 00:02:12.410 
The data are downloaded to update a certain part of the page.

27
00:02:13.670 --> 00:02:20.160 
When issuing the XMLHttpRequest, the function is linked with an event,

28
00:02:20.540 --> 00:02:25.340 
was a JavaScript event that is triggered at the end of the request.

29
00:02:27.280 --> 00:02:33.450 
The type of the data that are downloaded is usually XML or JSON.

30
00:02:34.110 --> 00:02:38.790 
The XML data is parsed by means of JavaScript

31
00:02:39.270 --> 00:02:45.250 
and then integrated into the document on the basis of the Document Object Model.

32
00:02:45.760 --> 00:02:51.500 
So using DOM manipulation in the html source text makes it possible

33
00:02:51.710 --> 00:02:56.320 
to place the transferred piece of data exactly on the right place

34
00:02:56.750 --> 00:02:59.730 
inside the html document.

35
00:03:00.880 --> 00:03:06.570 
If we look to an AJAX request and we have the client, we have the server.

36
00:03:06.990 --> 00:03:12.050 
The client sends an HTML request to a web server and the web server

37
00:03:12.180 --> 00:03:16.960 
answers who is sending the complete website. Inside the website

38
00:03:17.370 --> 00:03:22.470 
is a javascript events and this make it possible

39
00:03:22.950 --> 00:03:29.850 
that the XMLHttpRequest can send to the server and then the

40
00:03:30.180 --> 00:03:35.270 
server-side the application dynamically generates the response.

41
00:03:36.420 --> 00:03:41.510 
This little piece of the document that need to be changed. And this is sent back

42
00:03:41.770 --> 00:03:45.450 
in the form of XML and then this

43
00:03:46.380 --> 00:03:50.720 
event lender handler makes it possible to

44
00:03:52.000 --> 00:03:56.660 
take the XML answer and to use it to update the

45
00:03:57.150 --> 00:04:01.610 
two uses to update the corresponding part of the document by

46
00:04:01.610 --> 00:04:04.400 
manipulating the Document Object Model.

47
00:04:06.540 --> 00:04:11.010 
Advantages of AJAX of course, it's a very important advantage,

48
00:04:11.210 --> 00:04:15.720 
that the server load and the bandwith requirement is reduced essentially.

49
00:04:16.480 --> 00:04:21.970 
It's reduced because not necessary to transfer, to produce and transfer complete pages,

50
00:04:22.260 --> 00:04:29.610 
but it's only needed to produce a certain part of the document, and to transfer

51
00:04:30.150 --> 00:04:34.770 
this certain part to the document. This part where the document

52
00:04:34.770 --> 00:04:38.570 
was changed by the client. So a faster feedback is possible

53
00:04:38.830 --> 00:04:43.520 
because the change can be displayed much faster. This improves

54
00:04:43.520 --> 00:04:49.850 
the usability of the page, and allows the creation of graphical user interfaces

55
00:04:50.340 --> 00:04:54.190 
that blur the borders between a web application and desktop software.

56
00:04:54.440 --> 00:05:00.620 
So user does not feel his it's done on my computer or it's taken

57
00:05:01.030 --> 00:05:07.370 
over the internet. And exactly this blurring of the borders between

58
00:05:07.570 --> 00:05:12.560 
a web application and desktop software have forced the creation of

59
00:05:12.680 --> 00:05:15.240 
a new new group of web application.

60
00:05:16.820 --> 00:05:21.720 
Also frameworks, many frameworks and libraries are available

61
00:05:21.990 --> 00:05:27.450 
for fast and efficient AJAX programming. For example jQuery

62
00:05:27.570 --> 00:05:28.580 
or Prototype.

63
00:05:30.530 --> 00:05:34.990 
Beside of the advantage of course there are all the disadvantages

64
00:05:34.990 --> 00:05:37.530 
and limitations coming with AJAX.

65
00:05:39.190 --> 00:05:45.100 
To let AJAX approach work JavaScript must be actuated and you remember

66
00:05:45.100 --> 00:05:49.590 
for certain security relevant applications, it's recommended

67
00:05:49.720 --> 00:05:52.000 
and not to activate javascript.

68
00:05:53.520 --> 00:05:57.670 
It's a potential increase in the programming efforts and this

69
00:05:57.670 --> 00:06:01.870 
comes from the fact that the programmer of a web application

70
00:06:02.020 --> 00:06:06.910 
also needs to think about the case, if something goes wrong with

71
00:06:07.670 --> 00:06:11.560 
this AJAX transform. So fallback solution

72
00:06:12.350 --> 00:06:16.710 
needs to be designed for at least for the important parts of

73
00:06:16.850 --> 00:06:17.990 
the page.

74
00:06:20.390 --> 00:06:26.780 
This blurring affects all the blurs separation of structure of a page

75
00:06:26.930 --> 00:06:34.380 
and the layout. And you remember this was one of the basic ideas of html

76
00:06:34.700 --> 00:06:41.560 
to strictly separate the structure and the layout of a document. Here with this

77
00:06:41.680 --> 00:06:44.710 
javascript applications, its AJAX approach

78
00:06:45.470 --> 00:06:48.930 
it becomes is too much.

79
00:06:51.460 --> 00:06:55.160 
There is a decreased accessibility as javascript

80
00:06:55.660 --> 00:07:02.510 
is required and it is necessary to extensively test how the

81
00:07:03.470 --> 00:07:08.610 
web for the programmer of a web application, how the documents

82
00:07:08.750 --> 00:07:10.980 
look like on the different browsers.

83
00:07:11.650 --> 00:07:17.210 
Because with this javascript and the different features in many details,

84
00:07:17.480 --> 00:07:22.370 
different browsers react and display things in a different way.

85
00:07:22.660 --> 00:07:29.380 
So for competitive compatibility reasons one has to test as a web designer

86
00:07:30.210 --> 00:07:33.840 
the output and display of the web page.

87
00:07:34.770 --> 00:07:37.640 
An important disadvantage of AJAX

88
00:07:39.240 --> 00:07:45.640 
of content of AJAX created with AJAX is that web crawlers

89
00:07:46.100 --> 00:07:51.150 
do not be able to execute JavaScript.

90
00:07:51.870 --> 00:07:55.410 
So it is very difficult to index these

91
00:07:57.780 --> 00:08:03.780 
pages produced by means of AJAX and if it's difficult to index

92
00:08:03.880 --> 00:08:07.360 
then it's difficult to find by search machines.

93
00:08:09.020 --> 00:08:15.570 
Then the last disadvantage I want to mention here that is that AJAX request

94
00:08:15.850 --> 00:08:18.410 
do not appear in browser history.

95
00:08:19.260 --> 00:08:24.480 
So the function on the back button is suspended. So it's not so easy

96
00:08:24.630 --> 00:08:26.500 
to navigate through this

97
00:08:27.230 --> 00:08:29.750 
AJAX generated pages.

98
00:08:32.110 --> 00:08:37.420 
Beside of AJAX also JSON can be used for asynchronous communication.

99
00:08:38.420 --> 00:08:46.650 
JSON is a JavaScript Object Notation and this is a lightweight data-interchange format

100
00:08:47.100 --> 00:08:50.900 
that can be used alternative to XML.

101
00:08:52.640 --> 00:08:56.410 
JSON's advantage of this Data Interchange Format is that it's

102
00:08:56.420 --> 00:09:02.400 
easy to read for humans, and it's also easy to pass for machines.

103
00:09:03.920 --> 00:09:09.230 
JSON supports universal data structures and

104
00:09:09.870 --> 00:09:14.780 
available in most programming languages, for example Arrays:

105
00:09:15.130 --> 00:09:20.740 
ordered list of variables here with aka vector and list. Objects:

106
00:09:20.940 --> 00:09:25.630 
collection of name/value pairs here with the aka struct with the dictionary,

107
00:09:25.930 --> 00:09:27.330 
associative array.

108
00:09:28.820 --> 00:09:32.550 
Compared to XML, the advantage of JSON

109
00:09:33.690 --> 00:09:38.030 
of the JSON interchange format is that's much more compact.

110
00:09:38.750 --> 00:09:44.100 
But disadvantage is there are no means to validate the data format.

111
00:09:45.780 --> 00:09:52.790 
To give an example which makes it possible to compare JSON and XML,

112
00:09:53.230 --> 00:09:56.610 
it's an example to create

113
00:09:57.390 --> 00:10:02.470 
a page about technologies, for example in our OpenHPI context

114
00:10:03.010 --> 00:10:07.040 
where the data from week one as the intro

115
00:10:07.510 --> 00:10:11.410 
is shown. Here you see with the XML,

116
00:10:12.320 --> 00:10:18.610 
with the XML program as the markup up are used to categorize

117
00:10:18.610 --> 00:10:22.830 
the differencing. We need to start markup, we need to enter markup

118
00:10:23.270 --> 00:10:27.810 
and this is a main difference, if you compare to JSON.

119
00:10:28.290 --> 00:10:35.170 
There is no markup used. There are brackets used, so that the same

120
00:10:35.850 --> 00:10:39.320 
content becomes much more compressed.

121
00:10:39.950 --> 00:10:43.390 
In a certain sense, it's more easy to read.

122
00:10:44.320 --> 00:10:48.930 
In another sense, one has to more carefully look at it to see

123
00:10:49.040 --> 00:10:51.010 
what is the open, what is the

124
00:10:52.090 --> 00:10:57.200 
closing bracket that belongs to a certain opening bracket.

125
00:11:04.290 --> 00:11:07.510 
The aynchronous communication- this was the main

126
00:11:08.590 --> 00:11:13.100 
tool to enable so called Web 2.0.

127
00:11:13.740 --> 00:11:18.200 
Two point zero, two o- there are different names.

128
00:11:19.720 --> 00:11:25.630 
The Web 2.0 is not a specific technology, but its

129
00:11:27.170 --> 00:11:31.280 
bold, it's a generic term. It's used as a generic term

130
00:11:31.760 --> 00:11:37.370 
for describing new web standards and new web technologies.

131
00:11:39.280 --> 00:11:42.390 
The characteristic point is that the Web 2.0

132
00:11:44.070 --> 00:11:51.540 
pages can be created much easier that user, the web user can become

133
00:11:51.760 --> 00:11:57.000 
an author, can create web content in a very simple way.

134
00:11:58.580 --> 00:12:02.470 
So this Web 2.0 term was created by Tim O'Reilly

135
00:12:02.990 --> 00:12:08.100 
with the intent to describe a changed perception, and a changed

136
00:12:08.100 --> 00:12:09.930 
use of the World Wide Web.

137
00:12:11.160 --> 00:12:15.950 
Many of the Web 2.0 technologies had already been developed

138
00:12:16.070 --> 00:12:20.010 
at the end of the 1990s, so for example AJAX,

139
00:12:20.520 --> 00:12:27.730 
Web Services API, RSS feeds all these are technologies used in

140
00:12:28.020 --> 00:12:30.250 
the Web 2.0 applications.

141
00:12:31.470 --> 00:12:37.260 
Since about 2005 there has been a change in the perception

142
00:12:37.450 --> 00:12:40.620 
and use of the internet. I already mentioned this.

143
00:12:41.120 --> 00:12:47.480 
So the increased used of the web as a platform. Not only as an information

144
00:12:48.110 --> 00:12:53.540 
as a tool to receive information, but to use the web as a platform

145
00:12:53.820 --> 00:12:58.920 
so the boundaries blur between the web application and the desktop program.

146
00:12:59.260 --> 00:13:04.050 
So for example it was possible to instead of using a local

147
00:13:04.650 --> 00:13:10.710 
words processor, one can use a google service or Doogle Docs service.

148
00:13:11.340 --> 00:13:14.540 
To create, to manipulate text

149
00:13:16.160 --> 00:13:23.550 
text documents and it feels like the same. And it's not

150
00:13:24.260 --> 00:13:27.980 
good to see and got to to feel whether the text is created

151
00:13:27.980 --> 00:13:32.680 
on the local computer with a word processor or whether the document

152
00:13:33.250 --> 00:13:39.340 
is created in a web application and only a different part are

153
00:13:39.340 --> 00:13:44.130 
modified, and the document is stored, for example with Google.

154
00:13:45.820 --> 00:13:50.810 
Advantage here it's not necessary to install a local word processor.

155
00:13:51.500 --> 00:13:54.940 
The only thing what's needed is a web browser.

156
00:13:55.350 --> 00:13:58.660 
And with the web browser it's documents can be generated.

157
00:13:59.150 --> 00:14:02.730 
This gives this document creation gives only one example

158
00:14:03.190 --> 00:14:06.160 
of the new form the web can be used.

159
00:14:06.910 --> 00:14:08.940 
Another important example

160
00:14:10.660 --> 00:14:13.330 
it's given by many of the web applications

161
00:14:13.830 --> 00:14:20.430 
that allow users to become editors. So it's this participatory principle

162
00:14:21.210 --> 00:14:26.210 
which makes it easy for the users to create their own content,

163
00:14:26.220 --> 00:14:32.460 
for example to write a post in a block or to a given wiki, I think.

164
00:14:32.740 --> 00:14:38.500 
So as a community feeling of the users which are interacting over the

165
00:14:38.830 --> 00:14:43.040 
web are increased a lot, and exactly this is what the notion of web

166
00:14:43.280 --> 00:14:45.510 
2.0 is pointing to.

167
00:14:46.710 --> 00:14:50.710 
And another point which is important and has

168
00:14:51.810 --> 00:14:57.610 
lead to this notion is that the personalization of Graphical User Interfaces

169
00:14:57.710 --> 00:15:02.650 
and web pages becomes more easy and becomes much more common.

170
00:15:04.420 --> 00:15:11.240 
Complex roles and right systems came into place which allows that the

171
00:15:11.450 --> 00:15:15.320 
community is a virtual community, can be structured

172
00:15:16.100 --> 00:15:21.760 
into groups, into different groups of users, who are based on their rights

173
00:15:22.090 --> 00:15:27.970 
and roles, can view a contribution or can edit a contribution or

174
00:15:28.110 --> 00:15:30.010 
can delete a contribution of others.

175
00:15:31.250 --> 00:15:37.680 
So to mention a few examples of some typical Web 2.0 services,

176
00:15:38.020 --> 00:15:42.700 
for example Flickr. FLickr.com- that is an online photo album

177
00:15:43.010 --> 00:15:44.560 
where people can place, you know this,

178
00:15:45.490 --> 00:15:50.610 
or eventually can place their photos in the web, and they can

179
00:15:51.180 --> 00:15:55.660 
view the photos by means of their browser, they can navigate

180
00:15:55.660 --> 00:16:01.920 
through their web album and others. Another application is Writely.com or

181
00:16:02.130 --> 00:16:07.310 
the already mentioned Google Docs which allow word processing via the web.

182
00:16:08.130 --> 00:16:13.110 
Then we have Fleetblender.com. This is a news feed service.

183
00:16:13.590 --> 00:16:19.540 
Here are two blog services. The blogspot.com service

184
00:16:19.660 --> 00:16:23.810 
or Blog.sina.com.cn - a Chinese blog service.

185
00:16:24.450 --> 00:16:29.510 
We have Google Maps. Surely you know Google Maps. It's a map service

186
00:16:30.020 --> 00:16:33.550 
and it's a typical application of the Web 2.0.

187
00:16:34.630 --> 00:16:40.650 
New feeling of interacting with web content. Delicious dot com-

188
00:16:40.730 --> 00:16:46.660 
an online bookmark management. Or Facebook Google plus as

189
00:16:46.660 --> 00:16:51.730 
social web platforms or Renren as Chinese social platform.

190
00:16:52.320 --> 00:16:55.620 
Mendeley- a collaborative research paper management,

191
00:16:56.740 --> 00:17:01.440 
famous in the research committee. This all give examples of

192
00:17:01.630 --> 00:17:04.090 
Web 2.0 services, which

193
00:17:04.720 --> 00:17:12.240 
show the new way how users can interact with the web, how virtual communities

194
00:17:12.610 --> 00:17:17.860 
can start to be work, and if you see to our OpenHPI is and

195
00:17:17.860 --> 00:17:22.810 
also of course OpenHPI can be considered, and Web 2.0 service.

196
00:17:22.970 --> 00:17:27.930 
You can create content. You are invited to create content in the discussion forums.

197
00:17:28.180 --> 00:17:32.950 
You can see content. You can interact, which is other.

198
00:17:33.630 --> 00:17:37.280 
This is what is titled Web 2.0.
