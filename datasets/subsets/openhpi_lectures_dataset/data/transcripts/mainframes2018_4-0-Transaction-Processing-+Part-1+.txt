WEBVTT

1
00:00:00.460 --> 00:00:04.210 
Yeah hello again and welcome to the next video clips

2
00:00:04.860 --> 00:00:09.410 
about Transaction Processing. Transaction Processing is a really important

3
00:00:09.830 --> 00:00:14.350 
kind of processing, epecially in the mainframe area.

4
00:00:14.900 --> 00:00:23.110 
And, let's first take a short overview where transaction processing

5
00:00:23.310 --> 00:00:25.430 
is located when we talk about

6
00:00:26.050 --> 00:00:31.870 
data processing. So data processing is a general idea of processing

7
00:00:32.350 --> 00:00:38.580 
data electronic and electronically. And we distinguish

8
00:00:38.650 --> 00:00:41.330 
Batch Workloads especially in the mainframe area.

9
00:00:41.810 --> 00:00:46.430 
Batch Workloads are very important and on the other side we have

10
00:00:46.650 --> 00:00:50.870 
Interactive Workloads. And when we talk about interactive

11
00:00:50.870 --> 00:00:52.370 
workloads, there are two

12
00:00:53.180 --> 00:00:58.370 
general processing possibilities. We can use Time Sharing as

13
00:00:58.370 --> 00:01:04.910 
example TSO in a COS environment or CMS in a

14
00:01:05.420 --> 00:01:09.280 
virtual machine environment. And on the other side, and this

15
00:01:09.280 --> 00:01:14.660 
is where now concentrate on is OLTP- abbreviation for

16
00:01:14.790 --> 00:01:21.950 
Online Transaction Processing, sometimes called Online sometimes called Transaction Processing

17
00:01:22.190 --> 00:01:27.170 
and sometimes just called OLTP as the abbreviation I mentioned just.

18
00:01:27.550 --> 00:01:32.390 
And so we have in general three basic different workloads

19
00:01:32.390 --> 00:01:35.050 
in the mainframe environment. It's a workload of

20
00:01:35.610 --> 00:01:40.760 
Batch processing, it's a workload of Time Sharing and the third

21
00:01:40.760 --> 00:01:44.350 
workload we concentrate now on is Workload

22
00:01:45.090 --> 00:01:48.390 
Online. Online means Transaction Processing.

23
00:01:49.180 --> 00:01:51.140 
When we talk about Transaction Processing, a typical

24
00:01:51.910 --> 00:01:57.570 
example for doing a transaction is a transfer from

25
00:01:57.580 --> 00:02:00.740 
money from bank account A to bank account B.

26
00:02:01.310 --> 00:02:06.780 
We have different steps that are necessary to fulfill this task.

27
00:02:06.990 --> 00:02:11.310 
We subtract the amount from account A, we add the amount

28
00:02:11.320 --> 00:02:15.850 
to an account B and we have to do some book keeping. And these transactions

29
00:02:16.190 --> 00:02:22.010 
belong to one transaction and only be executed altogether or

30
00:02:22.130 --> 00:02:28.510 
not at all. So again these three steps subtract the amount from account A

31
00:02:29.060 --> 00:02:34.210 
add the amount to account B and do the book keeping. And we

32
00:02:34.210 --> 00:02:41.610 
start the book with a 'Begin Statement', means now a transaction begins

33
00:02:41.730 --> 00:02:46.260 
and at the end we have a so called Commit. Commit means now the

34
00:02:46.590 --> 00:02:51.730 
transaction is fulfilled and all these steps are defined as a logical

35
00:02:51.950 --> 00:02:56.640 
unit of work. And it's really important that this logical unit of work

36
00:02:56.930 --> 00:03:03.990 
may be only executed at all or not at all. And to manage

37
00:03:04.210 --> 00:03:06.980 
this kind of workload, we have a

38
00:03:07.740 --> 00:03:12.090 
so called ACID characteristics, maybe heard of it already. It's in

39
00:03:12.330 --> 00:03:14.790 
my opinion, it's really important to understand what ACID

40
00:03:15.590 --> 00:03:19.610 
characteristics mean. First

41
00:03:21.690 --> 00:03:26.310 
is atomicity means that each transaction is treated as

42
00:03:26.310 --> 00:03:31.140 
a single unit. I just showed the logical unit of work, which

43
00:03:31.230 --> 00:03:36.580 
either succeeds complete or fail completely. This is important to understand.

44
00:03:37.060 --> 00:03:42.050 
Second thing is consistency. Ensures the transaction will

45
00:03:42.220 --> 00:03:46.000 
bring the database from one definite state to another.

46
00:03:46.510 --> 00:03:49.790 
And the third is

47
00:03:50.550 --> 00:03:57.640 
isolation. Isolation has to do with concurrency. In such an environment means

48
00:03:58.060 --> 00:04:02.510 
that we have a lot of activities in parallel and each activity

49
00:04:02.510 --> 00:04:07.670 
has treated by its own. So the isolation is a very important

50
00:04:08.470 --> 00:04:13.100 
characteristic to fulfill when within a transaction environments.

51
00:04:13.130 --> 00:04:17.470 
And the last thing is durability. Durability guarantees that

52
00:04:17.480 --> 00:04:22.860 
when a transaction has been completed, it will remain committed. Means

53
00:04:23.020 --> 00:04:30.900 
if there is some interruption after the transaction was committed

54
00:04:31.260 --> 00:04:35.100 
and we have some problems with the database or wherever,

55
00:04:35.370 --> 00:04:40.130 
all the activities have to be redone to fulfill the

56
00:04:40.860 --> 00:04:47.620 
durability characteristic. Important to compare it to other kind of processing,

57
00:04:47.780 --> 00:04:51.080 
especially when it comes today to big data

58
00:04:51.530 --> 00:04:56.610 
and something like this. Big data normally doesn't support these ACID

59
00:04:56.960 --> 00:05:00.990 
characteristics and this is important for especially critical

60
00:05:01.220 --> 00:05:05.970 
transactions like we do in financial environments or wherever.

61
00:05:07.340 --> 00:05:13.660 
In the past at times, yeah we can call it the good old mainframe.

62
00:05:13.960 --> 00:05:18.290 
The distinction was very easy. Database management systems and databases

63
00:05:18.530 --> 00:05:23.120 
manages data in databases and TP monitors

64
00:05:24.010 --> 00:05:27.930 
deal with transactions. Now in 1986, Sybase came

65
00:05:27.930 --> 00:05:32.680 
up with the idea of integrating transactions functionality

66
00:05:32.930 --> 00:05:36.900 
into their database management system. That's

67
00:05:36.900 --> 00:05:40.860 
where are stored procedures came up and triggers were invented.

68
00:05:41.250 --> 00:05:45.870 
A very important technique to be used today in such environments.

69
00:05:46.020 --> 00:05:50.480 
And now we have this distinguish between TP Lite and TP heavy.

70
00:05:50.720 --> 00:05:54.660 
TP Lite is the transaction processing, where the transaction

71
00:05:54.660 --> 00:05:59.350 
functionality is included into the database management system,

72
00:05:59.640 --> 00:06:04.530 
and TP heavy is where we have separately transaction managed by a

73
00:06:05.010 --> 00:06:09.210 
transaction processing environment- we call it transaction

74
00:06:09.210 --> 00:06:11.570 
monitors or transaction monitoring.

75
00:06:12.790 --> 00:06:18.800 
So a transaction manager or TP monitor controls

76
00:06:18.800 --> 00:06:23.130 
transactions and all processing that has to be done in such an environment.

77
00:06:23.930 --> 00:06:29.190 
And all the components that are included in this transaction processing

78
00:06:29.780 --> 00:06:34.830 
are controlled by a transaction manager, and it has much more functionality

79
00:06:35.070 --> 00:06:39.110 
than the transaction characteristics that are built with TP

80
00:06:39.110 --> 00:06:43.580 
lite into database management environments. So normally, in

81
00:06:43.590 --> 00:06:48.650 
mainframe environment, in fact we have transaction monitors

82
00:06:48.960 --> 00:06:56.360 
and if we talk about the environments within COS, we have normally installed

83
00:06:56.500 --> 00:06:59.860 
CICS.

84
00:07:01.060 --> 00:07:03.890 
How it is pronounced, there is a lot of discussion

85
00:07:04.490 --> 00:07:10.550 
about pronouncing this the abbreviation. In Germany, we normally say CICS

86
00:07:10.990 --> 00:07:14.710 
and it stands for Customer Information

87
00:07:14.710 --> 00:07:18.290 
Control System. It's the most important transaction monitor

88
00:07:18.440 --> 00:07:23.540 
and so the second one in the COS environment, IMS TM.

89
00:07:23.720 --> 00:07:27.250 
TM stands for transaction monitor. So when you talk about IMS,

90
00:07:27.250 --> 00:07:34.380 
we have two big components, one is the IMS DB. It's a hierarchical database we already

91
00:07:35.120 --> 00:07:40.280 
mentioned in the video clips before. And TM stands for transaction

92
00:07:40.280 --> 00:07:43.860 
monitor. This is the transaction monitor component of

93
00:07:44.290 --> 00:07:48.670 
IMS. We talk about both of them during the next few

94
00:07:49.740 --> 00:07:54.560 
video clips. Thank you very much and have fun with transaction managemen.
