WEBVTT

1
00:00:00.740 --> 00:00:04.010 
welcome to the first video of the introduction to Qiskit

2
00:00:04.650 --> 00:00:07.170 
in this video we will learn what is Qiskit

3
00:00:07.780 --> 00:00:11.320 
and what is the development roadmap for it

4
00:00:12.190 --> 00:00:13.830 
so let's go to the first

5
00:00:14.570 --> 00:00:20.550 
Slide. Qiskit stands for quantum information science kit and it is

6
00:00:21.060 --> 00:00:27.090 
a software development kit that is written in a high level programming language

7
00:00:27.230 --> 00:00:30.090 
which is python and it's

8
00:00:30.930 --> 00:00:35.390 
used for working with quantum computers at the level of circuits,

9
00:00:35.510 --> 00:00:38.500 
pulses, algorithms and application modules

10
00:00:39.340 --> 00:00:43.790 
we have decided not to create a new programming language but

11
00:00:43.830 --> 00:00:48.980 
to embrace one of the most widely used ones in the scientific world

12
00:00:49.750 --> 00:00:55.140 
and it is a python that most of you are probably familiar with

13
00:00:56.130 --> 00:01:02.080 
so that you don't have to learn a complete new syntax but only a framework that

14
00:01:02.640 --> 00:01:06.750 
uses a programming language you're really familiar with

15
00:01:07.710 --> 00:01:12.040 
and we have decided to make it open source because that's the

16
00:01:12.150 --> 00:01:15.630 
culture we are embracing in IBM quantum

17
00:01:16.330 --> 00:01:21.720 
and also because we believe that's the best way to develop software

18
00:01:22.970 --> 00:01:27.500 
here you can see a screen in the screen you can see

19
00:01:28.950 --> 00:01:33.490 
a screenshot of the main project with sight but we will see

20
00:01:33.490 --> 00:01:35.520 
it in more detail a little bit later

21
00:01:37.640 --> 00:01:42.910 
so first we will look into the development roadmap in not just

22
00:01:42.910 --> 00:01:47.890 
about software the whole ibm quantum development roadmap so that you understand

23
00:01:48.850 --> 00:01:54.920 
why we have decided to make a Qiskit series

24
00:01:55.500 --> 00:02:01.460 
it's not by confidence but it answers to the demands of the

25
00:02:01.460 --> 00:02:06.130 
steps that we are taking towards developing a

26
00:02:06.930 --> 00:02:10.100 
universal full tool around a quantum computer

27
00:02:10.730 --> 00:02:13.520 
and that is our main goal in the future

28
00:02:14.380 --> 00:02:20.220 
so here in the slide you can look at the different steps that we have

29
00:02:20.610 --> 00:02:25.290 
done so far the first roadmap was published in

30
00:02:25.510 --> 00:02:27.880 
a couple of years ago

31
00:02:28.700 --> 00:02:34.680 
two thousand and twenty and this year two thousand and

32
00:02:34.680 --> 00:02:38.290 
twenty two we have published an update of this roadmap

33
00:02:39.010 --> 00:02:43.500 
so if you are not familiar with it you can always look at the

34
00:02:44.470 --> 00:02:47.440 
video announcements but basically you have to

35
00:02:48.050 --> 00:02:55.510 
take into account that we are talking about mostly two layers

36
00:02:55.640 --> 00:02:58.850 
the first one is hardware how hardware is going to advance

37
00:02:59.170 --> 00:03:00.660 
and the second one is

38
00:03:01.460 --> 00:03:06.510 
software applications so in terms of hardware if you are interested

39
00:03:06.590 --> 00:03:10.560 
you can look at the numbers that you see in the slide but

40
00:03:11.070 --> 00:03:15.300 
what we are going to focus right now is on the other layer

41
00:03:15.310 --> 00:03:16.830 
software and applications

42
00:03:17.980 --> 00:03:24.700 
so as we advance hardware we also need to advance this software layer

43
00:03:25.320 --> 00:03:28.250 
and for that we are working in different steps

44
00:03:28.700 --> 00:03:32.680 
one of which is first mitigating

45
00:03:33.190 --> 00:03:35.560 
and characterizing errors and eventually

46
00:03:36.190 --> 00:03:38.400 
come up with a way of correcting them

47
00:03:39.170 --> 00:03:44.770 
so and also how to efficiently execute our circuits in the hardware

48
00:03:44.940 --> 00:03:48.650 
so that's the layer where you read Qiskit Runtime

49
00:03:49.610 --> 00:03:54.760 
and dynamic circuits on top of that we're also thinking about the

50
00:03:54.760 --> 00:03:59.230 
different kind of users that quantum computing has so we have

51
00:03:59.240 --> 00:04:02.880 
the kernel developers that are the ones that work closer to

52
00:04:02.880 --> 00:04:04.390 
the hardware and that

53
00:04:05.040 --> 00:04:09.680 
develop high performance circuits to be executed in hardware

54
00:04:09.890 --> 00:04:14.630 
but then we have the algorithm developers and the algorithm

55
00:04:14.630 --> 00:04:18.920 
developers should not be necessarily experts in hardware but

56
00:04:18.920 --> 00:04:25.510 
they need to come up with ways to solve problems using this new technology available

57
00:04:26.310 --> 00:04:31.070 
and for the algorithm developers we are also thinking that

58
00:04:31.070 --> 00:04:36.240 
they will not only use quantum computers as an accelerator

59
00:04:36.450 --> 00:04:39.050 
but that they will also use other resources

60
00:04:39.970 --> 00:04:42.030 
such as GPUs, CPUs and

61
00:04:43.420 --> 00:04:45.800 
anything we have today in classical computing

62
00:04:46.360 --> 00:04:53.280 
so it's also needed for these hybrid algorithms that we use different accelerators

63
00:04:54.230 --> 00:04:58.560 
that we make an intelligent orchestration of all the resources

64
00:04:59.030 --> 00:05:02.120 
so that's why we're talking about quantum server

65
00:05:03.490 --> 00:05:09.920 
and also a set of algorithms and application modules that we will see

66
00:05:10.220 --> 00:05:13.870 
in Qiskit you will learn more about these in other courses as well

67
00:05:14.520 --> 00:05:18.180 
but basically they are modules that contain all the tools you

68
00:05:18.180 --> 00:05:21.610 
need to prepare your problems to map them to something that

69
00:05:21.610 --> 00:05:24.040 
can be solved later in the quantum computer

70
00:05:24.460 --> 00:05:29.530 
and also libraries that contain the algorithms the quantum

71
00:05:29.530 --> 00:05:31.530 
algorithms that have been developed so far

72
00:05:32.330 --> 00:05:36.780 
well on top of that we have the third kind of user which are the model developers

73
00:05:37.160 --> 00:05:40.650 
and they apply these quantum algorithms to real

74
00:05:41.340 --> 00:05:47.410 
world use cases so they also should not be experts neither

75
00:05:47.410 --> 00:05:52.970 
in quantum algorithms neither in hardware they need a higher level of abstraction

76
00:05:53.340 --> 00:05:57.950 
and that's where why we're also working in prototypes for the

77
00:05:57.950 --> 00:06:01.430 
different use cases or for the different application areas

78
00:06:02.290 --> 00:06:05.960 
so here you have already an overview and

79
00:06:06.830 --> 00:06:11.090 
hopefully it's more clear what i'm going to explain next

80
00:06:12.060 --> 00:06:16.490 
so taking into account all the steps that we have to work in

81
00:06:16.900 --> 00:06:21.500 
this is how Qiskit looks like it has evolved throughout the years

82
00:06:21.840 --> 00:06:24.070 
and right now this is the current picture

83
00:06:24.770 --> 00:06:28.350 
so we have all the buttons that we can access

84
00:06:28.350 --> 00:06:29.740 
to the hardware that

85
00:06:30.380 --> 00:06:33.440 
we have access. Qiskit is actually

86
00:06:34.980 --> 00:06:40.340 
hardware agnostic so it cannot only be run in our simulators

87
00:06:40.340 --> 00:06:44.740 
or our own providers but it can also be run in other

88
00:06:45.550 --> 00:06:50.970 
quantum computers available even in different

89
00:06:50.970 --> 00:06:55.370 
technologies such as ion drops so that's what you see on the

90
00:06:55.370 --> 00:06:57.710 
bottom of this Slide

91
00:06:58.360 --> 00:07:01.620 
Qiskit Aer is the part that contains all the simulators

92
00:07:02.550 --> 00:07:07.010 
Qiskit IBM is the provider that contains all of our buggins

93
00:07:07.660 --> 00:07:09.000 
available via the cloud

94
00:07:09.660 --> 00:07:12.560 
then we have the other providers just to emphasize

95
00:07:13.060 --> 00:07:15.500 
the fact that Qiskit is hardware agnostic

96
00:07:16.820 --> 00:07:21.600 
and then you see a little box that says OpenQASM that is like

97
00:07:21.930 --> 00:07:27.760 
the assembly language the equivalent to what you can think

98
00:07:27.760 --> 00:07:29.300 
of in classical computing

99
00:07:30.010 --> 00:07:33.200 
but for the quantum computer

100
00:07:33.960 --> 00:07:37.890 
then we have Qiskit Terra which is the core of

101
00:07:37.890 --> 00:07:41.270 
Qiskit and all the other elements are based in Terra

102
00:07:41.840 --> 00:07:45.780 
and on top of that we have the application modules that we

103
00:07:45.780 --> 00:07:50.350 
have already mentioned for the most important application

104
00:07:50.350 --> 00:07:55.470 
areas that we have identified so far so we have Qiskit Finance, Qiskit Nature

105
00:07:55.910 --> 00:07:58.300 
Qiskit Machine Learning and Qiskit Optimization

106
00:07:59.260 --> 00:08:03.380 
and apart from that as you probably already know

107
00:08:04.180 --> 00:08:10.140 
today we are working with NISQ-devices which means there is still noise

108
00:08:10.410 --> 00:08:13.150 
and that's why we also need a whole module

109
00:08:13.600 --> 00:08:20.100 
of tools that enable us to characterize

110
00:08:20.100 --> 00:08:22.070 
and mitigate the errors that appear

111
00:08:22.700 --> 00:08:24.440 
and that's Qiskit Experiments

112
00:08:25.210 --> 00:08:28.620 
besides that we also have Qiskit Dynamics which is

113
00:08:29.190 --> 00:08:33.470 
another module for solving partial differential equations

114
00:08:34.190 --> 00:08:37.710 
and on this side you can see Qiskit Metal and this is separated

115
00:08:37.710 --> 00:08:42.410 
because it's also a module of Qiskit but is for a very specific

116
00:08:43.300 --> 00:08:46.150 
application area which is hardware design

117
00:08:47.460 --> 00:08:51.940 
so now that you have an overview of the whole picture of Qiskit

118
00:08:52.460 --> 00:08:56.940 
let's see how we will actually use it to solve a problem on a

119
00:08:57.150 --> 00:09:01.680 
quantum computer here you can see all the ingredients that we need

120
00:09:01.890 --> 00:09:04.690 
so we have our problem and we use

121
00:09:05.300 --> 00:09:07.610 
the Qiskit application module to

122
00:09:08.230 --> 00:09:13.090 
map that problem in such a way that we can apply a quantum

123
00:09:13.090 --> 00:09:17.960 
algorithm then we will have is some quantum algorithm probably contain

124
00:09:18.430 --> 00:09:21.030 
whether in the application module or in Qiskit Terra

125
00:09:21.910 --> 00:09:25.580 
this quantum algorithm will translate the interactions of

126
00:09:25.580 --> 00:09:29.880 
the quantum algorithm will translate code to quantum circuits executions

127
00:09:30.190 --> 00:09:35.960 
that need to be compiled and executed in some hardware or simulator

128
00:09:36.250 --> 00:09:41.450 
so this is the flow of how our problem will be solved in a quantum computer

129
00:09:43.060 --> 00:09:48.620 
and now to finish let's have a look at the main web page of

130
00:09:48.620 --> 00:09:53.480 
the project let's get out together so that you can have

131
00:09:53.480 --> 00:09:57.840 
a sense of all the resources that you have available on as

132
00:09:58.230 --> 00:10:02.420 
any good open source project of course we have the documentation

133
00:10:03.350 --> 00:10:09.360 
so when you go into qiskit.org

134
00:10:09.890 --> 00:10:14.750 
this is what you see first you have some quick links

135
00:10:15.450 --> 00:10:18.930 
then you have a whole section for learning resources

136
00:10:19.400 --> 00:10:22.090 
and here you can filter them

137
00:10:22.700 --> 00:10:27.710 
you have the Qiskit textbook which is one of the most famous resources

138
00:10:27.710 --> 00:10:32.070 
that we have available is a textbook that you can use for self

139
00:10:32.070 --> 00:10:35.120 
learning or also to teach Qiskit in a class

140
00:10:36.460 --> 00:10:37.930 
then you also have some

141
00:10:38.860 --> 00:10:44.010 
whether you prefer videos or reading you have different kind of resources

142
00:10:44.730 --> 00:10:47.720 
and you can also filter them by

143
00:10:48.720 --> 00:10:50.330 
your level of expertise

144
00:10:50.970 --> 00:10:55.160 
inside the Qiskit textbook there are also different learning parts

145
00:10:55.750 --> 00:11:00.590 
so i am ad you to have a look at that then we also have a section

146
00:11:00.590 --> 00:11:04.540 
for the community so here you can check all the bands that are

147
00:11:04.790 --> 00:11:09.340 
happening right now the bands that have been done in the past i would also

148
00:11:09.490 --> 00:11:13.720 
encourage you to join this Slack the Qiskit Slack you have

149
00:11:13.720 --> 00:11:18.660 
the link here in the bottom of the page and also follow Qiskit in

150
00:11:19.130 --> 00:11:23.400 
twitter so that you are up to date of all the events that they organize

151
00:11:25.220 --> 00:11:30.980 
you also have a section about the different advocates so that you can check

152
00:11:31.170 --> 00:11:34.740 
which of them are working in your region they are basically

153
00:11:35.060 --> 00:11:38.750 
the most enthusiastic members of the community and they usually

154
00:11:38.750 --> 00:11:43.230 
organize events or are open to collaborate in different projects

155
00:11:44.620 --> 00:11:47.170 
and the last section is the documentation

156
00:11:47.610 --> 00:11:52.790 
where we have information about all the APIs that i have mentioned

157
00:11:53.060 --> 00:11:57.780 
so you have the reference of all of them you can even access the source code

158
00:11:58.010 --> 00:12:02.220 
since it's an open source project it's also possible to contribute

159
00:12:02.220 --> 00:12:04.900 
to Qiskit and here you have the guidelines for it

160
00:12:05.450 --> 00:12:08.250 
and you have a lot of tutorials to learn how to use

161
00:12:08.940 --> 00:12:10.810 
each of the parts so

162
00:12:11.700 --> 00:12:15.320 
this is the summary of all the things you have available

163
00:12:15.750 --> 00:12:20.110 
but we will continue to see more into detail what

164
00:12:20.380 --> 00:12:22.170 
Qiskit is about in the next videos

165
00:12:22.890 --> 00:12:23.690 
thank you so much
