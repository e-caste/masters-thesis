WEBVTT

1
00:00:04.870 --> 00:00:09.780 
Before I already mentioned that reasoned web programming is done by

2
00:00:09.780 --> 00:00:12.100 
means of web frameworks.

3
00:00:14.220 --> 00:00:19.490 
If we look at the history of the development of web programs

4
00:00:20.030 --> 00:00:24.320 
of the web programming, then it starts with the Pure CGI.

5
00:00:25.290 --> 00:00:30.300 
Here the HTML markup is generated by the CGI programs. Here for example,

6
00:00:30.820 --> 00:00:33.790 
to show a headline of a certain hierarchical level.

7
00:00:34.380 --> 00:00:40.450 
Then we had the server-side scripting

8
00:00:40.870 --> 00:00:45.550 
with a special markup for script code within html files.

9
00:00:46.510 --> 00:00:49.820 
I showed already an example with PHP-

10
00:00:51.100 --> 00:00:56.510 
a special markups show that it's a PHP script. And then there are the

11
00:00:56.770 --> 00:01:03.880 
corresponding code inside this special markup. So the server can

12
00:01:04.190 --> 00:01:08.460 
when hand over to the application exactly describe what application

13
00:01:08.460 --> 00:01:13.720 
needs to be done. Then next step of the development were template engines,

14
00:01:14.430 --> 00:01:16.900 
for example smarty for PHP.

15
00:01:17.710 --> 00:01:24.850 
With an idea of separation of the programs and the script code

16
00:01:26.290 --> 00:01:31.230 
from the html display.

17
00:01:31.890 --> 00:01:37.230 
And then reasoned web framework

18
00:01:38.640 --> 00:01:42.390 
work with the model view controller architecture.

19
00:01:43.810 --> 00:01:47.070 
We will see this in more detail in a later clip.

20
00:01:49.090 --> 00:01:53.150 
What do such web framework offer? They offer

21
00:01:54.270 --> 00:01:59.750 
as the hard libraries. Libraries for enormously simplified web programming.

22
00:02:00.080 --> 00:02:05.370 
So for almost all things that a designer wants to implement

23
00:02:05.640 --> 00:02:10.050 
in such library, he can find code which helps him

24
00:02:10.470 --> 00:02:13.730 
to design its application.

25
00:02:15.330 --> 00:02:20.970 
The possibility to define the data model as an object is a

26
00:02:20.970 --> 00:02:23.550 
very important feature of such platform works.

27
00:02:24.610 --> 00:02:28.360 
And behind there is an automatic transfer

28
00:02:28.890 --> 00:02:34.680 
of this data model into a relational database. For example the

29
00:02:34.680 --> 00:02:37.940 
Object Relational Mapping ORM

30
00:02:38.550 --> 00:02:44.560 
which provide Persistence frameworks we'll discuss later.

31
00:02:45.870 --> 00:02:50.060 
Then there is in characteristic of web frameworks,

32
00:02:51.080 --> 00:02:54.080 
there is an extensive use of taglibs.

33
00:02:54.810 --> 00:02:59.480 
These are libraries with pre-finished complex html control

34
00:02:59.480 --> 00:03:06.370 
elements which make it easy for the designer to place such control elements

35
00:03:06.670 --> 00:03:09.500 
inside its application. So this

36
00:03:11.010 --> 00:03:16.570 
concerns forms, light boxes, modal boxes, slideshow templates

37
00:03:17.920 --> 00:03:23.100 
AJAX requests and many other things. Then web

38
00:03:24.870 --> 00:03:30.250 
frameworks offer scaffolding. Scaffolding

39
00:03:30.910 --> 00:03:35.060 
stands for the automatic generation of views and controllers

40
00:03:35.300 --> 00:03:38.070 
to manipulate the defined model.

41
00:03:39.430 --> 00:03:41.530 
The view controller

42
00:03:43.190 --> 00:03:46.740 
pattern we will see better we will discuss later.

43
00:03:47.890 --> 00:03:50.860 
Here the display of data and the

44
00:03:52.060 --> 00:03:58.630 
operations, the basic operations create Read, Update, Delete this data.

45
00:04:00.230 --> 00:04:03.220 
This is so called CRUD operations

46
00:04:03.950 --> 00:04:06.420 
provided in the scaffolding.

47
00:04:07.040 --> 00:04:10.420 
Then there is a ready to go developer packet.

48
00:04:10.960 --> 00:04:17.280 
So the framework, web server, the script collection for management of the application,

49
00:04:17.480 --> 00:04:19.940 
this is delivered to the

50
00:04:20.670 --> 00:04:26.660 
web designer, which supports him very much in developing as

51
00:04:27.220 --> 00:04:32.610 
his application. His or her application. Then web frameworks

52
00:04:32.620 --> 00:04:37.430 
provide a seamless and transparent integration of javascript libraries.

53
00:04:38.860 --> 00:04:44.770 
And many other things which make the life of a web programmer easier

54
00:04:45.140 --> 00:04:49.190 
when he or she is using such a web framework.

55
00:04:50.720 --> 00:04:57.230 
So, today web applications are designed by the help, by means of that framework.

56
00:04:58.640 --> 00:05:02.560 
This web frameworks follow a number of key concepts.

57
00:05:03.160 --> 00:05:08.930 
One of this concept is so called DRY concepts- Don't Repeat Yourself

58
00:05:10.580 --> 00:05:15.760 
and the idea behind is to use as little as possible hand written code.

59
00:05:16.680 --> 00:05:18.520 
Hand written code is also

60
00:05:19.160 --> 00:05:24.680 
also called boilerplate code and the idea behind is that if

61
00:05:25.480 --> 00:05:30.410 
a certain program is designed, programming piece is designed

62
00:05:30.850 --> 00:05:34.160 
then to apply this piece for in the same situation,

63
00:05:34.940 --> 00:05:39.810 
if the situation occurs in the program its application on later plays

64
00:05:40.200 --> 00:05:46.890 
and use this pre-defined code pieces from libraries. From libraries,

65
00:05:46.950 --> 00:05:49.270 
this helps to avoid errors, this

66
00:05:50.310 --> 00:05:53.880 
fastens up the development and makes it

67
00:05:55.240 --> 00:05:58.160 
raise the quality of the application.

68
00:05:59.620 --> 00:06:07.460 
And that's a key concept of the web frameworks, is the concept Convention over Configuration.

69
00:06:08.920 --> 00:06:14.760 
It's applied in Ruby on Rails, Grails and the idea behind is to

70
00:06:16.590 --> 00:06:22.700 
to solve and to control application as little as possible by configuration

71
00:06:23.320 --> 00:06:27.140 
instead follow conventions. Conventions how to

72
00:06:27.610 --> 00:06:31.080 
use, how to design names, how to design

73
00:06:31.800 --> 00:06:37.030 
passes, how to design files, class names and others.

74
00:06:38.880 --> 00:06:44.950 
The rationale behind is that though it's easy to understand

75
00:06:45.020 --> 00:06:47.780 
or even to guess what's meant

76
00:06:48.510 --> 00:06:52.780 
instead of following very special design situation which are

77
00:06:52.780 --> 00:06:54.680 
different from application to application.

78
00:06:55.750 --> 00:07:00.470 
Another key concept of such web frameworks is the concept Keep It Simple, Stupid

79
00:07:01.580 --> 00:07:04.850 
and this is a KISS concept-

80
00:07:07.520 --> 00:07:10.270 
a simple installation

81
00:07:11.210 --> 00:07:13.170 
which can get started quickly,

82
00:07:13.830 --> 00:07:16.960 
and produce usable results faster.

83
00:07:17.670 --> 00:07:20.830 
So no complicated design of the

84
00:07:21.990 --> 00:07:25.980 
program. The more complicated, the higher is the

85
00:07:26.960 --> 00:07:33.700 
possibility to have errors or to get some effects

86
00:07:34.190 --> 00:07:37.310 
which are not desired in the application.

87
00:07:40.230 --> 00:07:44.740 
Web frameworks today are available for many different programming

88
00:07:44.830 --> 00:07:49.720 
languages and script languages. I already mentioned Ruby. Groovy

89
00:07:49.720 --> 00:07:56.610 
is another framework. Java, PHP, Python for all this programming language

90
00:07:56.910 --> 00:08:00.480 
there exist web frameworks.

91
00:08:02.030 --> 00:08:03.760 
And then we mentioned this

92
00:08:04.780 --> 00:08:11.830 
already and we see architectural pattern. The most of the current frameworks,

93
00:08:11.860 --> 00:08:15.390 
they implement the Model View Controller

94
00:08:16.660 --> 00:08:19.600 
Architecture and we will see in another clip

95
00:08:20.010 --> 00:08:22.110 
what is the idea behind.
