WEBVTT

1
00:00:00.470 --> 00:00:04.590 
Hello, my name is Stephen Lutz. I'm
from IBM Technical Sales in Germany

2
00:00:05.080 --> 00:00:08.930 
and in this session or this video
we'll talk about virtualization in

3
00:00:09.120 --> 00:00:10.060 
IBM power systems.

4
00:00:12.120 --> 00:00:15.390 
So most of the virtualization in
power systems is done with

5
00:00:15.390 --> 00:00:19.700 
the product powerVM. Power
VM is included in all

6
00:00:19.700 --> 00:00:23.620 
our servers, in our enterprise
and scale out servers

7
00:00:23.620 --> 00:00:27.230 
and it includes many technologies that
are listed here on this foil.

8
00:00:27.830 --> 00:00:31.500 
So you can see it
includes dynamic logical partitioning, that

9
00:00:31.500 --> 00:00:34.710 
means you can create virtual
machines and dynamically change

10
00:00:34.710 --> 00:00:38.950 
them in size, you can add
processors, remove processors add memory,

11
00:00:38.950 --> 00:00:44.050 
remove memory or add some additional
adapters either virtual adapters or

12
00:00:44.190 --> 00:00:48.130 
physical adapters. It also
includes micro partitioning. That

13
00:00:48.130 --> 00:00:52.220 
means you don't need to assign
whole processors but you can

14
00:00:52.220 --> 00:00:54.510 
also do this with
fractions of a processor.

15
00:00:55.300 --> 00:00:58.620 
Then it includes the virtual I/O
server. This is a special instance

16
00:00:58.620 --> 00:01:01.520 
that we will be talking about in
this session that is doing the

17
00:01:01.520 --> 00:01:07.270 
virtualisation of the I/O cards such
as ethernet and fibre channel or

18
00:01:08.290 --> 00:01:14.440 
disk adapters. Then powerVM also
includes the very famous functionality

19
00:01:14.440 --> 00:01:18.880 
called life partition mobility. This
is the possibility to transfer

20
00:01:18.880 --> 00:01:22.390 
a virtual machine from one server
to another server while the

21
00:01:23.010 --> 00:01:24.580 
application is up
and running.

22
00:01:25.780 --> 00:01:28.170 
Then we also have
active memory sharing.

23
00:01:28.790 --> 00:01:35.010 
This is a possibility to also a
share memory between LPARs and over-provisioning memory

24
00:01:35.540 --> 00:01:40.110 
and last but not least it also includes
a remote restart. Remote restart is the

25
00:01:40.320 --> 00:01:45.130 
possibility to restart a virtual
machine that was running on

26
00:01:45.130 --> 00:01:48.660 
a system that broke for whatever
reason. So in this case you

27
00:01:48.660 --> 00:01:52.510 
can a rebuild and restart this
virtual machine on a different system.

28
00:01:56.410 --> 00:02:01.100 
This slide talks in general about
powerVM virtualization how it works.

29
00:02:01.680 --> 00:02:05.610 
So first of all what you do
is creating a virtual machine or

30
00:02:05.610 --> 00:02:08.160 
it's also called an
LPAR in power systems.

31
00:02:08.590 --> 00:02:14.570 
That means you assign processor
resources and memory resources directly

32
00:02:14.680 --> 00:02:17.950 
from the hypervisor, that we say
how much process you want to

33
00:02:17.950 --> 00:02:19.160 
have and how
much memory.

34
00:02:20.040 --> 00:02:24.680 
Yeah and then you also
need of course some virtualized

35
00:02:24.840 --> 00:02:31.920 
I/O adapters or I/O functionality.
This is done by using

36
00:02:32.180 --> 00:02:35.500 
virtual adaptors that are provided by
the virtual I/O server.

37
00:02:36.010 --> 00:02:39.040 
So the virtual I/O server
is the bridge between the physics

38
00:02:39.040 --> 00:02:41.390 
and the virtual
world. That means

39
00:02:42.100 --> 00:02:46.150 
the virtual I/O server gets
the physical adapters and then

40
00:02:46.300 --> 00:02:49.990 
bridges the functionality into the
hypervisor into the system.

41
00:02:50.350 --> 00:02:52.790 
And the LPARs
then simply

42
00:02:53.490 --> 00:02:57.130 
get some virtual adapters and with
that can, for example, talk

43
00:02:57.130 --> 00:02:57.910 
to the network.

44
00:03:00.300 --> 00:03:04.170 
Yeah and how can you do that?
If you want to create a virtual

45
00:03:04.170 --> 00:03:08.520 
machine or assign adapters, this is
done by the hardware management. It

46
00:03:08.520 --> 00:03:14.070 
is called console also called HMC.
So this is a separate system

47
00:03:14.180 --> 00:03:17.720 
it's often a separate hardware box but it
doesn't need to be a separate hardware

48
00:03:17.850 --> 00:03:21.940 
box with the HMC software
running on it. And you access this

49
00:03:21.940 --> 00:03:26.430 
HMC using a web browser and
from there you can define your

50
00:03:26.430 --> 00:03:30.360 
virtual machines, LPARs and
do all the assignment of the

51
00:03:31.090 --> 00:03:32.340 
components that
you need.

52
00:03:35.740 --> 00:03:39.730 
Let's talk a little bit about
process or terminology in power systems.

53
00:03:40.140 --> 00:03:44.010 
So, what you see on this foil is
first of all the installed physical process. So,

54
00:03:44.150 --> 00:03:45.280 
the hardware so to say.

55
00:03:46.190 --> 00:03:50.700 
Such a processor or a core
it's a core but we often

56
00:03:50.810 --> 00:03:53.100 
use these terms
simultaneously or

57
00:03:54.160 --> 00:03:56.930 
you use the same term
for different things,

58
00:03:56.930 --> 00:04:01.080 
so we say core and
and processor, but obviously

59
00:04:01.820 --> 00:04:05.660 
the processor has much more cores
than just one. But what you

60
00:04:05.660 --> 00:04:09.770 
can see here is if a
core or processor is deconfigured,

61
00:04:10.010 --> 00:04:14.190 
so it means a system will
not use this process or this core.

62
00:04:14.590 --> 00:04:17.990 
This could be because of a hardware
failure. So it will

63
00:04:17.990 --> 00:04:21.740 
de configured by the system or
it could be done also manually,

64
00:04:21.740 --> 00:04:24.900 
for example if you want to
do some benchmarking and want to

65
00:04:24.900 --> 00:04:27.090 
have a certain amount of
process in the system.

66
00:04:28.780 --> 00:04:32.170 
Then we have processes or
cores that are inactive.

67
00:04:32.760 --> 00:04:36.310 
That means the cores are
physically installed in the system

68
00:04:36.310 --> 00:04:38.830 
but can't be used
from the user

69
00:04:39.790 --> 00:04:42.420 
because they are not licensed,
they are not paid.

70
00:04:42.680 --> 00:04:46.530 
So if a customer later on
wants to use these processes, the

71
00:04:46.530 --> 00:04:50.750 
customer can buy a activation
key and with this activation

72
00:04:50.750 --> 00:04:53.430 
key it can activate
also these resources.

73
00:04:54.100 --> 00:04:57.220 
This is also called capacity on
demand or COD.

74
00:04:59.790 --> 00:05:04.510 
Okay now let's talk first
time here about the virtualization.

75
00:05:04.970 --> 00:05:08.860 
When we create an LPAR,
in this case a dedicated LPAR,

76
00:05:09.430 --> 00:05:13.960 
we have processors that are
dedicated only to this single LPAR.

77
00:05:14.080 --> 00:05:17.100 
So in this case we see
two processors, two cores that are

78
00:05:18.380 --> 00:05:23.070 
assigned to this LPAR. This of
course is the most efficient way

79
00:05:23.070 --> 00:05:26.870 
in terms of overhead. So these two
processes are only there for this LPAR

80
00:05:27.510 --> 00:05:29.630 
but it also

81
00:05:31.020 --> 00:05:34.190 
could be an issue if these
processors have nothing to do then

82
00:05:34.190 --> 00:05:37.360 
the cycles of these processors
can't be used somewhere else.

83
00:05:37.880 --> 00:05:42.780 
So, there you need to think of if
this is important for you or not.

84
00:05:43.640 --> 00:05:47.390 
There are some applications
that need these dedicated

85
00:05:47.390 --> 00:05:52.220 
LPARs or one example would be
a SAP HANA environment. There it's

86
00:05:53.390 --> 00:05:57.990 
necessary that production
SAP HANA instances have a dedicated

87
00:05:57.990 --> 00:06:02.230 
process or dedicated cores. So in
this case you need this technology.

88
00:06:04.380 --> 00:06:08.090 
Then the other processes could be
assigned to a so called processor

89
00:06:08.090 --> 00:06:09.520 
pool or shared pool

90
00:06:10.150 --> 00:06:14.150 
and this pool can then be
used by several LPARs

91
00:06:15.790 --> 00:06:17.180 
that make use of these

92
00:06:18.020 --> 00:06:21.820 
cores inside this pool. So what
you see here are two additional

93
00:06:21.820 --> 00:06:26.730 
LPARs. One of them get
for example two virtual processors in

94
00:06:26.730 --> 00:06:32.220 
this case, the other one four and you also
need to assign a so called entitled capacity.

95
00:06:32.580 --> 00:06:36.910 
Entitled capacity is the guaranteed capacity
that this LPAR will get.

96
00:06:37.130 --> 00:06:41.210 
So if you have for example in
the middle you have two virtual

97
00:06:41.210 --> 00:06:45.560 
processors and an entitled capacity of
0.2 then each

98
00:06:45.560 --> 00:06:48.900 
process will get
a guaranteed processing

99
00:06:49.310 --> 00:06:54.180 
a guaranteed processing units of a
ten percent of a core.

100
00:06:56.300 --> 00:07:01.010 
And what we also can do,
we can activate simultaneous multi-threading.

101
00:07:01.280 --> 00:07:05.980 
That means each core can run
in parallel up to eight threads.

102
00:07:06.130 --> 00:07:12.190 
This is called SMT. This is also the
default in the new AIX versions, for example

103
00:07:12.940 --> 00:07:17.370 
with the new AIX versions on
the new power9 systems. The system will

104
00:07:18.070 --> 00:07:20.180 
be started automatically
in this mode.

105
00:07:23.980 --> 00:07:27.730 
Let's talk a little
bit about memory virtualization.

106
00:07:27.740 --> 00:07:32.610 
Most of the time memory is
not virtualized but simply a certain

107
00:07:32.610 --> 00:07:36.730 
amount is dedicated to an
LPAR to a virtual machine. So

108
00:07:36.730 --> 00:07:41.290 
what you see here is a output of
an HMC where you assign the memory

109
00:07:41.670 --> 00:07:47.100 
you say simply what is the memory that
you want to have in the allocated line.

110
00:07:47.230 --> 00:07:51.210 
So in this case the LPAR will
get four gigabytes of memory allocated

111
00:07:51.500 --> 00:07:54.790 
and you also define some
boundaries of minimum and maximum.

112
00:07:55.330 --> 00:07:58.730 
This is important first of all
when you start the word machine

113
00:07:58.740 --> 00:08:03.030 
then the minimum requirement
must be met. Otherwise

114
00:08:03.030 --> 00:08:04.670 
the virtual machine
will not start.

115
00:08:05.290 --> 00:08:09.700 
The maximum boundary is most of
the time used for dynamic changes

116
00:08:09.700 --> 00:08:14.330 
of this LPAR. So dynamic outpouring
that means you can change this with

117
00:08:14.530 --> 00:08:17.990 
the memory inside this virtual machine
up to eight gigabytes. You

118
00:08:17.990 --> 00:08:20.970 
can't go over that. You can't
go to nine for example.

119
00:08:21.410 --> 00:08:24.470 
If you want to go to nine
gigabytes then you need to stop the

120
00:08:24.470 --> 00:08:26.210 
virtual machine and
we start it again.

121
00:08:26.930 --> 00:08:29.700 
Only in these boundaries you can
do it while the system is

122
00:08:29.700 --> 00:08:30.410 
up and running.

123
00:08:35.850 --> 00:08:38.870 
Let's talk a little bit
about I/O virtualization.

124
00:08:39.430 --> 00:08:43.640 
Here in this first case, we
are talking about network virtualization.

125
00:08:44.020 --> 00:08:48.090 
As I said in the beginning in this
case we need a so called virtual

126
00:08:48.300 --> 00:08:52.740 
server. What you see on the left
hand side of the graph, here you

127
00:08:53.070 --> 00:08:56.210 
install the physical adapter or
assign the physical adapter.

128
00:08:56.610 --> 00:08:59.890 
In this case an adapter that
is connected to an external switch

129
00:09:00.340 --> 00:09:05.650 
and you also define some virtual adapter. So,
in this case one in the virtual I/O

130
00:09:05.830 --> 00:09:09.490 
server itself and also in
the client LPARs.

131
00:09:10.710 --> 00:09:15.190 
And what you then also need is the
box in the big box in the virtual

132
00:09:15.530 --> 00:09:17.610 
I/O server which is the
shared ethernet adapter.

133
00:09:18.090 --> 00:09:21.080 
This is nothing else than
a bridge between the virtual

134
00:09:21.560 --> 00:09:26.950 
adapter and the physical adapter. So this
makes it possible that the internal

135
00:09:27.300 --> 00:09:32.900 
network could be bridged outside into
your real physical ethernet switch.

136
00:09:34.400 --> 00:09:37.910 
Without ethernet adapter the two
clients for example could talk

137
00:09:37.910 --> 00:09:41.670 
to each other on an internal
basis using the hypervisor ethernet

138
00:09:41.780 --> 00:09:43.740 
but could not talk
to the outside world.

139
00:09:47.530 --> 00:09:50.760 
We also have another technology
for virtualizing ethernet.

140
00:09:50.840 --> 00:09:55.300 
This is shown in this foil.
This technology is called SR-IOV,

141
00:09:55.320 --> 00:09:59.230 
Single Route I/O Virtualization. In
this case we use the

142
00:09:59.260 --> 00:10:03.760 
virtualisation that is directly on
the physical card. So this

143
00:10:03.770 --> 00:10:07.820 
is something that needs to be provided
by the manufacturer of the card.

144
00:10:08.770 --> 00:10:12.930 
So in this case we see
a four port ten gigabyte ethernet card

145
00:10:14.020 --> 00:10:18.370 
which can be cut down into
sixty four pieces that could be

146
00:10:18.370 --> 00:10:20.860 
assigned to virtual
machines to LPARs.

147
00:10:22.860 --> 00:10:26.660 
How many of these are available
is dependent on the adapter.

148
00:10:26.670 --> 00:10:29.500 
Sometimes it's more sometimes it's
a little bit less.

149
00:10:30.300 --> 00:10:33.810 
These fractions are also called
virtual functions and these

150
00:10:33.810 --> 00:10:35.310 
could be assigned
to an LPAR.

151
00:10:36.170 --> 00:10:42.370 
And a nice thing about that is
that you can also add a guaranteed

152
00:10:42.710 --> 00:10:47.510 
bandwidth to these virtual functions.
So you can see here

153
00:10:47.650 --> 00:10:52.440 
these four LPARs get different numbers.
So the first gets ten percent of

154
00:10:53.270 --> 00:10:56.480 
the port of the adaptor, the first
port, the first line so to say,

155
00:10:56.840 --> 00:10:59.780 
the second one gets sixty percent,
the third twenty five and

156
00:10:59.780 --> 00:11:04.700 
the last one gets five percent.
And this is a guaranteed bandwidths.

157
00:11:04.830 --> 00:11:09.990 
So it means you can assign
quality of service with this technology.

158
00:11:10.890 --> 00:11:13.820 
So if you sum up these percentages
then you see that the sum

159
00:11:13.820 --> 00:11:17.360 
is one hundred percent. That means
that the first port is fully

160
00:11:17.360 --> 00:11:20.860 
assigned, is fully booked. So
the remaining virtual functions

161
00:11:20.860 --> 00:11:25.040 
in this case can't be used because
as I said the sum is one

162
00:11:25.040 --> 00:11:27.140 
hundred percent and this
is guaranteed bandwidth.

163
00:11:31.680 --> 00:11:35.300 
Why do customers use this
technology? This you can see

164
00:11:35.930 --> 00:11:39.190 
perhaps on this foil or
one reason for it.

165
00:11:39.810 --> 00:11:43.590 
In this foil you can
see different virtualization technologies

166
00:11:43.590 --> 00:11:47.120 
for a ten gigabit
ethernet adapter in this example.

167
00:11:48.160 --> 00:11:52.300 
The first graph, the blue one on
the bottom is a standard virtualization

168
00:11:52.300 --> 00:11:55.860 
technology with a shared ethernet
adapter. The technology that

169
00:11:55.870 --> 00:11:59.930 
we saw in the first example with
a standard MTU size of

170
00:12:00.020 --> 00:12:03.750 
one thousand five hundred. And
with this technology you can

171
00:12:03.750 --> 00:12:09.380 
only get round about two gigabytes per
second out of this ten gigabit

172
00:12:09.550 --> 00:12:13.280 
adapter. So it means you can
use this adapter only

173
00:12:13.940 --> 00:12:17.640 
round about twenty percent. The other
eighty percent you can't use

174
00:12:17.810 --> 00:12:20.540 
it's not possible to
make that happen.

175
00:12:21.920 --> 00:12:24.960 
I mean, what you can do
you can tune such a system.

176
00:12:25.550 --> 00:12:30.320 
For example if you're to increase
the MTU size, this is

177
00:12:30.320 --> 00:12:33.770 
the red graph. So you
increase the empty size for

178
00:12:33.770 --> 00:12:38.760 
example to nine thousand. This is
often done in backup environments

179
00:12:38.760 --> 00:12:40.930 
where you can deal
with these big packages

180
00:12:41.980 --> 00:12:46.070 
and with that you can reach
almost eight gigabytes per second.

181
00:12:46.070 --> 00:12:49.610 
So this is already quite good
for a shared ethernet environment.

182
00:12:49.610 --> 00:12:52.090 
So we are still in the
first technology that I showed you.

183
00:12:53.170 --> 00:12:56.020 
But you also can see here in
this graph if you have a look

184
00:12:56.020 --> 00:13:00.310 
at the X axis. This shows
the number of processing units

185
00:13:00.490 --> 00:13:04.190 
that is needed to make that happen.
So what you see if a user with

186
00:13:04.190 --> 00:13:07.490 
an MTU size of nine
thousand with the standard technology,

187
00:13:07.840 --> 00:13:11.660 
well you can reach almost a
giga bit but you need

188
00:13:11.680 --> 00:13:15.290 
in this example which is a quite
old one, but that doesn't matter,

189
00:13:15.770 --> 00:13:20.030 
you need almost a two processors
to make that happen. So it

190
00:13:20.030 --> 00:13:23.190 
means you need a lot
of processor cycles for that.

191
00:13:25.340 --> 00:13:28.170 
Now let's talk a little bit about
a green graph. The green graph

192
00:13:28.170 --> 00:13:31.670 
is the first one that introduces
the SR-IOV of the technology.

193
00:13:31.830 --> 00:13:35.630 
In this case with the standard empty
size of one thousand five hundred.

194
00:13:35.940 --> 00:13:39.410 
And what you can see here, first
of all you can reach the ten

195
00:13:39.410 --> 00:13:43.590 
gigabit per second. So you can use
the full bandwidth of the adapter

196
00:13:44.090 --> 00:13:47.910 
and what you also already see
to reach the ten gigabit,

197
00:13:47.920 --> 00:13:51.770 
first of all you don't need
a bigger MTU size and second,

198
00:13:51.780 --> 00:13:55.750 
you don't need that much of
processor units in this case.

199
00:13:56.590 --> 00:14:00.380 
And the green graph was measured
in an old power7 plus

200
00:14:00.380 --> 00:14:04.130 
system. This was the first
power system or technology

201
00:14:04.750 --> 00:14:06.010 
that introduced SR-IOV.

202
00:14:07.180 --> 00:14:10.240 
When you have a look into a
newer system such as power8

203
00:14:10.240 --> 00:14:15.360 
or even power9 then we are at a
yellow graph and on the top of it.

204
00:14:15.740 --> 00:14:19.340 
There you can see you can reach the
ten giga bit per second very easily

205
00:14:19.790 --> 00:14:22.360 
with a standard MTU
size and only with

206
00:14:23.410 --> 00:14:24.670 
a fraction of
the processor

207
00:14:26.330 --> 00:14:31.120 
resources that are needed in this case.
So this means, with that technology

208
00:14:31.300 --> 00:14:34.190 
you can use this
high speed adapters and

209
00:14:35.790 --> 00:14:38.210 
you don't need that much
processor cycles for it.

210
00:14:38.810 --> 00:14:42.410 
And this was only a ten
gigabyte adapter. Now imagine that customers

211
00:14:42.410 --> 00:14:46.160 
today are thinking about twenty five ,
forty or even a hundred gigabyte

212
00:14:46.620 --> 00:14:51.380 
adapter. So these adapters can only
be really used with SR-IOV

213
00:14:51.380 --> 00:14:54.030 
not with the
classic CR technology.

214
00:14:58.610 --> 00:15:01.870 
Okay let's talk a little bit about
disks. Of course you need

215
00:15:01.870 --> 00:15:05.970 
a disk for storing your operating system
at least in a virtual machine LPAR.

216
00:15:06.510 --> 00:15:10.560 
And here the concept is quite similar
as we saw in the ethernet environment.

217
00:15:10.980 --> 00:15:14.170 
So in this case you see
a virtual I/O server, just one.

218
00:15:14.590 --> 00:15:17.890 
Of course you can
have multiple virtual servers

219
00:15:17.890 --> 00:15:21.960 
to also get redundancy. In this case
we have one that has a

220
00:15:21.960 --> 00:15:25.850 
physical adapter that could be
a fiber channel adapter could

221
00:15:25.850 --> 00:15:31.110 
be a SAS adapter that could be
even a network adapter where you can

222
00:15:31.660 --> 00:15:36.920 
work with iSCASI disks. So iSCASI
is a brand using in the virtual

223
00:15:37.170 --> 00:15:41.890 
server which was introduced in the latest
version of it with 3.1

224
00:15:42.120 --> 00:15:44.700 
because many service
providers are often

225
00:15:45.140 --> 00:15:49.410 
using these iSCASI technology. So
well we have one physical adapter

226
00:15:49.650 --> 00:15:55.030 
and this adapter, you assign disks
from your outside storage or

227
00:15:55.550 --> 00:15:59.170 
from the disks you may also have
in the system could be also possible,

228
00:15:59.990 --> 00:16:03.520 
you see the disks in the virtual I/O
server, in this case A and B and

229
00:16:03.520 --> 00:16:06.910 
from there you can
virtualize them and

230
00:16:07.390 --> 00:16:11.030 
bring them into the client
adapter using vSCASI technology.

231
00:16:11.730 --> 00:16:15.330 
That means you have
a virtual SCASI protocol

232
00:16:15.370 --> 00:16:19.210 
that is defined in the client
LPAR with the client adapter

233
00:16:19.520 --> 00:16:22.460 
and also in the world also
with the server adapter. These two

234
00:16:22.460 --> 00:16:24.180 
adapters are pointing
to each other.

235
00:16:24.780 --> 00:16:29.010 
And we said you make the disk visible
in the client and can use it

236
00:16:29.330 --> 00:16:33.140 
for your operating system or
the data or whatever

237
00:16:33.140 --> 00:16:34.570 
you want to store
on the disk.

238
00:16:37.810 --> 00:16:42.590 
Yeah before I come to the
next example of disk virtualization,

239
00:16:42.600 --> 00:16:45.030 
let me just say, take

240
00:16:45.710 --> 00:16:49.280 
the examples that I showed you
were very simple ones. So of

241
00:16:49.280 --> 00:16:53.630 
course you can use other
technologies and combine this with

242
00:16:53.630 --> 00:16:58.350 
other technologies like multipath I/O or
mirroring and things like that.

243
00:16:58.620 --> 00:17:01.680 
So this is only a very basic
example what you can do. There

244
00:17:01.680 --> 00:17:04.990 
are much more sophisticated
configurations that you can

245
00:17:05.470 --> 00:17:07.250 
achieve in
power systems.

246
00:17:09.450 --> 00:17:12.830 
Yeah as we saw in the ethernet
environment, there we have two

247
00:17:12.830 --> 00:17:16.710 
technology. We have also two
technologies in the disk environment

248
00:17:16.710 --> 00:17:21.880 
and the second one is NPIV.
NPIV is N port ID Virtualization.

249
00:17:22.260 --> 00:17:28.070 
In this case we do not really virtualize
the disks but we virtualize fibre channel adapters.

250
00:17:28.620 --> 00:17:32.550 
So that means you also need a
virtual I/O server in this case

251
00:17:32.690 --> 00:17:36.680 
and a virtual I/O server
again puts some physical adapters

252
00:17:36.680 --> 00:17:37.830 
in this case
fibre channel.

253
00:17:38.550 --> 00:17:42.820 
And in declined adapter you define
virtual fibre channel adapters

254
00:17:43.480 --> 00:17:46.520 
and you map these virtual
fibre channel adapters of course

255
00:17:46.520 --> 00:17:50.580 
to the physical ones. When
you do this, the virtual

256
00:17:50.580 --> 00:17:52.700 
fibre channel adapter in
the line gets

257
00:17:53.410 --> 00:17:58.540 
its own WWPN. So its
own name, so to say.

258
00:17:59.180 --> 00:18:03.860 
And this name or this number you
can then use in your SAN environment

259
00:18:03.860 --> 00:18:08.890 
to configure zones and you can also use
this number in your storage subsystem to

260
00:18:09.820 --> 00:18:14.310 
define clients and assign disks to it.
And if you do that then

261
00:18:14.320 --> 00:18:18.840 
the traffic or the disk so
to say will be routed

262
00:18:18.840 --> 00:18:22.670 
from the SAN to the virtual
I/O server through the virtual

263
00:18:22.670 --> 00:18:25.550 
fibre channel adapter and will
be presented inside the client LPAR.

264
00:18:28.170 --> 00:18:32.520 
There are two big advantages by doing that.
First of all you see the disks

265
00:18:32.650 --> 00:18:36.580 
as disks from a certain vendor. So
you see it's an IBM disk

266
00:18:36.580 --> 00:18:39.620 
it's an EMC disk it's
an HDS disk or whatever.

267
00:18:40.210 --> 00:18:43.460 
This is different from the
vSCASI model because there you

268
00:18:43.460 --> 00:18:45.870 
only see some
generic vSCASI disks.

269
00:18:46.480 --> 00:18:52.040 
And if you have the adapters with
the disks shown as real,

270
00:18:52.270 --> 00:18:56.430 
how to say, IBM disks
for example, you then can

271
00:18:56.430 --> 00:18:59.670 
use tools that are
provided by the storage

272
00:19:00.190 --> 00:19:05.640 
vendor. So often these tools are
for example multi passing drivers.

273
00:19:05.890 --> 00:19:09.980 
There are special ones for example for
EMC or HDS and you can

274
00:19:09.990 --> 00:19:13.260 
include these drivers into
the client environment.

275
00:19:13.770 --> 00:19:17.880 
And as such this is only
possible with the NPIV technology, not

276
00:19:17.900 --> 00:19:19.230 
with a standard vSCASI.

277
00:19:20.870 --> 00:19:22.350 
Yeah the second

278
00:19:23.080 --> 00:19:27.750 
big advantage of this technology, you
can not only attach disks

279
00:19:27.750 --> 00:19:32.410 
to a virtual fibre channel adapter, but you
can also use these technologies for tapes.

280
00:19:32.770 --> 00:19:37.550 
So you can do back-ups directly on
a table in a LAN free environment.

281
00:19:38.150 --> 00:19:43.350 
So you simply assign a tape device
to the WWPN defining the

282
00:19:43.350 --> 00:19:47.390 
virtual fibre channel adapter and then you
see the tape device inside your client

283
00:19:48.140 --> 00:19:48.820 
environment.

284
00:19:52.300 --> 00:19:57.930 
Okay, that's almost all I had. As
a summary, we have the technology

285
00:19:57.930 --> 00:20:01.910 
listed here. We have in the network
environment for our I/O virtualization

286
00:20:02.330 --> 00:20:06.340 
standard SEA adapters and
also the SR-IOV adapters.

287
00:20:07.130 --> 00:20:10.230 
We have a third thing that also
used as IOV, as another

288
00:20:10.230 --> 00:20:14.950 
thing which works with virtual
NIC adapters. I didn't present

289
00:20:14.950 --> 00:20:19.130 
it in this little
video because of time but

290
00:20:20.480 --> 00:20:23.760 
you have much more possibilities if
you use also the vNIC

291
00:20:23.760 --> 00:20:27.570 
technology. So reach out for
that, it's quite interesting.

292
00:20:28.360 --> 00:20:31.320 
In the storage environment we have
vSCASI and we have NPIV.

293
00:20:31.930 --> 00:20:35.560 
And what are the customers
using today? Well, in

294
00:20:35.560 --> 00:20:39.730 
the network environment, many customers still
use the SEA technology

295
00:20:40.010 --> 00:20:44.830 
because it's somehow simpler to configure.
But most of the customers

296
00:20:44.830 --> 00:20:49.370 
starting now to use SR-IOV because
as said you can't get the

297
00:20:49.370 --> 00:20:52.830 
bandwidth of these high speed adaptors
by using the SEA environment.

298
00:20:53.430 --> 00:20:55.040 
And in a
disk environment

299
00:20:55.690 --> 00:21:02.550 
I would say, many also use vSCASI
but for the data most customers use NPIV

300
00:21:03.390 --> 00:21:08.860 
for example because they want to
use a certain multi passing driver.

301
00:21:10.160 --> 00:21:12.940 
Ok that's all I had.
Thank you very much.
