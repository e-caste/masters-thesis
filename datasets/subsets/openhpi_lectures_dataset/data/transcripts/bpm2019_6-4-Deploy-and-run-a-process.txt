WEBVTT

1
00:00:00.510 --> 00:00:04.670 
Hello and welcome back. So after
adding all those technical

2
00:00:04.670 --> 00:00:07.860 
attributes to our model now we
have a technical process model

3
00:00:08.020 --> 00:00:11.730 
and actually now the interesting part
comes where we give it to the engine.

4
00:00:12.180 --> 00:00:15.700 
Actually you might have heard me
saying before deploy a model

5
00:00:15.700 --> 00:00:19.140 
to the engine deploy comes from
or is a software term and

6
00:00:19.140 --> 00:00:22.350 
a general it means we have code
and will bring it to a place

7
00:00:22.350 --> 00:00:26.600 
where we can execute it. So in our
case that means we will deploy

8
00:00:26.600 --> 00:00:30.610 
our BPMN model to the container
of the engine because after

9
00:00:30.610 --> 00:00:35.290 
that we can run that model. For
deploying our process model

10
00:00:36.120 --> 00:00:40.530 
we have different ways to do that. We
can do it directly from the modeler

11
00:00:40.880 --> 00:00:44.790 
and that will just contain
the BPMN file. We also can

12
00:00:44.790 --> 00:00:49.260 
make our own REST calls using for
example postmen as a rest call

13
00:00:49.270 --> 00:00:53.770 
client. And what we also can do if
we talk about a bigger project

14
00:00:53.770 --> 00:00:57.140 
or a software project we could
create a WAR file and that WAR

15
00:00:57.140 --> 00:01:00.050 
file could contain our
BPMN file and also those

16
00:01:00.050 --> 00:01:04.060 
java classes he has talked about
would be in the same file.

17
00:01:04.370 --> 00:01:08.490 
Let's have a look at the fastest
way we can deploy. So I would

18
00:01:08.490 --> 00:01:13.030 
say it's quick but not dirty.
That's our modeler. So

19
00:01:13.040 --> 00:01:17.250 
what's important here if you
open it up actually you see

20
00:01:17.380 --> 00:01:22.380 
at the top you see that
deploy button. So that's

21
00:01:22.380 --> 00:01:25.880 
important that you need to click
for the deployment. What's

22
00:01:25.880 --> 00:01:30.470 
also important is that your process
probably will have an ID and

23
00:01:30.940 --> 00:01:34.710 
actually it's important if you
don't give a process a name

24
00:01:34.860 --> 00:01:38.250 
that's mentioned under if you
don't have the name the ID will

25
00:01:38.250 --> 00:01:42.280 
show up in the engine. So
make sure you either

26
00:01:42.280 --> 00:01:45.970 
have an ID or you have a name.
Probably name is a better idea.

27
00:01:45.970 --> 00:01:49.180 
And be careful it's not the name
you saved the model locally

28
00:01:49.180 --> 00:01:51.950 
on your machine it will be the
name that is in the xml file.

29
00:01:52.390 --> 00:01:56.600 
And very important make sure that
you tick the box executable

30
00:01:56.600 --> 00:01:59.920 
because otherwise you would not be able
to start your process in the engine.

31
00:02:00.150 --> 00:02:03.230 
So you once you do this two little
steps on the property panel

32
00:02:03.230 --> 00:02:06.790 
then you can go on the deployment
button and then actually this

33
00:02:06.980 --> 00:02:11.160 
window will show up. So here you
have multiple options .to enter

34
00:02:11.420 --> 00:02:14.850 
First of all you should
or you should think of

35
00:02:14.850 --> 00:02:17.160 
a name for your deployment that
will show up in the engine

36
00:02:17.160 --> 00:02:20.800 
as well not so important right
now. More important actually is

37
00:02:21.080 --> 00:02:24.240 
that you will configure the
endpoint because of the REST call

38
00:02:24.240 --> 00:02:27.870 
so you need to give the address
where to deploy to. In my

39
00:02:27.870 --> 00:02:31.100 
case here that's my local machine
but you were probably or you

40
00:02:31.100 --> 00:02:35.260 
will get another REST end point
for your for your assignments.

41
00:02:35.460 --> 00:02:39.790 
And then you can also go for the
authentication and there you

42
00:02:39.790 --> 00:02:43.160 
can enter your user name and
password so that we can make sure

43
00:02:43.160 --> 00:02:45.480 
that you are allowed to
deploy to that place.

44
00:02:45.900 --> 00:02:50.200 
So what the modeler is doing in
general it's creating a REST call

45
00:02:50.400 --> 00:02:54.440 
to the engine. Of course you could
do a REST call your own that's

46
00:02:54.440 --> 00:02:58.010 
what we call REST call deployment.
So you could create a post

47
00:02:58.010 --> 00:03:02.570 
call with the body that will apply
directly to the engine here.

48
00:03:03.390 --> 00:03:07.400 
Another option to do that or
another option to deploy actually

49
00:03:07.400 --> 00:03:11.570 
as the WAR file deployment.
Actually if you have a WAR file

50
00:03:11.570 --> 00:03:15.000 
that means normally it comes
from a bigger project or from

51
00:03:15.000 --> 00:03:18.710 
well from a coding project
and here you see a clubs

52
00:03:18.710 --> 00:03:22.940 
in the background and we have
some we had files here as well

53
00:03:22.940 --> 00:03:25.550 
in the structure. What's
important everything what fit

54
00:03:25.710 --> 00:03:29.210 
what would fit into the WAR
file will be for example

55
00:03:29.430 --> 00:03:32.650 
not just our BPMN model but
also we have the chance here

56
00:03:32.650 --> 00:03:36.000 
to have some java classes in the
same WAR file. And also if

57
00:03:36.000 --> 00:03:39.550 
we don't like our our form
fields we've created we could

58
00:03:39.550 --> 00:03:44.200 
think of some custom html forms
we want to deploy with it. Now

59
00:03:44.330 --> 00:03:48.290 
what's your favorite way of
deploying actually? So because I

60
00:03:48.290 --> 00:03:52.670 
don't like having to use eclipse
for wrapping everything together

61
00:03:52.670 --> 00:03:56.000 
and I prefer to use external
tasks I would tend to go with

62
00:03:56.000 --> 00:04:00.540 
deploying via the rest api
via postman. But that said

63
00:04:00.550 --> 00:04:03.990 
if you do that should not able
to use java classes directly

64
00:04:04.000 --> 00:04:07.860 
you would then need to use
external workers. So

65
00:04:08.010 --> 00:04:10.960 
eclipse i would tend to use for
testing so you could write

66
00:04:10.960 --> 00:04:14.250 
your test cases in eclipse but then
you could deploy it manually

67
00:04:14.250 --> 00:04:15.630 
via appear the
rest api.

68
00:04:16.600 --> 00:04:18.140 
For certain architectures
that's a good idea.

69
00:04:18.540 --> 00:04:21.420 
Yeah I think it depends a lot about
the architecture you choose

70
00:04:21.480 --> 00:04:25.700 
that also influence of course the
deployment way. Ok but once

71
00:04:25.700 --> 00:04:28.630 
we have deployed or we find our
favorite way of deployment

72
00:04:28.630 --> 00:04:31.590 
then we want to interact with
the engine right and the

73
00:04:31.590 --> 00:04:34.790 
engine always in the background
but we have to front

74
00:04:34.790 --> 00:04:37.520 
end applications that are becoming
important if we want to

75
00:04:37.520 --> 00:04:41.690 
interact with our process. And those
are the two we have cockpit here.

76
00:04:42.020 --> 00:04:46.250 
Cockpit actually will manage our
deployments and we can monitor

77
00:04:46.250 --> 00:04:49.180 
the instant that are running on
our process. We also have the

78
00:04:49.180 --> 00:04:53.330 
chance to handle incidents if we
have some in the running model.

79
00:04:53.380 --> 00:04:57.720 
And we can see the variables
of a process that had that

80
00:04:57.720 --> 00:05:00.910 
has been created but we
also can change them.

81
00:05:01.330 --> 00:05:05.950 
The other application we are
going to talk about is the task

82
00:05:05.950 --> 00:05:08.990 
list and actually that becomes
important because as the UI

83
00:05:09.080 --> 00:05:13.130 
where human can enter some data
and interact with our process,

84
00:05:13.130 --> 00:05:17.630 
so all user tasks will be
displayed there for the humans

85
00:05:17.650 --> 00:05:21.760 
we interact or then the human
has a chance to interact

86
00:05:21.760 --> 00:05:24.230 
with the engine by completely
pressing the complete button

87
00:05:24.240 --> 00:05:27.970 
the engine knows that the
user is ready and there is

88
00:05:27.970 --> 00:05:30.780 
another benefit or the users that
are logged in they can see

89
00:05:30.780 --> 00:05:35.010 
and work on the tasks. So they
see all the tasks open for them

90
00:05:35.010 --> 00:05:39.160 
or for the group. Ok first we are
going to talk about Cockpits.

91
00:05:39.170 --> 00:05:43.410 
So if you come to the first
page on the opening page

92
00:05:43.410 --> 00:05:46.660 
of cockpit that looks like this
as you can see you can see

93
00:05:46.660 --> 00:05:49.890 
all the running instances you have
at that time here we have six.

94
00:05:50.330 --> 00:05:51.630 
You'll see if
you have any

95
00:05:52.320 --> 00:05:55.410 
problems you need to handle, that's
the open incidents we have

96
00:05:55.420 --> 00:06:00.100 
zero that looks good. And we also
can see if we have open human

97
00:06:00.100 --> 00:06:04.360 
tasks and in this case we also have
six open human tasks. That is

98
00:06:04.360 --> 00:06:07.750 
everything you see from the
right now perspective. And

99
00:06:07.820 --> 00:06:11.010 
below you see the deployments
you have you have deployed.

100
00:06:11.010 --> 00:06:14.730 
so we see that we have two process
definitions here. That means

101
00:06:14.730 --> 00:06:18.700 
two processes obviously are deployed
to the engine. If you want

102
00:06:18.700 --> 00:06:22.980 
to get more details on your
deployments you can go to the

103
00:06:22.980 --> 00:06:27.280 
tab bar and click on more and on
deployments and actually here

104
00:06:27.490 --> 00:06:29.790 
you see everything you
deployed and now

105
00:06:30.290 --> 00:06:34.060 
if you remember in the modeler you could
enter your name. Actually here would be

106
00:06:34.450 --> 00:06:37.560 
here the name of your deployment
would be shown. In this case

107
00:06:37.570 --> 00:06:41.380 
this one here is called hello
process and here you see the

108
00:06:41.490 --> 00:06:45.290 
latest deployment and you
can get more details by

109
00:06:45.290 --> 00:06:48.640 
clicking on the process. If you
want to see more about your

110
00:06:48.640 --> 00:06:51.830 
processes and not just the
deployments you would go to the

111
00:06:51.840 --> 00:06:54.210 
tab deployment
processes sorry

112
00:06:55.340 --> 00:06:58.890 
and here you see the process definitions.
And actually here the name

113
00:06:59.010 --> 00:07:02.250 
shows up that you have put on
the properties panel or if you

114
00:07:02.250 --> 00:07:06.110 
haven't put a name the id would
show up of your model. And

115
00:07:06.110 --> 00:07:09.210 
here actually you also see the
processes and if you have

116
00:07:09.210 --> 00:07:11.900 
a running instance on your
process and if you want to have

117
00:07:11.900 --> 00:07:15.660 
a closer look on your process
you just could select one and

118
00:07:15.670 --> 00:07:19.380 
in this case I had to see and invoice
received and if I click on it

119
00:07:19.620 --> 00:07:23.730 
I can see this model here and
I can see that I have three

120
00:07:24.080 --> 00:07:29.240 
warning incidents not incidents
or instances on that model.

121
00:07:29.530 --> 00:07:33.330 
You can see them below everyone
has their own ID and

122
00:07:33.330 --> 00:07:38.410 
they are also represented in my
model as tokens. So here I could

123
00:07:39.150 --> 00:07:43.280 
I could go on one specific
instance I want to focus

124
00:07:43.280 --> 00:07:45.820 
on. So if I click on
one of those below

125
00:07:46.880 --> 00:07:50.910 
that will open up and I see I'm
just having this one here

126
00:07:50.910 --> 00:07:54.070 
and I will see all the variables
that has been created

127
00:07:54.450 --> 00:07:58.260 
during that instance and
I am able to change

128
00:07:58.260 --> 00:08:01.990 
them here as well as I want to.
So cockpit is really powerful

129
00:08:01.990 --> 00:08:06.470 
when it also comes to not just
monitoring but also yeah

130
00:08:06.470 --> 00:08:09.180 
I would say manipulating your
process if you don't like certain

131
00:08:09.180 --> 00:08:10.330 
things that are
going on.

132
00:08:11.000 --> 00:08:14.380 
We will talk about that later in
our demo and we will see what

133
00:08:14.380 --> 00:08:18.380 
other things you could do in cockpit
to mess around with your process.

134
00:08:18.770 --> 00:08:22.920 
Then there is the other thing
we talked about that the

135
00:08:22.930 --> 00:08:26.020 
user task management and we
use task list for that. So

136
00:08:26.020 --> 00:08:30.510 
if you open task lists in your
browser that will show up. So

137
00:08:30.520 --> 00:08:34.130 
you will see first you can
create your own filters so

138
00:08:34.130 --> 00:08:37.330 
that you will be just able to
see your tasks on one filter

139
00:08:37.510 --> 00:08:40.850 
and maybe you would be also able
to see your group tasks and

140
00:08:40.850 --> 00:08:43.730 
if you are super admin and that
I am at the moment I could

141
00:08:43.730 --> 00:08:47.330 
also create filters for all the
employees to see who is working

142
00:08:47.330 --> 00:08:51.990 
on which task at the moment.
And here on my tab my tasks

143
00:08:52.030 --> 00:08:56.980 
and I see on the right the two
things that are open for me.

144
00:08:57.150 --> 00:08:59.280 
And if I click for
example on one

145
00:08:59.920 --> 00:09:03.400 
I will get then the user interface
and I will see all the forms

146
00:09:03.400 --> 00:09:08.650 
fields that we have a that we have been
created in the modeler. So here actually

147
00:09:09.170 --> 00:09:12.670 
this one wants to approve or I
need to approve this one here

148
00:09:12.670 --> 00:09:17.930 
and if I do so I can click
I can tick the box

149
00:09:17.930 --> 00:09:22.390 
and then I can complete it.
What else is important here

150
00:09:22.390 --> 00:09:26.030 
is actually if the thing is not
assigned to me at the moment

151
00:09:26.430 --> 00:09:29.210 
and this is sometimes confusing
before I can work on it actually

152
00:09:29.210 --> 00:09:34.540 
I need to claim it. So if this is not
taken by a user then he would be

153
00:09:35.210 --> 00:09:37.740 
you would see here claim and if
you click on claim then it would

154
00:09:37.740 --> 00:09:42.000 
be your task and then you could add
things here in the form fields.

155
00:09:42.610 --> 00:09:44.190 
Ok and

156
00:09:46.670 --> 00:09:49.950 
we can do more things in task
list actually. Actually

157
00:09:49.950 --> 00:09:53.830 
we also can start a process. So
if you go back and if you have

158
00:09:53.840 --> 00:09:56.040 
the rights and
you go here to

159
00:09:56.650 --> 00:10:00.570 
yeah to the front page you'll see the
start process button and you can

160
00:10:00.760 --> 00:10:04.090 
click on it and here you can
select from all the processes

161
00:10:04.100 --> 00:10:08.410 
that are in the engine at the moment. So if
you click for example on invoice receipt

162
00:10:08.940 --> 00:10:12.150 
before starting the process actually
you will get the first form

163
00:10:12.360 --> 00:10:16.620 
because we we also can attach a form
to our start event. That means

164
00:10:16.620 --> 00:10:19.830 
that we need some data to start
the process right away. And

165
00:10:19.830 --> 00:10:23.190 
in this case this is also the
invoice received so probably

166
00:10:23.190 --> 00:10:26.920 
here we need to upload an
invoice we need to give some

167
00:10:26.920 --> 00:10:30.570 
more details about the amount
above the invoice category and

168
00:10:30.570 --> 00:10:34.650 
the invoice number and as soon as we've
done that we can press the start button

169
00:10:34.880 --> 00:10:37.310 
and starting the process
was already some data.

170
00:10:38.690 --> 00:10:42.800 
Ok so just to sum it up what
have we learned on this video?

171
00:10:43.000 --> 00:10:46.460 
We saw the different ways of
deployment with the modeler with

172
00:10:46.460 --> 00:10:49.090 
our own REST call or with
a WAR file deployment.

173
00:10:49.550 --> 00:10:53.480 
We had a quick look into cockpits
so we know now that we can

174
00:10:53.480 --> 00:10:57.240 
monitor our running instances there.
We can manage our deployments

175
00:10:57.240 --> 00:11:00.310 
and we can see and change process
variables and that will become

176
00:11:00.310 --> 00:11:04.880 
more fun in our demo later. We
have we had have a look at

177
00:11:04.880 --> 00:11:07.810 
task lists so we see the
implementation of the user tasks. So

178
00:11:07.810 --> 00:11:10.610 
actually everything what we put
in the modeler now we can

179
00:11:10.610 --> 00:11:14.590 
see as a form and the task list
we manage we can manage our

180
00:11:14.600 --> 00:11:18.440 
own tasks from there and of course
we can also start a process here.

181
00:11:18.800 --> 00:11:23.590 
And all those things we are going
to try in our next two demos. And

182
00:11:23.810 --> 00:11:27.810 
looking forward to it? I love
demos they always work. Okay.

183
00:11:28.180 --> 00:11:33.530 
So if you want to watch that
yeah watch the fun happen.
