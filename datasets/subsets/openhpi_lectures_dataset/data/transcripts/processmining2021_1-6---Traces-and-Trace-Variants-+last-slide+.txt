WEBVTT

1
00:00:00.960 --> 00:00:04.890 
On the previous slides, we have
seen that we can classify

2
00:00:05.390 --> 00:00:11.640 
traces according to their behavior, and this
results in different trace variants. So,

3
00:00:11.870 --> 00:00:15.690 
trace variants show all possible
executions of the process

4
00:00:15.690 --> 00:00:17.100 
that we have observed.

5
00:00:17.840 --> 00:00:20.920 
And in the examples that
we were discussing,

6
00:00:21.390 --> 00:00:25.630 
we have basically three trace
variants that we have observed.

7
00:00:25.640 --> 00:00:32.450 
The first trace variants looks at granted
claims. So, the first trace variant represents

8
00:00:32.630 --> 00:00:37.770 
granted claims. And this trace
variant consists of the following

9
00:00:37.770 --> 00:00:45.100 
events - so we have the events rc,
ccc, dc, pa, and sal, standing for

10
00:00:45.610 --> 00:00:52.120 
receive claim, check claim completeness, decide
on coverage, prepare acceptance later, and

11
00:00:52.790 --> 00:00:53.910 
send acceptance later.

12
00:00:55.330 --> 00:00:59.740 
The second trace variant
represents all rejected claims.

13
00:01:00.380 --> 00:01:06.140 
Here the trace variant consists
of the events rc, ccc, dc,

14
00:01:06.240 --> 00:01:11.940 
pr, and srl, standing for receive
claim, check claim coverage,

15
00:01:11.940 --> 00:01:15.090 
and decide on claim coverage, that
is exactly the same events that

16
00:01:15.110 --> 00:01:17.870 
we also have seen in the
first trace variant.

17
00:01:18.330 --> 00:01:23.350 
But rather than accepting and
sending acceptance letters, we have

18
00:01:23.520 --> 00:01:28.410 
the prepare rejection and we have
the send rejection letter events

19
00:01:28.660 --> 00:01:30.330 
in trace variant two.

20
00:01:31.860 --> 00:01:37.760 
In trace variant three, the
incomplete claims are organized.

21
00:01:38.290 --> 00:01:44.370 
And here we have just two events -
namely rc and ccc, standing for

22
00:01:44.560 --> 00:01:48.390 
receive claim and check claim
completeness and after check

23
00:01:48.470 --> 00:01:51.960 
claim completeness, all the traces
prematurely end. This is why

24
00:01:51.960 --> 00:01:56.030 
the trace variant three just
contains these two events.

25
00:01:58.010 --> 00:02:03.000 
I'd like to remark that trace variants are
very important input to process discovery

26
00:02:03.230 --> 00:02:07.610 
algorithms. Why? Well, because the
process model must be able

27
00:02:07.610 --> 00:02:11.480 
to produce the same event ordering
that we have also found

28
00:02:11.480 --> 00:02:13.300 
in the trace variant. So,

29
00:02:14.030 --> 00:02:17.660 
in this example, we have trace
variant one, trace variant two,

30
00:02:17.660 --> 00:02:21.740 
and trace variant three and
these three trace variants are

31
00:02:21.740 --> 00:02:26.780 
input to process discovery algorithms
and the process discovery algorithm

32
00:02:27.050 --> 00:02:31.490 
has to make sure that all the event
sequences that we find here

33
00:02:31.680 --> 00:02:34.630 
can also be replayed in
that process model.
