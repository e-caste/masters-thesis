WEBVTT

1
00:00:04.400 --> 00:00:07.700 
In my definition of hot and
cold and I defined this,

2
00:00:08.800 --> 00:00:10.100 
it is not about aging,

3
00:00:12.120 --> 00:00:15.150 
it is about actual
and history.

4
00:00:18.180 --> 00:00:21.210 
Actual and history is
an application concept

5
00:00:22.220 --> 00:00:28.280 
can not be done by technology.
The database doesn't know what

6
00:00:28.280 --> 00:00:32.320 
is actual and what is
not. Frequently used

7
00:00:33.330 --> 00:00:36.360 
or less frequently
used is an indication,

8
00:00:37.370 --> 00:00:40.400 
this is not that actual
anymore if it's not being used

9
00:00:41.410 --> 00:00:44.440 
or if this is frequently
used this might be

10
00:00:45.450 --> 00:00:52.520 
actual but these two concepts
are not mathematically

11
00:00:53.530 --> 00:00:56.560 
agreeing with
each other.

12
00:00:58.580 --> 00:01:06.660 
My concept of hot and cold
has the application concept

13
00:01:06.660 --> 00:01:10.700 
of actual and history. Only
application can define what

14
00:01:10.700 --> 00:01:15.750 
this is, I give you the rules,
again the rules are different

15
00:01:15.750 --> 00:01:21.810 
and the rules are application rules.
History data can not be changed anymore.

16
00:01:25.850 --> 00:01:29.890 
If something is in
the history department

17
00:01:30.900 --> 00:01:34.940 
a separate procedure has to take
place that we take something

18
00:01:34.940 --> 00:01:37.970 
out and change it again and bring
it back to the actual department.

19
00:01:39.990 --> 00:01:41.101 
First rule is history
cannot be changed anymore.

20
00:01:43.103 --> 00:01:48.108 
Second rule is, actual is
everything which I need for stature

21
00:01:48.108 --> 00:01:52.112 
reporting, only the
application knows what that is.

22
00:01:53.113 --> 00:01:56.116 
Sometimes they don't know exactly
what this is but there are

23
00:01:56.116 --> 00:02:00.120 
rules to define this. In
accounting it's very easy,

24
00:02:02.122 --> 00:02:08.128 
everything which is to
report the year 2013

25
00:02:08.128 --> 00:02:14.134 
is exactly what happened
during the year 2013.

26
00:02:14.134 --> 00:02:18.138 
All transactions which
happened during the year

27
00:02:18.138 --> 00:02:24.144 
2013 plus the transactions
which were still

28
00:02:24.144 --> 00:02:28.148 
open at the first
of January 2013.

29
00:02:29.149 --> 00:02:32.152 
This is a definition of what is
necessary for stature reporting

30
00:02:32.152 --> 00:02:33.153 
in financials.

31
00:02:36.156 --> 00:02:40.160 
In cost accounting it is actually
less, it is only what happened

32
00:02:40.160 --> 00:02:45.165 
during the year 2013 because
there is no carryforward

33
00:02:45.165 --> 00:02:48.168 
in cost accounting. Cost
accounting is period accounting and

34
00:02:48.168 --> 00:02:53.173 
there is no starting balance.
Materials management there is

35
00:02:53.173 --> 00:02:57.177 
a starting balance because
we carry forward the balance

36
00:02:57.177 --> 00:03:01.181 
from the end of the last year
and then all stock movements

37
00:03:01.181 --> 00:03:06.186 
during the year 2013.
Customer order processing,

38
00:03:07.187 --> 00:03:11.191 
obviously all orders which have
been created during the year

39
00:03:11.191 --> 00:03:16.196 
2013 are part
of the actual

40
00:03:16.196 --> 00:03:21.201 
data set for 2013.
But there are orders

41
00:03:22.202 --> 00:03:25.205 
which are much
older than 2013,

42
00:03:25.205 --> 00:03:29.209 
orders which at the
beginning of 2013 they

43
00:03:29.209 --> 00:03:32.212 
have been created previously
but they have not been shipped.

44
00:03:34.214 --> 00:03:39.219 
The shipment has not been confirmed,
the customer has not received

45
00:03:39.219 --> 00:03:43.223 
an invoice. The customer has
received the invoice but not paid.

46
00:03:43.223 --> 00:03:49.229 
The customer has paid the
invoice but is in an escalation

47
00:03:49.229 --> 00:03:53.233 
because there's a
warranty claim. You still

48
00:03:53.233 --> 00:03:58.238 
have to declare this
specific object, this

49
00:03:59.239 --> 00:04:04.244 
customer sales order as actual.
All these definitions are

50
00:04:04.244 --> 00:04:09.249 
application definitions, my
solution which is actually

51
00:04:09.249 --> 00:04:15.255 
42 years old. It's defined
in R, not even in R1.

52
00:04:16.256 --> 00:04:21.261 
In system F, which was the
forerunner for system R, system

53
00:04:21.261 --> 00:04:27.267 
R1, R2, R3 what is
it called now, ERP

54
00:04:28.268 --> 00:04:31.271 
6.0 suite,
business suite ERP,

55
00:04:35.275 --> 00:04:36.575 
6.0,

56
00:04:37.277 --> 00:04:44.284 
ECC 6.0, that's a latest
one still plus minus an R3

57
00:04:44.284 --> 00:04:49.289 
system, plus minus. It
was defined in system F

58
00:04:52.292 --> 00:04:56.296 
and was defined by my colleague
Claus Wellenreuther, who actually

59
00:04:56.296 --> 00:05:00.300 
had a PhD in business administration,
I was an electrical engineer.

60
00:05:00.300 --> 00:05:04.304 
I didn't care much about what is hot
and what is cold, and what isÂ actual

61
00:05:04.304 --> 00:05:10.310 
or what is not. He designed
a financial system and one

62
00:05:10.310 --> 00:05:12.312 
of the key components of
the financial system was

63
00:05:13.313 --> 00:05:16.316 
to define what is actual
and what is history.

64
00:05:20.320 --> 00:05:23.323 
When I saw this and we had
when we started SAP I looked

65
00:05:23.323 --> 00:05:27.327 
at this is said this is
complicated, makes my life twice

66
00:05:27.327 --> 00:05:29.329 
as complicated as
having only one storage.

67
00:05:30.330 --> 00:05:35.335 
Why should I do this?
I do caching, I do,

68
00:05:35.335 --> 00:05:39.339 
I know that probably data
is stored in different

69
00:05:39.339 --> 00:05:43.343 
compartments but I manage that,
I don't let somebody define

70
00:05:43.343 --> 00:05:47.347 
what I have to
do so I discarded

71
00:05:47.347 --> 00:05:55.355 
the concept of having a, in those
days it was a monthly actual

72
00:05:55.355 --> 00:06:00.360 
area and a history area.
This little accounting system

73
00:06:00.360 --> 00:06:04.364 
became extremely successful
system F it was a batch system,

74
00:06:05.365 --> 00:06:11.000 
punch card input, list output
became extremely successful

75
00:06:11.000 --> 00:06:15.375 
in Germany and was actually
financing the development of system

76
00:06:15.375 --> 00:06:21.381 
R, the first real real
time online system,

77
00:06:22.382 --> 00:06:27.387 
terminal input, terminal output,
still some printing going on.

78
00:06:28.388 --> 00:06:33.393 
I discarded this concept of having
two areas, actual and history.

79
00:06:34.394 --> 00:06:38.398 
Ever since nobody picked
this up in SAP again,

80
00:06:39.399 --> 00:06:44.404 
that is a mistake. Everything, every
object for every business object,

81
00:06:44.404 --> 00:06:49.409 
don't shake your head, it
is a factor five in cost SAP

82
00:06:49.409 --> 00:06:54.414 
is missing every single day,
at home and at all customers in

83
00:06:54.414 --> 00:06:59.419 
the world. If we calculate
the shop we're talking about

84
00:06:59.419 --> 00:07:07.427 
a two digit billions in cost,
not maybe. That makes me angry,

85
00:07:08.428 --> 00:07:13.433 
that IT people say only because
the concept is a little bit,

86
00:07:13.433 --> 00:07:17.437 
like I did 40 years ago,
is a little bit iffy,

87
00:07:17.437 --> 00:07:22.442 
I don't do it. The
concept is very simple,

88
00:07:23.443 --> 00:07:26.446 
I said, everything which belongs
to the period belongs to the

89
00:07:26.446 --> 00:07:30.450 
period and is actual for the
period and everything which was

90
00:07:30.450 --> 00:07:34.454 
open at the beginning of
the period has to be carried

91
00:07:34.454 --> 00:07:36.456 
or has to be defined
as actual as well.

92
00:07:37.457 --> 00:07:41.461 
That's it, this is different
for different, this

93
00:07:41.461 --> 00:07:45.465 
is the same for different objects
and since we have only, in

94
00:07:45.465 --> 00:07:49.469 
a modern concept, transactional
data we should not use examples

95
00:07:49.469 --> 00:07:53.473 
where we use non transactional
data, where we use aggregates

96
00:07:53.473 --> 00:07:56.476 
or anything else. We
only have, in the concept

97
00:07:56.476 --> 00:07:59.479 
transactional data, we talk about
an application concept here.

98
00:08:01.481 --> 00:08:06.486 
We have to define, for each
object or for each transaction

99
00:08:06.486 --> 00:08:10.490 
object what actual is
and what history is.

100
00:08:12.492 --> 00:08:16.496 
When we do this and store
the actual ones here

101
00:08:17.497 --> 00:08:21.501 
the new ones who are coming, they
are actual anyway per definition.

102
00:08:23.503 --> 00:08:28.508 
This is actual and this is
history. If we do it that

103
00:08:28.508 --> 00:08:34.514 
way, then any result set
caching is really efficient

104
00:08:35.515 --> 00:08:38.518 
because per definition
there are no changes here.

105
00:08:39.519 --> 00:08:43.523 
If there are no changes
here any result set lives

106
00:08:43.523 --> 00:08:48.528 
as long as this department here
lives. i told you yesterday

107
00:08:48.528 --> 00:08:51.531 
it lives for a year which
is a pretty long time.

108
00:08:52.532 --> 00:08:57.537 
This lives for a day so we can
keep the result sets for a day

109
00:08:57.537 --> 00:09:00.540 
here and we can keep the result
sets for a year here and we can,

110
00:09:00.540 --> 00:09:04.544 
in most cases 95% or more
percent of the applications,

111
00:09:04.544 --> 00:09:08.548 
we can use the union. With an
aging concept we can not do this,

112
00:09:10.550 --> 00:09:11.551 
major critique.

113
00:09:16.556 --> 00:09:21.561 
I would like to change that we
can't use the word hot and cold

114
00:09:21.561 --> 00:09:24.564 
as a actually marketing
word because it was invented

115
00:09:25.565 --> 00:09:31.571 
or was used in analytic
databases. Analytic databases

116
00:09:34.574 --> 00:09:38.000 
per definition, there's
nothing happening anymore,

117
00:09:38.578 --> 00:09:42.582 
this is the major difference
which is not really

118
00:09:42.582 --> 00:09:45.585 
true because we saw when
we put data from an OLTP

119
00:09:45.585 --> 00:09:49.589 
system and an OLAP
system. We also have to

120
00:09:49.589 --> 00:09:54.594 
move updates forward,
which wasn't actually

121
00:09:54.594 --> 00:09:55.595 
creating issues.

122
00:09:58.598 --> 00:10:03.603 
It was invented there and is
implemented and teradata and in other

123
00:10:03.603 --> 00:10:07.607 
systems. They have hot and cold
separation, the only separation

124
00:10:08.608 --> 00:10:13.613 
we can really use. Because
the user, 100 % sure is

125
00:10:13.613 --> 00:10:16.616 
100% sure I want to
report against actual

126
00:10:18.618 --> 00:10:20.620 
and I can list you
down, I did applications

127
00:10:21.621 --> 00:10:25.625 
and all applications I did in.
The other ones I only know, I

128
00:10:25.625 --> 00:10:28.628 
can flag them instantly. This
has to run against actual,

129
00:10:28.628 --> 00:10:32.632 
this has to run against actual and
history. There is nothing which

130
00:10:32.632 --> 00:10:35.635 
can run against history
alone, doesn't exist.

131
00:10:37.637 --> 00:10:42.642 
Because some parts of which
could be understood as history

132
00:10:42.642 --> 00:10:47.647 
are still in actual, so history
alone can not be used. It is either

133
00:10:47.647 --> 00:10:49.649 
history plus actual
or actual alone,

134
00:10:50.650 --> 00:10:51.650 
that's the definition.

135
00:10:53.052 --> 00:10:56.656 
Every application can be
classified exactly by this.

136
00:10:59.659 --> 00:11:02.662 
To list the open items
of an account, actual

137
00:11:04.664 --> 00:11:06.666 
to write in a count,

138
00:11:08.668 --> 00:11:12.672 
an account, this is not
the master record. An

139
00:11:12.672 --> 00:11:15.675 
account, as defined by
wikipedia, you can read this,

140
00:11:16.676 --> 00:11:20.680 
wonderful definition the open
items at the beginning of a period

141
00:11:20.680 --> 00:11:24.684 
all transactions off the
period and the new totals.

142
00:11:25.685 --> 00:11:28.688 
That's an account, you
have to use the actual.

143
00:11:30.690 --> 00:11:34.694 
If you want to do something
which goes back multiple years

144
00:11:34.694 --> 00:11:38.698 
I want to run an account over
multiple years, you have to tell

145
00:11:38.698 --> 00:11:40.700 
this the system and
the system has to use

146
00:11:42.702 --> 00:11:46.706 
the history and the
actual data storage.

147
00:11:48.708 --> 00:11:54.714 
With this definition, (which is) my
definition or (Mr.) Wellenreuther's definition

148
00:11:54.714 --> 00:11:57.717 
from 1968 actually

149
00:11:59.719 --> 00:12:02.722 
written, probably it was his thesis,
I don't know so could have been.

150
00:12:02.722 --> 00:12:09.729 
We can easily build these
cold store partitions

151
00:12:10.730 --> 00:12:17.737 
by something like year. That means
if you want to write an account

152
00:12:17.737 --> 00:12:21.741 
which means
begin balance,

153
00:12:21.741 --> 00:12:25.745 
balance of the period begin
and then the whole period and

154
00:12:25.745 --> 00:12:29.749 
then the new balance
for two years,

155
00:12:29.749 --> 00:12:32.752 
then we have to take this and
this. If we want to do it for

156
00:12:32.752 --> 00:12:34.754 
three years we have
to take this and this.

157
00:12:34.754 --> 00:12:38.758 
If we want to report for ten
years for whatever reason

158
00:12:38.758 --> 00:12:43.763 
it might only happen in some
our criminal investigation,

159
00:12:44.764 --> 00:12:48.768 
somebody wants to go back for
ten years and see what happened.

160
00:12:49.769 --> 00:12:53.773 
Then we have to
take all cold stores

161
00:12:54.774 --> 00:12:55.775 
all cold store
partitions.

162
00:12:57.777 --> 00:13:04.784 
An aging concept
could be applied

163
00:13:04.784 --> 00:13:08.788 
for other reasons
to the main,

164
00:13:09.789 --> 00:13:13.793 
the only problem I see is that
a database can not have too many

165
00:13:13.793 --> 00:13:16.796 
partitions. We
have already

166
00:13:17.797 --> 00:13:22.802 
delta, main, history,
and multiple cold stores

167
00:13:22.802 --> 00:13:26.806 
for one single table. If
we partition in another

168
00:13:26.806 --> 00:13:30.810 
dimension, it could
be problematic

169
00:13:31.811 --> 00:13:35.815 
but this is technical implementation.
We have to distinguish

170
00:13:35.815 --> 00:13:39.819 
here between concept, so you have
to understand, an aging concept

171
00:13:39.819 --> 00:13:44.824 
is something else as a business
concept, actual and history.
