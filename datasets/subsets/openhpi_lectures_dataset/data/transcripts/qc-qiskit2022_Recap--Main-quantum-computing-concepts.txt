WEBVTT

1
00:00:00.640 --> 00:00:04.380 
hi everyone and welcome to this third video in which we give

2
00:00:04.380 --> 00:00:06.210 
you an introduction to quantum computing with Qiskit

3
00:00:07.040 --> 00:00:10.480 
so in this video we will recap the main concepts of quantum computing

4
00:00:11.410 --> 00:00:14.840 
while i assume that most of you are already quite familiar with these

5
00:00:15.380 --> 00:00:18.650 
i hope it still serves as a quick refreshment of your knowledge

6
00:00:18.940 --> 00:00:22.210 
and for those of you who are not familiar i hope that it can

7
00:00:22.210 --> 00:00:24.790 
at least give you a rough idea of these main concepts that

8
00:00:24.810 --> 00:00:26.540 
we will use during the next videos

9
00:00:28.150 --> 00:00:31.520 
the most important concept is what we call superposition because

10
00:00:31.520 --> 00:00:34.760 
it is what enables us to get an advantage in quantum computing

11
00:00:36.230 --> 00:00:41.590 
so as we know from classical computers they operate with bits

12
00:00:42.100 --> 00:00:43.850 
which are either 0 or 1

13
00:00:45.280 --> 00:00:49.870 
in quantum mechanics however we can be in what we call a superposition

14
00:00:49.950 --> 00:00:53.410 
which means that we can simultaneously be in 0 and 1

15
00:00:55.290 --> 00:00:58.520 
this is what allows us to perform calculations on many states

16
00:00:58.520 --> 00:01:02.830 
at the same time for example assume you are given a computer

17
00:01:02.830 --> 00:01:05.860 
classical bits you are given with three classical bits that

18
00:01:05.860 --> 00:01:07.040 
are all either 0 or 1

19
00:01:07.720 --> 00:01:10.860 
then you can represent one number between 0 and 7

20
00:01:11.880 --> 00:01:15.740 
however if you are now using a quantum computer you can in each of these

21
00:01:16.130 --> 00:01:20.420 
so-called Qubits then for quantum bits be in a superposition and thereby

22
00:01:20.730 --> 00:01:23.360 
calculate with all eight states at the same time

23
00:01:25.160 --> 00:01:29.260 
this is how in general we can get an exponential speed-up using

24
00:01:29.260 --> 00:01:30.290 
quantum algorithms

25
00:01:32.320 --> 00:01:37.040 
however there's a big but because once we measure such a superposition state

26
00:01:37.310 --> 00:01:39.280 
it will collapse to one of its eigenstates

27
00:01:39.900 --> 00:01:43.620 
that means why we can perform calculations on all states at the same time

28
00:01:44.140 --> 00:01:47.100 
the moment we look at it we will only get a single result

29
00:01:48.060 --> 00:01:52.220 
so therefore it is not that easy to design quantum algorithms

30
00:01:52.500 --> 00:01:55.510 
because you can just not run everything in parallel and like

31
00:01:55.670 --> 00:01:59.300 
get the super speed-up and then have all solutions at the same time

32
00:01:59.550 --> 00:02:02.870 
but we actually have to come up with some smart designs by

33
00:02:02.870 --> 00:02:05.110 
using what we call interference effects

34
00:02:06.060 --> 00:02:09.980 
you may have heard the word interference before in your physics high school course

35
00:02:10.140 --> 00:02:11.890 
when looking at the double-slit experiment

36
00:02:12.390 --> 00:02:15.990 
or maybe also in your daily life if you use noise-cancelling headphones

37
00:02:16.120 --> 00:02:19.490 
where they produce some waves that interfere with a noise that

38
00:02:19.490 --> 00:02:20.670 
ideally all the noise

39
00:02:21.470 --> 00:02:24.510 
interferes destructively so you won't hear the noise but you

40
00:02:24.510 --> 00:02:25.860 
just hear whatever is important for you

41
00:02:28.780 --> 00:02:34.260 
so the second concept that i want to introduce to you is what we call entanglement

42
00:02:35.720 --> 00:02:39.490 
for the concept of entanglement we can

43
00:02:39.490 --> 00:02:41.910 
think of two parties that we call Alice and Bob

44
00:02:42.820 --> 00:02:46.910 
now assume Alice and Bob have met a long time ago and entangled two dice

45
00:02:48.300 --> 00:02:50.550 
then Alice flew to the moon and now they're far away

46
00:02:51.490 --> 00:02:55.560 
but now they still have the dice and they can roll them

47
00:02:56.440 --> 00:02:59.960 
now if bob measures his dice and he measures a six

48
00:03:00.730 --> 00:03:05.060 
then this would have an immediate effect on Alice's dice

49
00:03:05.440 --> 00:03:09.760 
and so if they are fully correlated then Alice will in that

50
00:03:09.760 --> 00:03:11.260 
case also measure six

51
00:03:14.500 --> 00:03:16.190 
this means that the measurement of Bob

52
00:03:17.060 --> 00:03:21.210 
immediately influences the measurement of Alice without him doing anything

53
00:03:21.330 --> 00:03:22.340 
without any signalling

54
00:03:24.720 --> 00:03:27.770 
however of course these dice are very macroscopic examples

55
00:03:27.840 --> 00:03:31.290 
so you cannot think of you cannot actually entangle two dice

56
00:03:31.440 --> 00:03:34.500 
but what you can entangle is you can entangle photons or

57
00:03:34.900 --> 00:03:38.490 
ions or just quantum systems

58
00:03:39.350 --> 00:03:42.780 
so of course this macroscopic example is not feasible

59
00:03:43.160 --> 00:03:45.600 
it's really just to give you a rough idea of how to think about

60
00:03:45.600 --> 00:03:46.220 
entanglement

61
00:03:49.710 --> 00:03:54.320 
so what we should notice though is that in general not all correlations imply entanglement

62
00:03:54.440 --> 00:03:57.870 
but we can actually also have fully correlated classical systems

63
00:03:58.710 --> 00:04:03.030 
it's really this entanglement is just a very special kind of

64
00:04:03.260 --> 00:04:07.670 
correlation that can be very strong and it requires superpositions

65
00:04:07.670 --> 00:04:09.620 
it requires the concept that we learned before

66
00:04:12.760 --> 00:04:16.340 
now if we look at the third thing that we want to look at now

67
00:04:16.340 --> 00:04:20.190 
is quantum gates because if we look at our quantum circuits

68
00:04:20.410 --> 00:04:22.480 
they're based on quantum gates these are the building blocks

69
00:04:22.480 --> 00:04:23.620 
of every quantum circuit

70
00:04:24.490 --> 00:04:29.650 
as you might remember from some physics course quantum theory is always unitary

71
00:04:30.310 --> 00:04:34.070 
and if you never took such a course or don't remember just trust me with that

72
00:04:34.850 --> 00:04:39.230 
so what it means is that quantum gates can be represented by unitary matrices

73
00:04:39.430 --> 00:04:42.950 
and a matrix is defined to be unitary if U dagger(†) U equals

74
00:04:42.950 --> 00:04:46.690 
identity with a dagger(†) - just means the transposed and complex

75
00:04:46.690 --> 00:04:50.560 
conjugate of that matrix but don't worry to much about this mathematical definition

76
00:04:50.840 --> 00:04:53.250 
i actually just want to state it and now i'm going to give

77
00:04:53.250 --> 00:04:56.340 
you three examples of the most important gates in my opinion

78
00:04:57.660 --> 00:05:01.360 
the first example is what we call the bit flip gate or so the NOT gate

79
00:05:02.380 --> 00:05:05.070 
it is given by sigma x the Pauli matrix

80
00:05:05.850 --> 00:05:09.390 
and if we apply it to the state zero it will turn it into one

81
00:05:09.570 --> 00:05:12.500 
and if we apply to the state one it will turn it into zero

82
00:05:12.720 --> 00:05:15.850 
that's why we call it the bit flip also the NOT gate

83
00:05:16.490 --> 00:05:19.700 
it is the quantum equivalent to a classical NOT gate

84
00:05:20.300 --> 00:05:22.840 
however it can also act on superpositions

85
00:05:25.750 --> 00:05:28.430 
the second example is what we call the Hadamard gate

86
00:05:29.010 --> 00:05:32.550 
and the Hadamard gate i think is the most important one because i think it every

87
00:05:32.770 --> 00:05:35.580 
every quantum algorithm i know starts with Hadamard gates

88
00:05:36.590 --> 00:05:38.950 
the special thing about the Hadamard gate is that if we apply

89
00:05:38.950 --> 00:05:41.760 
to the state zero it will give us a superposition the equal

90
00:05:41.760 --> 00:05:45.790 
superposition of zero and one so we will end up in the state zero plus one

91
00:05:46.940 --> 00:05:50.590 
if we apply to the state one then we will actually get into

92
00:05:50.590 --> 00:05:52.650 
the we will end up in the state zero minus one

93
00:05:53.130 --> 00:05:56.040 
so again we will have superposition but with a different relative

94
00:05:56.040 --> 00:05:58.490 
face you see once we have a plus and once we have a minus

95
00:05:59.170 --> 00:06:02.760 
these faces in general can be arbitrary complex numbers

96
00:06:03.250 --> 00:06:06.190 
and also we don't need equal superposition we can have different weights

97
00:06:06.480 --> 00:06:09.940 
but this is then what leads to what we called interference before

98
00:06:10.460 --> 00:06:14.170 
so and then this interference effects we can use because let's

99
00:06:14.170 --> 00:06:17.470 
think about if we have a search algorithm for example where

100
00:06:17.470 --> 00:06:19.840 
we are actually not interested in getting all outcomes but

101
00:06:19.860 --> 00:06:23.220 
we just want to look for one solution then the interference

102
00:06:23.260 --> 00:06:25.430 
might help so that all the elements that we're not looking

103
00:06:25.430 --> 00:06:28.980 
for will cancel each other out and in the end we are left with the one

104
00:06:29.700 --> 00:06:30.700 
that we're looking for

105
00:06:32.530 --> 00:06:35.490 
and now the last gate that i want to show you is the CNOT gate

106
00:06:36.170 --> 00:06:39.040 
as you see it has a bigger matrix

107
00:06:39.550 --> 00:06:43.750 
representation which is because it acts on two Qubits at the same time

108
00:06:45.150 --> 00:06:49.860 
so CNOT is the short form for controlled NOT which means

109
00:06:49.860 --> 00:06:53.510 
that it is controlled on the first Qubit and then acting as a NOT

110
00:06:53.750 --> 00:06:57.860 
on the second Qubit so controlled on the first Qubit to be one

111
00:06:58.320 --> 00:07:02.500 
we have the NOT gate on the second Qubit if however the first Qubit is zero

112
00:07:02.760 --> 00:07:06.850 
we do nothing on the second Qubit so you can see if we apply to zero zero

113
00:07:07.020 --> 00:07:10.790 
we will just do nothing and end up in zero zero same for zero

114
00:07:10.790 --> 00:07:13.740 
one because in that case the first Qubit that we control on is zero

115
00:07:14.440 --> 00:07:16.340 
if however the first Qubit is one

116
00:07:17.480 --> 00:07:21.610 
like on the state one zero then we will apply the NOT gate so flip

117
00:07:21.880 --> 00:07:25.260 
the second bit and end up in one one or if we apply to one one

118
00:07:25.420 --> 00:07:26.530 
we will end up in one zero

119
00:07:28.620 --> 00:07:31.580 
now the circuit representation of this gate looks like the following

120
00:07:32.310 --> 00:07:35.990 
you can imagine from left to right is how time flows basically

121
00:07:36.250 --> 00:07:39.320 
so on the left side we have the input in this case we have

122
00:07:39.320 --> 00:07:41.580 
two Qubits which we call x and y

123
00:07:42.550 --> 00:07:45.310 
so the two lines represent these Qubits

124
00:07:45.790 --> 00:07:47.930 
and then we have the gate that acts in the middle

125
00:07:48.860 --> 00:07:53.510 
the small dot which is on the x Qubit represents the control

126
00:07:53.920 --> 00:07:56.900 
mechanism and then on the second one we have this NOT gate so

127
00:07:56.990 --> 00:07:58.060 
you can see it by a plus

128
00:07:58.970 --> 00:08:00.540 
so this is our controlled NOT gate

129
00:08:01.250 --> 00:08:04.670 
and if you look at the outputs you can see since we're only

130
00:08:04.670 --> 00:08:07.390 
controlling on the first Qubit we're never actually changing it

131
00:08:07.760 --> 00:08:10.990 
so if you look at the input and output the first Qubit never changes so

132
00:08:11.190 --> 00:08:12.850 
we can put input any x and

133
00:08:14.420 --> 00:08:15.610 
output get the same x

134
00:08:16.240 --> 00:08:20.030 
however for the input y well we will get

135
00:08:20.590 --> 00:08:24.500 
we will flip the bit if x is one but we will not

136
00:08:24.500 --> 00:08:27.930 
do anything if x is zero so if we look at the output here we

137
00:08:27.930 --> 00:08:31.830 
can see that it will actually correspond to x plus y modulo

138
00:08:31.830 --> 00:08:33.980 
two so the binary addition of these two bits

139
00:08:36.380 --> 00:08:39.890 
this is why it basically corresponds to a reversible version

140
00:08:39.900 --> 00:08:42.810 
of an XOR gate because the XOR gate is the one that takes

141
00:08:42.870 --> 00:08:47.250 
x and y as input and outputs x plus y binary

142
00:08:48.010 --> 00:08:51.610 
but of course usually the XOR gate is not reversible

143
00:08:52.230 --> 00:08:54.760 
if i just give you the output and tell you the XOR gate of

144
00:08:54.760 --> 00:08:58.040 
x and y is one we have no idea where the x was zero and y was

145
00:08:58.040 --> 00:08:59.420 
one or the other way around

146
00:09:00.310 --> 00:09:03.210 
in this case however since we also output x

147
00:09:03.750 --> 00:09:06.680 
it is reversible and you can construct the inputs from the outputs

148
00:09:07.960 --> 00:09:11.750 
and the reason why this gate is so important is because you

149
00:09:11.750 --> 00:09:15.080 
can see it creates some correlation because the output here

150
00:09:15.080 --> 00:09:19.140 
is x plus y so we actually correlate the two input Qubits

151
00:09:19.730 --> 00:09:22.300 
and this means we can use it to create entanglement

152
00:09:24.380 --> 00:09:28.700 
so i hope with these three gates and also the two concepts of superposition

153
00:09:28.960 --> 00:09:31.780 
as well as entanglement you're ready to

154
00:09:32.380 --> 00:09:35.980 
start programming your first quantum circuits with Qiskit in

155
00:09:35.980 --> 00:09:36.730 
the next videos. See you
