WEBVTT

1
00:00:01.480 --> 00:00:06.100 
welcome to my presentation in
which i would like to talk about

2
00:00:06.300 --> 00:00:12.060 
learnings we made during the past semesters
here at Hasso Plattner Institute

3
00:00:12.260 --> 00:00:18.040 
using massive open online courses
from the openHPI platform

4
00:00:18.220 --> 00:00:21.060 
for our classrooms
and lectures.

5
00:00:21.900 --> 00:00:25.940 
I'd like to start about the
different reasons that exist

6
00:00:25.940 --> 00:00:31.360 
for using openHPI in class
environments. so as you know

7
00:00:31.540 --> 00:00:36.290 
an openHPI and the other platforms
are designed specifically

8
00:00:36.290 --> 00:00:40.480 
for mess of online courses and
the thousands of learners. so

9
00:00:40.490 --> 00:00:46.960 
that always have proven to have
that stability that is required.

10
00:00:47.270 --> 00:00:52.360 
and as many universities moved
to online learning during the

11
00:00:52.360 --> 00:00:57.880 
corvid-19 pandemic.
they also decided to

12
00:00:57.890 --> 00:01:02.780 
use a stable and proven platform
for their online courses.

13
00:01:03.520 --> 00:01:09.870 
During this presentation I would
like to focus on automated grading

14
00:01:10.010 --> 00:01:16.690 
and feet bang how it could help teachers
and instructors throughout the

15
00:01:16.870 --> 00:01:21.640 
the semester to reduce manual
efforts for the teaching team.

16
00:01:21.750 --> 00:01:25.930 
as this is kind of a crucial point
especially during the pandemic

17
00:01:26.070 --> 00:01:29.520 
their lot had to be
organized differently.

18
00:01:30.040 --> 00:01:35.740 
as you know open hd has out of the
box support for multimedia content

19
00:01:35.930 --> 00:01:43.620 
such as video and other elements,
but also interactive exercises

20
00:01:43.780 --> 00:01:47.520 
and external tools which I
will talk about in a minute.

21
00:01:48.600 --> 00:01:55.060 
some teaching teams also used
and the common communication

22
00:01:55.060 --> 00:02:00.100 
tools that are available in
openHPI such as the announcement

23
00:02:00.100 --> 00:02:02.930 
features to make and
crossword announcements.

24
00:02:03.670 --> 00:02:08.500 
the forum to have discussions amongst
students who would normally

25
00:02:08.510 --> 00:02:12.630 
see each other during the class
and in a lecture hall. but can

26
00:02:12.630 --> 00:02:16.820 
now have a discussion on open
speed to foster collaboration.

27
00:02:17.130 --> 00:02:22.140 
and of course the collapse
spaces which also provide

28
00:02:22.140 --> 00:02:25.550 
a good opportunity to have small
groups working together in

29
00:02:25.550 --> 00:02:29.790 
a kind of private space within
the same environment the rest

30
00:02:29.790 --> 00:02:30.910 
of the course happens.

31
00:02:31.840 --> 00:02:36.170 
openHPI is a good starting
point for students and

32
00:02:36.170 --> 00:02:41.080 
employees at the hpi. because as
you might be seen already, we had

33
00:02:41.080 --> 00:02:47.890 
that feature to log in with the hpi identity.
so there is almost no additional effort

34
00:02:48.050 --> 00:02:51.750 
to get started and have a
course running on openHPI.

35
00:02:52.890 --> 00:02:57.260 
i would like to share two scenarios
with you throughout my talk

36
00:02:57.490 --> 00:03:02.960 
in which i gave examples of the
courses being used throughout

37
00:03:02.960 --> 00:03:09.150 
the pandemic and before to
provide some opportunities how

38
00:03:09.350 --> 00:03:13.310 
virtual environments could benefit
by tools such as openHPI.

39
00:03:14.640 --> 00:03:19.910 
the first scenario I would like to talk
about is a course that used openHPI

40
00:03:20.070 --> 00:03:25.230 
for graded exercises and finally
for the final exam as well.

41
00:03:25.860 --> 00:03:31.850 
so the cause itself voice are the fundamentals
of programming for digital health

42
00:03:32.060 --> 00:03:36.250 
that colleagues at the digital health
center at Hasso Plattner institute,

43
00:03:36.500 --> 00:03:43.210 
offer for first masters students are
coming from a medical background

44
00:03:43.580 --> 00:03:48.890 
to learn the basic programming skills
to get started throughout the master.

45
00:03:49.470 --> 00:03:53.990 
and they used a couple of
different resources from openHPI

46
00:03:54.200 --> 00:03:59.160 
to conduct their course. for example,
they provided reading materials

47
00:03:59.370 --> 00:04:04.580 
slide presentations in addition to
the normal lectures on openHPI

48
00:04:04.740 --> 00:04:07.350 
and have them linked
all in the same page.

49
00:04:08.030 --> 00:04:14.710 
additionally, they had practical exercise
sessions, but they provided some

50
00:04:14.850 --> 00:04:21.660 
questions to the students and the possibility
to really get starting with programming.

51
00:04:22.260 --> 00:04:27.460 
they recommended using the
Rstudio environment which

52
00:04:27.470 --> 00:04:31.230 
is a local environment students can
install on the very own machine

53
00:04:31.540 --> 00:04:37.430 
to do basic math calculations
statistics evaluations

54
00:04:37.530 --> 00:04:41.750 
and a whole range of other
computational advanced tasks.

55
00:04:42.680 --> 00:04:48.600 
it has the advantage that
each student is allowed

56
00:04:48.610 --> 00:04:54.570 
to work on their task their own
at every time and get started.

57
00:04:54.900 --> 00:05:01.120 
however, the instructor of the course
is unable to provide quick help.

58
00:05:01.540 --> 00:05:05.860 
furthermore, the local set up for
its students is time-consuming

59
00:05:06.090 --> 00:05:11.070 
and should not be a forgotten
about when considering that

60
00:05:11.590 --> 00:05:15.720 
method for the course. the real
time feedback might be difficult

61
00:05:15.730 --> 00:05:18.740 
especially for those students
struggling with the assignment.

62
00:05:19.210 --> 00:05:26.450 
and a good way to overcome that is that
his instructor walks across the room

63
00:05:26.620 --> 00:05:31.520 
to give feedback instantly on the
simons and questions that raise

64
00:05:31.650 --> 00:05:36.990 
throughout the lecture.
however during the pandemic,

65
00:05:37.360 --> 00:05:42.880 
there were no on-site lectures.
so this option was unavailable.

66
00:05:43.780 --> 00:05:49.130 
In addition to programming exercises
and the lecturers also decided

67
00:05:49.350 --> 00:05:54.700 
to employ quizzes that were graded and
a part of the final grade students

68
00:05:54.930 --> 00:05:59.440 
could achieve for that course.
they use the same structure

69
00:05:59.440 --> 00:06:04.780 
for multiple choice quizzes and were able
to get some impressions and feedback loop

70
00:06:04.940 --> 00:06:06.530 
for their very
own course.

71
00:06:07.300 --> 00:06:12.450 
however, the great multiple
choice quizzes are really

72
00:06:12.450 --> 00:06:17.290 
no feasible solution for programming
courses especially. because

73
00:06:17.300 --> 00:06:22.790 
ticking the right check box is a different
feeling than writing code one source.

74
00:06:23.380 --> 00:06:28.000 
so the instructor also noticed
that there is a gap between

75
00:06:28.000 --> 00:06:30.680 
the results from the
multiple-choice quizzes.

76
00:06:31.170 --> 00:06:35.960 
and the gut feeling he had about
the performance of the class.

77
00:06:36.530 --> 00:06:42.360 
so the instructor wished that he
could assess the programming skills

78
00:06:42.570 --> 00:06:48.300 
are on a different level and with real
coding exercises without having to

79
00:06:48.440 --> 00:06:55.520 
collect all the different local created
fires himself and evaluate them afterwards

80
00:06:55.660 --> 00:06:58.910 
just kindly
time-consuming.

81
00:06:59.710 --> 00:07:05.640 
so they reached out to us and asked
to use the cold ocean platform,

82
00:07:05.860 --> 00:07:09.810 
which is a tool that we use in
our massive open online courses

83
00:07:09.940 --> 00:07:15.920 
for java python or ruby called ocean
features two main use cases.

84
00:07:16.590 --> 00:07:21.790 
the first is to execute code that
students write on a remote

85
00:07:21.790 --> 00:07:27.750 
server, so that there is no local setup
required at all and additionally

86
00:07:27.920 --> 00:07:34.030 
students can decide to score their
code and get instant feedback which

87
00:07:34.160 --> 00:07:40.270 
gives them information on
what code is correct

88
00:07:40.280 --> 00:07:44.790 
and which is not. so these two
feet and features have proven

89
00:07:44.790 --> 00:07:50.500 
to work very well in books and we
decided to employ that technique

90
00:07:50.650 --> 00:07:55.300 
to that on site our course
for the very first time.

91
00:07:56.480 --> 00:08:00.970 
throughout the course, we got also
feedback from the students.

92
00:08:01.390 --> 00:08:05.320 
and by the think that the
instruction of code ocean at the

93
00:08:05.320 --> 00:08:09.980 
heart of the cause was kind of
misleading for some of the students.

94
00:08:10.360 --> 00:08:15.720 
the majority of students actually
really liked the implementation

95
00:08:15.910 --> 00:08:20.520 
and after the very first lesson
we already got the feedback

96
00:08:20.530 --> 00:08:24.200 
that some of them are fan while
others took a little longer

97
00:08:24.210 --> 00:08:28.580 
to adapt to the new environment
and mentioned that they still

98
00:08:28.590 --> 00:08:32.990 
switch back and forth the r
studio local environment

99
00:08:33.100 --> 00:08:34.580 
that was used before.

100
00:08:36.190 --> 00:08:41.680 
for the grading and automatic feedback
that is available within the caution.

101
00:08:41.890 --> 00:08:45.530 
we also asked them about their
feedback. and they mentioned

102
00:08:45.540 --> 00:08:51.410 
themselves that they find it
difficult to write actual

103
00:08:51.410 --> 00:08:56.730 
code and get graded on that by
previously the multiple choice quizzes

104
00:08:56.880 --> 00:09:01.230 
that the only way they need
to pass in order to get a

105
00:09:01.230 --> 00:09:03.260 
great for that lecture.

106
00:09:04.110 --> 00:09:08.670 
however the scoring messages that
were available and provided

107
00:09:08.670 --> 00:09:12.930 
by the structure were of great
help for them to really point

108
00:09:12.940 --> 00:09:17.630 
to the point in their code which
still needs improvement.

109
00:09:19.180 --> 00:09:25.970 
based on these experiences we also
evaluated the use case for a final exam.

110
00:09:26.170 --> 00:09:33.040 
and we introduce a time limit that one
was seen as kind of difficult, because

111
00:09:33.200 --> 00:09:39.070 
it adds now that pressure on
students to get their tasks done.

112
00:09:39.300 --> 00:09:45.340 
before the time runs out.
however, they mentioned

113
00:09:45.340 --> 00:09:49.780 
themselves that they could imagine
the exam to be similar to

114
00:09:49.780 --> 00:09:56.060 
these code ocean exercises. and so way
across all participants on the course

115
00:09:56.290 --> 00:10:02.390 
in which fourteen participated
gave an average of twenty

116
00:10:02.950 --> 00:10:09.570 
percent students would like to have the exam
to consists of real programming exercises

117
00:10:09.840 --> 00:10:12.740 
instead of multiple-choice
quizzes.

118
00:10:13.780 --> 00:10:18.380 
so based on these voices from
students who of course

119
00:10:18.380 --> 00:10:25.910 
also talk to the instructors and they
saw that using code ocean for grading

120
00:10:26.130 --> 00:10:32.470 
the assignment is a great way to really
assess the student's knowledge

121
00:10:32.600 --> 00:10:37.930 
and a line that feeling
with the actual grades

122
00:10:37.930 --> 00:10:41.210 
that were available through
using code ocean.

123
00:10:41.850 --> 00:10:47.140 
however, one of the learnings
was that preparing exercises

124
00:10:47.350 --> 00:10:51.340 
especially with available at two
measured feedback messages

125
00:10:51.580 --> 00:10:55.800 
is a time-consuming task that
could be improved in the future.

126
00:10:56.530 --> 00:11:03.880 
this should not make
it also difficult to

127
00:11:03.890 --> 00:11:08.240 
the different feedback messages
and tasks across each other.

128
00:11:08.600 --> 00:11:12.730 
only if they are independent of
each, so that a student might

129
00:11:12.730 --> 00:11:16.700 
skip one of the tasks and continue
with the next one they are

130
00:11:16.700 --> 00:11:17.790 
of the best top.

131
00:11:19.670 --> 00:11:25.490 
compared to the previous
towards employed we also

132
00:11:25.500 --> 00:11:30.940 
were able to make an export of the
different submissions that students make.

133
00:11:31.100 --> 00:11:36.010 
so for example, there is a
folder structure we were able

134
00:11:36.010 --> 00:11:39.930 
to provide automatically to the
structure that difference

135
00:11:39.930 --> 00:11:45.930 
between the different exercises and that are
available a list of different students

136
00:11:46.260 --> 00:11:50.890 
together with a deadline information
and finally this submission.

137
00:11:51.520 --> 00:11:56.610 
once downloaded each submission
already has a score information

138
00:11:56.750 --> 00:12:01.430 
that we extract from code ocean to provide
a first impression to the lecture.

139
00:12:01.810 --> 00:12:07.360 
of course it is in his mind
to review the different

140
00:12:07.360 --> 00:12:11.040 
submissions and make adjustments
to the grate if necessary.

141
00:12:11.760 --> 00:12:16.680 
so extracting these submissions
on that way based on writing

142
00:12:16.680 --> 00:12:22.560 
them in could ocean. It is great
improvement for structures,

143
00:12:22.760 --> 00:12:27.110 
because it reduce the need to
collect submissions manually

144
00:12:27.200 --> 00:12:29.840 
which is not that easy in
programming education.

145
00:12:30.810 --> 00:12:36.700 
based on the feedback from students
and the experiences made in advance,

146
00:12:36.990 --> 00:12:43.670 
the structure also decided to
base the final exam on the

147
00:12:44.440 --> 00:12:52.250 
method i just mentioned
with using code ocean and

148
00:12:53.160 --> 00:12:55.890 
quiz section
with openHPI.

149
00:12:57.000 --> 00:13:03.120 
the multiple-choice quiz was then
able to be evaluated automatically.

150
00:13:03.340 --> 00:13:08.540 
so having the different questions
one is able to expand

151
00:13:08.540 --> 00:13:12.130 
one of the questions specifically
and get a quick response

152
00:13:12.280 --> 00:13:16.070 
whole students responded to
these specific questions.

153
00:13:16.970 --> 00:13:20.850 
in addition to using multiple choice
quizzes for the final exam,

154
00:13:21.140 --> 00:13:24.080 
they also decided to use
code ocean exercise.

155
00:13:24.750 --> 00:13:31.880 
and specific to the graded tests before
they were different tasks this

156
00:13:32.100 --> 00:13:38.190 
in that one exercise that
could be answered without

157
00:13:38.190 --> 00:13:43.290 
inferring each other and very
specific help messages even

158
00:13:43.420 --> 00:13:44.930 
within the final exam.

159
00:13:46.160 --> 00:13:51.070 
this was a kind of new feeling
for the students that they also

160
00:13:51.070 --> 00:13:56.670 
get life hit back on the final
exam and the statistics show

161
00:13:56.900 --> 00:14:02.850 
that it also hard them to
achieve quite well and come

162
00:14:02.850 --> 00:14:04.710 
through the exam
as expected.

163
00:14:06.450 --> 00:14:12.310 
the final exam could then also
be annotated afterward, so the

164
00:14:12.310 --> 00:14:16.140 
instructor decided to give some
additional hints to students

165
00:14:16.140 --> 00:14:22.210 
once that the exam was over to
provide more insights what the

166
00:14:22.210 --> 00:14:28.550 
different methods and difficulties that
he included by interned in the exam.

167
00:14:29.460 --> 00:14:33.700 
so he also used the announcement features
to communicate with the students.

168
00:14:35.070 --> 00:14:40.850 
that is one of the rap ups and possibilities
that code ocean together with

169
00:14:41.090 --> 00:14:44.790 
open it by has been
used in the past.

170
00:14:46.070 --> 00:14:51.700 
another scenario i would like to share
is the one of using practice sessions

171
00:14:51.960 --> 00:14:59.080 
for a bigger group of lectures that
was us during the summer term

172
00:14:59.240 --> 00:15:01.720 
at Hasso Plattner
institute this year.

173
00:15:02.450 --> 00:15:08.650 
the course is usually
managed within model and

174
00:15:08.660 --> 00:15:14.170 
basic pastoral lecture on
internet and www technologies

175
00:15:14.170 --> 00:15:18.470 
held by professor Minel this
year about one hundred forty

176
00:15:18.470 --> 00:15:20.830 
bachelor's students
participated in the course.

177
00:15:21.410 --> 00:15:26.560 
they have weekly homework assignments
through all the lecture series

178
00:15:26.780 --> 00:15:31.150 
and they consists of text and
programming assignments.

179
00:15:31.910 --> 00:15:38.340 
previously saw an alterations before this
year these had to be checked manually

180
00:15:38.500 --> 00:15:43.820 
and graded by student assistance
which is a lot of manual work

181
00:15:43.820 --> 00:15:49.450 
for one hundred forty students where
assignments are due every week.

182
00:15:50.710 --> 00:15:56.620 
they also get a kind of long feedback
cycle for these exercises,

183
00:15:56.760 --> 00:16:01.730 
as it usually takes about one
week for them to get the

184
00:16:01.730 --> 00:16:06.780 
feedback on the exercises and
some of the students also

185
00:16:06.780 --> 00:16:12.680 
submit code that is unable to
compile or they afterwards

186
00:16:12.680 --> 00:16:16.900 
ask for additional feedback which increases
the workload for the student assistance.

187
00:16:17.630 --> 00:16:23.420 
therefore the instructor wished to
automate that feedback mechanism

188
00:16:23.560 --> 00:16:28.850 
and have reliable and comprehensible
feedback messages for students.

189
00:16:29.100 --> 00:16:35.250 
and also employ a lintra that
checks the style of the

190
00:16:35.260 --> 00:16:37.360 
code that is written
by students.

191
00:16:38.340 --> 00:16:43.890 
so that encode ocean we extended
the feedback function

192
00:16:44.260 --> 00:16:51.010 
to have specific messages on the style
such as missing whitespace for example

193
00:16:51.150 --> 00:16:56.380 
or other code smiles that students
could directly learn about.

194
00:16:57.910 --> 00:17:03.580 
in addition be added a feature to
restrict additional submissions

195
00:17:03.760 --> 00:17:09.310 
after a given deadline that was
of importance in order to have

196
00:17:09.320 --> 00:17:12.940 
that submission deadline for
each of the weekly assignments

197
00:17:13.140 --> 00:17:18.140 
and was solved differently in the
first scenario i talked about.

198
00:17:18.690 --> 00:17:22.770 
so the new edition called ocean
was able to handle deadline

199
00:17:22.770 --> 00:17:27.660 
information and provide them a
quick overview to students

200
00:17:27.660 --> 00:17:31.810 
before actually submitting their
score so that they are always

201
00:17:31.810 --> 00:17:36.850 
informed about the deadline and
how they are aligned with it.

202
00:17:37.710 --> 00:17:42.210 
for the instructor on the other
hand there's clear statistics

203
00:17:42.380 --> 00:17:46.940 
that points out a traffic light
system whether the submission

204
00:17:46.940 --> 00:17:53.120 
was on time or too late. for
each submission that is done,

205
00:17:53.290 --> 00:17:59.020 
instructor is also able to see
the same time information

206
00:17:59.110 --> 00:18:05.010 
and could therefore decide to read
the late submission differently

207
00:18:05.270 --> 00:18:08.760 
then a valid submission
before the deadline passed.

208
00:18:10.470 --> 00:18:17.360 
concluding these two scenarios
i shared with you we pointed

209
00:18:17.360 --> 00:18:23.090 
out that there are additional use
cases for the open hpi courses

210
00:18:23.190 --> 00:18:29.070 
and code ocean is a valuable
addition to synchrony lectures

211
00:18:29.390 --> 00:18:34.470 
that was unable to be used
in massive online courses

212
00:18:34.670 --> 00:18:38.980 
where these different features
were not requested so far. and

213
00:18:38.980 --> 00:18:42.950 
we could also show that a the
combination of both could be

214
00:18:42.950 --> 00:18:50.540 
used for a graded university exam that was
taken fully digital and without paper.

215
00:18:51.140 --> 00:18:56.180 
it is, therefore, a prerequisite
for further remote participation

216
00:18:56.240 --> 00:19:00.440 
as with saw through are
the corvid-19 pandemic.

217
00:19:01.110 --> 00:19:06.040 
he also introduced graded and
time-limited assignments that

218
00:19:06.050 --> 00:19:11.550 
available to instructions without
having a free manual collection

219
00:19:11.770 --> 00:19:17.280 
of submissions. and the automated
feedback we provide within code ocean

220
00:19:17.520 --> 00:19:22.200 
reduces the workload foreign
structure especially with

221
00:19:22.210 --> 00:19:27.300 
a large number of participants
and provide students with

222
00:19:27.310 --> 00:19:33.040 
individual feedback on their very specific
submission they're going to make.

223
00:19:33.480 --> 00:19:38.140 
it also makes grading more
transparent and therefore easier

224
00:19:38.140 --> 00:19:39.130 
to understand.
Thank you!
