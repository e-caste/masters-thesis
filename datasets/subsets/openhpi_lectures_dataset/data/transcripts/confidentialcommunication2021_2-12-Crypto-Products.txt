WEBVTT

1
00:00:00.900 --> 00:00:06.880 
Now, let's consider some crypto products
in our openHPI course about Confidential

2
00:00:06.880 --> 00:00:11.740 
Communication the Internet. We already
have mentioned various crypto

3
00:00:11.740 --> 00:00:27.140 
products in previous videos, for example, we spoke about the ENIGMA, the encryption
machine of the German Wehrmacht in WWII. Other products are, Smart Token and SecureID,

4
00:00:27.940 --> 00:00:35.660 
which provide response generation hardware
for Challenge-Response protocols.

5
00:00:36.220 --> 00:00:43.880 
Kerberos is a very important system and
product for key distribution systems,

6
00:00:45.220 --> 00:00:54.560 
the implementations of DES, triple-DES, AES and
such symmetric cryptosystems that you can use it

7
00:00:54.560 --> 00:00:58.180 
and the systems
can use it for

8
00:00:58.760 --> 00:01:06.750 
encryption, same products is the implementation
of RSA, the asymmetric cryptosystem

9
00:01:06.850 --> 00:01:11.840 
it is very popular. We have
implementation of various

10
00:01:12.480 --> 00:01:19.200 
hash functions, SHA, SHA-1,
SHA-2, MD4, MD5 and so on.

11
00:01:19.900 --> 00:01:25.720 
Let's have a look at some of the
characteristic of such kind of

12
00:01:25.720 --> 00:01:33.170 
products. Crypto products are available in
two forms- they are available as crypto

13
00:01:33.250 --> 00:01:37.760 
hardware or as crypto
software. Crypto hardware

14
00:01:38.720 --> 00:01:48.620 
typically is faster than software. DES and AES are
optimized for hardware realization, you remember,

15
00:01:48.980 --> 00:01:55.680 
they need only to perform very simple
logical operations and of course, this can

16
00:01:55.680 --> 00:02:00.620 
be done very simply in chips.
So, this is one advantage.

17
00:02:00.920 --> 00:02:07.400 
It's faster, the other advantage is, it
is more difficult, much more difficult

18
00:02:07.500 --> 00:02:13.900 
to manipulate such kind
of crypto hardware,

19
00:02:14.200 --> 00:02:19.460 
at least more difficult than
to manipulate software.

20
00:02:20.780 --> 00:02:25.340 
Then also, it's more difficult to
analyze what exactly happened

21
00:02:25.940 --> 00:02:33.340 
inside such a hardware tool, the secure
storage of secret keys is possible,

22
00:02:34.360 --> 00:02:38.580 
so, it cannot leave the personal
security environment.

23
00:02:39.420 --> 00:02:44.460 
You remember when we discussed Public
Key Infrastructures, we had considered

24
00:02:44.460 --> 00:02:49.370 
such personal security environment
and for example, to have it on a

25
00:02:49.380 --> 00:02:54.700 
small hardware device, on a smart
card, it makes it much more secure

26
00:02:54.980 --> 00:03:00.100 
than having on
the computer.

27
00:03:01.180 --> 00:03:06.280 
Another advantage of crypto
hardware, one has it in the own

28
00:03:06.280 --> 00:03:10.540 
hand and to his own
disposal. If we

29
00:03:11.280 --> 00:03:16.520 
consider such crypto product
consisting of software,

30
00:03:16.950 --> 00:03:24.280 
Then typically they are less complex
and much more flexible than hardware,

31
00:03:24.390 --> 00:03:29.620 
with minor changes and something
one can apply also for another

32
00:03:29.620 --> 00:03:32.900 
person, which is much more
difficult with the hardware. But

33
00:03:33.460 --> 00:03:39.700 
the price is, they are less
safe. And typically, they are

34
00:03:40.460 --> 00:03:46.140 
slower, sometimes much
slow. Secure key storage

35
00:03:46.700 --> 00:03:53.340 
is difficult or even impossible, and
availability of secret keys is much

36
00:03:53.340 --> 00:03:59.520 
more difficult to organize than with
hardware, for example, with a smart

37
00:03:59.520 --> 00:04:05.600 
card, where the private key is stored.
Now we consider crypto products

38
00:04:05.740 --> 00:04:12.560 
in more detail, and we start with smart
cards. Smart cards typically with the

39
00:04:12.560 --> 00:04:18.170 
crypto processor, smart card of
such plastic cards of same size

40
00:04:18.290 --> 00:04:26.270 
like credit cards, and also like a credit
card with an embedded computer chip.

41
00:04:26.280 --> 00:04:32.120 
Typically to make computation on the
card faster, such smart cards also

42
00:04:32.780 --> 00:04:36.680 
in that smart cards also
crypto processors are

43
00:04:37.360 --> 00:04:42.200 
embedded. So first, patents of such
smart cards go back to the end of

44
00:04:42.300 --> 00:04:52.100 
the 60s of the last century and massive use could be
observed since the mid-80s of the last century.

45
00:04:52.140 --> 00:04:59.620 
So they were used in banks,
with telephone identity cards

46
00:04:59.900 --> 00:05:05.860 
and so on. The input and the output
is organized of such smart

47
00:05:05.940 --> 00:05:13.780 
card by a card reader,
via contact area of the

48
00:05:13.890 --> 00:05:18.900 
chip surface, so it's not
so easy to give in and

49
00:05:19.460 --> 00:05:28.140 
get out data from such a smart card. So
the smart cards are excellently usable

50
00:05:28.520 --> 00:05:38.580 
for cryptographic applications. For example, for storing
the secret private key, for a signature execution,

51
00:05:38.760 --> 00:05:45.880 
because the smart card is a complete
computer, it is not so powerful like

52
00:05:45.980 --> 00:05:49.160 
real computer, but all of these
things, the storage of the

53
00:05:50.560 --> 00:05:54.420 
private key can be done, the
computation of the private key,

54
00:05:54.420 --> 00:05:59.760 
for example, a signature execution can be
done on the smart card, and is supported

55
00:05:59.770 --> 00:06:08.140 
by the cryptoprocessor. Problematic is that
they still are rather slow and also the

56
00:06:08.140 --> 00:06:16.880 
storage capacity is relatively limited.
How to protect a smart card?

57
00:06:18.120 --> 00:06:25.160 
The smart card protection is typically
based on the principal "property and

58
00:06:25.160 --> 00:06:29.920 
knowledge". These are two
factors, one factor is

59
00:06:30.660 --> 00:06:36.600 
one, to use this smart card, one needs to
have a smart card in his hand, to own

60
00:06:36.610 --> 00:06:42.860 
the smart cards, and the second
requirement is one knows the

61
00:06:42.860 --> 00:06:47.740 
secret to open the smart
card, one needs a PIN

62
00:06:47.740 --> 00:06:54.000 
be able to use it. So two factors,
property and knowledge are needed

63
00:06:54.340 --> 00:06:57.220 
before one can use
such a smart card.

64
00:06:58.800 --> 00:07:03.700 
So, it could also be other principles
to protect smart cards, for example,

65
00:07:03.860 --> 00:07:09.220 
property and biometric, here the
same thing as one has to own

66
00:07:09.220 --> 00:07:20.610 
the card, and then one needs to have a biometric characteristic,
for example, fingerprint to unlock and use the

67
00:07:20.720 --> 00:07:28.900 
card. Authentication of these cards are done
by so-called Challenge-Response procedures,

68
00:07:29.800 --> 00:07:38.510 
and this means that the smart cards are
perfectly suited for authentication

69
00:07:38.520 --> 00:07:46.480 
in order to gain access, for example, to a PC, to a
computer system, to laboratories, to buildings,

70
00:07:46.840 --> 00:07:57.280 
very secure and so, Challenge-Response principle is
that the challenge is given and a response is given

71
00:07:57.280 --> 00:08:02.240 
back and it is expected
that the system

72
00:08:02.240 --> 00:08:10.740 
react in the right way on this. Here are
some usage scenarios of smart cards,

73
00:08:11.380 --> 00:08:20.630 
with symmetric cryptosystems, so, for example,
on the smart card, a secret key is stored and

74
00:08:20.640 --> 00:08:25.960 
encryption and decryption of data
are done on the card using

75
00:08:26.520 --> 00:08:35.600 
AES or other symmetric methods. By means
of a cryptoprocessor, this can perform

76
00:08:36.700 --> 00:08:43.260 
relatively fast. Another usage scenario,
we mentioned it already several

77
00:08:43.260 --> 00:08:49.970 
times, is the usage of asymmetric
cryptosystems. Here on the card,

78
00:08:50.120 --> 00:08:56.400 
the key pair is generated, the key
pair is generated on the card with

79
00:08:56.400 --> 00:09:05.800 
the idea that the private key never leaves the
card. So, on the card key pair is generated

80
00:09:05.800 --> 00:09:12.860 
and the private key is already in place,
and the public key that has to be

81
00:09:13.320 --> 00:09:17.140 
extracted out of the card because
it needs to be published

82
00:09:17.320 --> 00:09:25.880 
for the other users. So, the principle that the private
key cannot be extracted out of the smart card,

83
00:09:26.400 --> 00:09:34.520 
provides a very high security level for using
such cards in asymmetric communication.

84
00:09:35.260 --> 00:09:42.200 
And then of course, the usage of
the private key needs to be

85
00:09:42.200 --> 00:09:48.420 
realized on the card. So for
example, the encryption of data

86
00:09:48.800 --> 00:09:54.300 
with the private key needs to be
done on the card or the decryption

87
00:09:54.580 --> 00:10:00.660 
of received ciphertext key, all
this can be done on the card

88
00:10:00.700 --> 00:10:07.600 
is this very secure environment.
So the signature of documents,

89
00:10:07.620 --> 00:10:12.320 
messages with private
keys can be sent and

90
00:10:12.680 --> 00:10:16.320 
private key can be encrypted,
and you can take such a smart

91
00:10:16.320 --> 00:10:24.950 
card to any place you want to use.
Another crypto product I want to

92
00:10:25.600 --> 00:10:30.860 
introduce are the HSM,
Hardware Security Modules,

93
00:10:31.900 --> 00:10:39.580 
and this is something in modern computers,
which typically have such a hardware

94
00:10:39.700 --> 00:10:46.700 
security model, with an integrated
cryptoprocessor. Such hardware security

95
00:10:46.700 --> 00:10:54.130 
module provides similar functionality
as we discussed for smart cards,

96
00:10:54.140 --> 00:11:00.500 
or other crypto hardware. It provides a
possibility to securely store a secret key

97
00:11:01.340 --> 00:11:06.420 
to encrypt data, to calculate
hash values and others.

98
00:11:07.360 --> 00:11:15.630 
And it is implemented as a separate chip
in addition to the main processor.

99
00:11:15.650 --> 00:11:23.880 
And here is the Trusted Platform Module, which is
also in place to use a separate chip is to provide

100
00:11:24.140 --> 00:11:29.360 
or to increase the security that
is now possibl with the usual

101
00:11:30.100 --> 00:11:36.120 
operations of the main processor
to access or to manipulate this

102
00:11:36.860 --> 00:11:45.180 
hardware security modules. Also, mobile
devices come with such hardware security

103
00:11:45.200 --> 00:11:50.500 
module, with such a Trusted Platform
Module, for example, in the case of

104
00:11:50.510 --> 00:11:59.150 
Apple smart phones, it's secure enclave. With
the Google Pixel smartphones, it is Titan M,

105
00:11:59.410 --> 00:12:06.280 
and with ARM TrustZone in the
Android devices. But note

106
00:12:06.340 --> 00:12:12.980 
that the proprietary implementation of crypto
functions may contain vulnerabilities.

107
00:12:13.200 --> 00:12:16.960 
I remind you in the Kerckoffs
principle, every time

108
00:12:18.220 --> 00:12:23.600 
such a crypto functions should be
published, security should be realized

109
00:12:24.500 --> 00:12:32.480 
only by the key. And here these are
proprietary implementations, so they are

110
00:12:32.480 --> 00:12:36.580 
not checked by a broad
audience of all

111
00:12:37.120 --> 00:12:42.760 
security analysts and researchers,
so be careful. But in any case,

112
00:12:43.260 --> 00:12:49.420 
its trust level and the security
level is increased by such crypto

113
00:12:49.640 --> 00:12:55.000 
modules. And other very, very important
crypto product particularly now

114
00:12:55.400 --> 00:13:00.900 
in our Corona crisis are the VPN,
the Virtual Private Networks.

115
00:13:02.420 --> 00:13:10.260 
Typically network organizations run
their network and they have different

116
00:13:10.260 --> 00:13:16.980 
locations. So, they have the need to
interconnect the networks on different

117
00:13:16.980 --> 00:13:20.200 
locations in a way
that it looks like

118
00:13:21.280 --> 00:13:29.720 
one large network. And what they did in the past,
is they rented some physical communication

119
00:13:29.720 --> 00:13:33.460 
lines between the different
locations of the company,

120
00:13:34.340 --> 00:13:42.420 
which only used to interconnect
these networks. The idea of VPN is

121
00:13:42.820 --> 00:13:50.610 
to provide a virtual private network,
to provide the same functionality

122
00:13:50.800 --> 00:14:02.430 
without renting a physical communication
line only by using a cryptographic

123
00:14:02.540 --> 00:14:08.460 
methods in the right way. So, the
idea is to replace the expensive

124
00:14:08.520 --> 00:14:14.990 
private dedicated lines by cryptographically
generated virtual data channels

125
00:14:15.650 --> 00:14:18.580 
on the internet, which
provides the same security,

126
00:14:19.140 --> 00:14:26.400 
like these private lines. So, the users
are authenticated and all data packets

127
00:14:26.400 --> 00:14:31.460 
are encrypted before they are sent, and
so if the user in one location of

128
00:14:31.460 --> 00:14:36.580 
the company is authenticated
to the system, by means of

129
00:14:37.140 --> 00:14:45.180 
the VPN he/she can also
connect the networks and the

130
00:14:45.700 --> 00:14:50.700 
partners in the other
location, and it is

131
00:14:51.260 --> 00:14:56.900 
interconnected in a very secure
way as authentication is done.

132
00:14:57.260 --> 00:15:09.900 
So, it is not possible that an attacker retransforms
the packages to another place and all the

133
00:15:09.960 --> 00:15:17.360 
communication is encrypted. In the
internet for establishing such VPN,

134
00:15:18.340 --> 00:15:26.480 
the IPSec protocols are typically used.
This is inside the internet protocols

135
00:15:26.560 --> 00:15:31.940 
that provide security on
the internet level by

136
00:15:34.600 --> 00:15:45.470 
taking care of the authentication for the transmission of data packets
as well as the encryption on the packet level. The use of IPSec

137
00:15:45.740 --> 00:15:51.940 
tunnel mode in which IP packets include
IP headers are encrypted before

138
00:15:51.960 --> 00:15:56.160 
they are sent, so, if you are
in home office and if you

139
00:15:56.160 --> 00:16:02.400 
want to connect to your company, definitely
you should use such VPN connection

140
00:16:04.280 --> 00:16:12.900 
to guarantee that you can
communicate in a confidential way

141
00:16:13.200 --> 00:16:18.860 
and it's important for your company
too, because it could be that you

142
00:16:19.320 --> 00:16:24.240 
connect to the network and
infiltrate malware or others.

143
00:16:25.680 --> 00:16:33.420 
The last crypto product I want to mention is
the IBE, The Identity Based Encryption.

144
00:16:34.280 --> 00:16:40.580 
And here the idea is to apply
asymmetric encryption with a

145
00:16:40.580 --> 00:16:47.400 
key pair in a very simple way,
and the idea behind this IBE is

146
00:16:48.160 --> 00:16:54.820 
that the public key is not necessary
to distribute to all the other

147
00:16:54.820 --> 00:17:00.380 
participants because as a
public key, the identity of

148
00:17:01.240 --> 00:17:07.320 
the recipient is used, so, the email
address, or the server DNS entry

149
00:17:07.500 --> 00:17:12.340 
or something like this used as
a public key, so that all the

150
00:17:12.340 --> 00:17:18.120 
problems with distributing the public key,
bringing the partner in the situation

151
00:17:18.140 --> 00:17:24.280 
to know the public
key is omited.

152
00:17:25.160 --> 00:17:29.500 
It was an idea of an Adi
Shamir, you remember that

153
00:17:29.720 --> 00:17:34.680 
he provided RSA, he
was a very famous

154
00:17:35.340 --> 00:17:39.440 
crypto analyst, and he came
with this idea in 1984.

155
00:17:40.200 --> 00:17:45.120 
It was in the time when people discussed
how a public key infrastructure should

156
00:17:45.120 --> 00:17:52.460 
be designed, why certificates are
needed, how to serve a trust problem

157
00:17:52.480 --> 00:17:58.500 
of asymmetric crypto protocols
and in that time, he proposes

158
00:17:59.680 --> 00:18:07.140 
there are no concrete implementation of
such identity based signature. For a

159
00:18:07.140 --> 00:18:10.720 
long time it was only
a theoretical idea,

160
00:18:11.400 --> 00:18:18.540 
but in 2001, the first proposals
were published and now it's

161
00:18:18.920 --> 00:18:25.360 
quiet popular. But we have
to say with such IBE,

162
00:18:25.920 --> 00:18:35.240 
there is no possibility to make keys
invalid as long as the identity is used.

163
00:18:35.340 --> 00:18:41.860 
because the revocation
is a problem,

164
00:18:42.120 --> 00:18:47.720 
because one has to change the
identity, which is used as

165
00:18:47.720 --> 00:18:53.860 
a public key. There are many
more such crypto products,

166
00:18:54.400 --> 00:18:58.810 
this gives you only a few examples
from the hardware crypto product

167
00:18:58.910 --> 00:19:06.620 
and software crypto products, and these
tools are based on all the techniques we

168
00:19:06.620 --> 00:19:10.380 
discussed, but you as a
user, you only have to

169
00:19:11.400 --> 00:19:14.880 
authenticate against your
VPN software or you

170
00:19:15.580 --> 00:19:22.760 
can take your smart card and can work, and all
this complicated cryptographic protocols

171
00:19:22.870 --> 00:19:27.400 
are run in the back
on this product.
