WEBVTT

1
00:00:00.550 --> 00:00:05.069 
In our OpenHPI course about 'Blockchain revealing the myth'  now

2
00:00:05.250 --> 00:00:06.916 
we look to another way to increase

3
00:00:09.990 --> 00:00:15.030 
the scalability. The so-called off-chain approach, as we already discussed,

4
00:00:15.330 --> 00:00:20.030 
that it's possible to increase the scalability, to modify

5
00:00:20.050 --> 00:00:23.088 
the protocol. It's dangerous because it can lead to split-offs

6
00:00:24.480 --> 00:00:28.949 
. We discussed the possibility to increase scalability by

7
00:00:29.220 --> 00:00:34.109 
introducing new functionality, and now we consider the possibility

8
00:00:34.320 --> 00:00:39.130 
to increase the scalability by the so-called off-chain approach.

9
00:00:40.230 --> 00:00:41.399 
What does it mean?

10
00:00:42.760 --> 00:00:47.066 
Often means transactions are carried out outside of the blockchain.

11
00:00:49.130 --> 00:00:53.479 
So it is no more necessary to register them in the blockchain.

12
00:00:54.020 --> 00:00:56.911 
That, of course, increases the efficiency, but the security

13
00:00:58.640 --> 00:01:03.409 
of the system can be compromised because the transaction is no longer

14
00:01:03.860 --> 00:01:06.419 
verified in the network.

15
00:01:07.490 --> 00:01:11.800 
There are different off-chain approaches discussed, both bitcoin and Ethereum

16
00:01:12.650 --> 00:01:17.569 
are working on possibilities to provide secure

17
00:01:17.720 --> 00:01:22.310 
off-chain solutions, and here I mentioned micropayment channels,

18
00:01:22.580 --> 00:01:26.434 
state channels, child chains, and side

19
00:01:27.000 --> 00:01:31.969 
chains. And let's have a closer look at this approach

20
00:01:32.240 --> 00:01:36.640 
to increase the scalability of the blockchain systems.

21
00:01:38.540 --> 00:01:40.729 
Let's start with payment channels.

22
00:01:42.170 --> 00:01:45.257 
The idea here is that between users, temporary payment channels

23
00:01:47.120 --> 00:01:48.120 
are created.

24
00:01:49.190 --> 00:01:50.611 
As long as a channel is open.

25
00:01:51.260 --> 00:01:55.909 
Users can exchange transactions in a large number and in a high

26
00:01:55.910 --> 00:01:58.930 
speed, particularly for small amounts.

27
00:01:59.120 --> 00:02:00.260 
No problem.

28
00:02:01.400 --> 00:02:05.239 
After the expiration of the agreed time,

29
00:02:05.860 --> 00:02:10.699 
these transactions or a total sum transaction

30
00:02:11.120 --> 00:02:13.430 
are released for the blockchain.

31
00:02:14.570 --> 00:02:16.873 
Not after a transaction is done, it is released

32
00:02:19.550 --> 00:02:24.170 
for a block construction only after

33
00:02:24.190 --> 00:02:27.289 
the required time. These are the sequences of

34
00:02:31.340 --> 00:02:33.937 
the transactions over this temporary payment or a sum

35
00:02:35.930 --> 00:02:37.050 
total transaction is done.

36
00:02:38.370 --> 00:02:42.939 
So the result is that a virtual instantaneous fee-free,

37
00:02:45.230 --> 00:02:49.669 
scalable and confidentially exchange of values is possible.

38
00:02:51.230 --> 00:02:55.229 
So this is the idea of course to increase the efficiency.

39
00:02:55.880 --> 00:03:00.500 
Another idea is provided by so-called state

40
00:03:00.680 --> 00:03:05.179 
channels. So this is another off-chain solution

41
00:03:05.780 --> 00:03:10.849 
that is similar to the payment channel, but now it is about

42
00:03:10.850 --> 00:03:12.800 
the state and the exchange of states.

43
00:03:13.100 --> 00:03:16.969 
Here in the state channels, the states are updated

44
00:03:17.840 --> 00:03:22.490 
outside of the blockchain instead of the values.

45
00:03:24.110 --> 00:03:26.834 
Let's consider the example for such a state channel.

46
00:03:28.250 --> 00:03:29.769 
And we can consider to this end

47
00:03:32.780 --> 00:03:36.139 
a chess game, a chess game between Alice and Bob,

48
00:03:38.180 --> 00:03:42.709 
instead of sending a new transaction with a state update

49
00:03:42.710 --> 00:03:46.789 
to the Ethereum of network after every chess move,

50
00:03:47.480 --> 00:03:51.440 
states are updated in a  separate

51
00:03:52.340 --> 00:03:53.340 
state channel.

52
00:03:55.030 --> 00:03:59.289 
And there both players can play and then,

53
00:03:59.680 --> 00:04:04.360 
only the last transaction is sent to the network.

54
00:04:06.800 --> 00:04:11.089 
In this end,  it is possible to fix

55
00:04:11.390 --> 00:04:15.020 
the situation, what happens in the in the game,

56
00:04:16.070 --> 00:04:20.509 
what happens in the actual transaction, but not for

57
00:04:20.510 --> 00:04:24.949 
each state move, not for each transaction, but for a

58
00:04:24.950 --> 00:04:26.050 
number of transactions.

59
00:04:26.960 --> 00:04:31.759 
So in summary, we have already seen that there are different scaling options,

60
00:04:32.780 --> 00:04:37.399 
but the scaling options to scaling and

61
00:04:37.580 --> 00:04:41.929 
increasing the efficiency of blockchain based systems.

62
00:04:42.650 --> 00:04:44.953 
But we as users and of such blockchain networks

63
00:04:47.120 --> 00:04:51.649 
are forced to make compromises, compromises either

64
00:04:51.650 --> 00:04:55.589 
in the decentralization or in the security.

65
00:04:57.380 --> 00:05:02.540 
So we find ourselves when the gains in a situation which was described

66
00:05:02.810 --> 00:05:05.946 
already in the scalability trilemma or what we have discussed to

67
00:05:07.310 --> 00:05:10.544 
increase the scalability, to increase the efficiency of the system

68
00:05:12.050 --> 00:05:16.339 
has impact either on the security or on the

69
00:05:16.550 --> 00:05:18.212 
decentralization degree.

70
00:05:19.160 --> 00:05:23.749 
With this in mind we close this with the following

71
00:05:23.750 --> 00:05:28.519 
thoughts, considering the efficiency of

72
00:05:28.670 --> 00:05:33.560 
blockchain based system by saying the focus of blockchain technology

73
00:05:33.950 --> 00:05:38.630 
is a robust and secure, decentralized system

74
00:05:39.260 --> 00:05:43.491 
without any conditions for the number of system users or their identification.

75
00:05:45.500 --> 00:05:49.249 
Yet in an attempt to make the blockchain more efficient,

76
00:05:50.300 --> 00:05:52.309 
the security or the decentralization of a

77
00:05:54.740 --> 00:05:56.740 
system often suffers.

78
00:05:58.160 --> 00:06:02.419 
And this in mind is important when we now consider

79
00:06:02.900 --> 00:06:07.399 
in the following clips more, we will speak more

80
00:06:07.400 --> 00:06:12.199 
about the application and different application areas that this is something

81
00:06:12.710 --> 00:06:16.897 
we every time have to rethink when we discuss blockchain-based

82
00:06:17.750 --> 00:06:18.379 
systems.
