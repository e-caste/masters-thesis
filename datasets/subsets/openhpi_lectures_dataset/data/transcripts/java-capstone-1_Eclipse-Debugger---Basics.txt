WEBVTT

1
00:00:01.880 --> 00:00:05.910 
So, debugging... yay, hunting
bugs. oh yeah my favorite task

2
00:00:06.040 --> 00:00:08.160 
in programming. some
people like it...

3
00:00:10.720 --> 00:00:15.620 
most people don't... The good
thing is that we have tool

4
00:00:16.800 --> 00:00:21.400 
support. So maybe we
get or hands dirty

5
00:00:21.570 --> 00:00:26.050 
in Eclipse. I brought you something, Ralf.
What'd you bring me? I brought you

6
00:00:26.060 --> 00:00:28.410 
also something like
yesterday. I gave you my

7
00:00:28.880 --> 00:00:32.210 
my exercise right? Yeah,
and I broke it. Why that?

8
00:00:32.680 --> 00:00:36.990 
I just wanted to see if you
can kind of pass a test.

9
00:00:37.760 --> 00:00:40.230 
Maybe I'll
employ you :)

10
00:00:41.340 --> 00:00:44.310 
I don't know whether I want this
but I will pass the test.

11
00:00:44.320 --> 00:00:50.560 
So let's head over to Eclipse. Here
we go... So that's my program

12
00:00:50.560 --> 00:00:54.340 
and first thing when I
need to debug something

13
00:00:54.630 --> 00:00:57.330 
I try to run it, so...
yeah I mean we

14
00:00:57.700 --> 00:01:02.130 
need to be sure that doesn't run.
And please you do the steering,

15
00:01:02.140 --> 00:01:05.060 
i can't work with your computer,
I do the talking and

16
00:01:05.210 --> 00:01:11.020 
the hunting bugs. OK, so the first
thing that we do not want to do

17
00:01:11.020 --> 00:01:15.620 
, just to be sure, we
do not want to press

18
00:01:15.620 --> 00:01:19.360 
this button in this case because
it doesn't always run what you

19
00:01:19.360 --> 00:01:24.460 
think it's running so
it runs the the last

20
00:01:24.910 --> 00:01:27.290 
project that you've
been running

21
00:01:27.410 --> 00:01:30.760 
and maybe you want to run
something completely different.

22
00:01:30.760 --> 00:01:34.270 
So, to be sure that you actually
run the program that you think

23
00:01:34.280 --> 00:01:38.120 
you're running, go
to the Java file

24
00:01:38.120 --> 00:01:44.740 
where you're main method is
in, and then say run as

25
00:01:44.760 --> 00:01:47.200 
Java application. So
right-click"Run as"

26
00:01:48.090 --> 00:01:53.620 
and then... BUG!! Well, that one
doesn't look that complicated

27
00:01:53.620 --> 00:01:58.650 
but yeah let's have a look so
it already helps us or Java

28
00:01:58.650 --> 00:02:02.810 
already helps us, it has thrown an
exception a FileNotFoundException

29
00:02:02.810 --> 00:02:08.060 
and yeah this is the
exercise of the

30
00:02:08.060 --> 00:02:11.090 
java1 course, the IDE exercise.
So, we've got some morse

31
00:02:11.090 --> 00:02:14.870 
code, which has to be
decoded... Maybe we show that

32
00:02:14.880 --> 00:02:17.320 
and this is actually the
file that is not found.

33
00:02:17.320 --> 00:02:21.690 
This is this the secret code
text, but here it is? What's

34
00:02:21.700 --> 00:02:24.860 
the problem here? So,
you see the morse code

35
00:02:25.100 --> 00:02:28.800 
pluses and minuses...
Yeah, then can you show

36
00:02:28.800 --> 00:02:33.800 
me the main file again the Main.java?
Ehm, new File secret-code

37
00:02:34.160 --> 00:02:42.700 
it's there... Can you just please close the source
folder, yes, now it's gone. So that means

38
00:02:42.990 --> 00:02:46.870 
the secret code file, it's in
the "src" folder

39
00:02:46.870 --> 00:02:50.290 
and Java kind of looks
in the project root.

40
00:02:50.860 --> 00:02:57.070 
So, we need to
adjust that.

41
00:03:00.820 --> 00:03:03.290 
And the next kind of thing
that often happens:

42
00:03:03.590 --> 00:03:05.960 
I think I just fixed that,
why doesn't it work?

43
00:03:06.560 --> 00:03:11.930 
Don't forget to save. Now
re-run and as we have run

44
00:03:11.940 --> 00:03:14.760 
the exact file... now we're kind of safe so
we can take that (green button) BUG!!...

45
00:03:18.240 --> 00:03:21.390 
Yeah, once more an exception,
which is going to help me

46
00:03:21.630 --> 00:03:26.230 
so we got a stack trace
here and we know that it

47
00:03:26.230 --> 00:03:29.220 
starts from Main.java
line twenty one.

48
00:03:29.410 --> 00:03:34.090 
That's where we kind of..
ah, ok so this is where it

49
00:03:34.100 --> 00:03:38.120 
all starts. So, and then we
can go up the stack trace

50
00:03:38.130 --> 00:03:42.350 
to the "Decoder" and then
we've got another call to create

51
00:03:42.350 --> 00:03:46.710 
cipher stream and yes... maybe we go
there... this is the last occasion

52
00:03:46.710 --> 00:03:51.740 
where we've got a position
in code. Yeah, there's

53
00:03:51.740 --> 00:03:55.090 
lots of code
in there...

54
00:03:55.280 --> 00:03:59.100 
ArrayIndexOutOfBounds
exception means we are,

55
00:03:59.130 --> 00:04:03.070 
we are, we're retrieving, or we're
trying to retrieve something

56
00:04:03.070 --> 00:04:06.040 
from an array
at position

57
00:04:06.340 --> 00:04:11.560 
which doesn't exist.
I already have an

58
00:04:11.560 --> 00:04:15.040 
idea what might be happening
here but I want to have

59
00:04:15.190 --> 00:04:18.570 
more evidence and therefore
I want to debug it.

60
00:04:18.950 --> 00:04:22.650 
OK, so what do we do? For that
we need a breakpoint...

61
00:04:22.870 --> 00:04:26.610 
Breakpoint, I'll give you a
breakpoint. So to make a breakpoint

62
00:04:26.630 --> 00:04:30.290 
you just double-click in this
kind of great area left to the

63
00:04:30.290 --> 00:04:34.440 
line numbers, and the blue thing
actually is a breakpoint,

64
00:04:34.590 --> 00:04:41.060 
Not a blue point, break
point, blue break point

65
00:04:41.270 --> 00:04:43.650 
Yes :), can we now please debug
our code? So, we don't run it,

66
00:04:43.770 --> 00:04:50.280 
we debug it... So just to make sure, we
do the same thing as we just did...

67
00:04:50.280 --> 00:04:55.260 
So we go to the main file here
and right-click and do not

68
00:04:55.260 --> 00:05:00.110 
"Run as", because that would
kind of ignore the breakpoints, we say

69
00:05:00.120 --> 00:05:03.730 
"debug as" Java
application. This, basically,

70
00:05:04.100 --> 00:05:09.080 
runs the code and is not
ignoring the break points.

71
00:05:09.080 --> 00:05:14.130 
And is this a bug now? No
this says let's switch

72
00:05:14.130 --> 00:05:17.850 
the perspective, perspectives
are basically kind of a set of

73
00:05:17.990 --> 00:05:21.650 
views in Eclipse and so
it just will re-arrange

74
00:05:21.870 --> 00:05:25.070 
all the windows so
let's switch.

75
00:05:27.440 --> 00:05:30.270 
And it runs up to the position
where we've set a breakpoint

76
00:05:30.610 --> 00:05:35.160 
and there it just breaks and now
we can have a closer look into

77
00:05:35.160 --> 00:05:38.890 
the internals of our program... So, it
doesn't "break" it kind of

78
00:05:38.890 --> 00:05:41.480 
stops. It's not
broken, so it's

79
00:05:41.620 --> 00:05:46.300 
still running just paused.
And we have some more

80
00:05:46.310 --> 00:05:50.090 
views here, so we still have
the editor in the middle but

81
00:05:50.090 --> 00:05:52.690 
now on the right-hand
side we've got some

82
00:05:53.950 --> 00:05:58.150 
some "Variables" some "Breakpoints"
and some "Expressions" and we

83
00:05:58.150 --> 00:06:01.110 
can already see that we've
got the the breakpoints

84
00:06:01.120 --> 00:06:06.220 
in line eighty, which we added there
and we can see all the variables

85
00:06:06.220 --> 00:06:10.210 
which are valid in the
current scope, which we

86
00:06:10.330 --> 00:06:13.290 
are in. We are right now in
line eighty and we have

87
00:06:13.420 --> 00:06:18.370 
access to to the "this" object,
so the object which we are currently in.

88
00:06:18.370 --> 00:06:22.470 
The input stream, the morse
stream, the morse symbol

89
00:06:22.530 --> 00:06:25.700 
and the index local variable...
So index is Zero

90
00:06:27.910 --> 00:06:31.910 
currently and so let's
step through...

91
00:06:31.910 --> 00:06:36.400 
This is also a cool thing, so
if we hover over a variable,

92
00:06:36.410 --> 00:06:39.350 
Eclipse will just show
us what is the value

93
00:06:39.470 --> 00:06:43.910 
of that, right now. So the
input stream actually is

94
00:06:43.910 --> 00:06:48.740 
the text file that we read
in. There's no error yet,

95
00:06:48.740 --> 00:06:51.910 
so i want to go
over the program,

96
00:06:52.050 --> 00:06:54.380 
yeah' line by line and
see what happens so.

97
00:06:54.570 --> 00:06:59.380 
And we have these, kind of
nice, buttons to do this.

98
00:06:59.380 --> 00:07:03.110 
So here's stop, we
don't need that....

99
00:07:03.350 --> 00:07:07.170 
It's even "terminate", it's not just
"stop", it's "terminate" and we,

100
00:07:07.780 --> 00:07:10.770 
we have to start from scratch,
although not not from scratch

101
00:07:10.770 --> 00:07:14.450 
but we have to run the program
anew. What we wanna do

102
00:07:14.450 --> 00:07:18.190 
is we can press that resume
button. It basically resumes

103
00:07:18.190 --> 00:07:21.520 
the program and goes to the
next breakpoint, directly.

104
00:07:21.690 --> 00:07:27.390 
Well just press it once, ok so
we see the index is 2 now.

105
00:07:29.720 --> 00:07:35.980 
Ok, then we can also go into
or step into the current

106
00:07:35.990 --> 00:07:39.640 
expression, we have
there at hand...

107
00:07:39.650 --> 00:07:43.540 
....that would be this button
over here. So if we've

108
00:07:43.540 --> 00:07:46.470 
got a message call there and then
it would go into the method

109
00:07:46.470 --> 00:07:49.790 
code, but we don't need that
right now so there's nothing we

110
00:07:49.790 --> 00:07:53.380 
have written and we assume that
everything else correct.

111
00:07:53.500 --> 00:07:57.050 
We can step over it, this
is actually what we would

112
00:07:57.050 --> 00:08:00.950 
be doing. So, it goes over the
code line by line it's not going

113
00:08:00.950 --> 00:08:04.180 
into it but it goes to the next
line and stop there once more.

114
00:08:04.180 --> 00:08:08.800 
so and then we have, just to just make
it complete... ok... we have the step

115
00:08:08.890 --> 00:08:12.280 
return button and this kind
of steps out of a method if

116
00:08:12.290 --> 00:08:16.690 
you stepped into it, so and so what
we want to do is... "step

117
00:08:16.700 --> 00:08:21.570 
over" and could you please step
over, ok, the if was not successful

118
00:08:21.570 --> 00:08:27.330 
and we're going, yeah quite some
time... faster please... so we need

119
00:08:27.330 --> 00:08:33.980 
to go to... ok so we need go to somewhere
in the one-thousand somethings, no?

120
00:08:33.980 --> 00:08:38.790 
So, okay, clicking
it is not...

121
00:08:38.800 --> 00:08:42.300 
...ah... there's a short cut so we
could use at least the keyboard

122
00:08:42.450 --> 00:08:49.290 
and step, step, step, but
this still, no ...

123
00:08:49.830 --> 00:08:54.410 
Ralf, please give me some, some
other thing. So this breakpoint

124
00:08:54.410 --> 00:08:57.990 
right now is quite
stupid. It stalls

125
00:08:57.990 --> 00:09:01.450 
the program whenever a breakpoint
is reached. But we know that

126
00:09:01.450 --> 00:09:05.410 
we want to have it just stopped at
a certain position when we have

127
00:09:05.410 --> 00:09:08.730 
a certain value or variable,
therefore, we can

128
00:09:08.730 --> 00:09:12.420 
make it more smart. We can make
it a conditional breakpoint.
