WEBVTT

1
00:00:00.700 --> 00:00:04.520 
Welcome to the introduction to the mainframe input output subsystem.

2
00:00:05.260 --> 00:00:09.440 
My name is Phillipp Brune from Neu-Ulm University of Applied Sciences.

3
00:00:11.330 --> 00:00:14.510 
The main purpose of the mainframe is to provide a platform

4
00:00:14.520 --> 00:00:20.120 
that has a high throughput of transactions for example of data and is

5
00:00:21.370 --> 00:00:23.900 
able to process business workloads

6
00:00:24.550 --> 00:00:29.360 
in a scalable and performant way. And for that of course the input output

7
00:00:29.620 --> 00:00:34.280 
operations, storing data on disks and saving data database

8
00:00:35.490 --> 00:00:37.540 
usage and so on are very fundamental. This is

9
00:00:38.780 --> 00:00:42.760 
typical for commercial applications which are typically more data-centric than

10
00:00:43.090 --> 00:00:48.350 
for example numerical or application simulations or scientific calculations. So

11
00:00:49.340 --> 00:00:53.370 
the input output subsystem is a very crucial, important

12
00:00:53.950 --> 00:00:58.700 
component that is responsible for the unique features of the

13
00:00:58.700 --> 00:00:59.680 
mainframe hardware.

14
00:01:03.580 --> 00:01:07.430 
And starting from the early days from the S360,

15
00:01:08.350 --> 00:01:12.830 
the channel subsystem was implemented to

16
00:01:13.330 --> 00:01:15.150 
do the input output operations.

17
00:01:17.900 --> 00:01:23.900 
In mainframe wording a channel is a connection between a path from

18
00:01:24.150 --> 00:01:27.370 
CPU, from memory to a certain

19
00:01:28.630 --> 00:01:32.340 
disk or certain file or a certain input output operation.

20
00:01:32.820 --> 00:01:35.780 
And the channel subsystem originally was implemented

21
00:01:36.300 --> 00:01:40.680 
in a way that it offered the possibility to use sixteen so called parallel

22
00:01:40.860 --> 00:01:45.040 
channels. If you look at the hardware, you can see okay, we have

23
00:01:45.040 --> 00:01:48.680 
a CPU. In the early days it was one, nowadays it's many CPUs

24
00:01:48.680 --> 00:01:51.550 
and then we have the main memory and the third component is

25
00:01:51.550 --> 00:01:55.230 
the channel subsystem which connects the I/O

26
00:01:55.780 --> 00:02:00.140 
devices. And the channel subsystem can for example independently

27
00:02:00.140 --> 00:02:05.040 
access the main memory. So you can imagine this is kind of a separate

28
00:02:05.380 --> 00:02:09.240 
processor that is doing the input or output operations independently

29
00:02:09.380 --> 00:02:14.900 
of the main CPU. And in the original s360 there

30
00:02:14.900 --> 00:02:18.900 
were sixteen fixed channel. Every channel was a physical connection to or

31
00:02:19.490 --> 00:02:20.770 
could be a physical connection to a

32
00:02:21.790 --> 00:02:26.350 
peripheral device and at every channel there was

33
00:02:26.920 --> 00:02:30.420 
a control unit connected and the control unit then for example

34
00:02:31.410 --> 00:02:36.280 
controlled various number of disks here shown by different numbers. And

35
00:02:37.670 --> 00:02:41.020 
these connections here were really physical wires. So in the

36
00:02:41.250 --> 00:02:44.140 
early days this was a so called parallel

37
00:02:44.650 --> 00:02:47.750 
channel was a copper wire or

38
00:02:49.480 --> 00:02:50.900 
two wires actually for

39
00:02:51.830 --> 00:02:53.040 
data and for control, was tech

40
00:02:53.890 --> 00:02:55.810 
wires and they were connected to the channel.

41
00:02:56.460 --> 00:02:59.590 
And you could also connect the control units

42
00:03:00.010 --> 00:03:04.740 
among each other by this for example, the same disc could be

43
00:03:04.740 --> 00:03:07.550 
accessed by different paths. So we could go for example to this

44
00:03:07.550 --> 00:03:10.590 
channel, then here and then here to that disc you could go here

45
00:03:10.710 --> 00:03:14.390 
and here. This allowed for parallel access for example to the same

46
00:03:14.620 --> 00:03:19.310 
disc if it was requested in parallel by different programs for example.

47
00:03:21.420 --> 00:03:22.850 
So this was the original

48
00:03:24.620 --> 00:03:28.170 
architecture for input output. Of course it was still comparably

49
00:03:28.170 --> 00:03:30.610 
static because all the connections were hard wired.

50
00:03:31.480 --> 00:03:36.190 
But this changed during the use while keeping the original idea. So nowadays

51
00:03:37.130 --> 00:03:41.610 
of course we have multiple CPUs. Many CPUs in a box and we have large memory

52
00:03:41.910 --> 00:03:45.870 
and then we have logical channel subsystems

53
00:03:46.440 --> 00:03:48.590 
and we can have multiple numbers of

54
00:03:49.950 --> 00:03:54.440 
logical channel subsystems and every channel subsystems now has grown to

55
00:03:55.670 --> 00:03:58.050 
256 channels and

56
00:03:59.190 --> 00:04:02.120 
we can have multiple channel subsystems. So the total number

57
00:04:02.550 --> 00:04:08.730 
of channels is much larger. Every channel is identified by a channel

58
00:04:08.990 --> 00:04:09.720 
path identifier.

59
00:04:13.090 --> 00:04:16.240 
Now the control units are connected or

60
00:04:18.250 --> 00:04:22.230 
still could be connected directly to a channel but in most cases we have

61
00:04:22.340 --> 00:04:26.060 
switching in between, we have switches that like in a network

62
00:04:26.060 --> 00:04:29.890 
that for example connect control units and channels in a flexible way so

63
00:04:30.420 --> 00:04:34.480 
the actual paths can be routed at run-time dynamically. And

64
00:04:34.480 --> 00:04:35.590 
this is much more flexible.

65
00:04:36.730 --> 00:04:40.560 
In addition there is a special kind of channel or not a

66
00:04:41.340 --> 00:04:43.950 
special kind of channel but a special kind of device that could

67
00:04:43.950 --> 00:04:45.750 
be connected to a channel that's a so called

68
00:04:46.340 --> 00:04:49.170 
express channel or adapter which is

69
00:04:51.050 --> 00:04:54.050 
basically an adaptor to ethernet and

70
00:04:56.060 --> 00:04:57.700 
all their related technology. The

71
00:04:58.420 --> 00:04:59.910 
name stands for

72
00:05:01.550 --> 00:05:03.770 
open systems adapter which is

73
00:05:04.490 --> 00:05:07.130 
a technology coming from the idea that there's the mainframe

74
00:05:07.130 --> 00:05:09.920 
and there's the open world, which are the non mainframe platforms

75
00:05:10.140 --> 00:05:13.350 
and these days it was named like that. So

76
00:05:13.820 --> 00:05:16.210 
this is basically sort of a network card

77
00:05:18.160 --> 00:05:21.290 
that allows nowadays of course to connect the mainframe to

78
00:05:21.540 --> 00:05:23.790 
the ethernet to the LAN in a normal way.

79
00:05:26.940 --> 00:05:31.800 
And the CPU communicates with the channel subsystem by submitting so called

80
00:05:32.130 --> 00:05:37.040 
channel programs. The channel program consists of CCWs, Channel

81
00:05:37.050 --> 00:05:38.330 
Command Words which are I/O

82
00:05:39.360 --> 00:05:44.910 
instructions. So the CPU hands over such a channel program consisting

83
00:05:44.910 --> 00:05:48.240 
of a number of operations to the channel subsystem and the

84
00:05:48.240 --> 00:05:51.620 
channel subsystem executes this independently so the CPU can

85
00:05:51.620 --> 00:05:54.990 
do other things during that period of time and

86
00:05:56.160 --> 00:05:59.610 
after finishing the program then the CPU gets notified that

87
00:05:59.610 --> 00:06:04.100 
for example data has been loaded or that the data is present. And this is

88
00:06:05.300 --> 00:06:08.020 
an important feature that is responsible also for

89
00:06:08.430 --> 00:06:10.430 
achieving a high I/O

90
00:06:11.040 --> 00:06:12.360 
rate and high throughput.

91
00:06:15.210 --> 00:06:17.390 
The wiring also changed over the years.

92
00:06:18.190 --> 00:06:22.610 
Originally it was a copper wire but now we have a so called ESCON

93
00:06:23.160 --> 00:06:26.130 
first we had ESCON now we have FICON cable. And

94
00:06:28.080 --> 00:06:31.780 
this is explained here a little bit.

95
00:06:33.850 --> 00:06:37.830 
So FICON and ESCON for connecting the I/O devices replaced the original

96
00:06:38.760 --> 00:06:42.180 
copper wires and it also replaced the physical mechanism.

97
00:06:43.050 --> 00:06:45.390 
Originally it was electric

98
00:06:47.830 --> 00:06:50.240 
transport, now it's optical. So

99
00:06:51.270 --> 00:06:53.190 
FICON and ESCON are fibre optical

100
00:06:53.870 --> 00:06:58.660 
wiring fibre optical connections and the ESCON protocol was

101
00:06:58.670 --> 00:07:00.840 
invented by IBM in the early nineties

102
00:07:01.930 --> 00:07:08.990 
and it was a serial half-duplex transmission protocol for data and

103
00:07:11.110 --> 00:07:11.900 
the maximum

104
00:07:13.950 --> 00:07:16.650 
data transmission rate was seventeen megabytes per second

105
00:07:17.730 --> 00:07:22.090 
with up to forty three kilometers distances that could be handled.

106
00:07:22.320 --> 00:07:24.380 
These distances are important because in

107
00:07:24.850 --> 00:07:26.530 
enterprise settings we typically have

108
00:07:27.320 --> 00:07:30.650 
systems distributed in different data centers for disaster

109
00:07:31.060 --> 00:07:33.630 
protection, disaster recovery and

110
00:07:34.320 --> 00:07:36.150 
these data centers of course are

111
00:07:37.020 --> 00:07:40.700 
located at a certain distance to make it more secure and more safe.

112
00:07:41.120 --> 00:07:42.660 
In case of for example

113
00:07:43.870 --> 00:07:46.140 
an external event that destroys something,

114
00:07:46.850 --> 00:07:50.190 
and therefore we need larger distances also to connect the

115
00:07:50.570 --> 00:07:51.590 
storage devices.

116
00:07:54.060 --> 00:07:56.110 
In 1999, ESCON was

117
00:07:57.070 --> 00:08:00.640 
superseded by FICON, which

118
00:08:01.350 --> 00:08:02.780 
stands for FIber CONnection.

119
00:08:03.410 --> 00:08:07.040 
And FICON basically is an extension of the

120
00:08:07.530 --> 00:08:11.540 
fiber channel protocol that is also standardized and is also

121
00:08:11.700 --> 00:08:16.070 
used in most other enterprise servers and storage systems

122
00:08:16.530 --> 00:08:20.410 
and so it is based on a standard. It basically

123
00:08:22.080 --> 00:08:26.630 
is a different implementation of the top most layer of the fiber channel protocol,

124
00:08:27.490 --> 00:08:32.870 
the normal fiber channel is like transmitting the SCSI protocol over fibers

125
00:08:33.270 --> 00:08:33.700 
and in

126
00:08:36.390 --> 00:08:40.010 
a simplified way you could say FICON is transmitting ESCON protocol over

127
00:08:40.290 --> 00:08:46.050 
a fiber channel. And so this is a full duplex transmission with

128
00:08:46.050 --> 00:08:50.510 
a maximum data transmission rate of two four or even eight gigabytes per second

129
00:08:50.770 --> 00:08:55.830 
and up to over one hundred kilometers. So distances are larger and

130
00:08:55.970 --> 00:08:59.980 
transmission rates are larger. The big advantage is now that you could use

131
00:09:00.510 --> 00:09:07.160 
standard fibre channel switches, for example. For switching also the FICON

132
00:09:08.560 --> 00:09:14.270 
transfer or FICON cabling and in addition the vendors of storage

133
00:09:14.270 --> 00:09:19.710 
systems of course can use the same storage system for fibre channel and for

134
00:09:20.160 --> 00:09:23.570 
FICON typically you could either configure that in the devices in

135
00:09:23.570 --> 00:09:27.650 
the storage systems or at least it's just the change of the firmware

136
00:09:27.950 --> 00:09:32.570 
about the physical device is the same. So this of course makes it

137
00:09:32.680 --> 00:09:36.970 
also easier for vendors of storage systems. And

138
00:09:39.930 --> 00:09:43.100 
so these are the current state and

139
00:09:44.090 --> 00:09:48.110 
the latest version is z14, an additional I/O mechanism was added for

140
00:09:48.670 --> 00:09:52.290 
point to point connections, for special devices but this is not replacing

141
00:09:52.960 --> 00:09:55.920 
FICON but is just an addition for very high speed

142
00:09:56.960 --> 00:10:01.480 
connections for example as they are used in big data analytics or

143
00:10:01.620 --> 00:10:03.290 
artificial intelligence solutions.

144
00:10:04.260 --> 00:10:05.100 
Thank you very much.
