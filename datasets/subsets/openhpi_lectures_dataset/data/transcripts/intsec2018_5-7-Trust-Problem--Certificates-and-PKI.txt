WEBVTT

1
00:00:00.570 --> 00:00:03.170 
now we have a look to
the trust problem

2
00:00:03.380 --> 00:00:09.330 
of two key encryption methods and
understand the role of certificates

3
00:00:09.640 --> 00:00:14.040 
and public key
infrastructures let's start

4
00:00:14.700 --> 00:00:18.710 
to remind you to the trust problem
of two key encryption as

5
00:00:19.360 --> 00:00:23.660 
to secure usage of two key
procedures depend very much

6
00:00:23.880 --> 00:00:29.410 
on c proper location of the
public key and the participant

7
00:00:29.420 --> 00:00:34.060 
a of c encryption methods
and the user because

8
00:00:34.840 --> 00:00:38.180 
this is difficult because
a one is a virtual

9
00:00:40.450 --> 00:00:46.790 
stream and thus or is a real it
entity and how to connect this

10
00:00:46.790 --> 00:00:51.350 
two so that the receiver of a
message for example in case of

11
00:00:51.350 --> 00:00:54.020 
anyone's to verify it
adjusts signature

12
00:00:54.230 --> 00:00:58.890 
is really true that as a
public key of set a is user

13
00:00:59.560 --> 00:01:06.330 
of an if an attacker succeed
is in parsing of his own

14
00:01:06.590 --> 00:01:11.060 
public key for a a set
of so participant

15
00:01:11.570 --> 00:01:16.220 
then they take a can decrypt to
take a take a can read all

16
00:01:16.220 --> 00:01:20.590 
encrypted messages and can
send a is the actor or

17
00:01:20.830 --> 00:01:24.890 
actress he is a and for
the right person it's

18
00:01:24.890 --> 00:01:28.680 
no more possible so really
we discussed this already

19
00:01:28.900 --> 00:01:30.940 
there's a kind of
attack of an attacker

20
00:01:31.210 --> 00:01:35.460 
sets a kind of men intimidate
tech that a ticket try

21
00:01:35.780 --> 00:01:39.920 
to replace his or
her local is

22
00:01:40.220 --> 00:01:45.660 
a a public key and with the
name of it the participant

23
00:01:46.020 --> 00:01:52.240 
a of c two key encryption to apply
so an attacker can not only

24
00:01:52.280 --> 00:01:56.930 
encrypt all the decrypt all
the messages that are sent

25
00:01:57.180 --> 00:02:00.890 
see attacker can also
signed message is

26
00:02:01.280 --> 00:02:06.420 
in behalf of c a trustee
secure and trust or c

27
00:02:06.560 --> 00:02:08.850 
location of public
keys to their own us

28
00:02:09.260 --> 00:02:12.840 
that is established by
means of certificates

29
00:02:13.820 --> 00:02:17.340 
exactly that is why we
need certificates

30
00:02:21.220 --> 00:02:24.910 
for example we are case
of application of https

31
00:02:25.270 --> 00:02:30.400 
when establishing an https connection
it is necessary to verify

32
00:02:30.680 --> 00:02:33.580 
z density of suppose
communication pala

33
00:02:33.990 --> 00:02:37.920 
so his identity of c internet
service front of c a

34
00:02:38.160 --> 00:02:42.890 
a of the user and the user for a
a to it and if i is the user

35
00:02:42.890 --> 00:02:45.500 
for the internet
or service

36
00:02:45.800 --> 00:02:49.070 
and when we discussed about
https we already mentioned

37
00:02:49.470 --> 00:02:54.480 
a is that as there are
certificates a used and needed

38
00:02:55.870 --> 00:02:59.170 
if systems not work well
so if c out indication

39
00:02:59.540 --> 00:03:03.880 
is disturbed then and then in
the middle attack as possible

40
00:03:04.220 --> 00:03:09.040 
in which the attacker poses as
a legitimate internet service

41
00:03:09.060 --> 00:03:14.850 
can take place and sits in the middle
and can control all interactions

42
00:03:14.850 --> 00:03:20.540 
between sit participant and service
so is particularly importance

43
00:03:20.540 --> 00:03:25.450 
to check the communication
partner in case of critical

44
00:03:25.700 --> 00:03:31.240 
internet services like banks online
banking like cooking portals

45
00:03:31.250 --> 00:03:36.530 
like email portals and
offers a in cases they are

46
00:03:37.120 --> 00:03:42.160 
our activities done for example
that cost money or that have

47
00:03:42.370 --> 00:03:48.860 
a huge impact on some activities
when we speak of certificate

48
00:03:49.590 --> 00:03:53.380 
full name is stitches
certificate this is a document

49
00:03:53.670 --> 00:03:59.360 
a document that is digitally
signed by a trustworthy to the

50
00:03:59.360 --> 00:04:03.310 
party typically we speak of
a trust and opposite party

51
00:04:03.770 --> 00:04:11.570 
and as a party he signs a link
between z a between the person

52
00:04:12.160 --> 00:04:17.470 
the entity and its or
his or public key

53
00:04:18.320 --> 00:04:23.860 
so as a trust words the
search party c trust center

54
00:04:24.160 --> 00:04:30.700 
gifsy user as such an a certificate
and certificate is encrypted

55
00:04:31.060 --> 00:04:37.850 
by is the private key of sutra
center so if one trust a trust

56
00:04:37.850 --> 00:04:40.530 
under that has signed
such a certificate

57
00:04:40.810 --> 00:04:44.090 
one can rely on the attribution
of the public key

58
00:04:44.390 --> 00:04:49.490 
to its owner as attested
by the certificate

59
00:04:50.590 --> 00:04:56.310 
c certificate contain information
typically more about that

60
00:04:56.560 --> 00:05:01.460 
but typically is the a at least
they have to contain information

61
00:05:01.460 --> 00:05:05.510 
about the certificate
holder is a person

62
00:05:05.870 --> 00:05:10.020 
this is company is a web
server about the public key

63
00:05:10.390 --> 00:05:15.350 
offset entity and the
ditches signature

64
00:05:15.690 --> 00:05:20.110 
of the trust under a it with
as a a that has issued

65
00:05:20.430 --> 00:05:25.970 
a certificate so trust senders
that signed the certificate

66
00:05:25.980 --> 00:05:30.300 
guarantees with
it's name

67
00:05:30.520 --> 00:05:34.810 
for the accuracy of information
and accuracy of say formation

68
00:05:35.030 --> 00:05:39.280 
is the connection of
an certificate older

69
00:05:39.650 --> 00:05:41.500 
and it's public key

70
00:05:44.030 --> 00:05:49.940 
the use of such certificate as a
a nose see user to out indicate

71
00:05:50.290 --> 00:05:55.800 
himself so the idea is the
mechanisms is work flow is

72
00:05:56.000 --> 00:05:59.930 
to users and message
sets signed by himself

73
00:06:00.890 --> 00:06:03.940 
means that is encrypted
with the private key

74
00:06:04.680 --> 00:06:10.040 
to get as our with his certificate
contessa difficult there

75
00:06:10.040 --> 00:06:15.070 
is a is a a there is his
public key and then

76
00:06:15.500 --> 00:06:20.240 
the service also partner can
take says and can validate

77
00:06:20.540 --> 00:06:25.100 
see a signature of says that if
a card and can check cell ten

78
00:06:25.100 --> 00:06:26.780 
ticity of somesuch

79
00:06:29.140 --> 00:06:33.410 
the partners a service
can do is by using

80
00:06:33.720 --> 00:06:36.690 
the public key out of
susceptor fickett

81
00:06:37.120 --> 00:06:41.520 
and then a in a cryptic
signature of some message

82
00:06:41.740 --> 00:06:47.670 
that was sent by the user see
user's signature can be verified

83
00:06:48.000 --> 00:06:50.810 
that means if so
description is possible

84
00:06:51.480 --> 00:06:55.680 
then it's ensured that the
message actually comes from z

85
00:06:55.970 --> 00:07:00.570 
an edge center and if it's not
decrypted per there was a public

86
00:07:00.570 --> 00:07:05.100 
key as the proof sets the message
comes from another party

87
00:07:08.140 --> 00:07:13.330 
when we see is that it's important
to so so trust problem for

88
00:07:13.330 --> 00:07:18.760 
two key encryption methods by
means of certificate we see

89
00:07:19.080 --> 00:07:24.030 
that there is who infrastructure
necessary we speak of a public

90
00:07:24.050 --> 00:07:29.580 
key infrastructure the p k i
remember as a two key encryption

91
00:07:29.580 --> 00:07:32.920 
methods also called
public key encryption

92
00:07:33.800 --> 00:07:36.830 
so in order to bear playa such
an two key encryption in in

93
00:07:36.830 --> 00:07:42.040 
situ a way that means with
a so of the trust problem

94
00:07:42.520 --> 00:07:46.030 
by means of certificates this
such an infrastructure

95
00:07:46.350 --> 00:07:50.920 
a is required set includes
different components

96
00:07:51.570 --> 00:07:56.180 
such p k i such a public key
infrastructures includes as well

97
00:07:56.180 --> 00:07:59.180 
software components as
well hardware components

98
00:07:59.640 --> 00:08:03.040 
as a prisoner to
regulate the provision

99
00:08:03.550 --> 00:08:08.210 
distributions use and z
relocation of certificates

100
00:08:08.990 --> 00:08:12.990 
alls is centre at the center
of such peak i p guy

101
00:08:13.260 --> 00:08:16.440 
is c trusts under the
already mentioned is

102
00:08:16.960 --> 00:08:20.540 
but such interest and has
different functions

103
00:08:21.030 --> 00:08:23.740 
such a trust fund are as
different components

104
00:08:24.370 --> 00:08:27.470 
one component is the
registration authority

105
00:08:28.240 --> 00:08:32.740 
are a another component is a
certification authority ca

106
00:08:33.090 --> 00:08:36.640 
and one component is the
validation authority

107
00:08:38.730 --> 00:08:44.060 
here are a we show how is this
different copper components

108
00:08:44.060 --> 00:08:44.640 
work together

109
00:08:47.050 --> 00:08:51.490 
user who wants to verify
his her identity

110
00:08:51.950 --> 00:08:56.030 
at the registration
authority and submits

111
00:08:56.280 --> 00:08:59.920 
submit his are a public
key to user needs

112
00:09:01.390 --> 00:09:05.240 
fall for later communication
as certificate

113
00:09:05.550 --> 00:09:09.480 
and to cart to to get
such a a certificate

114
00:09:09.810 --> 00:09:16.020 
the user has to contact registration
authority and has to verify

115
00:09:16.270 --> 00:09:22.660 
that here you see and he has to
verify he has to submit his

116
00:09:22.680 --> 00:09:29.280 
public key so as a user registers
and in a second step then

117
00:09:29.430 --> 00:09:34.240 
the registration authority
transf error the look in data

118
00:09:34.520 --> 00:09:37.390 
so his identity data
and the public key

119
00:09:37.700 --> 00:09:43.120 
to his certification authority
to ces components a of c

120
00:09:43.510 --> 00:09:49.270 
a of c a a a trust center and then
the certification authority

121
00:09:49.570 --> 00:09:53.580 
creates a certificate
creates a certificate

122
00:09:53.790 --> 00:09:58.630 
signed certificate for the user
and then this certificate to

123
00:09:58.630 --> 00:10:05.700 
the user now the user has
his a a certificate

124
00:10:06.100 --> 00:10:09.670 
now is he was a can
use his certificate

125
00:10:10.000 --> 00:10:13.650 
for example for communication
with other partners

126
00:10:14.480 --> 00:10:20.060 
so the certificate is
a is sent together

127
00:10:20.490 --> 00:10:25.590 
with the message to user but
before we have to mention that

128
00:10:25.600 --> 00:10:30.810 
the certification authority
also a stalls certificate

129
00:10:31.280 --> 00:10:37.130 
or in the validation a authority
a component of its trust

130
00:10:38.750 --> 00:10:42.720 
as important as validation
authority that a user

131
00:10:43.550 --> 00:10:47.480 
or a service that receives
the certificate of the user

132
00:10:47.710 --> 00:10:52.640 
can check whether z a
certificate a is a a ok

133
00:10:53.900 --> 00:10:57.980 
so in no if the user wants to
communicate ones to communicate

134
00:10:57.980 --> 00:11:01.750 
for example was his online
bank and he starts

135
00:11:02.090 --> 00:11:07.550 
to as send a message together
with a certificate message

136
00:11:08.270 --> 00:11:13.050 
signature together with a
certificate to z a partner to the

137
00:11:13.050 --> 00:11:16.120 
online bank and then the
communication partner

138
00:11:16.440 --> 00:11:22.050 
a validates c certificate that
means the communication parma's

139
00:11:22.050 --> 00:11:26.850 
online bank checks is is a
a is this certificate ok

140
00:11:27.360 --> 00:11:32.630 
or is there something wrong was and
for that reason z a communication

141
00:11:32.630 --> 00:11:37.230 
partner sense certificate
z a validation authority

142
00:11:37.760 --> 00:11:42.550 
here a check c a signature
and get sorry as

143
00:11:42.830 --> 00:11:45.980 
the certificate as many
varied you are valid

144
00:11:47.820 --> 00:11:53.030 
and a is is a a validation check
can be done a on the basis

145
00:11:53.220 --> 00:11:55.960 
of c stored data
from the user

146
00:11:58.270 --> 00:12:03.050 
and if it's ok we have seen in z
if a in our a clip about digital

147
00:12:03.050 --> 00:12:07.870 
signature then communication can be
done z a certificate signature

148
00:12:07.870 --> 00:12:12.770 
can be decrypted and see a originality
of messages can be checked

149
00:12:14.380 --> 00:12:19.390 
the question is how such public key
infrastructures are organized

150
00:12:19.940 --> 00:12:24.190 
because one can easily imagine
that not possible to have

151
00:12:24.480 --> 00:12:28.550 
worldwide one only
one such trust and

152
00:12:30.840 --> 00:12:34.260 
beginning such a trust
under is organized

153
00:12:34.460 --> 00:12:39.070 
hierarchical is that means they
are different trust centers

154
00:12:39.260 --> 00:12:43.860 
in place for example the different
regions or different cities

155
00:12:44.630 --> 00:12:51.780 
e are in place and on top of this
network of such a trust and

156
00:12:51.780 --> 00:12:57.060 
as there is the root a c a is a
root certification authority

157
00:12:58.530 --> 00:13:02.500 
so if we user once to
verify his identity of an

158
00:13:02.830 --> 00:13:07.280 
e of for example such a of
of this or certification

159
00:13:07.630 --> 00:13:12.750 
authority as then he
checks the certificate

160
00:13:13.040 --> 00:13:17.030 
of ces or being in a million
certification authority

161
00:13:17.150 --> 00:13:24.890 
and it is signed by the
roots a root or c a

162
00:13:25.370 --> 00:13:31.940 
a is this is the top instance for
all the net work of a trust

163
00:13:31.940 --> 00:13:35.730 
and thus and when the user
trusts the root say

164
00:13:36.390 --> 00:13:41.140 
then the user also trust signature
of so root certification

165
00:13:41.140 --> 00:13:44.590 
authority and then he
trusts or see also

166
00:13:45.080 --> 00:13:52.430 
a certification authorities if
we look it into a a practical

167
00:13:52.430 --> 00:13:56.890 
application as an he i remind
you that pls as as l

168
00:13:57.190 --> 00:14:02.510 
a infrastructure is based on
a a usage of certificate

169
00:14:03.030 --> 00:14:07.750 
and this tls as as l a a
infrastructure is based

170
00:14:07.950 --> 00:14:11.550 
on such an hierarchical
public key infrastructure

171
00:14:12.140 --> 00:14:17.300 
so as a root certification
authority certificate are stored

172
00:14:17.480 --> 00:14:20.620 
in the browser or in
the operating system

173
00:14:20.910 --> 00:14:26.060 
so that it becomes easy to check
and can perform automatically

174
00:14:26.380 --> 00:14:30.240 
to check if there is a
a connection request

175
00:14:30.600 --> 00:14:33.930 
to ascend to establish
such a t as a connection

176
00:14:34.530 --> 00:14:38.570 
in a in the browser as
there is the root

177
00:14:38.770 --> 00:14:43.270 
say a certificate stalled
so for example a a when

178
00:14:43.360 --> 00:14:47.310 
one wants to establish client
wants to establish an eighty

179
00:14:47.310 --> 00:14:52.400 
pbs connection to an online
marketplace for example to

180
00:14:52.710 --> 00:14:58.340 
to a amazon then you see
here as he a as we see

181
00:14:58.340 --> 00:15:03.920 
here is the certificate
hierarchy then c verification

182
00:15:04.270 --> 00:15:07.060 
is done of the signature
of certificate of

183
00:15:07.360 --> 00:15:11.330 
amazonas of z a service
provider of the on and market

184
00:15:11.600 --> 00:15:14.790 
and this is done with
the has of free higher

185
00:15:15.060 --> 00:15:18.520 
level certificate and this
higher level certificate

186
00:15:18.740 --> 00:15:24.440 
comes in case of amazon from
semantic as security company

187
00:15:24.950 --> 00:15:29.670 
so this is ignition an of
says semantic certificate

188
00:15:29.970 --> 00:15:34.570 
is checked with the help of an
already stored and trusted root

189
00:15:34.590 --> 00:15:38.290 
say our certificate and this
rude cr fat if it cannot

190
00:15:38.560 --> 00:15:43.980 
that comes from verisign
in case of a amazon

191
00:15:44.810 --> 00:15:51.850 
so this can be considered as a
as establishment of a a trust

192
00:15:51.850 --> 00:15:57.980 
chain from z i'm as an a
from the as a certificate

193
00:15:58.210 --> 00:16:02.390 
to z a rude certificate
which is signed by amazon

194
00:16:03.820 --> 00:16:06.320 
this was examples as
an also works with

195
00:16:06.570 --> 00:16:10.470 
or with this with our marketplace
as online bangs and

196
00:16:10.680 --> 00:16:15.110 
a it services a if you
can reach with city as

197
00:16:17.030 --> 00:16:20.860 
we have this hierarchical organization
of the public key infrastructure

198
00:16:20.860 --> 00:16:24.410 
but there are different public
key infrastructures in place

199
00:16:25.030 --> 00:16:30.190 
and another idea of to make it
can we needn't for the user

200
00:16:30.210 --> 00:16:33.450 
to one side but on the other
side to guarantee security

201
00:16:33.980 --> 00:16:38.600 
is that it should be possible
to change to move from one

202
00:16:38.990 --> 00:16:41.470 
public key infrastructure
into another one

203
00:16:41.900 --> 00:16:46.450 
and the method that used for
that is cross certification

204
00:16:47.720 --> 00:16:51.480 
and cross certifications
idea is we have a route c

205
00:16:51.690 --> 00:16:56.080 
a a a from one public key
infrastructure we have a we have

206
00:16:56.080 --> 00:17:01.750 
a root ca from another a
public key infrastructure

207
00:17:02.120 --> 00:17:07.130 
and it's a sign each
other a certificates

208
00:17:08.220 --> 00:17:13.590 
so in this way for every
user for every user

209
00:17:14.080 --> 00:17:18.600 
he of one public key
infrastructure he he sees

210
00:17:18.880 --> 00:17:25.870 
that he can trust on z a certificate
of c alpha a public key

211
00:17:25.870 --> 00:17:30.570 
infrastructure so the instances
of one side trust so those

212
00:17:30.570 --> 00:17:34.870 
of the other size and simply
because effect because c

213
00:17:35.520 --> 00:17:39.790 
as c as the highest
authority in that security

214
00:17:40.140 --> 00:17:44.290 
or a chain sea routes say
as three recognized

215
00:17:44.300 --> 00:17:49.360 
as a in each other and of course
before one would say are as

216
00:17:49.380 --> 00:17:54.020 
i recognize and and an such
a cross certification

217
00:17:54.120 --> 00:17:58.010 
with other routes they are there
is a check whether the same

218
00:17:58.020 --> 00:18:02.710 
security level are
maintained as is that

219
00:18:02.930 --> 00:18:07.550 
the user really a which are used to
work in that public infrastructure

220
00:18:07.730 --> 00:18:12.170 
really you can also trust a
application services that are

221
00:18:12.570 --> 00:18:16.270 
certificate certified by the
other trust infrastructure

222
00:18:17.570 --> 00:18:21.530 
beside of says hierarchical
organization of the public key

223
00:18:21.530 --> 00:18:26.200 
infrastructure we have
also more a network

224
00:18:26.620 --> 00:18:31.230 
a in order to so canada
web of trust here

225
00:18:31.700 --> 00:18:36.120 
one user can sign so
users certificate

226
00:18:36.800 --> 00:18:41.940 
he can guarantee with his own
name that z a a and occasion

227
00:18:41.940 --> 00:18:47.030 
of see a public key and the name
of c use of the other users

228
00:18:47.290 --> 00:18:52.820 
as that they agree and one
can does is not only a

229
00:18:52.820 --> 00:18:58.120 
it's a bit mim is one a user one
can a induces with many users

230
00:18:58.470 --> 00:19:03.770 
and certificate and in
this way there is

231
00:19:04.030 --> 00:19:07.800 
acres is is there is
established a web of trust

232
00:19:08.050 --> 00:19:12.180 
so more also users sign
my is certificate

233
00:19:12.390 --> 00:19:17.210 
some more trust we'll see is that
so is for certain for other

234
00:19:17.210 --> 00:19:21.820 
people because other people when
they trust anyone who's as

235
00:19:21.820 --> 00:19:26.250 
sign my certificate then eighty
can trust service pick up and

236
00:19:26.250 --> 00:19:30.190 
they can trust me
so if user a if

237
00:19:30.440 --> 00:19:35.170 
if you say is known to use a b
and is a certificate of user

238
00:19:35.170 --> 00:19:40.390 
b a has been signed by users
see a can also trust see

239
00:19:40.640 --> 00:19:43.970 
a certificate of see you
see this in this picture

240
00:19:44.300 --> 00:19:48.340 
is this is for example an
application a in the organization

241
00:19:48.350 --> 00:19:51.630 
of sea a of the public
key infrastructure

242
00:19:51.900 --> 00:19:58.590 
of c trust infrastructure by pgp
pretty good privacy for securing

243
00:19:58.600 --> 00:20:00.010 
email communicate
