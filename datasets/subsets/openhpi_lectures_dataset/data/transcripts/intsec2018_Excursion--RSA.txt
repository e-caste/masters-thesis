WEBVTT

1
00:00:00.850 --> 00:00:02.859 
In this excursion we want to explain RSA.

2
00:00:04.377 --> 00:00:08.710 
RSA Was already mentioned in different places as a very popular

3
00:00:09.910 --> 00:00:11.499 
2 key encryption method.

4
00:00:12.100 --> 00:00:16.960 
And here it's not necessary for understanding, but it's good to have a feeling.

5
00:00:17.230 --> 00:00:21.640 
Here, we want to compute an example to understand how

6
00:00:21.880 --> 00:00:24.010 
this RSA is working.

7
00:00:24.270 --> 00:00:29.023 
RSA is really the most popular 2 Key encryption system.

8
00:00:29.410 --> 00:00:33.135 
It is widely used, it was developed 1977

9
00:00:36.160 --> 00:00:40.570 
and RSA is simply the initials of the names

10
00:00:40.930 --> 00:00:45.470 
of the inventors - Ron Rivest, Adi Shamir

11
00:00:45.550 --> 00:00:47.951 
and Leonard Adleman. Rivest and Shamir are famous

12
00:00:50.110 --> 00:00:54.324 
computer scientists whio designed hash value.

13
00:00:54.640 --> 00:00:55.640 
Adi Shamir is more of a crypt-analyst.

14
00:00:56.980 --> 00:00:58.816 
Ron Rivest is more of the encryption

15
00:01:02.650 --> 00:01:03.850 
method designer.

16
00:01:05.140 --> 00:01:08.227 
I mentioned already, all the 2 key encryption systems are based

17
00:01:10.030 --> 00:01:14.739 
on a difficult mathematical problem and the mathematical problem

18
00:01:16.150 --> 00:01:20.499 
RSA is based on, it's the factorisation of very large numbers

19
00:01:21.250 --> 00:01:26.110 
and the observation is if one has a really huge number with

20
00:01:27.280 --> 00:01:29.534 
hundreds of digits then it's very difficult to

21
00:01:31.870 --> 00:01:36.819 
find out whether this number is a prime number or whether this number

22
00:01:36.850 --> 00:01:40.249 
is a product of different prime numbers.

23
00:01:40.840 --> 00:01:45.629 
So, if the numbers to be checked are long enough,

24
00:01:46.180 --> 00:01:50.270 
then in a realistic time frame it is impossible

25
00:01:52.300 --> 00:01:53.549 
to answer these questions.

26
00:01:55.090 --> 00:01:59.549 
So, the solution cannot be solved

27
00:01:59.560 --> 00:02:03.250 
practically. This is the idea which makes you

28
00:02:04.270 --> 00:02:09.189 
which makes such such procedure secure, because

29
00:02:09.190 --> 00:02:13.989 
to break it to break RSA, one needs to find

30
00:02:13.990 --> 00:02:18.469 
one needs to be able to solve this mathematical problem, which

31
00:02:18.500 --> 00:02:21.909 
needs to be able to factories huge numbers.

32
00:02:23.020 --> 00:02:27.819 
So the installation, the product of two very large randomly

33
00:02:27.820 --> 00:02:33.160 
choose primes cannot be factored in a realistic time frame without

34
00:02:33.370 --> 00:02:35.860 
knowing the two prime factors.

35
00:02:37.990 --> 00:02:42.610 
Now I want to give an example of an RSA

36
00:02:42.730 --> 00:02:47.439 
encryption. And of course, the method works with huge

37
00:02:47.440 --> 00:02:51.849 
numbers here. Example I can illustrated only

38
00:02:52.070 --> 00:02:53.379 
with small numbers.

39
00:02:54.130 --> 00:02:56.369 
So what is the starting point as the starting point?

40
00:02:56.380 --> 00:02:58.210 
Are these two prime numbers?

41
00:02:58.820 --> 00:03:02.439 
There's two prime numbers which are chosen by the

42
00:03:03.580 --> 00:03:08.059 
sender. And then the factor is

43
00:03:08.060 --> 00:03:09.824 
the two prime numbers are multiplied

44
00:03:12.490 --> 00:03:14.830 
to each other to get the composite number.

45
00:03:15.220 --> 00:03:18.429 
So here in our case, we take two prime numbers.

46
00:03:18.430 --> 00:03:23.139 
Seventeen P equals seventeen who is thirty one and

47
00:03:23.320 --> 00:03:27.610 
calculate their product, calculate C and number

48
00:03:27.880 --> 00:03:32.330 
as a composite number computed out of the two prime numbers.

49
00:03:32.620 --> 00:03:36.879 
In this case, it's a very simple and small number is five hundred twenty seven

50
00:03:37.570 --> 00:03:40.929 
and this is equal to 17 times 31.

51
00:03:42.340 --> 00:03:45.525 
Then in the next step we have to calculate a special mathematical

52
00:03:47.500 --> 00:03:51.780 
functions as the so called Oola function

53
00:03:52.780 --> 00:03:54.789 
in case when a number is a product of two

54
00:03:57.400 --> 00:03:59.654 
prime numbers. This all of this oilor function

55
00:04:02.320 --> 00:04:06.849 
can be computed very simply because then because the

56
00:04:06.850 --> 00:04:11.610 
only function of a prime number equals to the prime number

57
00:04:11.620 --> 00:04:16.139 
minus one. So to compute the prime number of N C is

58
00:04:16.140 --> 00:04:20.730 
the function of and we have to compute a

59
00:04:21.279 --> 00:04:25.749 
simply P minus one times Q minus

60
00:04:25.750 --> 00:04:30.709 
one, and in our case seven P is seventeen,

61
00:04:30.710 --> 00:04:35.100 
Q is 13. So we can compute the Euler

62
00:04:35.230 --> 00:04:39.790 
function fee of our composite number and

63
00:04:39.970 --> 00:04:43.240 
simply by multiplying sixteen and thirty.

64
00:04:43.570 --> 00:04:45.820 
And the result is forty eight.

65
00:04:47.620 --> 00:04:51.790 
With by the way, with other numbers, it's much more difficult to compute the

66
00:04:52.060 --> 00:04:55.980 
Olavi function, but in that case, it's easy now.

67
00:04:56.320 --> 00:05:00.839 
Next step is to install what we need.

68
00:05:01.150 --> 00:05:06.249 
Now we have to generate key keypads for participants.

69
00:05:08.770 --> 00:05:12.940 
So let's compute to keep for a participant day

70
00:05:14.140 --> 00:05:18.610 
ideas, select the number, select the number that is smaller,

71
00:05:18.880 --> 00:05:23.769 
then often smaller than the Olavi

72
00:05:23.770 --> 00:05:28.249 
function and which is prime to do

73
00:05:28.570 --> 00:05:31.839 
all of the. That means there is no common factor.

74
00:05:33.790 --> 00:05:35.603 
Only one in our case we it was is 400

75
00:05:38.560 --> 00:05:42.549 
something. In our case we jus equal to 13

76
00:05:43.120 --> 00:05:47.859 
and then we can take this number

77
00:05:47.860 --> 00:05:52.270 
13 and 527 as a public key of a

78
00:05:52.870 --> 00:05:54.634 
says 527. This was the end, this was

79
00:05:57.370 --> 00:05:59.079 
near the end. You remember that.

80
00:06:02.160 --> 00:06:06.540 
Now we have to compute the corresponding private key,

81
00:06:07.050 --> 00:06:12.029 
and to this end, we calculate the multiplicative

82
00:06:12.330 --> 00:06:16.620 
inverse the to each with respect to

83
00:06:16.890 --> 00:06:21.059 
see fear had, that means a number

84
00:06:21.420 --> 00:06:26.639 
that is multiplied. We see a number that's multiplied with the modulo

85
00:06:27.000 --> 00:06:29.350 
a fee of an equal to one.

86
00:06:30.270 --> 00:06:34.800 
So and when we do this in our

87
00:06:35.130 --> 00:06:39.929 
example, the equal to thirty seven houses has this property

88
00:06:40.320 --> 00:06:43.649 
since E times D since 13.

89
00:06:43.890 --> 00:06:46.680 
This was E times 37.

90
00:06:47.040 --> 00:06:48.830 
Mott Modula.

91
00:06:49.410 --> 00:06:52.700 
The oil as a function of Ennis's was 480.

92
00:06:52.920 --> 00:06:57.270 
That's equal to one. So by means of this computation

93
00:06:57.570 --> 00:07:03.060 
we get 36 apair 37 527

94
00:07:03.240 --> 00:07:05.570 
as a private key of A.

95
00:07:06.150 --> 00:07:10.739 
So we have jouissance publicly and by means

96
00:07:10.740 --> 00:07:15.119 
of this computation, computing the

97
00:07:15.390 --> 00:07:19.829 
multiplicative inverse. We get the private key of it when exactly

98
00:07:19.830 --> 00:07:21.630 
here you see is the problem.

99
00:07:22.140 --> 00:07:24.394 
To compute this multiplicative inverse becomes

100
00:07:26.880 --> 00:07:31.139 
simple if one knows the BOA's prime factors

101
00:07:32.520 --> 00:07:37.470 
and it's very difficult if and it's almost impossible to compute

102
00:07:37.650 --> 00:07:41.939 
if it's a product of P and Q is a very

103
00:07:42.210 --> 00:07:46.829 
big number. So we stay here with our small numbers

104
00:07:47.040 --> 00:07:50.790 
to understand there is a there is a method.

105
00:07:52.860 --> 00:07:57.329 
What do we need at the end are only this three numbers D

106
00:07:57.780 --> 00:08:02.100 
and and so the public key

107
00:08:02.400 --> 00:08:06.680 
is E and then the private key is the and then

108
00:08:07.050 --> 00:08:11.759 
and now we can apply our arace a method we can apply

109
00:08:11.760 --> 00:08:15.690 
our as a method to to the

110
00:08:16.320 --> 00:08:20.879 
message. So let's consider the encryption

111
00:08:20.880 --> 00:08:23.967 
and the decryption with the public key or with the private keys

112
00:08:25.350 --> 00:08:28.110 
or to encrypt with the public decrypt with the private key.

113
00:08:28.770 --> 00:08:33.359 
Traviss. So we take a message and the RSA

114
00:08:33.360 --> 00:08:36.928 
method is a message of course is considered a number.

115
00:08:37.559 --> 00:08:42.119 
We can code it in a number of string and dual string stands for

116
00:08:42.120 --> 00:08:46.889 
a number. And the the encryption of that message

117
00:08:47.310 --> 00:08:51.959 
can be computed. Taking the no message consists of

118
00:08:52.560 --> 00:08:56.610 
up to the E and then Modula and

119
00:08:57.450 --> 00:08:59.010 
this is the encryption.

120
00:08:59.580 --> 00:09:04.539 
And of course the decryption consists when if one takes

121
00:09:04.540 --> 00:09:09.179 
the saver up to the module and then one gets

122
00:09:09.180 --> 00:09:13.200 
back, it's the message. So you see with the E

123
00:09:13.770 --> 00:09:17.190 
as well as and this was this was a public key.

124
00:09:17.490 --> 00:09:22.139 
We can encrypt a message and by means of D

125
00:09:22.170 --> 00:09:25.470 
and we can decrypt the message

126
00:09:27.390 --> 00:09:30.059 
in case we want to compute signature signature.

127
00:09:30.810 --> 00:09:35.370 
Then we have to encode the message that this was a hash of submitted

128
00:09:35.580 --> 00:09:40.109 
by means of the private key up to this so that everyone can

129
00:09:40.320 --> 00:09:44.580 
verify the digital signature by means of C

130
00:09:44.820 --> 00:09:46.094 
publicly and to assures us

131
00:09:49.290 --> 00:09:52.132 
here the message takes a message, takes a private key, for

132
00:09:54.000 --> 00:09:56.107 
example, for creating a signature to the up

133
00:09:58.470 --> 00:10:03.029 
to the module end and then to decrypt to verify

134
00:10:03.030 --> 00:10:07.350 
the signature, one has to take Sciver up to

135
00:10:08.060 --> 00:10:12.659 
a repeat message message siras every

136
00:10:12.660 --> 00:10:16.169 
time our considered in that case as numbers.

137
00:10:21.560 --> 00:10:25.669 
Now we want to apply this method

138
00:10:26.510 --> 00:10:30.580 
and show how we can use it, sending a message

139
00:10:31.280 --> 00:10:35.210 
so we have our communication partner, B and B once

140
00:10:35.720 --> 00:10:39.679 
send a message, four, five, six.

141
00:10:39.720 --> 00:10:43.659 
So remember, we consider messages, we encode messages as number.

142
00:10:43.670 --> 00:10:47.840 
So I have taken a very small message as a number, which

143
00:10:48.140 --> 00:10:50.710 
corresponds to the number 456.

144
00:10:52.430 --> 00:10:57.320 
What is he doing? B wants to encode this message

145
00:10:57.470 --> 00:10:59.379 
so that he is able to read it.

146
00:10:59.990 --> 00:11:03.920 
So what B is doing, B is taking the public key from A

147
00:11:04.610 --> 00:11:05.884 
this asserting 527 and use

148
00:11:09.080 --> 00:11:13.580 
this to encrypt the message for fifty six.

149
00:11:14.120 --> 00:11:18.739 
Encryption is easy by computing four hundred fifty six

150
00:11:19.040 --> 00:11:20.869 
to e model U.N.

151
00:11:21.050 --> 00:11:22.570 
and a few computers.

152
00:11:22.940 --> 00:11:27.710 
The cyber of 450 456

153
00:11:28.040 --> 00:11:29.690 
is four hundred forty seven.

154
00:11:31.220 --> 00:11:34.879 
The cyber isn't over the open Internet to a

155
00:11:36.080 --> 00:11:39.769 
A Getz's and a applies

156
00:11:40.850 --> 00:11:43.809 
his private key, private key.

157
00:11:43.850 --> 00:11:45.124 
The end was 37 537 and now

158
00:11:48.320 --> 00:11:53.570 
computers takes the cyber up to these up to 37,

159
00:11:54.350 --> 00:11:56.210 
five hundred twenty seven.

160
00:11:56.480 --> 00:12:00.919 
And a gets back the original

161
00:12:00.920 --> 00:12:02.799 
message, which was this.

162
00:12:03.260 --> 00:12:04.850 
Four hundred fifty six.

163
00:12:08.400 --> 00:12:12.749 
The correctness of our as a method is based on a

164
00:12:13.050 --> 00:12:16.690 
no no theoretic CRM.

165
00:12:17.310 --> 00:12:21.809 
This is a famous Fatma's little theorem and the

166
00:12:21.840 --> 00:12:24.682 
serum's says us for any AI and any number AI and any prime

167
00:12:26.490 --> 00:12:30.480 
P caecum is the result of A

168
00:12:31.440 --> 00:12:36.029 
to B minus one is equivalent

169
00:12:36.030 --> 00:12:38.219 
to one model P.

170
00:12:39.860 --> 00:12:44.210 
And this is true in all cases

171
00:12:44.720 --> 00:12:49.580 
when A is not a multiple of people, and the argument

172
00:12:50.150 --> 00:12:54.730 
is that if it is true that 80 times the is

173
00:12:54.740 --> 00:12:59.240 
equivalent to one model P minus one, Q minus one,

174
00:12:59.690 --> 00:13:04.399 
then there exists also in X was E times

175
00:13:04.400 --> 00:13:06.360 
the minus one, which is equal to X times

176
00:13:09.200 --> 00:13:11.179 
P minus one, Q minus one.

177
00:13:11.690 --> 00:13:15.209 
So, errors are is very famous and most popular.

178
00:13:15.590 --> 00:13:20.070 
Two key encryption. And here in this X girls, in this

179
00:13:20.090 --> 00:13:24.619 
excursion you could see how errors A is working and you could

180
00:13:24.620 --> 00:13:29.140 
also see why it's so popular because it's the complication is difficult,

181
00:13:29.150 --> 00:13:33.470 
but the scheme of computation is very simple.
