WEBVTT

1
00:00:06.060 --> 00:00:07.650 
Now let's have a closer look at cascading stylesheets.

2
00:00:09.420 --> 00:00:14.880 
Remember HTML follows a basic idea of the SGML language and

3
00:00:14.880 --> 00:00:20.130 
this basic idea of SGML was a separation between the document structure

4
00:00:20.350 --> 00:00:21.980 
and the document presentation.

5
00:00:23.420 --> 00:00:28.020 
SGML was responsible to describe the document structure and

6
00:00:28.020 --> 00:00:30.980 
there was a special formatting scripting language

7
00:00:31.550 --> 00:00:35.920 
DSSSL which can be used to define the layout.

8
00:00:37.310 --> 00:00:41.730 
When the beginning with the web HTML was defined,

9
00:00:42.340 --> 00:00:47.850 
there was no browser with graphical displays. So the first idea for the

10
00:00:48.250 --> 00:00:53.150 
web technology was to provide a mean for exchange experimental data

11
00:00:53.490 --> 00:00:57.210 
of physical experiments. So in the beginning

12
00:00:57.650 --> 00:00:59.660 
the designers of HTML

13
00:01:01.540 --> 00:01:07.930 
did not follow this idea of separating document description and layout description,

14
00:01:08.130 --> 00:01:12.590 
because assuming there is almost no layout questions

15
00:01:13.060 --> 00:01:16.760 
to be regulated. So they put some

16
00:01:18.250 --> 00:01:26.440 
layout layout controls inside of HTML and those violated the

17
00:01:26.440 --> 00:01:31.420 
basic idea of SGML to separate structure and layout.

18
00:01:32.780 --> 00:01:37.360 
Then later when the browsers occur with graphical interfaces,

19
00:01:37.790 --> 00:01:45.610 
when e-business was done in the internet, so the companies want to

20
00:01:46.340 --> 00:01:51.830 
define correct logos, they want to define nice websites,

21
00:01:52.910 --> 00:01:56.810 
they need layout mechanisms. So

22
00:01:57.810 --> 00:02:03.720 
in the continuing development of HTML, there was remembering

23
00:02:03.760 --> 00:02:08.650 
of this original idea of SGML to separate a structure and use

24
00:02:08.650 --> 00:02:15.600 
HTML only to describe the structure, and then to look for mean to describe layout.

25
00:02:17.520 --> 00:02:24.020 
This rapid grows of the web this led to the desire for an approximate document layout

26
00:02:24.380 --> 00:02:26.230 
that can be reproduced

27
00:02:27.030 --> 00:02:31.690 
in any kind of output media on small screens, on large screens

28
00:02:32.330 --> 00:02:38.080 
without you or in the printing media, and those cascading stylesheets

29
00:02:38.470 --> 00:02:40.270 
CSS were developed.

30
00:02:41.960 --> 00:02:44.290 
CSS is an independent formatting

31
00:02:45.010 --> 00:02:51.280 
description language. So by means of stylesheets layout can be described

32
00:02:51.420 --> 00:02:56.130 
and by means of HTML, the document structure could be developed.

33
00:02:58.220 --> 00:03:05.440 
So what is needed in HTML? The structural elements are defined- headline, paragraph

34
00:03:06.930 --> 00:03:12.300 
and by means of the description, by means of stylesheets, it was possible

35
00:03:12.500 --> 00:03:18.240 
to assign to this different structure element, different layout

36
00:03:19.780 --> 00:03:22.120 
definitions.

37
00:03:23.370 --> 00:03:28.140 
So the stylesheets that we are created with a cascading stylesheet,

38
00:03:28.470 --> 00:03:34.280 
say allow an uniform layout in related HTML documents. There is one

39
00:03:34.480 --> 00:03:39.120 
source HTML document and for the different

40
00:03:39.700 --> 00:03:40.800 


41
00:03:42.480 --> 00:03:46.730 
output devices different layouts could be described.

42
00:03:47.320 --> 00:03:50.620 
This can be done by a cascading stylesheets. One can

43
00:03:51.680 --> 00:03:57.790 
have hierarchies of cascading stylesheets. So as a browser, producer

44
00:03:58.120 --> 00:04:02.450 
as a browser manufacturer, they have an idea how to display a

45
00:04:02.590 --> 00:04:07.540 
document. They need such ideas because if see also

46
00:04:08.290 --> 00:04:10.290 
does not give a characterization,

47
00:04:11.020 --> 00:04:16.120 
the browser has to display the document. But also the browser can create layout

48
00:04:16.390 --> 00:04:21.780 
IDs and describe layout IDs and this is possible with a cascading stylesheet.

49
00:04:23.210 --> 00:04:29.470 
So a document can be by means of stylesheets designed according to the wishes

50
00:04:29.790 --> 00:04:34.900 
and the needs of the author as well of the user, for example the user can

51
00:04:35.190 --> 00:04:41.730 
request to have large font size because as difficult with reading

52
00:04:42.180 --> 00:04:46.410 
on a desktop. This is a question of layout and can be

53
00:04:47.190 --> 00:04:49.680 
regulated by means of stylesheets.

54
00:04:50.990 --> 00:04:54.820 
And what is also important, what was also possible by means of

55
00:04:54.820 --> 00:04:58.000 
introducing the stylesheets were that styles

56
00:04:58.540 --> 00:05:05.680 
can be reused across many different documents, so that a website of one provider

57
00:05:06.080 --> 00:05:11.950 
of all the different pages that they have same similar layout. So if

58
00:05:13.370 --> 00:05:17.910 
a provider of said information is thinking, 'oh I would like

59
00:05:17.910 --> 00:05:21.180 
to have a new layout', then he does not

60
00:05:22.540 --> 00:05:25.900 
need to touch the HTML description of the documents.

61
00:05:26.410 --> 00:05:27.100 
The only thing

62
00:05:28.410 --> 00:05:33.500 
he or she has to do is to a define a new stylesheet.

63
00:05:35.620 --> 00:05:40.840 
Here is a short picture about the use of a stylesheet. The

64
00:05:42.290 --> 00:05:46.280 
source with the content of the document and with the structure description

65
00:05:46.550 --> 00:05:50.270 
is given by means is described by means of HTML.

66
00:05:50.780 --> 00:05:55.860 
And here we have different stylesheets that can be provided by the author

67
00:05:56.470 --> 00:06:00.630 
that can be provided by the browser, manufacturer, it can be

68
00:06:00.630 --> 00:06:02.190 
provided by the user .

69
00:06:02.810 --> 00:06:08.080 
There could be different authors and these information

70
00:06:08.730 --> 00:06:10.990 
were put together and then

71
00:06:11.740 --> 00:06:17.300 
the HTML document can be displayed, for example on different

72
00:06:17.300 --> 00:06:23.020 
output media, and by means of certain stylesheets exactly suited to

73
00:06:23.340 --> 00:06:30.850 
describe the layout on one output media can be used to adapt one document

74
00:06:31.110 --> 00:06:33.800 
to the different display situation.

75
00:06:36.230 --> 00:06:43.810 
Cascading stylesheets offer direct addition to HTML and since individual

76
00:06:44.150 --> 00:06:48.950 
HTML comments with output media specific

77
00:06:49.370 --> 00:06:54.250 
layout properties. So their structural element in the cascading stylesheets,

78
00:06:54.490 --> 00:06:57.780 
the layout of this element can be described.

79
00:06:58.970 --> 00:07:02.410 
Main properties of cascading stylesheets are, they

80
00:07:03.370 --> 00:07:09.810 
can be used to provide an exact definition of the layout of an HTML dcument

81
00:07:10.680 --> 00:07:14.620 
in adaption to different output media, for example printing

82
00:07:14.620 --> 00:07:20.490 
layout and comments, comments for control of artificial voice synthesis could be used,

83
00:07:20.650 --> 00:07:23.160 
for example for people that are

84
00:07:24.360 --> 00:07:29.240 
blind. It's possible to provide the possibility that the document

85
00:07:30.040 --> 00:07:33.980 
is that someone reads the document and the document is spoken

86
00:07:34.100 --> 00:07:35.230 
and is not displayed.

87
00:07:36.100 --> 00:07:43.340 
Then the cascading stylesheets for the opportunity of an central layout management.

88
00:07:43.450 --> 00:07:49.330 
I just mentioned a large website with many different documents that are provided

89
00:07:49.610 --> 00:07:55.980 
from one provider. For example all the documents that are provided in OpenHPI.

90
00:07:56.160 --> 00:08:01.430 
That is a similar layout and this is possible to

91
00:08:02.000 --> 00:08:06.880 
define and to manage with cascading stylesheets.

92
00:08:08.800 --> 00:08:13.860 
If we look to the history of the cascading stylesheets, then you remember

93
00:08:14.220 --> 00:08:19.250 
that the first version of cascading stylesheets Cascading

94
00:08:19.250 --> 00:08:20.790 
Stylesheets version 1.0

95
00:08:21.410 --> 00:08:25.720 
was released in 1996 together with the HTML 4.0

96
00:08:26.140 --> 00:08:28.990 
standard. It was released by the

97
00:08:29.540 --> 00:08:34.430 
World Wide Web Consortium. Then the next version of cascading

98
00:08:34.430 --> 00:08:36.120 
stylesheets 2.0. They were

99
00:08:38.410 --> 00:08:42.230 
published in 1998, and they offer

100
00:08:42.890 --> 00:08:47.200 
desired of output on different media types, print and voice

101
00:08:47.200 --> 00:08:54.620 
output as well as a pixel accurate- a pixel-accurate positioning of integrated objects.

102
00:08:55.100 --> 00:08:58.030 
So the author could exactly

103
00:08:59.420 --> 00:09:03.810 
describe the position of an element of the website.

104
00:09:05.630 --> 00:09:11.430 
Problem at that time was that the browser manufacturer did not implement all the

105
00:09:11.610 --> 00:09:18.340 
cascading stylesheet controls. So some were implemented and some were not implemented

106
00:09:18.600 --> 00:09:25.300 
so that many of the browsers did not always work standard compliant.

107
00:09:27.090 --> 00:09:30.450 
For that reason in 2009, the World Wide Web

108
00:09:30.450 --> 00:09:35.590 
Consortium adopted an intermediate version. This was

109
00:09:35.990 --> 00:09:41.040 
cascading stylesheets 2.1 as a candidate recommendation

110
00:09:41.660 --> 00:09:48.090 
in order to correct irregularities. And the idea was to describe

111
00:09:48.280 --> 00:09:54.210 
a least common denominator of all the different browsers, to give

112
00:09:54.320 --> 00:10:00.410 
the author the guarantee that if he uses the elements of the

113
00:10:00.410 --> 00:10:05.010 
cascading stylesheet version 2.1, then almost all

114
00:10:05.630 --> 00:10:08.320 
browsers are able to

115
00:10:09.020 --> 00:10:11.510 
design and display this in the correct way.

116
00:10:13.020 --> 00:10:14.190 
But in the same time,

117
00:10:14.940 --> 00:10:21.060 
the development was started to create a cascading cascading stylesheet version 3.

118
00:10:21.760 --> 00:10:27.010 
And the basic idea was to provide a version

119
00:10:27.650 --> 00:10:31.110 
cascading stylesheet version with a modular structure.

120
00:10:31.720 --> 00:10:34.330 
So the specification phase is

121
00:10:35.120 --> 00:10:41.270 
completed for most parts of this new version of cascading stylesheets and

122
00:10:41.810 --> 00:10:43.820 
some browser manufacturers

123
00:10:44.430 --> 00:10:49.500 
implemented a big part of this World Wide Web

124
00:10:50.210 --> 00:10:55.370 
recommendation of the World Wide Web Consortium. So this is the

125
00:10:55.520 --> 00:10:58.110 
successor which comes into

126
00:10:58.740 --> 00:11:00.010 
daily application now.

127
00:11:02.410 --> 00:11:06.350 
Now we have the HTML document and we have the cascading stylesheet

128
00:11:06.350 --> 00:11:10.540 
and the question is how to connect these two documents because

129
00:11:10.540 --> 00:11:14.910 
both information are needed to display a document's -structural

130
00:11:14.910 --> 00:11:17.290 
information as well as layout information.

131
00:11:18.280 --> 00:11:24.420 
So stylesheets can be connected with an HTML document in different ways.

132
00:11:26.000 --> 00:11:29.920 
First way is to provide inline definition

133
00:11:30.380 --> 00:11:35.530 
of HTML elements with some style attributes. For example

134
00:11:35.980 --> 00:11:39.110 
here description of the style with font

135
00:11:39.890 --> 00:11:43.670 
description, then the text that

136
00:11:44.360 --> 00:11:48.910 
what does it mean in this board and this is possible in this

137
00:11:48.910 --> 00:11:53.170 
way to describe rules which explain the

138
00:11:53.590 --> 00:11:57.570 
layout, which is assigned to certain structural element of the

139
00:11:58.580 --> 00:12:03.670 
HTML document. And the second way the inline definition of the second way is

140
00:12:03.950 --> 00:12:08.570 
that a stylesheet can be find within an HTML document.

141
00:12:09.330 --> 00:12:12.410 
This is possible by using the style tag

142
00:12:12.940 --> 00:12:15.580 
but to say it clearly, is this option

143
00:12:16.290 --> 00:12:20.830 
does not follow the idea of the strict separation between document

144
00:12:20.830 --> 00:12:25.490 
structure and presentation because HTML should only describe

145
00:12:25.600 --> 00:12:26.360 
the structure.

146
00:12:29.290 --> 00:12:34.100 
This approach with the stylesheets inside an HTML document is problematic.

147
00:12:34.550 --> 00:12:41.350 
You remember we want to change stylesheets to change the layout of the document,

148
00:12:42.020 --> 00:12:47.770 
and the idea was doing this not to touch the HTML document

149
00:12:47.770 --> 00:12:51.260 
but if the style informations, if the style sheets are defined

150
00:12:51.260 --> 00:12:55.370 
inside the HTML document, the HTML document has to be touched.

151
00:12:56.790 --> 00:13:00.290 
And this is the most important

152
00:13:01.260 --> 00:13:07.130 
way to connect HTML documents and cascading stylesheets is to

153
00:13:07.980 --> 00:13:14.510 
integrate all the stylesheet rules in a separate file

154
00:13:15.410 --> 00:13:17.110 
and then to link

155
00:13:18.550 --> 00:13:24.930 
the HTML document to this cascading stylesheet. The link command you remember

156
00:13:25.860 --> 00:13:33.090 
here is usable. It was an invisible link. It can be used to

157
00:13:33.820 --> 00:13:40.160 
to point from the HTML document to the corresponding stylesheet with all the

158
00:13:40.410 --> 00:13:47.030 
rules how to format the structural elements of the HTML document.

159
00:13:50.000 --> 00:13:51.510 
It's also possible to

160
00:13:52.130 --> 00:13:57.520 
combine both. To define some styles inside the document and

161
00:13:57.870 --> 00:14:03.350 
then to connect it to other style information in an external document. But

162
00:14:04.790 --> 00:14:10.630 
in this way, the local definition is applied before the global

163
00:14:11.040 --> 00:14:15.600 
definition, but best is to concentrate all the

164
00:14:17.080 --> 00:14:21.480 
formatting, all the layout information in a separate style file.

165
00:14:24.370 --> 00:14:27.450 
Let's have a short look on the syntax of this

166
00:14:27.890 --> 00:14:30.100 
cascading stylesheet language.

167
00:14:30.910 --> 00:14:36.560 
Castigating stylesheets that are consists of a collection of rules.

168
00:14:37.120 --> 00:14:43.810 
And this rules can be applied to the corresponding HTML document.

169
00:14:44.810 --> 00:14:49.860 
Such a stylesheet rule, for example, here is one

170
00:14:49.860 --> 00:14:53.210 
given you remember H1. As this was a

171
00:14:54.380 --> 00:14:55.810 
description of a headline

172
00:14:57.650 --> 00:15:03.050 
and here with the description was a cascading stylesheet rule

173
00:15:03.110 --> 00:15:06.870 
which says such headlines in this hierarchy level

174
00:15:07.310 --> 00:15:10.720 
they have to be displayed in blue language.

175
00:15:12.190 --> 00:15:17.560 
If we have a closer look to this rule, then we see it consists

176
00:15:17.650 --> 00:15:19.990 
of a so called 'selector'

177
00:15:20.920 --> 00:15:23.670 
and often 'declaration'.

178
00:15:25.760 --> 00:15:30.230 
A selector explains which structural element

179
00:15:30.830 --> 00:15:34.050 
the rule is directed to

180
00:15:34.710 --> 00:15:37.360 
and the declaration gives the

181
00:15:38.080 --> 00:15:42.790 
description what to do. So this elector indicates there is a

182
00:15:43.670 --> 00:15:47.770 
headline the first hierarchy level and the declaration tells

183
00:15:47.950 --> 00:15:49.250 
such type of headlines are

184
00:15:50.700 --> 00:15:52.810 
to be displayed in blue color.

185
00:15:54.410 --> 00:15:59.940 
Now it's very difficult if you have in all the elements to

186
00:16:00.080 --> 00:16:04.790 
describe a cascading stylesheet rule. For that reason

187
00:16:07.940 --> 00:16:10.700 
there is an inheritance concept.

188
00:16:11.340 --> 00:16:17.630 
So cascading stylesheet formatting can be inherited from HTML

189
00:16:18.150 --> 00:16:24.340 
elements in embedded elements. That means all HTML elements that belong

190
00:16:24.470 --> 00:16:28.750 
to the document subtree that is rooted in an element,

191
00:16:29.670 --> 00:16:32.890 
they inherit the formatting

192
00:16:33.620 --> 00:16:36.410 
information. Here is an example.

193
00:16:37.520 --> 00:16:44.770 
You see here the description of the HTML document. You can see the

194
00:16:45.310 --> 00:16:51.010 
corresponding stylesheet information and here is the display of

195
00:16:52.440 --> 00:16:55.960 
this document how it occurs on

196
00:16:57.030 --> 00:16:59.510 
on screen and you see

197
00:17:00.380 --> 00:17:06.870 
it starts with red and all such elements are displayed in red

198
00:17:07.300 --> 00:17:11.080 
up to the moment an element gets an own

199
00:17:11.970 --> 00:17:15.460 
rule description, say with a green color or others.

200
00:17:20.500 --> 00:17:25.520 
Let's have a closer look to declarations, cascading stylesheets declarations. They

201
00:17:25.740 --> 00:17:33.190 
contain the actual formatting specification and assigns one or more values

202
00:17:33.380 --> 00:17:38.720 
to a property. So the possible formatting specifications refer

203
00:17:38.780 --> 00:17:41.860 
to the following elements, refer to the font,

204
00:17:42.830 --> 00:17:46.550 
font type, font size, font highlighting,

205
00:17:47.240 --> 00:17:51.370 
refer to spacing based on all types of HTML

206
00:17:51.820 --> 00:17:55.610 
elements, they referring to position

207
00:17:56.450 --> 00:18:00.710 
based on all types of elements, they referring to pictures

208
00:18:01.490 --> 00:18:07.960 
based on their integration in a text. And the specification refer to

209
00:18:08.230 --> 00:18:14.910 
colors and backgrounds based on all types of HTML documents.

210
00:18:16.890 --> 00:18:21.470 
The selector limits the potential scope of particular declarations. So the

211
00:18:23.120 --> 00:18:25.040 
formatting instructions.

212
00:18:25.770 --> 00:18:30.480 
They are different types of selectors. They are class and ID selector.

213
00:18:31.590 --> 00:18:35.270 
They limit the valid area of certain elements

214
00:18:35.860 --> 00:18:37.750 
in corresponding element classes.

215
00:18:38.410 --> 00:18:40.980 
Then we have attribute selector.

216
00:18:41.600 --> 00:18:48.280 
Here they provide formatting instructions which are controlled by attributes.

217
00:18:48.870 --> 00:18:52.130 
We have context related selector.

218
00:18:53.070 --> 00:18:58.470 
They limit inheritance range of formatting instructions.

219
00:18:59.070 --> 00:19:01.390 
And we have external selector,

220
00:19:02.260 --> 00:19:04.610 
also called pseudo elements,

221
00:19:05.460 --> 00:19:09.500 
which apply to elements that are not part of the HTML

222
00:19:10.170 --> 00:19:14.450 
document, but which are part of the context.

223
00:19:15.030 --> 00:19:17.040 
The context of this document

224
00:19:20.090 --> 00:19:23.680 
limits the potential scope of the declaration to show the

225
00:19:24.340 --> 00:19:29.050 
hand of some examples. For example we have a standard selector

226
00:19:29.210 --> 00:19:32.760 
'p' was a paragraph, and then there is

227
00:19:34.250 --> 00:19:36.930 
a declaration that the

228
00:19:37.580 --> 00:19:41.040 
attribute is given the color should be red- the attribute as

229
00:19:41.040 --> 00:19:47.770 
well as the value. And then all the text inside the paragraph are displayed

230
00:19:47.880 --> 00:19:52.260 
as red text. The attribute selector

231
00:19:52.870 --> 00:19:57.350 
'p' (small) and then a description of the font size

232
00:19:57.970 --> 00:20:00.830 
means that these are

233
00:20:01.440 --> 00:20:05.940 
for example data of a footnote which have to be displayed in a small way.

234
00:20:06.720 --> 00:20:11.390 
One can even explain exactly in which size

235
00:20:11.830 --> 00:20:17.930 
or one can describe this also as an attribute selector in this way

236
00:20:18.700 --> 00:20:25.770 
p font size equals small and then a description of what small means.

237
00:20:28.260 --> 00:20:30.430 
Here is an example of a context selector,

238
00:20:31.170 --> 00:20:35.950 
which tells that here in such a table

239
00:20:36.690 --> 00:20:40.330 
there is a certain part of the table

240
00:20:41.900 --> 00:20:45.550 
displayed which has to be displayed

241
00:20:46.160 --> 00:20:47.690 
in blue color.

242
00:20:49.460 --> 00:20:55.710 
So the paragraphs 'p' within a table cell is

243
00:20:56.170 --> 00:20:59.330 
a td are entered in blue.

244
00:21:03.100 --> 00:21:08.230 
Here is a class selector to give more examples of selector

245
00:21:08.510 --> 00:21:11.220 
that limits the potential scope of the declaration.

246
00:21:11.910 --> 00:21:15.770 
With the class selector p dot footnote

247
00:21:16.460 --> 00:21:21.070 
font family and font size means that this

248
00:21:22.710 --> 00:21:27.830 
paragraph is considered and it has to be displayed as a foodnote,

249
00:21:28.130 --> 00:21:34.120 
a footnote with a special type is a special font type and font size.

250
00:21:34.360 --> 00:21:38.020 
We have Id Selectors.

251
00:21:39.090 --> 00:21:45.240 
Example a # imprint a font weight bold,

252
00:21:46.290 --> 00:21:53.470 
that this part of the document that is characterized by the ID Imprint

253
00:21:55.440 --> 00:22:00.960 
are displayed in this describe this font

254
00:22:01.560 --> 00:22:03.160 
which is described here and

255
00:22:03.860 --> 00:22:06.150 
that it has to be displayed in bold.

256
00:22:07.170 --> 00:22:12.260 
Then we have reminder. These are class attributes that can be

257
00:22:12.260 --> 00:22:14.490 
the same with multiple elements,

258
00:22:15.160 --> 00:22:19.790 
but you remember the ID must be unique within a document.

259
00:22:20.740 --> 00:22:24.060 
If one refers to an ID, that should be

260
00:22:24.460 --> 00:22:26.890 
unique within the complete document.

261
00:22:28.460 --> 00:22:32.350 
Then we have to mention that class and ID Selectors can

262
00:22:32.350 --> 00:22:35.040 
also be specified without an element.

263
00:22:35.660 --> 00:22:41.120 
And in this way apply for different elements and this is here

264
00:22:41.220 --> 00:22:45.740 
an example of such class and ID selector,

265
00:22:46.150 --> 00:22:48.780 
which is specific without an element.

266
00:22:51.210 --> 00:22:55.380 
Important feature of cascading stylesheet is that it is possible

267
00:22:55.930 --> 00:23:02.530 
to exact to describe the exact positions of certain elements.

268
00:23:04.240 --> 00:23:09.620 
So prior to the introduction of cascading stylesheets version 2, the HTML

269
00:23:09.970 --> 00:23:14.030 
elements could not be positioned exactly in the window screen.

270
00:23:14.540 --> 00:23:19.100 
And of course this provides a lot of problems for the web designer

271
00:23:19.150 --> 00:23:23.970 
which came up with a nice design but there was no possibility

272
00:23:23.970 --> 00:23:27.180 
to exact describe the position of the different parts.

273
00:23:28.100 --> 00:23:34.110 
So as a browser manufacturer solve this problem and try to serve this problem.

274
00:23:34.430 --> 00:23:40.670 
So with a Netscape Navigator 4.0, a subset of cascading

275
00:23:40.670 --> 00:23:43.950 
stylesheets 1.0 was implemented

276
00:23:44.390 --> 00:23:49.390 
with the proprietary cascading stylesheet extensions. This is the

277
00:23:49.870 --> 00:23:56.310 
CSS-P. So it provides mean for a special positioning

278
00:23:56.860 --> 00:23:58.510 
and it provides

279
00:24:01.060 --> 00:24:07.410 
possibilities to describe this exact position inside and cascading stylesheet.

280
00:24:08.240 --> 00:24:12.630 
And this mechanism origin originally developed by

281
00:24:13.420 --> 00:24:15.590 
the designers of Netscape Navigator

282
00:24:16.240 --> 00:24:20.220 
convinced the World Wide Web consortium, so

283
00:24:20.630 --> 00:24:24.960 
they published and said this is a good idea, it should be

284
00:24:25.870 --> 00:24:28.840 
possible to use this extra

285
00:24:29.930 --> 00:24:36.330 
extension also should be implemented

286
00:24:36.440 --> 00:24:40.940 
by other browser designers. So cascading stylesheet version

287
00:24:40.940 --> 00:24:45.800 
2.0 adopted the proposed mechanism of this CSS-P

288
00:24:46.550 --> 00:24:50.770 
and from that it is possible to

289
00:24:51.530 --> 00:24:56.380 
describe exact positioning of elements in a web page.

290
00:24:57.710 --> 00:24:59.280 
Furthermore,

291
00:25:00.590 --> 00:25:04.690 
now it's possible with cascading style 2.0 and this mechanism

292
00:25:05.010 --> 00:25:09.150 
to align html elements relative to each other.

293
00:25:09.620 --> 00:25:13.770 
Extend them and define text flow and overlapping

294
00:25:14.380 --> 00:25:15.230 
and other things.

295
00:25:18.800 --> 00:25:23.200 
Let's have a look to the cascading style sheet version 3.

296
00:25:24.890 --> 00:25:30.870 
They provide in addition to what was provided by the earlier

297
00:25:30.870 --> 00:25:37.090 
versions of cascading stylesheet, a range of dynamic selectors.

298
00:25:37.780 --> 00:25:42.250 
For example here and now it is possible to described relative

299
00:25:43.820 --> 00:25:47.990 
elements to each other. For example there is a possibility to

300
00:25:48.010 --> 00:25:53.820 
assign and lay out a specification to the nth child of an element.

301
00:25:54.370 --> 00:25:58.490 
You remember the HTML document. If you

302
00:25:59.250 --> 00:26:03.290 
display it in the right way with a different mark ups, then

303
00:26:03.310 --> 00:26:05.410 
you see a document tree.

304
00:26:06.120 --> 00:26:08.810 
And in this document tree one can

305
00:26:09.410 --> 00:26:14.850 
use the tree structure for navigation. So one can describe, for example

306
00:26:15.110 --> 00:26:18.220 
the 'n' and the 'n' could be a number. A special number and

307
00:26:19.360 --> 00:26:23.670 
it can also be described by a formula so that it's possible

308
00:26:23.870 --> 00:26:29.240 
for example to design to the fourth child of an element, in

309
00:26:29.240 --> 00:26:34.820 
this case the element 'e'. A certain layout property one can have

310
00:26:34.820 --> 00:26:38.590 
similar selectors for example the nth last child.

311
00:26:39.060 --> 00:26:43.190 
So this is the nth child counted from the last.

312
00:26:43.810 --> 00:26:50.440 
The nth child of a certain type or the nth child element counted from the last

313
00:26:50.610 --> 00:26:56.160 
so you can in the document tree describe certain positions and

314
00:26:56.300 --> 00:26:59.470 
assign by means of cascading stylesheets version 3

315
00:26:59.960 --> 00:27:02.260 
layout properties to this element.

316
00:27:03.390 --> 00:27:05.490 
Instead of number, instead of

317
00:27:06.380 --> 00:27:12.840 
n, also formulas can be used, for example here as nth of a type.

318
00:27:13.930 --> 00:27:20.140 
Nth of a type child and then instead of n, there could be a 2n,

319
00:27:20.390 --> 00:27:23.180 
that means on every second

320
00:27:24.820 --> 00:27:29.950 
line element for example if you apply it to a table or a certain

321
00:27:31.380 --> 00:27:35.480 
list, then certainly out

322
00:27:36.300 --> 00:27:38.010 
property can be assigned.

323
00:27:40.790 --> 00:27:46.780 
To finish this rough description of cascading stylesheets, we have a moment to

324
00:27:48.760 --> 00:27:53.400 
consider the situation. If we have multiple stylesheets, if we have

325
00:27:53.510 --> 00:27:56.780 
multiple and different layout

326
00:27:57.950 --> 00:28:00.740 
descriptions of the same element.

327
00:28:03.420 --> 00:28:07.690 
Indeed one of the basic ideas of cascading stylesheet was it

328
00:28:09.650 --> 00:28:14.250 
is possible to apply different multiple stylesheets on one document.

329
00:28:14.650 --> 00:28:18.020 
Stylesheets that are described by the authors, stylesheets

330
00:28:18.020 --> 00:28:20.300 
that are described by the browser manufacturer

331
00:28:20.820 --> 00:28:23.300 
stylesheets that are described by the user.

332
00:28:24.150 --> 00:28:28.310 
So that possible cascading of the stylesheets

333
00:28:29.270 --> 00:28:32.900 
involves these three different

334
00:28:34.590 --> 00:28:37.240 
stylesheets. So for example the browser stylesheets.

335
00:28:38.080 --> 00:28:41.100 
The browser at the end has to display and document and if

336
00:28:42.190 --> 00:28:47.860 
it does not completely characterize how the document should be displayed,

337
00:28:48.250 --> 00:28:53.880 
if the author does not describe for every element that occurs in the document

338
00:28:54.270 --> 00:28:59.640 
and layout characterization, then the browser has to display

339
00:28:59.640 --> 00:29:01.470 
it has to decide how to display it.

340
00:29:02.100 --> 00:29:06.040 
And this can be described internally by means of browser

341
00:29:06.940 --> 00:29:12.560 
stylesheets. And of course it's possible that the user influences

342
00:29:12.660 --> 00:29:18.350 
the layout of a document. I mentioned already users have to wish for example

343
00:29:18.640 --> 00:29:23.760 
to have big letters, because difficult to read, or to have small

344
00:29:23.770 --> 00:29:26.500 
letters, to have a fast orientation.

345
00:29:27.150 --> 00:29:32.140 
So the browsers offer the user of course its only a limited

346
00:29:32.560 --> 00:29:38.410 
number, but offers the user the possibility for adjusting a

347
00:29:38.410 --> 00:29:43.080 
document representation to its own wishes. So

348
00:29:44.730 --> 00:29:48.320 
this is described by means of user stylesheets.

349
00:29:48.810 --> 00:29:51.300 
And of course if there is a conflict,

350
00:29:52.320 --> 00:29:56.270 
if there is a browser stylesheet, and if the user stylesheet

351
00:29:56.690 --> 00:30:00.990 
which is designed to the same element different layout

352
00:30:01.920 --> 00:30:08.390 
layout descriptions then the user priority

353
00:30:08.700 --> 00:30:11.920 
is stylesheet should be higher than

354
00:30:13.560 --> 00:30:14.620 
that of the browser stylesheet.

355
00:30:17.090 --> 00:30:21.430 
And then perhaps the most important class for a

356
00:30:22.520 --> 00:30:27.360 
stylesheets, foreign document are stylesheets which are described by the author.

357
00:30:28.060 --> 00:30:32.410 
So the author have great freedom in layout design. They

358
00:30:33.790 --> 00:30:35.660 
have very clear graphic

359
00:30:36.700 --> 00:30:41.430 
ideas how to display a document. So they can use stylesheets

360
00:30:41.520 --> 00:30:44.350 
to do this and they can do this for example

361
00:30:45.150 --> 00:30:47.010 
also with different style sheets

362
00:30:47.850 --> 00:30:50.940 
for the different pages but also for one page.

363
00:30:52.360 --> 00:30:55.780 
There is a modular stylesheet organization.

364
00:30:56.180 --> 00:31:00.760 
There are hierarchical stylesheet organization and there are

365
00:31:00.910 --> 00:31:04.900 
alternative style sheets for example for different presentation forms.

366
00:31:05.300 --> 00:31:14.240 
The author have the possibility to play with and to use different types of organization

367
00:31:14.810 --> 00:31:22.810 
to describe the layout of the document in a way he

368
00:31:24.210 --> 00:31:28.280 
has designed it or he wants to get it displayed.

369
00:31:30.280 --> 00:31:34.490 
Now in the moment if there are different stylesheets

370
00:31:35.230 --> 00:31:40.440 
display conflicts can occur because the author can assign format

371
00:31:41.820 --> 00:31:48.530 
rules to an element. The user can design different rules and

372
00:31:48.840 --> 00:31:50.910 
the rules may contradict.

373
00:31:52.060 --> 00:31:56.790 
So using multiple stylesheets can lead to display conflicts.

374
00:31:57.010 --> 00:32:00.270 
And for that reason we need

375
00:32:01.220 --> 00:32:07.370 
rules how to resolve such conflicts and such rules are defined

376
00:32:07.370 --> 00:32:10.490 
in cascading stylesheets and the rules

377
00:32:11.020 --> 00:32:15.290 
are the following. Rules have to performed by a browser because

378
00:32:15.290 --> 00:32:19.320 
a browser has to decide what to display in which way.

379
00:32:20.230 --> 00:32:22.190 
So first what the browser has to do is,

380
00:32:23.190 --> 00:32:27.470 
it has to find all the relevant rules that

381
00:32:28.250 --> 00:32:31.150 
are connected to a certain element.

382
00:32:32.170 --> 00:32:37.800 
And then it should sort these rules according to the importance.

383
00:32:39.190 --> 00:32:43.880 
Importance the author can if he thinks there is a very important

384
00:32:44.080 --> 00:32:49.080 
format rule for an element, he can characterize this rule

385
00:32:49.500 --> 00:32:51.650 
by the attribute important.

386
00:32:52.360 --> 00:32:56.110 
And this shows that the idea of the author, the wish of the author

387
00:32:56.110 --> 00:32:59.470 
how to display a document has a high

388
00:33:00.230 --> 00:33:01.530 
level in the consideration.

389
00:33:03.190 --> 00:33:08.210 
And then the rules are sorted according to their origin.

390
00:33:09.530 --> 00:33:15.060 
So the rules that coming from the also stylesheet are considered more important

391
00:33:15.290 --> 00:33:18.060 
than the rules that coming from the user stylesheet.

392
00:33:18.660 --> 00:33:23.390 
And the rules coming from the user stylesheet are considered more important

393
00:33:23.750 --> 00:33:27.220 
than those coming from the browser stylesheet.

394
00:33:28.780 --> 00:33:37.110 
If there are contradicting rules remaining then the remaining rules should be sorted

395
00:33:37.340 --> 00:33:40.610 
according to their degree of specialization,

396
00:33:41.130 --> 00:33:44.170 
the number of id and class attributes.

397
00:33:44.960 --> 00:33:49.410 
And finally the remaining competitive rules

398
00:33:50.710 --> 00:33:52.630 
have to be sorted chronological

399
00:33:53.440 --> 00:33:55.290 
according to their occurrence.
