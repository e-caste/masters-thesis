WEBVTT

1
00:00:00.570 --> 00:00:02.270 
In our openHPI course "Blockchain,

2
00:00:03.210 --> 00:00:05.339 
revealing the myth", we

3
00:00:05.820 --> 00:00:08.210 
continue to speak about scalability,

4
00:00:08.580 --> 00:00:09.951 
but now how we can

5
00:00:11.520 --> 00:00:12.990 
modify the scalability, we can

6
00:00:13.710 --> 00:00:15.033 
increase the efficiency and

7
00:00:15.480 --> 00:00:18.329 
scalability by new functionalities

8
00:00:18.600 --> 00:00:19.949 
and new architectures.

9
00:00:20.550 --> 00:00:22.559 
In the last clip, which was also

10
00:00:22.560 --> 00:00:24.070 
about scalability.

11
00:00:24.570 --> 00:00:25.942 
We mentioned that one can do

12
00:00:26.730 --> 00:00:28.680 
and think about fundamental changes

13
00:00:28.980 --> 00:00:30.859 
in the block

14
00:00:30.990 --> 00:00:32.009 
chain protocol

15
00:00:33.150 --> 00:00:35.170 
to increase the scalability.

16
00:00:35.460 --> 00:00:36.979 
We discussed changing the block

17
00:00:37.350 --> 00:00:39.090 
size or the block time.

18
00:00:40.860 --> 00:00:43.149 
Problem for such a change,

19
00:00:43.150 --> 00:00:44.759 
a fundamental change in the block

20
00:00:44.760 --> 00:00:46.181 
chain protocol the acceptance

21
00:00:47.190 --> 00:00:49.034 
of the users of the peers

22
00:00:49.680 --> 00:00:51.789 
in the network are needed,

23
00:00:52.680 --> 00:00:54.689 
but needs the acceptance of all

24
00:00:54.690 --> 00:00:56.210 
the minors and all users.

25
00:00:56.880 --> 00:00:57.880 
And if some

26
00:00:58.890 --> 00:01:01.530 
of the users do not accept,

27
00:01:02.040 --> 00:01:03.959 
then the block

28
00:01:03.960 --> 00:01:05.011 
chain splits then

29
00:01:07.020 --> 00:01:08.020 
new systems came out

30
00:01:09.000 --> 00:01:10.349 
and indeed

31
00:01:10.830 --> 00:01:11.830 
there was such

32
00:01:15.220 --> 00:01:16.680 
a split

33
00:01:17.370 --> 00:01:18.370 
by the Bitcoin

34
00:01:19.680 --> 00:01:20.680 
cash system

35
00:01:24.150 --> 00:01:26.250 
and new cryptocurrency

36
00:01:26.670 --> 00:01:28.650 
that was created through

37
00:01:29.250 --> 00:01:30.250 
to such a split in

38
00:01:31.230 --> 00:01:32.549 
2017.

39
00:01:34.290 --> 00:01:36.119 
What was done, is the protocol

40
00:01:36.120 --> 00:01:37.860 
was changed and

41
00:01:38.130 --> 00:01:39.609 
it introduces 8-

42
00:01:40.080 --> 00:01:41.669 
megabit blocks

43
00:01:42.030 --> 00:01:44.659 
instead of the originally

44
00:01:45.000 --> 00:01:46.440 
1-megabit blocks.

45
00:01:47.940 --> 00:01:49.508 
So then now we have two systems,

46
00:01:49.860 --> 00:01:51.599 
two Bitcoin systems, the original

47
00:01:51.600 --> 00:01:53.519 
Bitcoin system and the Bitcoin cash

48
00:01:53.520 --> 00:01:54.520 
system.

49
00:01:54.930 --> 00:01:55.930 
And there

50
00:01:56.790 --> 00:01:58.799 
was another way

51
00:01:58.800 --> 00:02:00.123 
to increase the scalability

52
00:02:00.750 --> 00:02:02.416 
which was discussed in the Bitcoin

53
00:02:02.610 --> 00:02:03.610 
community

54
00:02:05.940 --> 00:02:07.769 
not to come

55
00:02:07.770 --> 00:02:09.689 
to a new split, but

56
00:02:10.199 --> 00:02:12.539 
in solving the block size

57
00:02:12.540 --> 00:02:14.849 
problem by changing

58
00:02:14.850 --> 00:02:15.900 
the protocol.

59
00:02:17.040 --> 00:02:18.689 
They didn't change the protocol,

60
00:02:19.350 --> 00:02:20.819 
but they introduced a new

61
00:02:20.820 --> 00:02:21.820 
functionality.

62
00:02:22.260 --> 00:02:23.779 
The functionality is segregated

63
00:02:23.886 --> 00:02:24.886 
witness or

64
00:02:25.740 --> 00:02:26.740 
shortly, SegWit.

65
00:02:29.510 --> 00:02:32.029 
So advantage here is that the users

66
00:02:32.360 --> 00:02:33.389 
can be updated at any

67
00:02:34.310 --> 00:02:36.169 
time after the miners

68
00:02:36.170 --> 00:02:38.119 
have accepted the changes

69
00:02:39.050 --> 00:02:40.759 
and the miners and the users

70
00:02:41.630 --> 00:02:43.639 
who have not yet updated

71
00:02:44.660 --> 00:02:46.839 
the new functionality,

72
00:02:47.390 --> 00:02:48.517 
they continue to belong

73
00:02:49.430 --> 00:02:51.559 
to the same system, like

74
00:02:51.560 --> 00:02:52.883 
the users that have updated

75
00:02:54.080 --> 00:02:55.080 
and have this new

76
00:02:56.060 --> 00:02:57.919 
functionality, but

77
00:02:57.920 --> 00:02:58.920 
they only see

78
00:02:59.900 --> 00:03:01.759 
an extra text that

79
00:03:01.760 --> 00:03:03.199 
they cannot understand.

80
00:03:03.590 --> 00:03:05.839 
So the update of the system

81
00:03:06.330 --> 00:03:07.800 
makes it possible that all the

82
00:03:07.940 --> 00:03:09.889 
system users,

83
00:03:10.040 --> 00:03:12.270 
which didn't update

84
00:03:12.290 --> 00:03:14.030 
it to the new functionality,

85
00:03:14.240 --> 00:03:15.979 
can continue to

86
00:03:16.100 --> 00:03:17.290 
stay in the system.

87
00:03:17.840 --> 00:03:19.460 
But some of the

88
00:03:20.930 --> 00:03:23.240 
messages here they cannot

89
00:03:23.570 --> 00:03:24.570 
understand.

90
00:03:25.470 --> 00:03:27.389 
However, this does not

91
00:03:27.390 --> 00:03:29.030 
pose a problem as it does

92
00:03:29.520 --> 00:03:31.470 
not mean any change to the

93
00:03:32.040 --> 00:03:33.930 
fundamental rules, so

94
00:03:34.020 --> 00:03:35.969 
this change will

95
00:03:35.970 --> 00:03:36.970 
not lead to a

96
00:03:37.860 --> 00:03:38.860 
split off.

97
00:03:39.420 --> 00:03:40.547 
So the focus of the new

98
00:03:41.490 --> 00:03:42.490 
functionality

99
00:03:44.640 --> 00:03:46.619 
is to introduce a new data structure

100
00:03:46.620 --> 00:03:48.539 
called Witness, which

101
00:03:48.540 --> 00:03:50.729 
helps to make the system more

102
00:03:51.000 --> 00:03:52.000 
efficient.

103
00:03:52.470 --> 00:03:54.341 
So the way to change the protocol

104
00:03:54.660 --> 00:03:56.130 
has the danger that the system

105
00:03:56.520 --> 00:03:58.110 
spits off, here

106
00:03:58.600 --> 00:03:59.639 
is another way

107
00:04:00.540 --> 00:04:02.849 
is followed to increase efficiency,

108
00:04:03.060 --> 00:04:04.919 
that is to introduce new

109
00:04:04.920 --> 00:04:05.920 
functionality.

110
00:04:07.140 --> 00:04:09.540 
So as part of the transaction

111
00:04:10.530 --> 00:04:11.530 
is moved therein,

112
00:04:13.860 --> 00:04:15.240 
namely the signature

113
00:04:15.690 --> 00:04:17.111 
which otherwise make up to 70

114
00:04:17.970 --> 00:04:19.860 
percent of a transaction.

115
00:04:21.790 --> 00:04:23.110 
So what is this witness,

116
00:04:23.740 --> 00:04:25.014 
witness still remains part

117
00:04:25.630 --> 00:04:26.757 
of the transaction, but

118
00:04:27.640 --> 00:04:29.649 
it is not hashed in

119
00:04:29.650 --> 00:04:30.650 
the transaction ID.

120
00:04:32.260 --> 00:04:33.338 
Users who have not yet

121
00:04:34.180 --> 00:04:35.710 
implemented the SegWit.

122
00:04:37.140 --> 00:04:38.829 
Since the SegWit transactions do not

123
00:04:38.830 --> 00:04:39.830 
have a signature.

124
00:04:41.200 --> 00:04:43.239 
And do not require

125
00:04:43.240 --> 00:04:44.240 
one

126
00:04:45.100 --> 00:04:46.276 
so they can take part in

127
00:04:46.930 --> 00:04:48.970 
the system, but they

128
00:04:49.090 --> 00:04:51.310 
do not see the full functionality,

129
00:04:51.630 --> 00:04:52.946 
the updated users, they

130
00:04:54.010 --> 00:04:55.959 
understand the instructions in

131
00:04:55.960 --> 00:04:56.960 
the ScriptPubKey,

132
00:04:58.090 --> 00:04:59.413 
and know that the necessary

133
00:05:00.040 --> 00:05:01.040 
signature is in

134
00:05:02.050 --> 00:05:03.879 
the middle. This area is in

135
00:05:03.880 --> 00:05:04.804 
the "Witness area".

136
00:05:04.805 --> 00:05:05.805 
There a signature is

137
00:05:06.850 --> 00:05:08.436 
taken out of the

138
00:05:08.800 --> 00:05:10.450 
transaction, and in this way

139
00:05:11.080 --> 00:05:12.080 
the transactions

140
00:05:13.180 --> 00:05:14.180 
are more a

141
00:05:15.310 --> 00:05:16.310 
more efficient.

142
00:05:17.480 --> 00:05:19.129 
So a new functionality from the

143
00:05:19.130 --> 00:05:21.829 
Bitcoin system increases

144
00:05:21.830 --> 00:05:24.041 
the block size because

145
00:05:24.500 --> 00:05:26.749 
now it's the size of the transaction

146
00:05:27.020 --> 00:05:28.190 
is decreased

147
00:05:28.880 --> 00:05:30.769 
if the witness still

148
00:05:30.770 --> 00:05:32.660 
remains part of the transaction.

149
00:05:33.410 --> 00:05:34.684 
This is a question and the

150
00:05:35.330 --> 00:05:36.849 
block size limit in the Bitcoin

151
00:05:37.550 --> 00:05:39.680 
system remains unchanged.

152
00:05:39.830 --> 00:05:41.047 
It remains unchanged

153
00:05:41.930 --> 00:05:43.800 
to 1- megabyte

154
00:05:43.880 --> 00:05:45.520 
after the SegWit

155
00:05:45.770 --> 00:05:46.770 
with update.

156
00:05:47.930 --> 00:05:49.339 
But the block size

157
00:05:49.760 --> 00:05:50.838 
is now replaced by the

158
00:05:51.680 --> 00:05:52.729 
block weight

159
00:05:53.510 --> 00:05:55.820 
and the block can have a weight

160
00:05:56.540 --> 00:05:57.859 
between 2 and 4

161
00:05:58.610 --> 00:05:59.610 
megabits.

162
00:05:59.780 --> 00:06:01.189 
This comes from the

163
00:06:01.760 --> 00:06:03.320 
from the new

164
00:06:03.830 --> 00:06:05.779 
data structure with a witness to

165
00:06:05.780 --> 00:06:07.100 
take out signature.

166
00:06:09.670 --> 00:06:11.350 
So the limit

167
00:06:12.610 --> 00:06:13.933 
to what is a Bitcoin system

168
00:06:14.470 --> 00:06:15.850 
can currently handle

169
00:06:16.960 --> 00:06:18.999 
here when we look to

170
00:06:19.000 --> 00:06:20.225 
this modification, to the

171
00:06:20.680 --> 00:06:21.759 
introduction of this new

172
00:06:21.760 --> 00:06:23.619 
functionality, then this

173
00:06:23.620 --> 00:06:25.629 
means the current

174
00:06:25.720 --> 00:06:26.720 
full nodes need

175
00:06:28.000 --> 00:06:30.310 
more time than before

176
00:06:30.700 --> 00:06:32.529 
to verify a block because

177
00:06:32.530 --> 00:06:34.380 
they have to take into account all

178
00:06:34.390 --> 00:06:35.740 
of this witness

179
00:06:36.310 --> 00:06:37.310 
data structure.

180
00:06:38.470 --> 00:06:39.470 
In practice, this

181
00:06:40.480 --> 00:06:43.179 
corresponds to an increasing

182
00:06:43.540 --> 00:06:44.540 
of the block spread

183
00:06:45.430 --> 00:06:46.940 
time in the system.

184
00:06:47.950 --> 00:06:49.870 
So Segwit supporters

185
00:06:50.860 --> 00:06:53.259 
consider that the additional

186
00:06:53.260 --> 00:06:55.329 
verification time and associated

187
00:06:55.330 --> 00:06:57.399 
longer propagation time for a block

188
00:06:57.790 --> 00:07:00.069 
lie within the limits

189
00:07:00.100 --> 00:07:02.289 
of what the network can currently

190
00:07:02.290 --> 00:07:03.290 
handle.

191
00:07:03.570 --> 00:07:04.795 
So this is an observation

192
00:07:05.740 --> 00:07:07.899 
and this a justification of this new

193
00:07:08.230 --> 00:07:09.230 
functionality.

194
00:07:10.990 --> 00:07:11.990 
What about Ethereum?

195
00:07:13.240 --> 00:07:14.620 
The Ethereum has also to structure

196
00:07:15.010 --> 00:07:16.870 
with a larger amount of data.

197
00:07:17.680 --> 00:07:19.629 
What about the Ethereum system,

198
00:07:19.630 --> 00:07:21.540 
which has to

199
00:07:21.550 --> 00:07:23.167 
resolve this question, and has to

200
00:07:23.170 --> 00:07:24.170 
increase

201
00:07:26.740 --> 00:07:27.740 
the efficiency and

202
00:07:28.720 --> 00:07:30.549 
the scalability because

203
00:07:30.550 --> 00:07:32.589 
they have a large amount to deal

204
00:07:32.590 --> 00:07:34.089 
with the Bitcoin system.

205
00:07:35.410 --> 00:07:37.322 
And this isn't sense

206
00:07:37.510 --> 00:07:39.231 
the account based Ethereum

207
00:07:40.000 --> 00:07:41.225 
system has a considerable

208
00:07:42.310 --> 00:07:44.079 
advantage over the UTXO

209
00:07:44.290 --> 00:07:45.790 
based Bitcoin system.

210
00:07:46.990 --> 00:07:48.819 
And the advantages

211
00:07:48.850 --> 00:07:51.009 
is that when verifying

212
00:07:51.010 --> 00:07:52.235 
a transaction, the entire

213
00:07:52.870 --> 00:07:54.970 
blockchain is no longer search

214
00:07:55.510 --> 00:07:57.519 
for an output, which is

215
00:07:57.520 --> 00:07:59.620 
referenced in the current input,

216
00:07:59.890 --> 00:08:01.749 
because in an account, the

217
00:08:01.750 --> 00:08:02.750 
last situation can

218
00:08:03.730 --> 00:08:05.619 
be can

219
00:08:05.620 --> 00:08:06.970 
be touched and seen.

220
00:08:07.570 --> 00:08:09.279 
In the UTXO based

221
00:08:09.430 --> 00:08:11.439 
system, one has to follow

222
00:08:11.620 --> 00:08:13.449 
all the sequences of

223
00:08:13.660 --> 00:08:14.660 
transactions

224
00:08:15.640 --> 00:08:16.640 
to one address,

225
00:08:18.040 --> 00:08:20.139 
instead of the current state

226
00:08:20.380 --> 00:08:22.539 
of their respective account

227
00:08:23.680 --> 00:08:25.929 
so-called account state is checked

228
00:08:26.260 --> 00:08:27.338 
as to whether it has a

229
00:08:28.090 --> 00:08:29.259 
sufficient balance.

230
00:08:30.610 --> 00:08:31.737 
So this is an advantage

231
00:08:32.890 --> 00:08:34.419 
of an Ethereum system.

232
00:08:35.860 --> 00:08:37.449 
What is about long term

233
00:08:37.690 --> 00:08:38.690 
scalability improvements

234
00:08:40.150 --> 00:08:41.379 
in Ethereum system?

235
00:08:41.830 --> 00:08:43.509 
For a long term improvement

236
00:08:44.560 --> 00:08:46.629 
of Ethereum system, the

237
00:08:46.630 --> 00:08:48.370 
developers plan

238
00:08:48.490 --> 00:08:50.739 
to create and introduce

239
00:08:50.950 --> 00:08:52.129 
in the Ethereum 2.0

240
00:08:53.110 --> 00:08:54.460 
Within the next year.

241
00:08:54.790 --> 00:08:56.559 
And the focus of this

242
00:08:57.370 --> 00:08:59.080 
new developers is

243
00:08:59.320 --> 00:09:01.600 
splitting the entire system into

244
00:09:02.050 --> 00:09:03.370 
various groups

245
00:09:03.880 --> 00:09:05.497 
and thus dividing the transaction

246
00:09:06.550 --> 00:09:08.983 
load and allowing parallel

247
00:09:10.030 --> 00:09:11.030 
calculation.

248
00:09:11.500 --> 00:09:13.299 
So the entire architecture of

249
00:09:13.570 --> 00:09:15.520 
Ethereum system is thereby

250
00:09:15.670 --> 00:09:17.499 
rebooted and

251
00:09:17.500 --> 00:09:19.629 
can be displayed in several

252
00:09:19.630 --> 00:09:20.630 
layers.

253
00:09:21.310 --> 00:09:22.619 
So and the

254
00:09:23.470 --> 00:09:25.809 
keyword is Sharding.

255
00:09:26.890 --> 00:09:28.820 
Let us take an example given

256
00:09:28.870 --> 00:09:31.119 
from

257
00:09:31.120 --> 00:09:32.120 
one of

258
00:09:34.030 --> 00:09:36.130 
the designers of Ethereum system.

259
00:09:37.600 --> 00:09:39.429 
And imagine that

260
00:09:39.700 --> 00:09:41.470 
Ethereum system is divided

261
00:09:41.740 --> 00:09:42.965 
into a thousand different

262
00:09:43.960 --> 00:09:44.960 
islands.

263
00:09:47.400 --> 00:09:49.409 
Each island has

264
00:09:49.440 --> 00:09:51.119 
its own functionalities

265
00:09:51.840 --> 00:09:53.549 
and each island has its own

266
00:09:53.550 --> 00:09:54.550 
inhabitants, the

267
00:09:55.410 --> 00:09:57.629 
user and the smart

268
00:09:57.630 --> 00:09:58.630 
contract accounts.

269
00:09:59.790 --> 00:10:01.589 
So the inhabitants of an island

270
00:10:01.710 --> 00:10:03.779 
communicate with each other,

271
00:10:04.500 --> 00:10:06.509 
organize themselves and

272
00:10:06.510 --> 00:10:08.489 
have their own transaction

273
00:10:08.490 --> 00:10:09.490 
history.

274
00:10:10.860 --> 00:10:12.600 
But also islands can

275
00:10:12.960 --> 00:10:14.269 
interact with each other.

276
00:10:15.420 --> 00:10:17.610 
And this provides

277
00:10:18.600 --> 00:10:19.600 
the so-called Sharding.

278
00:10:19.860 --> 00:10:22.619 
And the islands are correspondingly

279
00:10:22.770 --> 00:10:23.770 
called Shards.

280
00:10:28.600 --> 00:10:30.640 
How is it realized?

281
00:10:30.760 --> 00:10:32.530 
So the Shards represent

282
00:10:32.680 --> 00:10:34.659 
the two lowest layer of

283
00:10:34.660 --> 00:10:36.009 
this new architecture,

284
00:10:36.610 --> 00:10:37.884 
the data and the execution

285
00:10:38.830 --> 00:10:39.830 
layer.

286
00:10:39.970 --> 00:10:41.859 
So the transactions and smart

287
00:10:41.860 --> 00:10:43.870 
contracts are executed

288
00:10:44.140 --> 00:10:46.330 
and saved for each chart.

289
00:10:47.940 --> 00:10:49.679 
So here we have two different

290
00:10:49.680 --> 00:10:51.300 
charts, we have the state

291
00:10:51.780 --> 00:10:52.780 
execution engine, we

292
00:10:53.640 --> 00:10:55.679 
have the Shard chain,

293
00:10:56.340 --> 00:10:57.340 
which is for

294
00:10:58.330 --> 00:10:59.850 
what happens on each island

295
00:11:00.400 --> 00:11:02.249 
and then we have Beacon chain

296
00:11:02.250 --> 00:11:04.500 
and proof of work Main chain,

297
00:11:05.280 --> 00:11:07.640 
which provides this taking.

298
00:11:08.220 --> 00:11:09.989 
And here

299
00:11:10.200 --> 00:11:12.259 
we have the different charts.

300
00:11:12.300 --> 00:11:13.598 
So in a certain sense, the

301
00:11:15.420 --> 00:11:17.999 
system is paralyzed.

302
00:11:19.060 --> 00:11:20.775 
It is not complete possible because

303
00:11:21.220 --> 00:11:22.980 
the people on the island will also

304
00:11:23.220 --> 00:11:24.220 
exchange,

305
00:11:25.440 --> 00:11:26.820 
with people from another island.

306
00:11:27.180 --> 00:11:28.923 
But a lot is done inside the island

307
00:11:29.340 --> 00:11:31.440 
and can be handled in parallel.

308
00:11:32.370 --> 00:11:34.379 
So the

309
00:11:34.560 --> 00:11:35.579 
next layer,

310
00:11:36.610 --> 00:11:38.969 
the coordination and validation

311
00:11:38.970 --> 00:11:40.244 
layer in this Ethereum 2.0

312
00:11:41.340 --> 00:11:42.418 
architecture is to use

313
00:11:43.440 --> 00:11:45.449 
to coordinate and validate

314
00:11:45.720 --> 00:11:46.720 
the data produced in

315
00:11:47.730 --> 00:11:48.730 
the charts.

316
00:11:49.530 --> 00:11:50.755 
So it consists of the new

317
00:11:51.360 --> 00:11:53.699 
blockchain is OK and beacon

318
00:11:53.910 --> 00:11:55.829 
chain, which is

319
00:11:55.830 --> 00:11:58.080 
a proof of stake algorithms.

320
00:11:58.440 --> 00:12:01.019 
Proof of stake is the consensus

321
00:12:01.290 --> 00:12:02.290 
algorithm.

322
00:12:02.580 --> 00:12:04.649 
Miners are replaced

323
00:12:04.830 --> 00:12:06.398 
in the proof of stake errors and

324
00:12:06.690 --> 00:12:07.890 
by validators

325
00:12:08.580 --> 00:12:10.344 
which have the possibility to create

326
00:12:10.380 --> 00:12:11.850 
a block in a shard

327
00:12:12.240 --> 00:12:14.580 
that has been randomly assigned

328
00:12:14.760 --> 00:12:15.760 
to them.

329
00:12:15.960 --> 00:12:18.090 
And then for each shard, a group

330
00:12:18.450 --> 00:12:20.610 
made up to 100 randomly

331
00:12:21.360 --> 00:12:24.269 
selected validators authenticate

332
00:12:24.270 --> 00:12:26.549 
the new block by signing.

333
00:12:27.820 --> 00:12:30.429 
The Block header is included

334
00:12:30.760 --> 00:12:32.230 
in the beacon chain block with

335
00:12:32.980 --> 00:12:35.379 
at least 67 signatures

336
00:12:35.380 --> 00:12:37.299 
of references in

337
00:12:37.300 --> 00:12:38.402 
the shard block.

338
00:12:40.330 --> 00:12:41.880 
Then the top layer the

339
00:12:42.400 --> 00:12:44.499 
current Ethereum block chain remains

340
00:12:44.500 --> 00:12:45.500 
available, uses

341
00:12:47.320 --> 00:12:49.690 
proof of work as a consensus

342
00:12:50.080 --> 00:12:51.452 
algorithm and is represented

343
00:12:52.750 --> 00:12:53.750 
at the top layer.

344
00:12:54.400 --> 00:12:55.599 
We have

345
00:12:56.500 --> 00:12:57.500 
already seen.

346
00:12:57.880 --> 00:12:59.056 
So any Ethereum user who

347
00:12:59.710 --> 00:13:01.092 
stores 32 Ether

348
00:13:01.810 --> 00:13:04.029 
in form of a smart contract

349
00:13:04.030 --> 00:13:05.710 
in the Ethereum top layer

350
00:13:06.310 --> 00:13:08.139 
can work as a

351
00:13:08.140 --> 00:13:09.140 
validator.

352
00:13:10.410 --> 00:13:12.490 
This is a rough description of

353
00:13:12.580 --> 00:13:15.249 
Ethereum 2.0 architecture.

354
00:13:15.250 --> 00:13:16.899 
And the idea again is

355
00:13:17.260 --> 00:13:19.360 
to make the system to increase

356
00:13:19.720 --> 00:13:21.190 
the scalability of the system,

357
00:13:21.580 --> 00:13:23.090 
to make it more efficient.

358
00:13:23.600 --> 00:13:24.600 
Without the

359
00:13:29.620 --> 00:13:31.869 
security suffering.

360
00:13:33.610 --> 00:13:34.982 
To summarize what we did, we

361
00:13:35.440 --> 00:13:36.440 
discussed what can

362
00:13:37.330 --> 00:13:38.785 
be done to make a blockchain

363
00:13:39.160 --> 00:13:40.539 
based system more efficient,

364
00:13:41.140 --> 00:13:42.140 
not by modifying

365
00:13:43.240 --> 00:13:44.240 
the protocol,

366
00:13:46.270 --> 00:13:48.489 
for example, adjusting parameters

367
00:13:48.730 --> 00:13:50.769 
such as block time and block size,

368
00:13:51.400 --> 00:13:53.409 
but introducing

369
00:13:54.010 --> 00:13:55.450 
additional functionalities,

370
00:13:55.720 --> 00:13:57.220 
additional functionalities

371
00:13:57.580 --> 00:13:59.349 
that avoid changing

372
00:13:59.410 --> 00:14:00.759 
the set of parameters

373
00:14:01.630 --> 00:14:02.739 
or to

374
00:14:03.850 --> 00:14:05.124 
to go over to a completely

375
00:14:05.710 --> 00:14:06.710 
new architecture

376
00:14:07.940 --> 00:14:09.759 
that still has approval

377
00:14:09.760 --> 00:14:10.760 
for block chain. And with this

378
00:14:12.800 --> 00:14:15.330 
2.0 architecture,

379
00:14:15.730 --> 00:14:17.559 
we can serve this

380
00:14:17.680 --> 00:14:19.990 
proof of block chain basis

381
00:14:20.260 --> 00:14:22.269 
in the top layer and below

382
00:14:22.270 --> 00:14:23.270 
of it we can work

383
00:14:24.100 --> 00:14:25.870 
by a little bit decreasing

384
00:14:26.170 --> 00:14:27.849 
the decentralization

385
00:14:28.390 --> 00:14:29.390 
to islands.

386
00:14:30.310 --> 00:14:32.440 
So then in the next clip we will

387
00:14:32.530 --> 00:14:34.899 
look on a large scaling

388
00:14:34.930 --> 00:14:35.930 
option

389
00:14:37.000 --> 00:14:38.919 
that is intended to

390
00:14:39.040 --> 00:14:40.690 
relieve the system

391
00:14:40.930 --> 00:14:43.360 
so scared off-chain approaches.
