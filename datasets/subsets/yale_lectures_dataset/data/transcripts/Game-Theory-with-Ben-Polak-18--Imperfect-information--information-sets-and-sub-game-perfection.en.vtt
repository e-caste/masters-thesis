WEBVTT
Kind: captions
Language: en

00:00:01.670 --> 00:00:03.867
Professor Ben Polak:
So today we have a lot of

00:00:03.867 --> 00:00:06.065
stuff to get through,
but it's all going to be fairly

00:00:06.065 --> 00:00:07.801
formal.
We're not going to have time to

00:00:07.801 --> 00:00:10.871
play a game today.
So it's going to be a day where

00:00:10.871 --> 00:00:14.726
we have to learn some new ideas.
So the reason we need to go

00:00:14.726 --> 00:00:17.925
through some new formal ideas
today is we've kind of exhausted

00:00:17.925 --> 00:00:20.810
what we can do with the ideas
we've gathered so far.

00:00:20.810 --> 00:00:23.376
So, just to bring us up to date
with where we are:

00:00:23.376 --> 00:00:25.838
in the first half of the
semester--so before the

00:00:25.838 --> 00:00:28.510
mid-term--we looked at
simultaneous move games.

00:00:28.510 --> 00:00:32.082
And one way to think about
those simultaneous move games

00:00:32.082 --> 00:00:34.810
were games where,
when I make my choice,

00:00:34.810 --> 00:00:38.529
I don't know what you've done,
and, when you make your choice,

00:00:38.529 --> 00:00:42.395
you don't know what I've done.
Since the mid-term we've been

00:00:42.395 --> 00:00:45.302
looking at simple examples of
sequential move

00:00:45.302 --> 00:00:49.067
games--sequential move games
under perfect information--in

00:00:49.067 --> 00:00:52.965
which I typically do know what
you did when I get to make my

00:00:52.965 --> 00:00:55.698
choice.
And you know I'm going to know

00:00:55.698 --> 00:00:58.290
what you did when I get to make
my choice.

00:00:58.290 --> 00:01:01.698
What I want to be able to do
moving forward is I want to be

00:01:01.698 --> 00:01:04.871
able to look at strategic
situations that combine those

00:01:04.871 --> 00:01:07.829
two settings.
I want to be able to analyze

00:01:07.829 --> 00:01:10.909
games which involve both
sequential moves and

00:01:10.909 --> 00:01:13.624
simultaneous move games.
In particular,

00:01:13.624 --> 00:01:16.863
I want to see how we can extend
the technique we've been

00:01:16.863 --> 00:01:19.866
focusing on for the last few
weeks which is backward

00:01:19.866 --> 00:01:22.523
induction.
I want us to see how we can

00:01:22.523 --> 00:01:26.268
extend the notion of backward
induction to cope with games

00:01:26.268 --> 00:01:30.670
where some parts are sequential
and some parts are simultaneous.

00:01:30.670 --> 00:01:33.110
So we're going to look at a lot
of examples and we're going to

00:01:33.110 --> 00:01:35.269
introduce some new ideas,
and I'm going to try and walk

00:01:35.269 --> 00:01:38.000
you through that today.
So that's our goal.

00:01:38.000 --> 00:01:44.250
Let's start with an example.
So here's a very simple game in

00:01:44.250 --> 00:01:48.379
which Player 1 moves first,
and has three choices.

00:01:48.379 --> 00:01:50.910
Let's call them up,
middle, and down.

00:01:50.910 --> 00:01:55.600
And then Player 2 moves,
and Player 2 has two choices

00:01:55.600 --> 00:02:00.201
from each of these nodes,
and we'll call the choices

00:02:00.201 --> 00:02:04.079
suggestively,
up and down--up and down.

00:02:04.079 --> 00:02:06.540
And here we'll just call them
left and right.

00:02:06.540 --> 00:02:15.084
The payoffs are as follows,
(4,0), (0,4),

00:02:15.084 --> 00:02:21.280
(0,4), (4,0),
(1,2), (0,0).

00:02:21.280 --> 00:02:24.348
So this is just a standard game
of perfect information,

00:02:24.348 --> 00:02:27.530
much like all the games we've
seen since the mid-term.

00:02:27.530 --> 00:02:29.220
In fact, it's a relatively easy
one.

00:02:29.220 --> 00:02:31.150
So we know how to solve this
game.

00:02:31.150 --> 00:02:36.047
We solve this game using what?
Using backward induction,

00:02:36.047 --> 00:02:41.122
and that isn't so hard here.
We know that if Player 2 finds

00:02:41.122 --> 00:02:44.216
herself up here,
she will choose 4 rather than

00:02:44.216 --> 00:02:45.937
0;
if she finds herself here,

00:02:45.937 --> 00:02:49.453
she'll choose 4 rather than 0;
and if she finds herself here,

00:02:49.453 --> 00:02:53.922
she'll choose 2 rather than 1.
So Player 1 won't want to go up

00:02:53.922 --> 00:02:58.252
here because he'll get 0,
and he won't want to go into

00:02:58.252 --> 00:03:02.768
the middle because he'll get 0,
and he won't want to--but if he

00:03:02.768 --> 00:03:06.190
goes down Player 1 will choose
left and Player 1 will get 1.

00:03:06.190 --> 00:03:10.159
So Player 1 will choose down.
So backward induction predicts

00:03:10.159 --> 00:03:14.721
that Player 1 chooses down and
Player 2 responds by choosing

00:03:14.721 --> 00:03:17.319
left.
Just staring at this a second,

00:03:17.319 --> 00:03:21.211
notice that the reason in this
game--taking a step back from

00:03:21.211 --> 00:03:25.366
backward induction a second--the
reason Player 1 did not want to

00:03:25.366 --> 00:03:29.325
choose either up or middle was
because that move was going to

00:03:29.325 --> 00:03:33.733
be observed by Player 2,
and in either case Player 2 was

00:03:33.733 --> 00:03:37.626
going to crush Player 1.
So if Player 1 went up,

00:03:37.626 --> 00:03:42.810
Player 2 was playing this sort
of "strictly competitive game"

00:03:42.810 --> 00:03:48.252
with Player 1 and Player 2 could
pick a choice that gave 2 4 and

00:03:48.252 --> 00:03:50.873
1 0.
Conversely, if Player 1 chose

00:03:50.873 --> 00:03:54.180
middle, Player 2 could crush
Player 1 by choosing up,

00:03:54.180 --> 00:03:57.550
which gave, once again,
Player 2 4 and Player 1 0.

00:03:57.550 --> 00:04:00.992
So there was a good reason here
to avoid going into the part of

00:04:00.992 --> 00:04:05.193
the game following up or middle,
and the reason was 2 has a huge

00:04:05.193 --> 00:04:09.000
second-mover advantage in those
parts of the game.

00:04:09.000 --> 00:04:12.684
Is that clear to everybody?
So I now want to consider a

00:04:12.684 --> 00:04:15.537
similar, but importantly
different game,

00:04:15.537 --> 00:04:18.389
so I'm going to draw the game
again,

00:04:18.389 --> 00:04:19.751
but before I draw it,
let me say what I'm going to

00:04:19.751 --> 00:04:22.374
do.
So I want to introduce a new

00:04:22.374 --> 00:04:27.875
idea, and the new idea is going
to be that Player 2 will not be

00:04:27.875 --> 00:04:31.780
able to distinguish between up
or middle.

00:04:31.780 --> 00:04:34.919
So let's just say it again.
So if Player 1 chooses down,

00:04:34.919 --> 00:04:38.140
Player 2 will observe that,
just as we've done before in

00:04:38.140 --> 00:04:40.600
our standard perfect-information
games,

00:04:40.600 --> 00:04:43.422
but if Player 1 chooses either
up or middle,

00:04:43.422 --> 00:04:47.425
I want to capture the idea that
Player 2 doesn't know which of

00:04:47.425 --> 00:04:51.082
those two choices was made.
That's clearly going to change

00:04:51.082 --> 00:04:54.326
the game a lot and the first
question is, how do we represent

00:04:54.326 --> 00:04:57.324
that idea in a tree?
So let me try and show a good

00:04:57.324 --> 00:05:00.695
way to represent that in a tree.
So the game has the same

00:05:00.695 --> 00:05:04.255
structure to it.
Player 1 is again choosing

00:05:04.255 --> 00:05:07.139
between up, middle,
or down.

00:05:07.139 --> 00:05:11.638
And Player 2 once again is
choosing here,

00:05:11.638 --> 00:05:17.150
up or down, up or down,
and here left or right.

00:05:17.150 --> 00:05:22.456
And the payoffs haven't changed.
They're still (4,0),

00:05:22.456 --> 00:05:30.029
(0,4), (4,0),
(0,4), (1,2) and (0,0).

00:05:30.029 --> 00:05:33.720
So that's exactly the same as
you have in your notes already,

00:05:33.720 --> 00:05:37.165
but now I want to adapt this
tree to show how we indicate

00:05:37.165 --> 00:05:40.056
that Player 2 cannot
distinguish--cannot observe

00:05:40.056 --> 00:05:45.091
whether 1 chose up or middle,
but can observe if Player 1 has

00:05:45.091 --> 00:05:49.011
chosen down.
The way we do that very simply,

00:05:49.011 --> 00:05:53.735
we draw a dotted line between
the two nodes of Player 2

00:05:53.735 --> 00:05:57.060
between which 2 cannot
distinguish.

00:05:57.060 --> 00:06:01.465
So this idea here,
what this dotted line indicates

00:06:01.465 --> 00:06:07.040
is that these two nodes are set
in the same information set.

00:06:07.040 --> 00:06:12.910
So our new idea here is the
idea of an information set.

00:06:22.379 --> 00:06:25.097
The payoffs are meant be the
same on the left as on the

00:06:25.097 --> 00:06:32.809
right.
So the idea here is that Player

00:06:32.809 --> 00:06:41.769
2 cannot distinguish these two
nodes.

00:06:41.769 --> 00:06:46.280
Player 2 knows that she's in
this information set:

00:06:46.280 --> 00:06:52.079
she knows that Player 1 must
have chosen either up or middle,

00:06:52.079 --> 00:06:55.909
she knows that Player 1 did not
choose down, but she doesn't

00:06:55.909 --> 00:06:58.570
know whether she's really here
or here.

00:06:58.570 --> 00:07:02.635
Now what happens in this game?
This game is a very different

00:07:02.635 --> 00:07:04.449
game.
Why is it a different game?

00:07:04.449 --> 00:07:09.597
Well let's try and apply that
loose intuition we talked about

00:07:09.597 --> 00:07:11.866
before.
We said previously,

00:07:11.866 --> 00:07:15.176
in the old game,
that if Player 1 chose up,

00:07:15.176 --> 00:07:18.170
2 knew that Player 1 had chosen
up,

00:07:18.170 --> 00:07:21.800
and observed that by choosing
down Player 2 could crush 1.

00:07:21.800 --> 00:07:25.098
And if Player 1 chose middle,
Player 2 could observe that

00:07:25.098 --> 00:07:28.633
Player 1 had chosen middle and
this time by choosing up could

00:07:28.633 --> 00:07:32.629
crush 1.
The problem is that now in this

00:07:32.629 --> 00:07:38.040
new game Player 2 doesn't know
whether she's here,

00:07:38.040 --> 00:07:41.646
in which case she would want to
choose down, or here,

00:07:41.646 --> 00:07:44.420
in which case she'd want to
choose up.

00:07:44.420 --> 00:07:47.639
So Player 2's choice is not so
obvious anymore.

00:07:47.639 --> 00:07:50.819
That simple backward induction
argument has disappeared.

00:07:50.819 --> 00:07:55.043
Moreover, Player 1 knows that
Player 2 will not be able to

00:07:55.043 --> 00:07:59.597
observe between up or middle,
so it isn't necessarily the

00:07:59.597 --> 00:08:04.029
case that Player 1 will want to
choose down anymore.

00:08:04.029 --> 00:08:06.673
It's still true that if Player
1 did choose down that Player 2

00:08:06.673 --> 00:08:08.970
would be able to observe that
and will choose left,

00:08:08.970 --> 00:08:10.430
so that part of the argument's
the same.

00:08:10.430 --> 00:08:12.839
What do we think is going to
happen here?

00:08:12.839 --> 00:08:15.092
Well we don't know,
but let me give a suggestion

00:08:15.092 --> 00:08:17.732
what might happen here.
Player 1 might say,

00:08:17.732 --> 00:08:21.149
hey I could randomize between
up and middle.

00:08:21.149 --> 00:08:25.740
I could choose half the time up
and half the time middle.

00:08:25.740 --> 00:08:28.197
If I choose half the time up
and half the time middle,

00:08:28.197 --> 00:08:30.747
Player 2 isn't going to
know--in general--isn't going to

00:08:30.747 --> 00:08:32.986
know what I've done.
It isn't quite clear what

00:08:32.986 --> 00:08:35.736
Player 2's going to do and since
I'm randomizing between up or

00:08:35.736 --> 00:08:37.629
middle whatever Player 2's going
to do,

00:08:37.629 --> 00:08:42.458
I'm going to get half the time
4 and half the time 0 for an

00:08:42.458 --> 00:08:45.341
expected value of 2.
So to say it again,

00:08:45.341 --> 00:08:48.052
so Player 1 might decide in
this game to randomize

00:08:48.052 --> 00:08:50.100
fifty-fifty between up and
middle,

00:08:50.100 --> 00:08:54.224
knowing that half the time
therefore he will get 4 and half

00:08:54.224 --> 00:08:57.779
the time he'll get 0 for an
expected value of 2,

00:08:57.779 --> 00:09:04.049
which notice is better than he
got by choosing down.

00:09:04.049 --> 00:09:06.870
So this change in this game,
change in the information in

00:09:06.870 --> 00:09:09.892
this game, not only led to a
different game but led to a very

00:09:09.892 --> 00:09:13.980
different outcome.
So here 1 might,

00:09:13.980 --> 00:09:21.805
for example,
might randomize between up and

00:09:21.805 --> 00:09:30.934
middle, and over here we know
exactly what 1 does,

00:09:30.934 --> 00:09:36.168
1 chooses down.
So we get very different

00:09:36.168 --> 00:09:39.814
outcomes because of this change
in information in the game,

00:09:39.814 --> 00:09:43.899
and the theme of today is that
information is going to matter.

00:09:43.899 --> 00:09:46.610
The way we're going to model
information is by thinking about

00:09:46.610 --> 00:09:48.908
these information sets.
And as we go through today,

00:09:48.908 --> 00:09:51.159
I want to start giving you some
formal definitions.

00:09:51.159 --> 00:09:54.472
So this is the idea,
now let's look at the formal

00:09:54.472 --> 00:09:57.843
definition.
There's going to be a lot of

00:09:57.843 --> 00:10:01.819
writing today,
so I hope you brought a notepad

00:10:01.819 --> 00:10:07.248
with some room on it.
So the first formal definition

00:10:07.248 --> 00:10:11.659
of the day comes off that last
example.

00:10:11.659 --> 00:10:14.991
The formal definition is the
idea that I want to capture:

00:10:14.991 --> 00:10:18.561
I want to capture the idea that
players down the tree may not

00:10:18.561 --> 00:10:21.120
know exactly what was done up
the tree.

00:10:21.120 --> 00:10:24.468
And the formal definition is
going to go through the idea of

00:10:24.468 --> 00:10:25.660
an information set.

00:10:29.059 --> 00:10:38.020
So an information set of Player
i--in this case involves Player

00:10:38.020 --> 00:10:46.836
2 but more generally of Player
i--is a collection--or a set if

00:10:46.836 --> 00:10:54.351
you like--is a collection of
Player i's nodes between

00:10:54.351 --> 00:11:01.722
which--I guess it can be more
than two--so let's say

00:11:01.722 --> 00:11:08.660
among which i cannot
distinguish.

00:11:13.470 --> 00:11:16.672
Now it's going to turn out
that, by clever use of

00:11:16.672 --> 00:11:19.742
information sets,
we're going to be able to use

00:11:19.742 --> 00:11:22.356
our technology,
our technology of drawing

00:11:22.356 --> 00:11:25.480
trees, to capture all sorts of
interesting and increasingly

00:11:25.480 --> 00:11:27.419
complicated information
settings.

00:11:27.419 --> 00:11:30.714
In this particular game,
it's the case that Player 1

00:11:30.714 --> 00:11:34.395
knew that Player 2 was not going
to be able to distinguish

00:11:34.395 --> 00:11:36.850
between up or middle in this
tree,

00:11:36.850 --> 00:11:40.831
and Player 1 knew that Player 2
would be able to distinguish in

00:11:40.831 --> 00:11:43.655
the left hand tree.
We can even use information

00:11:43.655 --> 00:11:47.045
sets in a more elaborate tree to
capture the idea that Player 1

00:11:47.045 --> 00:11:49.559
may not know what Player 2's
going to know.

00:11:49.559 --> 00:11:51.318
But I won't do that now:
I'll leave that later,

00:11:51.318 --> 00:11:53.419
and you'll see some examples of
that on the homework.

00:11:53.419 --> 00:11:55.730
So we have our formal
definition.

00:11:55.730 --> 00:11:59.280
This is going to be the first
of our big tools of the day,

00:11:59.280 --> 00:12:02.705
but let me just put down a few
things that we have to be

00:12:02.705 --> 00:12:05.009
careful about:
a couple of rules.

00:12:05.009 --> 00:12:09.891
So these information sets have
to obey certain rules and

00:12:09.891 --> 00:12:15.572
certain things are not allowed.
So in particular the following

00:12:15.572 --> 00:12:18.834
is not allowed.
Here's a tree in which Player 1

00:12:18.834 --> 00:12:22.250
moves first and Player 2 does
not observe Player 1's move.

00:12:22.250 --> 00:12:25.190
So these two nodes are Player
2's nodes.

00:12:25.190 --> 00:12:28.360
They're in the same information
set, which means Player 2 is not

00:12:28.360 --> 00:12:31.279
meant to be able to distinguish
between these two nodes.

00:12:31.279 --> 00:12:36.029
And suppose however the tree
looked like this.

00:12:36.029 --> 00:12:40.240
Okay, so I claim that this is
crazy.

00:12:40.240 --> 00:12:42.342
We couldn't allow this.
It wouldn't make any sense to

00:12:42.342 --> 00:12:44.019
allow this.
Can anyone see why?

00:12:44.019 --> 00:12:48.250
Why is this not really a
sensible tree?

00:12:48.250 --> 00:12:57.340
Everyone see that?
Why is that not a sensible tree?

00:12:57.340 --> 00:12:59.420
Student: If Player 2
knows that he has three choices

00:12:59.420 --> 00:13:00.820
then he'll know he's at the top
node.

00:13:00.820 --> 00:13:02.970
Professor Ben Polak:
Exactly, in this tree you

00:13:02.970 --> 00:13:06.754
haven't got the payoffs in,
but if Player 2 observes that

00:13:06.754 --> 00:13:11.210
she has three choices,
she knows she must be at the

00:13:11.210 --> 00:13:13.871
top node.
If she observes she has two

00:13:13.871 --> 00:13:16.230
choices she must be at the
bottom node.

00:13:16.230 --> 00:13:19.354
So in this tree,
it was supposed to be the case

00:13:19.354 --> 00:13:22.750
that 2 didn't know whether she
was here or here,

00:13:22.750 --> 00:13:25.252
but merely by observing how
many choices she has,

00:13:25.252 --> 00:13:28.380
she could infer whether she was
at the top node or the bottom

00:13:28.380 --> 00:13:29.779
node.
So that can't make any sense.

00:13:29.779 --> 00:13:32.229
So this is not allowed,
so we'll put a red cross

00:13:32.229 --> 00:13:34.401
through that one.
Now the second thing that's not

00:13:34.401 --> 00:13:36.459
allowed is a little bit more
subtle, and actually is an

00:13:36.459 --> 00:13:38.281
interesting thing.
This is just kind of

00:13:38.281 --> 00:13:41.090
bookkeeping, but the second
thing is more interesting.

00:13:41.090 --> 00:13:45.940
So let's have a look at it.
Here's a more interesting tree.

00:13:45.940 --> 00:13:51.939
Player 1 moves first.
Player 2 observes that move,

00:13:51.939 --> 00:13:59.719
and Player 2 moves second.
And then at the bottom of this

00:13:59.719 --> 00:14:04.870
Player 1 may have another chance
to move again.

00:14:04.870 --> 00:14:06.690
So again I haven't put payoffs
in here.

00:14:06.690 --> 00:14:11.279
Player 1 moves first;
Player 2 moves second;

00:14:11.279 --> 00:14:14.375
and, if Player 2 chooses down
here or up there,

00:14:14.375 --> 00:14:16.730
then Player 1 gets to move
again.

00:14:16.730 --> 00:14:19.730
Now I claim again that this is
not a sensible tree.

00:14:19.730 --> 00:14:22.830
It's not a sensible arrangement
of information sets.

00:14:22.830 --> 00:14:25.210
Can anyone see why this isn't
sensible?

00:14:25.210 --> 00:14:27.960
Why is this not sensible?
Steven?

00:14:27.960 --> 00:14:30.523
Student: Player 1 knows
what node he's at based on the

00:14:30.523 --> 00:14:33.382
first choice that he made.
Professor Ben Polak:

00:14:33.382 --> 00:14:36.830
Exactly, so to get to the upper
node here for Player 1,

00:14:36.830 --> 00:14:40.927
Player 1 must have chosen up
before, and to get to the lower

00:14:40.927 --> 00:14:44.470
node here, Player 1 must have
played down before.

00:14:44.470 --> 00:14:48.794
So provided that Player 1
remembers his or her own move,

00:14:48.794 --> 00:14:52.240
she knows where she is.
Is that right?

00:14:52.240 --> 00:14:55.433
So provided that Player 1 can
recall what she herself did

00:14:55.433 --> 00:14:58.570
earlier on in the tree she
should be able to distinguish

00:14:58.570 --> 00:15:00.863
these things.
So we're going to rule this

00:15:00.863 --> 00:15:03.019
out, but I just want to make a
remark here.

00:15:03.019 --> 00:15:07.057
There's an assumption in ruling
it out and the assumption is

00:15:07.057 --> 00:15:10.480
we're assuming perfect recall or
perfect memory.

00:15:14.820 --> 00:15:18.303
And people don't always--in the
real world, players don't always

00:15:18.303 --> 00:15:20.472
have perfect recall.
There are two reasons--and

00:15:20.472 --> 00:15:22.523
we're always going to assume
this, but let me just make a

00:15:22.523 --> 00:15:24.044
remark.
There are two reasons why

00:15:24.044 --> 00:15:25.799
people might not have perfect
recall.

00:15:25.799 --> 00:15:30.309
One reason is,
like me, they're getting old.

00:15:30.309 --> 00:15:32.429
They simply can't remember what
they did yesterday.

00:15:32.429 --> 00:15:35.731
So while I'm driving home I
know roughly how many traffic

00:15:35.731 --> 00:15:38.679
lights I have to go through
before I turn right,

00:15:38.679 --> 00:15:41.835
but I sometimes forget which
traffic light I'm at and I turn

00:15:41.835 --> 00:15:44.773
right too early or too late.
That doesn't happen to you

00:15:44.773 --> 00:15:47.543
guys, but it happens to me as
I'm getting a bit senile,

00:15:47.543 --> 00:15:49.799
so old age would rule out
perfect recall.

00:15:49.799 --> 00:15:54.000
A more important example,
perhaps, is if players of games

00:15:54.000 --> 00:15:57.620
are themselves institutions.
It's sometimes useful,

00:15:57.620 --> 00:16:00.424
and we've often talked about it
in this class,

00:16:00.424 --> 00:16:04.100
to imagine a player of a game
being a firm or a country,

00:16:04.100 --> 00:16:08.090
or some kind of institution in
which the actual decisions may

00:16:08.090 --> 00:16:12.080
be being taken by different
actual people within the firm,

00:16:12.080 --> 00:16:15.450
institution, or country.
This assumption of perfect

00:16:15.450 --> 00:16:18.623
recall is saying that the
players within the institution

00:16:18.623 --> 00:16:21.796
knew what the other players
within that same institution

00:16:21.796 --> 00:16:24.213
were doing.
If we're modeling General

00:16:24.213 --> 00:16:27.082
Motors as one player,
this assumption is assuming

00:16:27.082 --> 00:16:30.846
that the chief financial officer
and the chief executive officer

00:16:30.846 --> 00:16:34.909
at GM are observing each other's
actions: are on the same page.

00:16:34.909 --> 00:16:36.919
The left hand knows what the
right hand's doing.

00:16:36.919 --> 00:16:39.657
We are typically going to
assume that, but just to make

00:16:39.657 --> 00:16:42.605
the point: it is an assumption,
and it's quite interesting to

00:16:42.605 --> 00:16:44.100
see what happens if you relax
it.

00:16:44.100 --> 00:16:47.203
So with that in mind,
we can move to our next

00:16:47.203 --> 00:16:49.564
definition.
and this is something I've

00:16:49.564 --> 00:16:52.731
referred to early on in the
class, but I want to be formal

00:16:52.731 --> 00:16:55.570
now.
Now we can be formal.

00:16:55.570 --> 00:17:02.593
We've talked earlier on in this
class about the idea of perfect

00:17:02.593 --> 00:17:05.251
information.
So, for example,

00:17:05.251 --> 00:17:09.269
when we talked about Zermelo's
theorem, we talked about games

00:17:09.269 --> 00:17:12.453
of perfect information.
We said informally what this

00:17:12.453 --> 00:17:15.237
was--a game of perfect
information is a game where each

00:17:15.237 --> 00:17:17.970
player in the game can observe
all previous moves.

00:17:17.970 --> 00:17:21.404
That was our informal
definition, but we can now give

00:17:21.404 --> 00:17:27.393
a formal definition very simply.
Perfect information is a

00:17:27.393 --> 00:17:35.972
setting where all information
sets in the tree--games of

00:17:35.972 --> 00:17:45.018
perfect information are games
where all information sets in

00:17:45.018 --> 00:17:54.359
the tree--contain just one node.
I want to be clear here.

00:17:54.359 --> 00:17:57.005
What we're saying here is,
if we have a tree in which

00:17:57.005 --> 00:17:58.990
every information set is a
singleton,

00:17:58.990 --> 00:18:01.178
we basically don't have to
bother with any dotted lines:

00:18:01.178 --> 00:18:02.730
that's a game of perfect
information.

00:18:02.730 --> 00:18:05.081
And that shouldn't be a
surprise to anybody here because

00:18:05.081 --> 00:18:07.390
that's exactly how we drew trees
since the mid-term.

00:18:07.390 --> 00:18:10.563
Is that right?
Of course, the novelty is we're

00:18:10.563 --> 00:18:13.688
now going to be allowed to look
at games of imperfect

00:18:13.688 --> 00:18:16.895
information.
The reason we're doing this is

00:18:16.895 --> 00:18:20.583
because it will be
interesting--as in the example

00:18:20.583 --> 00:18:25.271
we've just seen--to think about
games where information is not

00:18:25.271 --> 00:18:27.944
perfect.
So what is the definition of

00:18:27.944 --> 00:18:31.183
imperfect information?
Imperfect information's formal

00:18:31.183 --> 00:18:33.730
definition is "not perfect
information."

00:18:38.859 --> 00:18:40.509
We've defined what perfect
information is.

00:18:40.509 --> 00:18:43.289
Imperfect information is the
rest.

00:18:43.289 --> 00:18:46.210
In the real world there's a lot
of games that turn out to have

00:18:46.210 --> 00:18:48.492
imperfect information.
There's lots of strategic

00:18:48.492 --> 00:18:51.390
situations where I'm going to be
able to observe some things that

00:18:51.390 --> 00:18:53.168
you've done,
but other things,

00:18:53.168 --> 00:18:55.559
I won't know quite what you've
done.

00:18:55.559 --> 00:19:00.019
Okay, let's go straight to an
example.

00:19:00.019 --> 00:19:06.027
So I don't think we really need
to keep that definition very

00:19:06.027 --> 00:19:10.100
focal, so let's get rid of that
board.

00:19:10.100 --> 00:19:15.144
Let's do an example.
We'll be doing many examples

00:19:15.144 --> 00:19:19.285
today.
So this example is going to be

00:19:19.285 --> 00:19:23.319
a tree in which Player 1 moves
first.

00:19:23.319 --> 00:19:26.519
Player 2 cannot observe this
move;

00:19:26.519 --> 00:19:29.674
and sometimes rather than
labeling both of these nodes

00:19:29.674 --> 00:19:32.829
with a 2, I'll just put a 2 on
the information set,

00:19:32.829 --> 00:19:36.750
just to indicate that both of
these nodes belong to Player 2.

00:19:36.750 --> 00:19:40.410
So Player 2 moves second.
And we'll call Player 1's move

00:19:40.410 --> 00:19:44.766
up or down;
and we'll call Player 2's move

00:19:44.766 --> 00:19:48.980
left or right,
kind of suggestively.

00:19:52.109 --> 00:19:55.049
So what's the information set
here?

00:19:55.049 --> 00:19:58.920
The information set is
indicating the fact that Player

00:19:58.920 --> 00:20:02.789
2 cannot observe whether Player
1 moved up or down.

00:20:02.789 --> 00:20:08.090
Player 2 cannot observe whether
Player 1 chose up or down.

00:20:08.090 --> 00:20:10.769
Now, why does that matter?
I haven't put the payoffs in

00:20:10.769 --> 00:20:13.582
yet but I will in a second.
It matters because had this

00:20:13.582 --> 00:20:16.430
game been a game of perfect
information, had this

00:20:16.430 --> 00:20:20.049
information set--had there been
two information sets here,

00:20:20.049 --> 00:20:23.770
this dotted line not been there
--, then Player 2 could have

00:20:23.770 --> 00:20:27.302
chosen separately whether to
choose left or right at this

00:20:27.302 --> 00:20:30.124
node,
or left and left or right at

00:20:30.124 --> 00:20:32.878
this node.
But since Player 2 doesn't know

00:20:32.878 --> 00:20:36.555
whether she's at the upper node
or the lower node--she doesn't

00:20:36.555 --> 00:20:40.293
know whether Player 1 chose up
or down--she really only has one

00:20:40.293 --> 00:20:44.813
choice to make here.
She's either choosing left at

00:20:44.813 --> 00:20:50.009
both nodes or she's choosing
right at both nodes.

00:20:50.009 --> 00:20:54.488
And just to pull it back to our
first example in the class,

00:20:54.488 --> 00:20:59.113
we saw the same feature there.
When we moved from a game of

00:20:59.113 --> 00:21:04.036
perfect information to a game of
imperfect information we reduced

00:21:04.036 --> 00:21:06.960
the choices available for Player
2.

00:21:06.960 --> 00:21:09.943
Here Player 2 could choose
separately up or down,

00:21:09.943 --> 00:21:14.021
at these two different nodes.
But here Player 2 only makes

00:21:14.021 --> 00:21:18.479
one choice that has to apply to
both nodes because Player 2

00:21:18.479 --> 00:21:21.400
cannot distinguish those two
nodes.

00:21:21.400 --> 00:21:25.229
So let's have a look and see,
once we put some payoffs on,

00:21:25.229 --> 00:21:27.849
what it does in this particular
game.

00:21:27.849 --> 00:21:36.067
So here's some payoffs:
(2,2), (-1,3),

00:21:36.067 --> 00:21:42.970
(3, -1) and (0,0).
So once again Player 2 cannot

00:21:42.970 --> 00:21:47.467
separately choose at the upper
node or the lower node,

00:21:47.467 --> 00:21:52.049
she's either choosing left or
she's choosing right.

00:21:52.049 --> 00:21:54.912
But it turns out that this game
is a little easier than the game

00:21:54.912 --> 00:21:57.606
we started with.
Why is it easier than the game

00:21:57.606 --> 00:22:00.093
we started with?
It's easier than the game that

00:22:00.093 --> 00:22:02.750
we started with because,
from Player 2's point of view,

00:22:02.750 --> 00:22:08.065
whether she thinks she's up
here or whether she thinks she's

00:22:08.065 --> 00:22:13.200
down here, she has the same best
choice in either case.

00:22:13.200 --> 00:22:18.000
If she thinks she's at the
upper node then by choosing left

00:22:18.000 --> 00:22:23.049
she'll get 2 and right she'll
get 3, so right seems better.

00:22:23.049 --> 00:22:26.101
If she thinks she's at the
lower node then choosing left

00:22:26.101 --> 00:22:29.319
gets -1 and right gets 0,
so once again right is better.

00:22:29.319 --> 00:22:33.816
So in fact, in this particular
game, regardless of whether

00:22:33.816 --> 00:22:37.049
Player 2 thinks that Player 1
chose up,

00:22:37.049 --> 00:22:38.801
and hence she's at the upper
node, or whether Player 2 thinks

00:22:38.801 --> 00:22:40.766
that Player 1 chose down,
and hence she's at the lower

00:22:40.766 --> 00:22:43.370
node, Player 2 is going to make
the same choice in this game,

00:22:43.370 --> 00:22:48.650
namely right.
So notice that this particular

00:22:48.650 --> 00:22:52.450
game actually solves out rather
like backward induction.

00:22:52.450 --> 00:22:55.295
Even though Player 2's choice
is a little bit more

00:22:55.295 --> 00:22:58.547
complicated--she doesn't know
where she is--it's actually

00:22:58.547 --> 00:23:01.799
clear what Player 2 will do at
this information set.

00:23:01.799 --> 00:23:04.326
Now if we push this forward a
little bit harder,

00:23:04.326 --> 00:23:07.738
we can see why.
Player 1 in this game has two

00:23:07.738 --> 00:23:11.059
strategies up or down.
And Player 2 has two

00:23:11.059 --> 00:23:14.140
strategies, she either chooses
left or right.

00:23:14.140 --> 00:23:17.242
Notice that she only has two
strategies because she has to

00:23:17.242 --> 00:23:20.344
choose the same thing at these
two nodes, she doesn't know

00:23:20.344 --> 00:23:23.772
where she is.
Okay, so let's draw up the

00:23:23.772 --> 00:23:28.680
matrix for this game and see if
it looks familiar.

00:23:28.680 --> 00:23:32.349
So Player 1 is choosing between
up or down.

00:23:32.349 --> 00:23:36.079
And Player 2 is choosing
between left or right.

00:23:36.079 --> 00:23:39.850
And the payoffs are as follows:
(up, left) is (2,2);

00:23:39.850 --> 00:23:47.970
(up, right) is (-1,3);
(down, left) is (3,-1);

00:23:47.970 --> 00:23:56.519
and (down, right) is (0,0).
So what game is this?

00:23:56.519 --> 00:23:59.559
It wasn't meant to be a trick
question.

00:23:59.559 --> 00:24:01.730
Somebody waved their arm in the
air.

00:24:01.730 --> 00:24:05.969
What game is this?
Student: Prisoners'

00:24:05.969 --> 00:24:06.880
Dilemma.
Professor Ben Polak:

00:24:06.880 --> 00:24:09.299
This is Prisoners' Dilemma.
This is an old friend of ours.

00:24:09.299 --> 00:24:15.205
This is Prisoner's Dilemma,
a game we saw the very first

00:24:15.205 --> 00:24:17.966
day.
But notice what have we seen

00:24:17.966 --> 00:24:20.296
here?
This is Prisoner's Dilemma that

00:24:20.296 --> 00:24:22.779
we've seen many,
many times, that's almost

00:24:22.779 --> 00:24:25.079
unbearably familiar to most of
you.

00:24:25.079 --> 00:24:29.187
Now here's Prisoner's Dilemma
as represented the way in which

00:24:29.187 --> 00:24:32.200
we talked about games before the
mid-term.

00:24:32.200 --> 00:24:38.161
But here is the same game.
This is also Prisoner's

00:24:38.161 --> 00:24:40.210
Dilemma, but now I've drawn it
in a tree.

00:24:40.210 --> 00:24:45.009
Here I drew it in a matrix,
and here I drew it in a tree.

00:24:45.009 --> 00:24:47.569
Now that we have information
sets we can represent all the

00:24:47.569 --> 00:24:49.680
games that we've studied before
the mid-term.

00:24:49.680 --> 00:24:53.265
All the games that were
simultaneous move games we can

00:24:53.265 --> 00:24:56.580
study using trees by building
information sets.

00:24:56.580 --> 00:25:01.116
What's the key observation here?
It doesn't really matter

00:25:01.116 --> 00:25:05.430
whether Player 1 moves first or
Player 2 moves first.

00:25:05.430 --> 00:25:08.978
It doesn't really matter what's
happening temporally in this

00:25:08.978 --> 00:25:13.009
game.
What matters is information.

00:25:13.009 --> 00:25:15.961
When Player 1 makes her move
she doesn't know what Player 2's

00:25:15.961 --> 00:25:19.533
going to do.
She doesn't know what 2 is

00:25:19.533 --> 00:25:21.835
doing.
And when Player 2 makes her

00:25:21.835 --> 00:25:25.393
move she doesn't know what 1 is
doing: and that's a simultaneous

00:25:25.393 --> 00:25:27.539
move game, even if time is
passing.

00:25:27.539 --> 00:25:32.839
The key is information,
not time.

00:25:32.839 --> 00:25:36.476
Now, on the way here I snuck
something in and I should just

00:25:36.476 --> 00:25:40.859
tell you what I snuck in.
I snuck in what a strategy is.

00:25:40.859 --> 00:25:43.887
I went from a tree,
or an extensive form game,

00:25:43.887 --> 00:25:47.318
to a normal form game,
and we've already done that a

00:25:47.318 --> 00:25:50.009
couple of times before in the
class.

00:25:50.009 --> 00:25:51.869
We did it with the entry game,
for example,

00:25:51.869 --> 00:25:54.581
about a week ago.
But there all we did was we

00:25:54.581 --> 00:25:58.880
defined what a strategy was in a
game of perfect information.

00:25:58.880 --> 00:26:02.214
And just to remind you,
a strategy in a game of perfect

00:26:02.214 --> 00:26:04.869
information is a complete plan
of action.

00:26:04.869 --> 00:26:09.912
It tells the player in question
what they should do at each of

00:26:09.912 --> 00:26:12.854
their nodes.
But now we have to be a bit

00:26:12.854 --> 00:26:15.245
more careful.
We can't have a strategy--once

00:26:15.245 --> 00:26:17.591
we move to imperfect
information--we can't have a

00:26:17.591 --> 00:26:20.230
strategy tell you what to do at
each of your nodes,

00:26:20.230 --> 00:26:23.829
because you yourself can't
distinguish between those nodes.

00:26:23.829 --> 00:26:27.145
So we need to adapt our
definition of a strategy to make

00:26:27.145 --> 00:26:30.160
it appropriate for these more
complicated games.

00:26:30.160 --> 00:26:33.869
So let's just adapt it in the
obvious way.

00:26:33.869 --> 00:26:41.160
Definition, I'll just define
pure strategies for now.

00:26:41.160 --> 00:26:54.341
A pure strategy of Player i is
a complete plan of action--so

00:26:54.341 --> 00:27:01.840
this is the same as before.
But what does it mean to be a

00:27:01.840 --> 00:27:04.238
complete plan of action?
It can't tell me what to do at

00:27:04.238 --> 00:27:06.533
every single node.
That can't be the right

00:27:06.533 --> 00:27:09.200
definition because I can't
distinguish nodes.

00:27:09.200 --> 00:27:12.747
So all that it can be doing is
telling me what to do at each

00:27:12.747 --> 00:27:20.506
information set.
So it specifies what Player i

00:27:20.506 --> 00:27:33.859
should do--should perhaps is the
wrong word, let's just say

00:27:33.859 --> 00:27:45.370
will do at each of i's
information sets.

00:27:52.069 --> 00:27:56.083
So if you go back about a week
you'll see almost exactly the

00:27:56.083 --> 00:28:00.012
same definition of a strategy,
but the previous definition

00:28:00.012 --> 00:28:03.907
told i what to do at each node
and this one just tells i what

00:28:03.907 --> 00:28:07.646
to do at each information set.
What I'm doing is tidying up

00:28:07.646 --> 00:28:10.667
the previous definition so we
can apply it to the more

00:28:10.667 --> 00:28:13.859
interesting games we're going to
look at from now on.

00:28:13.859 --> 00:28:17.148
So now we have the definition
of a strategy,

00:28:17.148 --> 00:28:20.820
we can carry on the idea we've
just seen here.

00:28:20.820 --> 00:28:24.067
So what's the idea here?
Any game you give me in the

00:28:24.067 --> 00:28:27.926
form of a tree,
I can rewrite the game in the

00:28:27.926 --> 00:28:32.305
form of a matrix.
So let's see some other

00:28:32.305 --> 00:28:34.930
examples of that idea.

00:28:52.039 --> 00:28:54.956
A lot of new ideas today,
but some of them are just

00:28:54.956 --> 00:28:57.931
tidying up and kind of
bookkeeping, and some of them

00:28:57.931 --> 00:29:03.140
are more interesting.
So let's start with a tree.

00:29:03.140 --> 00:29:05.192
Let's make it a slightly more
interesting tree than the one

00:29:05.192 --> 00:29:07.616
we've seen before.
Actually that's too

00:29:07.616 --> 00:29:11.500
interesting, let's go a little
bit slower.

00:29:11.500 --> 00:29:20.208
Let's have Player 1 have two
choices, and Player 2 have three

00:29:20.208 --> 00:29:22.621
choices.
So here's a simple tree,

00:29:22.621 --> 00:29:24.785
and let's put some payoffs in,
but let me just put some

00:29:24.785 --> 00:29:26.910
letters in for payoffs rather
than put in numbers.

00:29:26.910 --> 00:29:32.009
So we'll call these actions up
and down.

00:29:32.009 --> 00:29:33.562
And we'll call this action
left, middle,

00:29:33.562 --> 00:29:36.220
and right;
and left, middle, and right.

00:29:36.220 --> 00:29:42.190
And we'll call the payoffs
(A1,A2), (B1,B2),

00:29:42.190 --> 00:29:47.466
(C1,C2), (D1,D2),
(E1,E2), and (F1,F2),

00:29:47.466 --> 00:29:54.359
so just to keep track of it.
I want to show you how we take

00:29:54.359 --> 00:29:57.380
this tree and turn it into a
matrix.

00:29:57.380 --> 00:30:00.640
So how do we turn it into a
matrix?

00:30:00.640 --> 00:30:04.143
Well we look and say how many
strategies has Player 1 got and

00:30:04.143 --> 00:30:06.420
how many strategies has Player 2
got?

00:30:06.420 --> 00:30:10.569
So Player 1 here just has two
strategies, up or down.

00:30:10.569 --> 00:30:15.256
And Player 2 has three
strategies, either left,

00:30:15.256 --> 00:30:18.466
middle or right.
Again they can't choose

00:30:18.466 --> 00:30:22.055
separately at these two nodes,
so they really just have three

00:30:22.055 --> 00:30:24.150
choices: left,
middle, or right.

00:30:24.150 --> 00:30:28.583
Leave a space here in your
notebook, leave a space to the

00:30:28.583 --> 00:30:33.650
right here, and let's draw the
matrix for this tree down here.

00:30:33.650 --> 00:30:39.842
So here's my matrix.
Player 2 is choosing left,

00:30:39.842 --> 00:30:46.430
middle, or right and Player 1
is choosing up or down.

00:30:46.430 --> 00:30:51.039
The payoffs go in the obvious
way.

00:30:51.039 --> 00:30:59.395
So (A1,A2), (B1,B2),
(C1,C2), (D1,D2),

00:30:59.395 --> 00:31:06.727
(E1,E2), and (F1,F2).
So everyone understand that was

00:31:06.727 --> 00:31:10.658
just a simple exercise to show
we can go from an extensive

00:31:10.658 --> 00:31:12.864
form, a tree,
to the normal form,

00:31:12.864 --> 00:31:17.640
a matrix?
That was easy right.

00:31:17.640 --> 00:31:20.490
However, there's an interesting
thing here.

00:31:20.490 --> 00:31:25.039
It isn't obvious that,
if I just gave you the matrix,

00:31:25.039 --> 00:31:30.289
it isn't obvious that this is
the tree from which it came.

00:31:30.289 --> 00:31:35.753
Let me draw another tree that I
claim corresponds to that same

00:31:35.753 --> 00:31:38.329
matrix.
Here's another tree.

00:31:38.329 --> 00:31:42.452
So this other tree instead of
having Player 1 move first,

00:31:42.452 --> 00:31:45.470
it's going to have Player 2
move first.

00:31:45.470 --> 00:31:50.256
Player 2 better have three
choices and we better call them

00:31:50.256 --> 00:31:52.440
left, middle,
and right.

00:31:52.440 --> 00:31:57.710
And it better be the case that
Player 1 is in one big

00:31:57.710 --> 00:32:02.980
information set and Player 1
only has two choices,

00:32:02.980 --> 00:32:08.510
which we'll call up and down
because that's what this matrix

00:32:08.510 --> 00:32:12.191
is telling us.
It's telling us Player 2 had

00:32:12.191 --> 00:32:15.619
three choices and Player 1 had
two choices.

00:32:15.619 --> 00:32:18.400
So that's true in the matrix
I've drawn.

00:32:18.400 --> 00:32:21.319
And let's be a little bit
careful where the payoffs are.

00:32:21.319 --> 00:32:23.849
So (left, up),
that's easy:

00:32:23.849 --> 00:32:31.582
that's going to be (A1,A2).
(Left, down) is going to be

00:32:31.582 --> 00:32:36.220
(D1,D2).
(Middle, up) is going to be

00:32:36.220 --> 00:32:39.929
(B1,B2).
(Middle, down) is going to be

00:32:39.929 --> 00:32:43.616
(E1,E2).
(Right, up) is going to be

00:32:43.616 --> 00:32:48.980
(C1,C2) and (right,down) is
going to be (F1,F2).

00:32:48.980 --> 00:32:51.985
So I have to be a little bit
careful where I put in the

00:32:51.985 --> 00:32:54.880
payoffs, but I think that's
right what I just did.

00:32:54.880 --> 00:32:59.049
Notice that what I did here:
I started from this tree.

00:32:59.049 --> 00:33:00.953
It was an easy operation to
construct the matrix,

00:33:00.953 --> 00:33:02.420
so easy that it was kind of
boring,

00:33:02.420 --> 00:33:06.112
and it's not that hard to see
that I can go the other way and

00:33:06.112 --> 00:33:08.819
construct this other tree from
the matrix.

00:33:08.819 --> 00:33:12.630
This is also a tree in which
Player 2 has three strategies

00:33:12.630 --> 00:33:14.902
and Player 1,
this is all Player 1,

00:33:14.902 --> 00:33:19.397
has two strategies.
So what, what have we learned

00:33:19.397 --> 00:33:22.666
from this?
Well let's look at this more

00:33:22.666 --> 00:33:26.102
carefully.
This tree is a tree in which

00:33:26.102 --> 00:33:31.473
Player 1 moved first and Player
2 didn't observe Player 1's

00:33:31.473 --> 00:33:34.920
choice.
Is that right?

00:33:34.920 --> 00:33:40.866
This is a tree in which Player
2 moved first and Player 1

00:33:40.866 --> 00:33:46.540
didn't observe 2's choice.
What are we noticing here?

00:33:46.540 --> 00:33:51.501
They're really the same game.
There's no difference between

00:33:51.501 --> 00:33:55.660
these two games.
They're really the same game.

00:33:55.660 --> 00:33:59.637
It doesn't matter whether it's
Player 1 moving first and Player

00:33:59.637 --> 00:34:02.140
2 who's unable to observe 1's
choice,

00:34:02.140 --> 00:34:06.650
or whether it's Player 2 who is
moving first and Player 1 who is

00:34:06.650 --> 00:34:09.818
unable to observe 2's choice.
All that matters is that

00:34:09.818 --> 00:34:12.189
neither player could observe the
other person's choice before

00:34:12.189 --> 00:34:17.151
they got to move,
they both correspond to exactly

00:34:17.151 --> 00:34:21.039
the same game.
So what's the message here?

00:34:21.039 --> 00:34:22.819
The message is something we've
talked about before in the

00:34:22.819 --> 00:34:24.630
class, but I'm trying to be a
bit more formal about it.

00:34:24.630 --> 00:34:38.187
The message is that what
matters is information,

00:34:38.187 --> 00:34:45.017
not time.
Clearly, time isn't an

00:34:45.017 --> 00:34:49.095
irrelevant thing.
I couldn't know something that

00:34:49.095 --> 00:34:50.687
hasn't happened yet,
so time is going to have

00:34:50.687 --> 00:34:52.604
effects in information,
but ultimately what matters is

00:34:52.604 --> 00:34:55.379
information.
What do I know and when did I

00:34:55.379 --> 00:34:58.679
know it?
So the key idea that we're

00:34:58.679 --> 00:35:03.229
trying to capture with these
information sets,

00:35:03.229 --> 00:35:07.145
just to repeat,
is what did the player know and

00:35:07.145 --> 00:35:10.728
when did they know it,
that famous expression from the

00:35:10.728 --> 00:35:13.734
Watergate Trials.
Okay, let's look at a more

00:35:13.734 --> 00:35:16.979
interesting example,
and see if we can actually talk

00:35:16.979 --> 00:35:19.970
about what's going to happen in
these games.

00:35:23.380 --> 00:35:26.115
So by the end of today I want
to have enough machinery so we

00:35:26.115 --> 00:35:28.618
can actually start analyzing
these games and predicting

00:35:28.618 --> 00:35:29.870
what's going to happen.

00:35:41.179 --> 00:35:45.429
So as we go on we'll get more
complicated, so let's get a

00:35:45.429 --> 00:35:49.350
little bit more complicated now.
Once again, here's a game in

00:35:49.350 --> 00:35:52.366
which Player 1 is going to have
two choices and we'll call those

00:35:52.366 --> 00:35:54.644
choices Up or Down.
It's getting to be a familiar

00:35:54.644 --> 00:35:56.563
theme.
Once again, Player 2 is going

00:35:56.563 --> 00:35:59.420
to move next and now,
this time, just to keep things

00:35:59.420 --> 00:36:03.138
simple,
we'll have Player 2 just have

00:36:03.138 --> 00:36:08.039
two choices left or right,
or left or right.

00:36:08.039 --> 00:36:10.043
But now I want to make things
more interesting,

00:36:10.043 --> 00:36:13.775
let's have Player 1 move again.
So if Up, right happens then

00:36:13.775 --> 00:36:18.612
Player 1 gets to move again,
in which case Player 1 is going

00:36:18.612 --> 00:36:21.780
to choose up or down.
I'll use a [little]

00:36:21.780 --> 00:36:24.561
u and a [little]
d to distinguish it from the

00:36:24.561 --> 00:36:27.090
ones further to the left of the
tree.

00:36:27.090 --> 00:36:30.690
So this is a very simple tree,
Player 1 moves first.

00:36:30.690 --> 00:36:35.650
Player 2 moves second--I forgot
to put a 2 in here.

00:36:35.650 --> 00:36:38.141
And then if (Up,
right) has occurred then Player

00:36:38.141 --> 00:36:41.880
1 gets to move again.
Let's put some payoffs in.

00:36:41.880 --> 00:36:51.177
So let's have this be (4,2),
(0,0), (1,4),

00:36:51.177 --> 00:36:58.555
(0,0) again and (2,4).
Let's just carry on analyzing

00:36:58.555 --> 00:37:02.494
this game using exactly the
methods we've been talking about

00:37:02.494 --> 00:37:06.832
in the class today so far.
So the first thing I'm going to

00:37:06.832 --> 00:37:10.010
do is I want to turn this into a
matrix.

00:37:10.010 --> 00:37:13.783
The first thing to do on that
route is to try and figure out

00:37:13.783 --> 00:37:17.748
how many strategies does Player
1 have, and how many strategies

00:37:17.748 --> 00:37:21.233
does Player 2 have.
Before we even do that let's

00:37:21.233 --> 00:37:25.260
try and figure out how many
information sets they have.

00:37:25.260 --> 00:37:29.757
So I claim that Player 2 just
has the one information set,

00:37:29.757 --> 00:37:32.388
is that right?
But Player 1 has two

00:37:32.388 --> 00:37:36.206
information sets.
This information set at the

00:37:36.206 --> 00:37:41.284
beginning of the game and then
potentially this second

00:37:41.284 --> 00:37:44.829
information further down the
tree.

00:37:44.829 --> 00:37:49.483
A strategy must tell you--a
strategy must tell the player

00:37:49.483 --> 00:37:53.389
what to do at each of their
information sets.

00:37:53.389 --> 00:38:03.260
So the strategies for Player 1
are what?

00:38:03.260 --> 00:38:09.136
Well one strategy is Up and
then up again,

00:38:09.136 --> 00:38:14.869
another strategy is Up and then
right,

00:38:14.869 --> 00:38:20.006
another strategy is Down and
then up, and a fourth strategy

00:38:20.006 --> 00:38:23.688
is Down and then right.
Notice something which we've

00:38:23.688 --> 00:38:26.678
seen already in this class
before: there's a little bit of

00:38:26.678 --> 00:38:31.390
a redundancy here.
These two Down strategies force

00:38:31.390 --> 00:38:38.960
the game into a part of the tree
where this node will not arise.

00:38:38.960 --> 00:38:42.643
To put it less grandly,
if Player 1 chooses Down,

00:38:42.643 --> 00:38:47.172
she knows that she won't have
to make a choice of up or down

00:38:47.172 --> 00:38:48.170
later on.

00:38:52.190 --> 00:38:56.119
Yes.
Sorry--thank you.

00:38:56.119 --> 00:38:58.670
Let me start again since that
was the wrong notation.

00:38:58.670 --> 00:39:02.440
So Player 1's choices are Up
and then up;

00:39:02.440 --> 00:39:05.580
Up and then down;
Down and then up;

00:39:05.580 --> 00:39:09.780
and Down and then down.
Thanks Jake, sorry.

00:39:09.780 --> 00:39:12.909
Now, why are there four
strategies?

00:39:12.909 --> 00:39:16.052
It's a bit of a surprise
perhaps because if Player 1

00:39:16.052 --> 00:39:19.934
chooses Down then she knows she
will never have to make a choice

00:39:19.934 --> 00:39:22.945
at her second information set.
Nevertheless,

00:39:22.945 --> 00:39:26.678
when we write down a strategy
we have to write down an

00:39:26.678 --> 00:39:30.059
instruction for every single
information set.

00:39:30.059 --> 00:39:32.880
So we include both of those
strategies.

00:39:32.880 --> 00:39:35.920
Strategies for Player 2 here
are a little bit easier.

00:39:35.920 --> 00:39:39.929
Strategies for Player 2 are
just left or right.

00:39:39.929 --> 00:39:44.719
With that in mind,
let's draw up the matrix.

00:39:44.719 --> 00:39:54.800
So Player 1 here has four
strategies and they are (Up,

00:39:54.800 --> 00:40:02.028
up), (Up, down),
(Down, up), and (Down,

00:40:02.028 --> 00:40:06.429
down).
Player 2 has two strategies,

00:40:06.429 --> 00:40:11.190
and they are left or right.
Everyone okay so far?

00:40:11.190 --> 00:40:14.659
We're just basically
transferring things across,

00:40:14.659 --> 00:40:18.644
and then we have to transfer
the payoffs across so (Up,

00:40:18.644 --> 00:40:22.039
up) followed by left is going
to be (4,2).

00:40:22.039 --> 00:40:26.420
(Up, up) followed by right is
going to be (0,0).

00:40:26.420 --> 00:40:35.117
So Up, right, up is (0,0).
((Up, down),

00:40:35.117 --> 00:40:41.454
left) is the same as Up,
left, down so it's going to be

00:40:41.454 --> 00:40:43.516
(4,2).
((Up, down),

00:40:43.516 --> 00:40:48.214
right) is going to be Up,
right, down so it's going to be

00:40:48.214 --> 00:40:49.989
(1,4).
((Down, up),

00:40:49.989 --> 00:40:54.835
left) is the same as saying
Down, left so it's going to be

00:40:54.835 --> 00:40:57.239
(0,0).
((Down, up),

00:40:57.239 --> 00:41:02.569
right) is going to be (2,4).
((Down, down),

00:41:02.569 --> 00:41:07.265
left) is once again going to be
(0,0) and ((Down,

00:41:07.265 --> 00:41:12.059
down), right) is once again
going to be (2,4).

00:41:12.059 --> 00:41:13.659
Does everyone see how I got the
payoffs?

00:41:13.659 --> 00:41:16.808
I just used those strategies to
tell me which way I'm going

00:41:16.808 --> 00:41:18.816
through the tree.
If I combine them,

00:41:18.816 --> 00:41:21.800
it gives me an entire path and
gets me to an end node.

00:41:21.800 --> 00:41:25.960
You can see this redundancy we
talked about.

00:41:25.960 --> 00:41:29.863
We pointed out that these
things are kind of the same

00:41:29.863 --> 00:41:34.067
thing, and you can see in the
matrix that the bottom four

00:41:34.067 --> 00:41:37.219
squares of the matrix have
repetition.

00:41:37.219 --> 00:41:40.550
This row is the same as that
row.

00:41:40.550 --> 00:41:44.719
Everyone happy with that?
Okay, we have a matrix.

00:41:44.719 --> 00:41:50.469
Let's analyze it by finding the
Nash equilibria in this game.

00:41:50.469 --> 00:41:53.179
So to find the Nash equilibria
in this game,

00:41:53.179 --> 00:41:55.510
we're going to find best
responses.

00:41:55.510 --> 00:41:59.357
So let's just start by asking
what is the best response to

00:41:59.357 --> 00:42:02.166
left?
So if Player 2 chooses left,

00:42:02.166 --> 00:42:06.338
Player 1's best response is
either (Up, up) or (Up,

00:42:06.338 --> 00:42:09.619
down).
If Player 2 chooses right then

00:42:09.619 --> 00:42:12.991
Player 1's best response is
either (Down,

00:42:12.991 --> 00:42:14.930
up) or (Down,
down).

00:42:14.930 --> 00:42:19.302
Everyone okay so far?
If Player 1 chooses (Up,

00:42:19.302 --> 00:42:23.840
up) then Player 2 is going to
choose left.

00:42:23.840 --> 00:42:28.346
If Player 1 chooses (Up,
down) then Player 2's best

00:42:28.346 --> 00:42:32.336
response is to choose right.
If Player 1 chooses (Down,

00:42:32.336 --> 00:42:35.010
up) then Player 2's best
response is to choose right.

00:42:35.010 --> 00:42:37.328
And if Player 1 chooses (Down,
down) then Player 2's best

00:42:37.328 --> 00:42:40.465
response is to choose right.
So this is kind of slow and I

00:42:40.465 --> 00:42:43.210
just want to be careful.
I'm going slow for a reason.

00:42:43.210 --> 00:42:45.254
We're going to gradually get
harder, and I want to be a

00:42:45.254 --> 00:42:47.068
little bit careful.
I can see people are looking a

00:42:47.068 --> 00:42:51.039
little sleepy around the room.
I know it's kind of lunchtime.

00:42:51.039 --> 00:42:52.864
If you see your neighbor
getting sleepy give them a good

00:42:52.864 --> 00:42:54.755
sharp elbow because I think this
isn't a good time to fall

00:42:54.755 --> 00:42:56.195
asleep.
Sometimes I'm worried you're

00:42:56.195 --> 00:42:58.116
going to miss something,
and it's only going to get

00:42:58.116 --> 00:42:59.730
harder and you're going to miss
things.

00:42:59.730 --> 00:43:03.300
Alright, so what are the Nash
equilibria in this game?

00:43:03.300 --> 00:43:08.655
We know how to do that.
The Nash equilibria must be

00:43:08.655 --> 00:43:14.530
(Up, up) followed by left.
Make sure I get them all.

00:43:14.530 --> 00:43:26.693
(Down, up) followed by right;
and (Down, down) followed by

00:43:26.693 --> 00:43:30.983
right.
I want these three Nash

00:43:30.983 --> 00:43:34.849
equilibria.
Okay, so that wasn't such a big

00:43:34.849 --> 00:43:36.434
deal.
I've got three equilibria in

00:43:36.434 --> 00:43:38.312
this game.
And if I'd simply given you

00:43:38.312 --> 00:43:40.592
this game in the first half of
the semester,

00:43:40.592 --> 00:43:43.244
I hadn't shown you the
tree--you've never seen this

00:43:43.244 --> 00:43:46.055
tree--I just gave you this game
and said find the Nash

00:43:46.055 --> 00:43:49.232
equilibria in this game,
and that had been a question on

00:43:49.232 --> 00:43:51.110
the mid-term,
we'd have stopped here.

00:43:51.110 --> 00:43:53.052
We'd have said:
okay, I found these Nash

00:43:53.052 --> 00:43:55.407
equilibria.
Maybe you'd have gone on and

00:43:55.407 --> 00:43:59.066
found mixed ones I don't know
but essentially we'd be done at

00:43:59.066 --> 00:44:00.940
this point.
Let's say again.

00:44:00.940 --> 00:44:03.822
If we'd started as we would
have done before the mid-term

00:44:03.822 --> 00:44:06.704
with me giving you a payoff
matrix and asking you to find

00:44:06.704 --> 00:44:09.969
the Nash equilibria,
then at this point we'd be done.

00:44:09.969 --> 00:44:12.637
We'd have found the three Nash
equilibria, at least the three

00:44:12.637 --> 00:44:15.977
pure-strategy Nash equilibria.
The problem is if we go back to

00:44:15.977 --> 00:44:19.194
the tree, to the dynamic
game--the game that has some

00:44:19.194 --> 00:44:22.719
action going on in it--and
actually look at this game,

00:44:22.719 --> 00:44:26.869
it's not clear that all of
these Nash equilibria are really

00:44:26.869 --> 00:44:30.692
equally plausible.
Can anyone see what might be a

00:44:30.692 --> 00:44:34.920
bit implausible about some of
these Nash equilibria?

00:44:34.920 --> 00:44:41.510
What's implausible about them?
Any taker on this?

00:44:41.510 --> 00:44:46.860
Well, let's look at this game
again.

00:44:46.860 --> 00:44:48.480
This game is a little bit
complicated.

00:44:48.480 --> 00:44:51.018
It's not clear what one should
do here perhaps,

00:44:51.018 --> 00:44:54.219
and perhaps it's not clear what
Player 2 should do here,

00:44:54.219 --> 00:44:56.934
because after all,
Player 2 doesn't know where he

00:44:56.934 --> 00:44:59.309
is and he doesn't know whether
Player 1,

00:44:59.309 --> 00:45:02.474
if Player 1 gets to move again
is going to choose up or down

00:45:02.474 --> 00:45:07.300
but: what's the but?
Can we get a mike on Patrick?

00:45:07.300 --> 00:45:10.317
Student: So if you look
at it backwards,

00:45:10.317 --> 00:45:13.269
you can cross out Player 1's
second choice.

00:45:13.269 --> 00:45:16.587
He's always going to choose
down so that's (1,4) at that

00:45:16.587 --> 00:45:18.601
node.
So then you know Player 2 is

00:45:18.601 --> 00:45:22.070
always going to choose right
because his payoff is always 4.

00:45:22.070 --> 00:45:25.893
So then Player 1's not going to
have--I mean Player 1 knows

00:45:25.893 --> 00:45:30.500
which to choose then.
He's going to choose down.

00:45:30.500 --> 00:45:31.450
Professor Ben Polak:
Good.

00:45:31.450 --> 00:45:32.906
So let's just walk through what
Patrick just said.

00:45:32.906 --> 00:45:35.239
That's very good.
So if we just analyze this game

00:45:35.239 --> 00:45:37.554
the way we've been taught to
analyze trees,

00:45:37.554 --> 00:45:39.760
essentially using backward
induction,

00:45:39.760 --> 00:45:44.715
we first of all observe that if
Player 1 gets to move again here

00:45:44.715 --> 00:45:48.186
she'll know where she is,
and she'll know she's choosing

00:45:48.186 --> 00:45:50.850
between 1 and 0.
She's going to choose down.

00:45:50.850 --> 00:45:53.730
Is that right?
She's going to choose down.

00:45:53.730 --> 00:45:56.833
But knowing this,
Player 2, even though Player 2

00:45:56.833 --> 00:46:00.465
doesn't know where he is,
Player 2 actually has a pretty

00:46:00.465 --> 00:46:05.114
easy choice to make.
He knows that if he chooses

00:46:05.114 --> 00:46:11.812
left, he either gets 2 or 0,
but if he chooses right he gets

00:46:11.812 --> 00:46:14.800
4.
4 is bigger than 2.

00:46:14.800 --> 00:46:19.750
4 is bigger than 0.
So Player 2 is actually going

00:46:19.750 --> 00:46:21.974
to choose right.
And given that,

00:46:21.974 --> 00:46:25.506
given that Player 2 is going to
choose right,

00:46:25.506 --> 00:46:29.199
Player 1 is essentially
choosing between 1,

00:46:29.199 --> 00:46:31.464
if she chooses up,
which would be followed by

00:46:31.464 --> 00:46:34.625
right and down;
and 2, which is what happened

00:46:34.625 --> 00:46:37.699
if she chooses down followed by
right.

00:46:37.699 --> 00:46:40.622
So this game we can essentially
analyze through backward

00:46:40.622 --> 00:46:42.687
induction.
It's not quite backward

00:46:42.687 --> 00:46:46.598
induction because we had to add
in this little piece about 2 not

00:46:46.598 --> 00:46:48.969
knowing where she was,
but it turned out,

00:46:48.969 --> 00:46:51.335
no matter where she was,
she had a dominant strategy,

00:46:51.335 --> 00:46:54.156
she had a better strategy once
she figures out that Player 1 is

00:46:54.156 --> 00:46:56.599
going to choose down.
Is that right?

00:46:56.599 --> 00:46:59.189
If we go back and look at these
Nash equilibria,

00:46:59.189 --> 00:47:01.889
the prediction that we just
got, which is what?

00:47:01.889 --> 00:47:05.591
Down for Player 1,
right for Player 2 and then

00:47:05.591 --> 00:47:13.349
down again for Player 1.
That strategy is this one.

00:47:13.349 --> 00:47:18.570
So one of these Nash equilibria
corresponds to our sensible

00:47:18.570 --> 00:47:23.070
analysis of this tree,
but the other two do not.

00:47:23.070 --> 00:47:30.318
These two Nash equilibria are
inconsistent with backward

00:47:30.318 --> 00:47:33.874
induction.
They're perfectly good Nash

00:47:33.874 --> 00:47:37.968
equilibria, if we'd given you
this matrix at the mid-term

00:47:37.968 --> 00:47:41.039
you'd have thought that it's
just fine.

00:47:41.039 --> 00:47:45.931
But it turns out both of these
Nash equilibria involve Player 1

00:47:45.931 --> 00:47:50.034
choosing a strategy up,
that we know that Player 1 is

00:47:50.034 --> 00:47:54.281
not going to do if reached.
And one of these Nash

00:47:54.281 --> 00:47:59.000
equilibria involves Player 2
choosing a strategy left,

00:47:59.000 --> 00:48:02.695
that, in fact,
she's only choosing because she

00:48:02.695 --> 00:48:05.980
thinks Player 1 is going to
choose up,

00:48:05.980 --> 00:48:08.733
which, in fact,
we just argued Player 1 is not

00:48:08.733 --> 00:48:10.884
going to do.
The people at the back,

00:48:10.884 --> 00:48:14.092
there's a little bit too much
volume bouncing off the wall

00:48:14.092 --> 00:48:16.455
there, so just keep it down in
the balcony.

00:48:16.455 --> 00:48:19.296
Thank you.
So these two Nash equilibria,

00:48:19.296 --> 00:48:22.738
they're perfectly good Nash
equilibria to the game,

00:48:22.738 --> 00:48:26.850
but they don't make any sense.
They're completely inconsistent

00:48:26.850 --> 00:48:29.700
with the way we've learned to
talk about games.

00:48:29.700 --> 00:48:33.039
Now we've seen this before.
We saw it in the entry game.

00:48:33.039 --> 00:48:34.960
This is a much more
complicated, much more

00:48:34.960 --> 00:48:37.209
interesting example,
but we saw in the entry game

00:48:37.209 --> 00:48:39.739
when there was one entrant
entering into a market,

00:48:39.739 --> 00:48:43.061
that in that game there were
actually two Nash equilibria and

00:48:43.061 --> 00:48:45.219
one of them we argued was
incredible.

00:48:45.219 --> 00:48:48.361
Here it's a bit more
complicated, but nevertheless,

00:48:48.361 --> 00:48:51.817
these two equilibria seem like
bogus equilibria or phony

00:48:51.817 --> 00:48:54.055
equilibria,
or equilibria we wouldn't

00:48:54.055 --> 00:48:56.758
really believe in.
The reason we don't believe in

00:48:56.758 --> 00:48:59.908
them is that they don't
correspond to backward induction

00:48:59.908 --> 00:49:03.460
and our common sense intuition
is about backward induction.

00:49:03.460 --> 00:49:10.171
So we need some new notion,
the aim of the class has been

00:49:10.171 --> 00:49:12.360
what?
We want to be able to model

00:49:12.360 --> 00:49:15.460
games that have both sequential
moves and simultaneous moves,

00:49:15.460 --> 00:49:19.123
and we want to be able to look
at the games and use our

00:49:19.123 --> 00:49:22.039
techniques from both halves of
the class.

00:49:22.039 --> 00:49:24.656
We want to be able to use the
idea of Nash equilibrium from

00:49:24.656 --> 00:49:27.536
the first half of the class,
and we want to be able to use

00:49:27.536 --> 00:49:30.536
the idea of backward induction
from the second half of the

00:49:30.536 --> 00:49:32.286
class.
But what we're learning here is

00:49:32.286 --> 00:49:34.387
that Nash equilibrium,
if we just take the notion of

00:49:34.387 --> 00:49:36.776
Nash equilibrium and plunk it
down on these sequential move

00:49:36.776 --> 00:49:39.511
games,
it will produce equilibria that

00:49:39.511 --> 00:49:42.849
don't make any sense.
So we need a more refined

00:49:42.849 --> 00:49:46.425
notion of equilibrium,
a better notion of equilibrium

00:49:46.425 --> 00:49:50.483
than just Nash equilibrium to
deal with these settings where

00:49:50.483 --> 00:49:54.059
we have both simultaneity and
sequential moves.

00:49:54.059 --> 00:49:56.953
We have both some perfect
information and some imperfect

00:49:56.953 --> 00:50:00.940
information.
That was one example.

00:50:00.940 --> 00:50:04.651
Let me give you a second
example if that example wasn't

00:50:04.651 --> 00:50:10.840
yet convincing.
Let me leave that example up.

00:50:19.559 --> 00:50:23.597
So far we've seen that Nash
equilibrium gets us into trouble

00:50:23.597 --> 00:50:27.840
in these games and we've seen it
got us into trouble because it

00:50:27.840 --> 00:50:32.219
basically conflicted with our
backward induction intuitions.

00:50:32.219 --> 00:50:35.466
Now I'm going to show you a
different game and we're going

00:50:35.466 --> 00:50:38.371
to see again that Nash
equilibria is going to get us

00:50:38.371 --> 00:50:40.046
into trouble.
This is a going to be a

00:50:40.046 --> 00:50:42.391
three-player game.
We will get more complicated as

00:50:42.391 --> 00:50:45.328
we go along.
So another example,

00:50:45.328 --> 00:50:50.885
this time with three players.
So as the examples get harder I

00:50:50.885 --> 00:50:54.719
need you to be more alert to see
if you can follow them.

00:50:54.719 --> 00:50:59.010
So this is a more complicated
tree.

00:50:59.010 --> 00:51:04.448
Here's a tree in which Player 1
moves first and chooses between

00:51:04.448 --> 00:51:09.010
A or B and if Player 1 chooses A
the game is over,

00:51:09.010 --> 00:51:12.929
she gets 1, and the other two
players get nothing.

00:51:12.929 --> 00:51:19.896
If she chooses B then Players 2
and 3 get to play a little game

00:51:19.896 --> 00:51:26.749
down here in which 2 moves first
in this little sub-game and 3

00:51:26.749 --> 00:51:30.063
moves second,
and the payoffs in this

00:51:30.063 --> 00:51:33.657
sub-game are as follows.
Again, using Player 1's payoff

00:51:33.657 --> 00:51:39.141
first.
So there's (0,1,

00:51:39.141 --> 00:51:49.144
1), (0,0, 2),
(0,0, -1) and (2,1,

00:51:49.144 --> 00:51:52.995
0).
So this is quite a complicated

00:51:52.995 --> 00:51:57.077
game, it's got three players for
a start, so it's going to be a

00:51:57.077 --> 00:52:00.039
little bit hard to draw it up in
a matrix,

00:52:00.039 --> 00:52:02.369
but nevertheless,
let me try and do that.

00:52:02.369 --> 00:52:07.300
So I claim that we can model
this game as follows.

00:52:07.300 --> 00:52:14.377
It's a game in which Player 1
is choosing which matrix,

00:52:14.377 --> 00:52:19.619
let's call this Matrix A and
Matrix B.

00:52:19.619 --> 00:52:25.614
Player 1 is choosing the
matrix, Player 2 is choosing,

00:52:25.614 --> 00:52:31.722
let's call them up and down:
Player 2 is choosing up or

00:52:31.722 --> 00:52:41.878
down.
And Player 3 is choosing left

00:52:41.878 --> 00:52:48.380
or right.
Notice in this game Players 2

00:52:48.380 --> 00:52:55.659
and 3 actually can observe the
choice of A or B to start with.

00:52:55.659 --> 00:52:58.539
So let's try and put in the
payoffs in the correct places.

00:52:58.539 --> 00:53:01.050
It's not always easy to do,
but let's try.

00:53:01.050 --> 00:53:03.601
So A is easy,
if Player 1 chooses A,

00:53:03.601 --> 00:53:07.610
then the payoffs in this matrix
are somewhat trivial.

00:53:07.610 --> 00:53:12.564
Because if Player 1 chooses A,
whatever anyone else does the

00:53:12.564 --> 00:53:14.160
payoff is 1,0,
0.

00:53:18.530 --> 00:53:25.010
Somewhat uninteresting matrix
over there.

00:53:25.010 --> 00:53:28.090
But if Player 1 chooses B then
life gets more interesting.

00:53:28.090 --> 00:53:34.449
Then if Player 2 chooses up and
Player 3 chooses left,

00:53:34.449 --> 00:53:38.650
we end up here so that's
(0,1,1).

00:53:38.650 --> 00:53:46.891
If Player 2 chooses--this is 2
and this is 3--if Player 2

00:53:46.891 --> 00:53:55.574
chooses up and Player 3 chooses
right then we're at (0,0,2),

00:53:55.574 --> 00:54:01.019
so this is (0,0,2) going in
here.

00:54:01.019 --> 00:54:06.947
If Player 2 chooses down and
Player 3 chooses left then we're

00:54:06.947 --> 00:54:10.239
at (0,0,-1).
Everyone okay with that?

00:54:10.239 --> 00:54:19.136
If Player 3 chooses down then
we're down here which is (2,1,

00:54:19.136 --> 00:54:24.489
0).
Okay so here's a little game.

00:54:24.489 --> 00:54:29.132
Player 1 is choosing the
matrix, Player 2 is choosing the

00:54:29.132 --> 00:54:32.419
row in the matrix,
albeit trivially on the left

00:54:32.419 --> 00:54:35.387
hand side and Player 3 is
choosing the column in the

00:54:35.387 --> 00:54:37.809
matrix,
again, albeit trivially on the

00:54:37.809 --> 00:54:41.356
left hand side.
We don't really care about this

00:54:41.356 --> 00:54:49.039
picture very much.
Okay, so now what?

00:54:49.039 --> 00:54:53.466
Well, once again we could look
for Nash equilibria in this

00:54:53.466 --> 00:54:55.514
game.
It turns out there are lots of

00:54:55.514 --> 00:54:58.253
Nash equilibria in this game.
Let me just show you one Nash

00:54:58.253 --> 00:55:00.039
equilibrium and then we'll talk
about it.

00:55:00.039 --> 00:55:07.422
So I claim that there are lots
of Nash equilibria,

00:55:07.422 --> 00:55:13.750
and one of them is the Nash
equilibrium (A,

00:55:13.750 --> 00:55:15.860
up, left).

00:55:19.110 --> 00:55:21.550
So let's just see where that is
in the tree first of all.

00:55:21.550 --> 00:55:26.319
So Player 1 chose A,
Player 2 chose up and left,

00:55:26.319 --> 00:55:31.799
but it followed A so we end up
here, we end up at (1,0,

00:55:31.799 --> 00:55:38.127
0).
So (A, up, left) is this box in

00:55:38.127 --> 00:55:42.228
the tree.
Now, let's just check that that

00:55:42.228 --> 00:55:46.178
actually is a Nash equilibrium.
So we all know how to do this

00:55:46.178 --> 00:55:48.039
from the first half of the
class.

00:55:48.039 --> 00:55:51.533
So to check that that's a Nash
equilibrium we better check that

00:55:51.533 --> 00:55:54.350
no individual player can do
better by deviating.

00:55:54.350 --> 00:55:58.593
So let's start with Player 1.
If Player 1 deviates holding

00:55:58.593 --> 00:56:03.113
Player 2 and 3 fixed,
then Player 1 will be switching

00:56:03.113 --> 00:56:06.590
the matrix from Matrix A to
Matrix B.

00:56:06.590 --> 00:56:10.584
Is that correct?
So we'll move from this box in

00:56:10.584 --> 00:56:15.351
the left hand matrix to the
equivalent box in the right hand

00:56:15.351 --> 00:56:19.556
matrix.
Player 1's payoff will go from

00:56:19.556 --> 00:56:24.650
1 to 0, so Player 1 doesn't want
to deviate.

00:56:24.650 --> 00:56:27.148
Everyone happy with that?
Player 1 doesn't want to

00:56:27.148 --> 00:56:29.409
deviate here.
How about Player 2?

00:56:29.409 --> 00:56:33.646
If Player 2 deviates,
holding Players 1 and 3 fixed,

00:56:33.646 --> 00:56:37.965
then Player 1 is going to
switch rows in this matrix,

00:56:37.965 --> 00:56:41.620
so we'll move from this box to
this box.

00:56:41.620 --> 00:56:45.108
Player 2 was making 0 before.
She's still making 0,

00:56:45.108 --> 00:56:47.610
so she has no incentive to
deviate.

00:56:47.610 --> 00:56:51.054
And the same argument applies
for Player 3 because she will be

00:56:51.054 --> 00:56:54.329
choosing the column holding the
row in the matrix fixed,

00:56:54.329 --> 00:56:56.820
so once again she gets 0 in
either case.

00:56:56.820 --> 00:56:59.796
So everyone happy with that?
So that actually is a Nash

00:56:59.796 --> 00:57:01.883
equilibria, and again,
if this had been on the

00:57:01.883 --> 00:57:03.599
mid-term I could have set this
up,

00:57:03.599 --> 00:57:06.726
I could have given you these
matrices or the story behind

00:57:06.726 --> 00:57:09.909
them, and you'd have found--I
could have asked you whether

00:57:09.909 --> 00:57:13.650
this was a Nash equilibrium and
the answer would have been yes.

00:57:13.650 --> 00:57:17.928
But I claim that once again
this is just not a believable

00:57:17.928 --> 00:57:20.788
Nash equilibrium.
It is a Nash equilibrium,

00:57:20.788 --> 00:57:23.435
formally it's a Nash
equilibrium, but it's not a

00:57:23.435 --> 00:57:27.039
plausible prediction for how
this game is going to be played.

00:57:27.039 --> 00:57:30.355
Why is it not a plausible
prediction for how this game's

00:57:30.355 --> 00:57:33.040
going to played?
Anyone see?

00:57:33.040 --> 00:57:36.859
Stare at the tree a bit.
So in the information here,

00:57:36.859 --> 00:57:40.170
the pre-mid-term information,
it's fine.

00:57:40.170 --> 00:57:44.050
But knowing about the actual
structure of this game I claim

00:57:44.050 --> 00:57:47.949
this makes no sense at all.
Why does it make no sense?

00:57:47.949 --> 00:57:55.579
Well, notice that if Player 1
were to switch her action from

00:57:55.579 --> 00:58:02.949
the prescribed action A to
action B, then we'd be here.

00:58:02.949 --> 00:58:08.939
Notice that the tree from here
on in looks like a little game,

00:58:08.939 --> 00:58:12.325
is that right?
The tree from here on looks

00:58:12.325 --> 00:58:15.614
like a little game.
So this thing here,

00:58:15.614 --> 00:58:20.631
let's put it in green,
is a little game within the

00:58:20.631 --> 00:58:22.889
game.
It's a sub-game.

00:58:22.889 --> 00:58:28.460
This sub-game really only
involves two players.

00:58:28.460 --> 00:58:31.993
The two players that it
involves are Player 2 and Player

00:58:31.993 --> 00:58:33.214
3.
Player 1 is done,

00:58:33.214 --> 00:58:36.278
Player 1 has put us into this
game, but now this little

00:58:36.278 --> 00:58:39.625
sub-game, it's a little sub-game
involving just Player 2 and

00:58:39.625 --> 00:58:42.777
Player 3.
So we can analyze this little

00:58:42.777 --> 00:58:44.971
sub-game.
If we analyze this little

00:58:44.971 --> 00:58:48.280
sub-game, what will it give us?
What will we find?

00:58:48.280 --> 00:58:56.543
So let's look at this sub-game.
So look at the green sub-game,

00:58:56.543 --> 00:59:04.909
the game that would have
happened had Player 1 chosen B.

00:59:04.909 --> 00:59:07.329
This is a sub-game involving
just Players 2 and 3.

00:59:07.329 --> 00:59:09.809
So why don't I just forget
Player 1.

00:59:09.809 --> 00:59:11.566
We know--I mean Player 1 is
part of the game,

00:59:11.566 --> 00:59:13.483
he's getting payoffs,
but Player 1 has made their

00:59:13.483 --> 00:59:15.360
move, they're not really
involved any more.

00:59:15.360 --> 00:59:20.470
So let's just look at this game
as a game involving Players 2

00:59:20.470 --> 00:59:25.409
and 3, and let's look at the
matrix for Players 2 and 3.

00:59:25.409 --> 00:59:28.691
So it actually corresponds to
the matrix above,

00:59:28.691 --> 00:59:32.829
it's a matrix in which Player 2
is choosing up and down.

00:59:32.829 --> 00:59:37.926
There it is up and down and
simultaneously Player 3 is

00:59:37.926 --> 00:59:45.452
choosing left or right.
There it is left or right at

00:59:45.452 --> 00:59:53.867
this information set and the
payoffs are (1,1),

00:59:53.867 --> 00:59:58.990
(0,2), (0, -1) and (1,0).

01:00:06.199 --> 01:00:09.507
So this is, I claim,
a representation of this little

01:00:09.507 --> 01:00:11.925
green game.
Perhaps we should put this in

01:00:11.925 --> 01:00:15.553
green as well.
This thing corresponds to that

01:00:15.553 --> 01:00:18.969
thing.
Everyone okay with that?

01:00:18.969 --> 01:00:22.764
So if Player 1 had chosen B
rather than A,

01:00:22.764 --> 01:00:27.762
then we'd be involved in a
little game, a game within a

01:00:27.762 --> 01:00:32.760
game, or a sub-game involving
just Players 2 or 3.

01:00:32.760 --> 01:00:35.540
And we can analyze that game.
That's a straightforward game.

01:00:35.540 --> 01:00:38.621
Here it is.
And what would we do with that

01:00:38.621 --> 01:00:39.873
game?
We'd look for the Nash

01:00:39.873 --> 01:00:42.054
equilibria in that game.
So let's look for the Nash

01:00:42.054 --> 01:00:44.361
equilibrium of this game.
So what do we notice about this

01:00:44.361 --> 01:00:47.993
game?
So if Player 3 chooses left

01:00:47.993 --> 01:00:52.769
then Player 2 would rather
choose up.

01:00:52.769 --> 01:00:59.050
If Player 3 chooses right then
Player 2 should choose down.

01:00:59.050 --> 01:01:03.105
If Player 2 chooses up then
Player 3 would rather choose

01:01:03.105 --> 01:01:05.760
right, because 2 is bigger than
1.

01:01:05.760 --> 01:01:09.724
And if Player 2 were to choose
down than Player 3 would choose

01:01:09.724 --> 01:01:12.519
right again, because 0 is bigger
than -1.

01:01:12.519 --> 01:01:18.707
So in fact, in this little
sub-game, actually,

01:01:18.707 --> 01:01:23.519
Player 3 has a dominant
strategy.

01:01:23.519 --> 01:01:26.978
If it turned out that we got
involved in this little

01:01:26.978 --> 01:01:30.572
sub-game, Player 3 has a
dominant strategy which is to

01:01:30.572 --> 01:01:32.695
play right,
and moreover,

01:01:32.695 --> 01:01:36.519
this sub-game has just one Nash
equilibrium.

01:01:36.519 --> 01:01:43.630
If I'd given you this sub-game
on its own, it's clear that the

01:01:43.630 --> 01:01:49.692
Nash equilibrium of this
sub-game--this game within a

01:01:49.692 --> 01:01:52.840
game--is (down,
right).

01:01:52.840 --> 01:01:59.444
So what's that telling us?
It's telling us if Player 2 and

01:01:59.444 --> 01:02:03.995
3 ever get called upon to play
in this game--and that only

01:02:03.995 --> 01:02:08.626
happens when Player 1 chooses
B--if Player 2 and 3 ever get

01:02:08.626 --> 01:02:11.659
called upon to play in this
game,

01:02:11.659 --> 01:02:15.774
we know from when we were young
or at least from before the

01:02:15.774 --> 01:02:20.030
mid-term, we know that they're
going to play Nash equilibrium

01:02:20.030 --> 01:02:24.375
in that sub-game.
And the Nash equilibrium in the

01:02:24.375 --> 01:02:29.994
sub-game is going to have Player
3 choosing right and Player 2

01:02:29.994 --> 01:02:33.782
choosing down.
But the equilibrium we talked

01:02:33.782 --> 01:02:37.460
about, this equilibrium we
argued before about,

01:02:37.460 --> 01:02:41.685
(A, U, L)--the equilibrium we
talked about before,

01:02:41.685 --> 01:02:46.170
(A, U, L), doesn't involve
Player 2 choosing down.

01:02:46.170 --> 01:02:51.287
In fact she chose up.
And it doesn't involve Player 3

01:02:51.287 --> 01:02:55.950
choosing right.
In fact she chose left.

01:02:55.950 --> 01:03:01.476
So let's sum up.
We found an equilibrium of this

01:03:01.476 --> 01:03:05.041
game, this equilibrium of this
game was (A, U,

01:03:05.041 --> 01:03:09.320
L) but I claim this is not a
plausible equilibrium.

01:03:09.320 --> 01:03:13.168
It's not a plausible
equilibrium because it predicts

01:03:13.168 --> 01:03:17.469
that if we actually were to play
the game within the game,

01:03:17.469 --> 01:03:23.258
we wouldn't play equilibrium.
Let me say it again,

01:03:23.258 --> 01:03:31.010
in the whole game (A,
U, L) is an equilibrium.

01:03:31.010 --> 01:03:33.610
But I claim it's a silly
equilibrium because it involves

01:03:33.610 --> 01:03:36.668
the prediction that,
if in fact we ever got into the

01:03:36.668 --> 01:03:39.533
game within the game,
we would no longer play

01:03:39.533 --> 01:03:42.179
equilibrium,
and that doesn't seem right.

01:03:42.179 --> 01:03:44.544
If we're going to believe in
equilibrium, we should be

01:03:44.544 --> 01:03:46.820
consistent and believe in
equilibrium throughout.

01:03:46.820 --> 01:03:53.705
So this brings us to a new idea
and the new idea is going to

01:03:53.705 --> 01:03:58.087
have two parts to it.
The first part is kind of on

01:03:58.087 --> 01:04:01.154
the board already.
It's something we talked about

01:04:01.154 --> 01:04:07.100
informally.
It's the notion of a sub-game.

01:04:07.100 --> 01:04:11.389
What's a sub-game?
It's a game within a game.

01:04:11.389 --> 01:04:15.210
I've been using that informally
but we need to start thinking

01:04:15.210 --> 01:04:17.630
about, more formally,
what it means.

01:04:21.310 --> 01:04:25.816
So I talked about it informally.
I said that green object is the

01:04:25.816 --> 01:04:31.710
game that would be played were
Player 1 to choose B.

01:04:31.710 --> 01:04:33.789
We talked about other sub-games
in this class.

01:04:33.789 --> 01:04:39.113
We talked about the sub-game
that would happen in the entry

01:04:39.113 --> 01:04:44.070
game if one of those rival pizza
companies moved in,

01:04:44.070 --> 01:04:48.438
in the Miami market or
something, the game within a

01:04:48.438 --> 01:04:50.096
game.
When we talked about the Tour

01:04:50.096 --> 01:04:52.334
de France we talked about there
being a game within a game that

01:04:52.334 --> 01:04:54.993
is about when you break away.
But now I want to be formal

01:04:54.993 --> 01:04:58.279
about this notion of a game
within a game and introduce some

01:04:58.279 --> 01:05:03.596
nomenclature.
So the formal definition is

01:05:03.596 --> 01:05:12.740
this.
A sub-game is a part of a game,

01:05:12.740 --> 01:05:25.639
informally that looks like a
game within the tree,

01:05:25.639 --> 01:05:33.800
and it has three properties.

01:05:37.380 --> 01:05:41.119
It satisfies the following
three properties.

01:05:41.119 --> 01:05:45.794
So one since it looks a game
itself the sub-game must start

01:05:45.794 --> 01:05:54.080
from a particular point.
So it starts--the sub-game must

01:05:54.080 --> 01:06:01.470
start--it starts from a single
node.

01:06:01.470 --> 01:06:05.608
Let's just look at the example.
In the example we just looked

01:06:05.608 --> 01:06:09.430
at, the sub-game started from
this node here.

01:06:13.349 --> 01:06:33.120
Second, it comprises all
successors to that node.

01:06:36.389 --> 01:06:39.830
So in our example,
here's our sub-game.

01:06:39.830 --> 01:06:43.670
Here's our green sub-game.
Here's the node it starts from.

01:06:43.670 --> 01:06:47.685
Here are all the nodes that are
successors of that node:

01:06:47.685 --> 01:06:50.605
these are the children,
and these are the

01:06:50.605 --> 01:06:55.354
grandchildren.
If you have this grandparent

01:06:55.354 --> 01:07:02.224
node you have to have all of his
children, and all of his

01:07:02.224 --> 01:07:05.536
grandchildren.
So it comprises all the

01:07:05.536 --> 01:07:11.237
successors of that node.
And finally--this is

01:07:11.237 --> 01:07:23.030
important--it does not break up
any information sets.

01:07:27.170 --> 01:07:32.664
So a sub-game,
informally, it's just a game

01:07:32.664 --> 01:07:36.679
within the game.
But slightly more formally,

01:07:36.679 --> 01:07:40.245
I can't put one node that's
part of an information set into

01:07:40.245 --> 01:07:43.873
this sub-game unless I'm going
to put all the nodes that are

01:07:43.873 --> 01:07:47.070
part of that information set
into the sub-game.

01:07:47.070 --> 01:07:49.590
Let's have a look at some
examples.

01:07:49.590 --> 01:07:54.751
We've got one example up there,
the entry game looked something

01:07:54.751 --> 01:08:00.855
like this.
So what are the sub-games here,

01:08:00.855 --> 01:08:06.949
no secrets here,
this is a sub-game.

01:08:06.949 --> 01:08:10.123
There's actually another
sub-game, can anyone see what

01:08:10.123 --> 01:08:13.380
the other sub-game is?
The whole game is a sub-game.

01:08:13.380 --> 01:08:17.689
The whole game is itself a
sub-game, somewhat trivially.

01:08:17.689 --> 01:08:21.387
So this particular game,
which is the schematic of the

01:08:21.387 --> 01:08:25.573
entry game, it has actually two
sub-games but only one proper

01:08:25.573 --> 01:08:29.207
sub-game.
Here's a more complicated

01:08:29.207 --> 01:08:30.190
example.

01:08:35.020 --> 01:08:37.564
This is actually going to be
quite a complicated example just

01:08:37.564 --> 01:08:41.320
to make life interesting.
So 1 is going to move,

01:08:41.320 --> 01:08:47.372
then 2 is going to move,
and then 1 is going to move

01:08:47.372 --> 01:08:51.438
again.
This is all one big information

01:08:51.438 --> 01:08:56.992
set for Player 1.
And 1 is going to move like

01:08:56.992 --> 01:08:59.693
this.
So again, without payoffs,

01:08:59.693 --> 01:09:03.755
this is a little tree and the
key point here is this is an

01:09:03.755 --> 01:09:06.359
information set.
Let's look-- let's stare--at

01:09:06.359 --> 01:09:08.679
this tree a second and figure
out what are and aren't

01:09:08.679 --> 01:09:10.930
sub-games.
So first of all,

01:09:10.930 --> 01:09:15.630
this was a sub-game and this
was a sub-game.

01:09:15.630 --> 01:09:20.570
What about this thing here?
Is that a sub-game?

01:09:20.570 --> 01:09:24.539
It's not a sub-game.
What rule does it break?

01:09:24.539 --> 01:09:31.162
It's breaking up an information
set, so that's no good because

01:09:31.162 --> 01:09:37.329
of rule three.
What about this thing?

01:09:37.329 --> 01:09:38.979
That doesn't break up an
information set.

01:09:38.979 --> 01:09:40.880
I've got the whole information
set in there.

01:09:40.880 --> 01:09:44.382
Is that any good?
No that's no good because it

01:09:44.382 --> 01:09:47.668
doesn't start from a singleton
node, so that's no good it

01:09:47.668 --> 01:09:50.544
violates 1.
If we do this,

01:09:50.544 --> 01:09:55.212
we look at this piece.
That piece there,

01:09:55.212 --> 01:09:59.899
that's also no good.
Why is that no good?

01:09:59.899 --> 01:10:02.760
Again it breaks up an
information set,

01:10:02.760 --> 01:10:06.239
so this is no good again
because of rule 3.

01:10:06.239 --> 01:10:10.110
So you can practice at home
drawing trees and trying to

01:10:10.110 --> 01:10:13.480
identify what are and what are
not sub-games.

01:10:17.100 --> 01:10:20.388
So with the definition of a
sub-game now formal--it's

01:10:20.388 --> 01:10:23.802
basically just formalizing
something we've talked about

01:10:23.802 --> 01:10:27.596
before which is the idea of a
game within the game--I want to

01:10:27.596 --> 01:10:31.960
introduce our new--what's going
to be our new solution concept.

01:10:31.960 --> 01:10:37.291
And this is going to be the
solution concept we're going to

01:10:37.291 --> 01:10:41.060
use essentially almost until the
final.

01:10:41.060 --> 01:10:45.810
Definition, so just remember
what our task is.

01:10:45.810 --> 01:10:49.416
Our task is to come up with a
solution concept that picks up

01:10:49.416 --> 01:10:52.289
the idea from the first half of
the semester,

01:10:52.289 --> 01:10:55.195
namely Nash equilibrium,
but does so in a way that

01:10:55.195 --> 01:10:59.050
respects what we've learned in
the second half of the semester,

01:10:59.050 --> 01:11:02.234
namely that games have
sequential elements and people

01:11:02.234 --> 01:11:05.274
move by backward induction.
So, in particular,

01:11:05.274 --> 01:11:09.065
what we want to rule out are
those Nash equilibria that

01:11:09.065 --> 01:11:13.279
instruct players down the tree
to play in sub-games according

01:11:13.279 --> 01:11:16.649
to strategies that are not Nash
equilibria.

01:11:16.649 --> 01:11:19.202
Say it again,
we want to rule out those Nash

01:11:19.202 --> 01:11:22.527
equilibria that instruct people
way down the tree to play

01:11:22.527 --> 01:11:26.029
according to something which is
not a Nash equilibrium.

01:11:26.029 --> 01:11:29.424
We want our new notion to say:
wherever you find yourself in a

01:11:29.424 --> 01:11:32.430
tree, play Nash equilibrium and
that's exactly what the

01:11:32.430 --> 01:11:39.845
definition's going to say.
So a Nash equilibrium,

01:11:39.845 --> 01:11:53.165
S1*, S2* all the way up to SM*
is a sub-game perfect

01:11:53.165 --> 01:12:06.746
equilibrium--so that's a
SPE--it's a sub-game perfect

01:12:06.746 --> 01:12:23.461
equilibrium if it induces a Nash
equilibrium in every sub-game of

01:12:23.461 --> 01:12:29.097
the game.
So to be a sub-game perfect

01:12:29.097 --> 01:12:32.500
equilibrium, it has to itself be
a Nash equilibrium of course,

01:12:32.500 --> 01:12:36.353
but it also has to instruct
players to play a Nash

01:12:36.353 --> 01:12:40.462
equilibrium in every sub-game.
Let's take that immediately

01:12:40.462 --> 01:12:45.920
back to our examples.
In this example,

01:12:45.920 --> 01:12:54.500
we know that this is a
sub-game.

01:12:54.500 --> 01:12:57.867
We know that,
in this sub-game,

01:12:57.867 --> 01:13:02.020
there is only one Nash
equilibrium;

01:13:02.020 --> 01:13:07.743
and that Nash equilibrium
involves Player 2 choosing down

01:13:07.743 --> 01:13:12.856
and Player 3 choosing right.
So we know that Player 2 is

01:13:12.856 --> 01:13:16.647
going to choose down according
to that equilibrium,

01:13:16.647 --> 01:13:20.741
and Player 3 is going to choose
right according to that

01:13:20.741 --> 01:13:24.148
equilibrium.
So if we now have to look for

01:13:24.148 --> 01:13:28.240
an equilibrium of the whole
game--let's go back to Player

01:13:28.240 --> 01:13:32.039
1's choice--Player 1 if they
choose A will get 1,

01:13:32.039 --> 01:13:35.896
if they chose B then they know
that this Nash equilibrium will

01:13:35.896 --> 01:13:40.211
be played so they'll get 2.
They prefer 2 to 1,

01:13:40.211 --> 01:13:46.871
so the sub-game perfect
equilibrium here is Player 1

01:13:46.871 --> 01:13:53.793
chooses B, Player 2 chooses
down, and Player 3 chooses

01:13:53.793 --> 01:13:59.504
right.
This is an equilibrium of the

01:13:59.504 --> 01:14:07.170
game and it induces an
equilibrium in the sub-game.

01:14:07.170 --> 01:14:09.574
So in that example,
the sub-game perfect

01:14:09.574 --> 01:14:13.460
equilibrium is found by first of
all looking in the sub-game;

01:14:13.460 --> 01:14:15.479
find the equilibrium in the
sub-game;

01:14:15.479 --> 01:14:20.395
and then go back and look at
the equilibrium in the whole

01:14:20.395 --> 01:14:22.403
game.
The equilibrium that we end up

01:14:22.403 --> 01:14:24.632
with, it is a Nash equilibrium
in the whole game,

01:14:24.632 --> 01:14:26.954
but more importantly,
it induces a Nash equilibrium

01:14:26.954 --> 01:14:29.226
in the sub-game.
Let's just go back to our other

01:14:29.226 --> 01:14:33.200
example then I'll stop.
So our other example was here.

01:14:33.200 --> 01:14:40.434
Here was our other example.
And we claimed,

01:14:40.434 --> 01:14:43.498
hang on everybody,
we claimed that the good

01:14:43.498 --> 01:14:46.636
equilibrium here,
the one we believed in was

01:14:46.636 --> 01:14:50.596
(Down, down, right).
Where are the sub-games in this

01:14:50.596 --> 01:14:54.319
game?
Where are the sub-games in this

01:14:54.319 --> 01:14:57.180
tree?
Anybody?

01:14:57.180 --> 01:15:00.856
So I claim there's only one
real sub-game here and that's

01:15:00.856 --> 01:15:04.869
this piece.
This is a sub-game.

01:15:04.869 --> 01:15:10.640
What's the Nash equilibrium of
this somewhat trivial sub-game?

01:15:10.640 --> 01:15:15.308
The Nash equilibrium of this
somewhat trivial sub-game is

01:15:15.308 --> 01:15:19.645
that Player 1 must choose down.
So for a Nash equilibrium to be

01:15:19.645 --> 01:15:22.204
a sub-game perfect
equilibrium--here are three Nash

01:15:22.204 --> 01:15:23.789
equilibria: one,
two, three.

01:15:23.789 --> 01:15:28.213
For this Nash equilibria to be
a sub-game perfect equilibrium,

01:15:28.213 --> 01:15:32.419
it's got to instruct Player 1
to choose down in the trivial

01:15:32.419 --> 01:15:36.866
sub-game and here it is.
This is our sub-game perfect

01:15:36.866 --> 01:15:40.594
equilibrium in this game.
Now I know today was a lot of

01:15:40.594 --> 01:15:42.232
formal stuff,
a lot of new ideas,

01:15:42.232 --> 01:15:45.304
and when we come back on Monday
we'll first of all give you a

01:15:45.304 --> 01:15:48.376
game that refreshes these ideas
and then we'll go straight to

01:15:48.376 --> 01:15:49.930
applications.
So trust me:

01:15:49.930 --> 01:15:52.470
there will be applications.
It will be useful.

01:15:52.470 --> 01:15:55.284
See you on Monday.
There's a homework to come in,

01:15:55.284 --> 01:15:57.000
there's another on the web
going out.

